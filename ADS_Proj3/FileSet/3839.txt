January 2008 * [http://www.informationweek.com/news/showArticle.jhtml?articleID=196901062 Testing of anti-rootkit software], InformationWeek, January 2007 [[Category:Malware]] [[Category:Rootkits| ]] [[Category:Computer security]] [[Category:Authentication methods]] [[Category:Privilege escalation exploits]] [[Category:Cryptographic attacks]] [[bg:Руткит]] [[cs:Rootkit]] [[de:Rootkit]] [[el:Rootkit]] [[es:Rootkit]] [[eo:Ĉefuzula ilaro]] [[fa:روت‌کیت]] [[fr:Rootkit]] [[ga:Trealamh fréamhrochtana]] [[gl:Rootkit]] [[ko:루트킷]] [[id:Rootkit]] [[it:Rootkit]] [[he:Rootkit]] [[kn:ರೂಟ್‌ಕಿಟ್]] [[hu:Rootkit]] [[nl:Rootkit]] [[ja:ルートキット]] [[no:Rootkit]] [[pl:Rootkit]] [[pt:Rootkit]] [[ru:Руткит]] [[fi:Rootkit]] [[sv:Rootkit]] [[te:రూట్‌కిట్]] [[th:รูตคิต]] [[vi:Rootkit]] [[zh:Rootkit]]</text> </page> <page> <id>32453</id> <title>RosAsm</title> <text>{{multiple issues|advert=October 2010|coi=October 2010|confusing=October 2010|copyedit=October 2010|npov=October 2010|original research=October 2010|peacock=October 2010|primarysources=October 2010|unreferenced=October 2010}} {{overcoverage|date=October 2010}} {{Infobox software | name = RosAsm | screenshot = | caption = RosAsm Main Client Area | author = René Tournois (Betov) | developer = [http://www.quanta-it.com/RosForum RosAsm Community] | released = September, 1998 | latest release date = [[March 11]], [[2007]] | latest release version = 2.047c | operating system = [[Microsoft Windows|Windows]], [[Wine (software)]], [[ReactOS]] | platform = 32 Bits [[x86 architecture]] | license = [[GPL]] [[free software]] license and RosAsm license | website = [http://www.rosasm.org RosAsm site] }} '''RosAsm''' is a [[32-bit]] [[Win32]] [[x86 assembly language|x86 assembler]] developed by an independent group of programmers and contributors. It is the continuation of an [[Assemblers|assembler]] called [[SpAsm]]. The name stands for ''[[ReactOS]] Assembler'', meaning that it was designed to run on that platform as a primary [[Operating system|OS]], though both projects are developed by unrelated independent groups of developers. [[ReactOS]] package does not include RosAsm [[Assemblers|assembler]], and uses another [[Assemblers|assembler]] ([[NASM (computer program)|Nasm]]) to assemble part of their sources. RosAsm is a [[Assemblers|assembler]] with full integration of a [[Integrated development environment|IDE]], resource editor, [[debugger]] and [[disassembler]]. The syntax is inspired by [[NASM (computer program)|NASM]]'s, and it is released under the [[GNU]] [[GNU General Public License|General Public License]]. RosAsm packages the [[source code]] from which an [[executable]] was assembled directly within the [[portable executable]] files. Because RosAsm produces [[portable executable|PE]] files directly, a separate linking step is not required. This means, though, that it does not allow linking to external object modules other than [[Dynamic-link library|DLLs]], and it does not support the ability to produce object modules that can be linked with other programs. Nevertheless, the user is allowed to analyse a library file without the needs of linking. One of the features in RosAsm is a library scanner that can analyse the contents of a library file, export the [[object code]], and in the near future convert the library to assembly code to be imported directly to the generated applications without the needs of linking. RosAsm was always made entirely in [[assembly language]] and it is assembled by itself. == History == In September 1998, René Tournois created SpAsm – The Specific [[Assemblers|assembler]] – which was maintained and supported by him until 24 July 2003. It was then continued with its successor, RosAsm. Tournois is RosAsm's principal author, although it includes many contributions from others. The very first version of the former Spasm project was built in 16 bits using the free version of a shareware [[Assemblers|assembler]] called [[A86 (software)|A86/A386]], from Eric Isaacson. With the help of this program, Tournois continued improving his programming skills until he faced the world of 32-bit programming. In less than two years, he migrated from [[A86 (software)|A86]] to the ASM32 [[Assemblers|assembler]] by Intelligent Firmware Ltd, whose simplicity, flexibility and very reliable overall performance for system programming helped him to develop his own, independent and free [[Assemblers|assembler]] made entirely in 32 bits. In July 2000, Spasm 1.00 was born. Since then, Tournois continued his work, for several years, almost alone, releasing several versions of the software. All versions released were maintained and developed under the GPL rules, in order to give to the assembly community a new and powerful tool, and for mankind in general, a free gift that can be used to improve their lives wherever possible by the continuous development of high technologies making them available to the public. In time he gained contributors that helped to improve his assembler. Spasm 4.15j was the last of the versions released and maintained by René. On 24 July 2003, he decided to take a higher step toward advancing the benefit of assembly language and the free programming community. Concerned about the ongoing of the software and his constant efforts in keeping with his ethical and political views, he left the project. From that day, RosAsm was born. RosAsm 1.1a was the first version from the renewed software, released on 27 July 2003. All versions of RosAsm are a derivative work of all previous releases of SpAsm, except from its version 4.15k (and newer) which were being developed and maintained by independent contributors. (Nowadays, the independent version of the former Spasm project seems to be discontinued.) == Functionality == RosAsm is a 32 bit specific [[Assemblers|assembler]] with an integrated [[Integrated development environment|IDE]]. As opposed to other Assembly [[Integrated development environment|IDE]]’s, which tend to impress the user by a heavy overload of features and multiple windows, the one of RosAsm is as naked and simple as possible. Most advanced features require reading the Manual, like the very powerful Right-Click, that you will miss it you don't read Source_Editor. For the [[Assemblers|assembler]] itself, it has been written with the following goals and characteristics: * Full assembler-written applications production. * Stand alone / all-in-one approach / Tends to include all Asm32 needed tools (Debugger, Linker, Disassembler, Resources Editors, [[Integrated development environment|IDE]]). * Fast output. A 1,000,000 octets application (1Mo is consistent for an Asm written Code), is built in 3.16 seconds on K6/300/win95, from full source analyses to PE writing. No relationship with the usual encodage speed given in other Assemblers documentation. The one of RosAsm is really blazingly fast and counts for few in calculations. * True pure assembly language without any C-like features. (no STRUC, PROC, USES, LOCALS and so on...). These HLL features are easy to simulate with RosAsm Macros. This exclusion goal is to let users define what HLL abstraction they want. RosAsm itself remains as low level as possible for a Win32 Assembler, but the Macros system is a wide open door to high level writing styles. Examples in Beginners' Tut 5. Added 