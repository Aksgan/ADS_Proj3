=== Disadvantages of ROLAP === <!--Note to editors: Please review the discussion page before making changes to the advantages or disadvantages. Thank you. --> * There is a consensus in the industry that ROLAP tools have slower performance than MOLAP tools. However, see the discussion below about ROLAP performance. * The loading of ''aggregate tables'' must be managed by custom [[Extract, transform, load|ETL]] code. The ROLAP tools do not help with this task. This means additional development time and more code to support. * When the step of creating aggregate tables is skipped, the query performance then suffers because the larger detailed tables must be queried. This can be partially remedied by adding additional aggregate tables, however it is still not practical to create aggregate tables for all combinations of dimensions/attributes. * ROLAP relies on the general purpose database for querying and caching, and therefore several special techniques employed by [[MOLAP]] tools are not available (such as special hierarchical indexing). However, modern ROLAP tools take advantage of latest improvements in [[SQL]] language such as CUBE and ROLLUP operators, DB2 Cube Views, as well as other SQL OLAP extensions. These SQL improvements can mitigate the benefits of the [[MOLAP]] tools. * Since ROLAP tools rely on [[SQL]] for all of the computations, they are not suitable when the model is heavy on calculations which don't translate well into [[SQL]]. Examples of such models include budgeting, allocations, financial reporting and other scenarios. === Performance of ROLAP === ==== OLAP Survey ==== In the OLAP industry ROLAP is usually perceived as being able to scale for large data volumes, but suffering from slower query performance as opposed to MOLAP. The [http://www.olapreport.com/survey.htm OLAP Survey], the largest independent survey across all major OLAP products, being conducted for 6 years (2001 to 2006) have consistently found that companies using ROLAP report slower performance than those using MOLAP even when the data volume were taken into consideration. However, as with any survey there are a number of subtle issues that must be taken into account when interpreting the results. * The survey shows that ROLAP tools have 7 times more users than MOLAP tools within each company. Systems with more users will tend to suffer more performance problems at peak usage times. * There is also a question about complexity of the model, measured both in number of dimensions and richness of calculations. The survey does not offer a good way to control for these variations in the data being analyzed. ==== Downside of flexibility ==== Some companies select ROLAP because they intend to re-use existing relational database tables -- these tables will frequently not be optimally designed for OLAP use. The superior flexibility of ROLAP tools allows this less than optimal design to work, but performance suffers. MOLAP tools in contrast would force the data to be re-loaded into an optimal OLAP design. == Trends == The undesirable trade-off between additional [[ETL]] cost and slow query performance has ensured that most commercial [[OLAP]] tools now use a "Hybrid OLAP" ([[HOLAP]]) approach, which allows the model designer to decide which portion of the data will be stored in [[MOLAP]] and which portion in ROLAP. == Products == Examples of commercial products using ROLAP include [[Microsoft Analysis Services]], [[MicroStrategy]], [[Oracle Corporation|Oracle]] BI (the former Siebel Analytics) and Tableau Software. There is also an open source ROLAP server, [[Mondrian OLAP server|Mondrian]]. == References == {{reflist}} {{Data warehouse}} [[Category:Online analytical processing]] [[es:ROLAP]] [[fr:R-OLAP]] [[pt:ROLAP]]</text> </page> <page> <id>31050</id> <title>RSA/Intuative</title> <text>{{Lead missing|date=March 2010}} == Intuitive Proof == The algorithm is based on a [[Fermat's little theorem]] : <math> a^{(p-1)} \equiv 1 \pmod{p}</math> p prime, a & p coprime. So, if we choose ''d'' such that : <math>e d \equiv 1 \pmod{p-1}</math> i.e. : <math>e d - 1 = k(p-1)</math> Then for a message m : <math>m^{e^d} \equiv m^{e d} \equiv m^{(e d - 1)} \cdot m^1 \equiv m^{k(p-1)}m \equiv 1^km \equiv m \pmod{p}</math> So a message that is encrypted by raising ''m'' to ''e'' can be decrypted by raising the result to ''d''. In order to provide security, RSA actually calculates : <math> n = p q</math> (''p'', ''q'' prime) and then ''d'' such that : <math>e d \equiv 1\pmod{(p-1)(q-1)}</math> so : <math>e d - 1 = k(p-1)(q-1)</math> We can then continue to calculate : <math>m^{e^d} \equiv m^{e d} \equiv m^{(e d - 1)}m \equiv m^{k(p-1)(q-1)}m \equiv 1^{k(q-1)}m\equiv m \pmod{p}</math> And likewise for q : <math>m^{e^d} \equiv m^{e d} \equiv m^{(e d - 1)}m \equiv m^{k(p-1)(q-1)}m \equiv 1^{k(p-1)}m\equiv m \pmod{q}</math> Now if <math>a\equiv b \pmod{p}</math> and <math>a\equiv b \pmod{q}</math> then <math>a\equiv b \pmod{pq}</math>, ''p'', ''q'' coprime. so : <math>m^{e^d} \equiv m \pmod{pq}</math> An attacker would need to factor ''n'' into ''p'' and ''q'' in order to determine ''d'', and this is a hard problem. Note that while an attacker could easily calculate ''f'' as : <math>e f \equiv 1 \pmod{n-1}</math> that : <math>m^{e^f} \equiv m^{k(n-1)}m \neq m \pmod{n}</math> because ''n'' is not prime. [[Category:Public-key cryptography]]</text> </page> <page> <id>31056</id> <title>RSSOwl</title> <text>{{Notability|date=July 2010}} {{Primary sources|date=July 2010}} {{Infobox software | name = RSSOwl | logo = [[Image:RSSOwl.png|48px|RSSOwl Logo]] | screenshot = [[Image:Rssowl big.gif|250px]] | caption = Screenshot of RSSOwl | developer = Benjamin Pasero | latest release version = 2.0.6 | latest release date = {{release date|2010|10|03}} | operating system = [[Cross-platform]] | genre = [[News aggregator]] | license = [[Eclipse Public License]] | website = [http://www.rssowl.org rssowl.org] |}} '''RSSOwl''' is a [[news aggregator]] for [[RSS (file format)|RSS]] and [[Atom (standard)|Atom]] News feeds. It is written in [[Java (programming language)|Java]], and is built on the [[Eclipse (software)#Rich Client Platform|Eclipse Rich Client Platform]] which uses [[Standard Widget Toolkit|SWT]] as a [[widget toolkit]] to allow it to fit in with the [[look and feel]] of different operating systems while remaining [[cross-platform]]. Released under the [[Eclipse Public License]], RSSOwl is [[free software]]. ==History== RSSOwl began as small project on [[SourceForge]] at the end of July 2003. ===Version 1.0=== RSSOwl 1.0 was released on December 19, 2004. It was released with support for [[RSS (file format)|RSS]] and [[Atom (standard)|Atom]] 