Source Components === Zentyal is an open source software mostly written in Perl that merges the following open source components: * [[Apache HTTP Server|Apache]] ** [[Web server|Webserver]] * [[Mod perl|mod_perl]] ** [[Common Gateway Interface|CGI]] engine * [[OpenLDAP]] ** Shared users and groups * [[OpenSSL]] ** [[Cryptography]] * [[Iptables|Netfilter/iptables]] ** [[Firewall (computing)|Firewall]] ** [[Network address translation|NAT]] * [[BIND]] ** [[Dns_server|Domain name system server]] * [[Squid (software)|Squid]] ** Web proxy-cache * [[DansGuardian]] ** [[Content filtering]] * [[Postfix (software)|Postfix]] ** [[Mail server]] * [[Extensible Messaging and Presence Protocol|XMPP]] ** [[Instant Messaging]] * [[Ntpd]] ** Clock and date synchronization * [[OpenVPN]] ** [[Virtual Private Network]] * [[Samba (software)|Samba]] ** Shared storage ** [[Primary Domain Controller]] for Windows clients * [[Common Unix Printing System]] (CUPS) ** Shared printers * [[Advanced Packaging Tool]] (APT) ** Software installation and upgrade * [[Asterisk (PBX)|Asterisk]] ** [[Voice over Internet Protocol]] services * [[Snort (software)|Snort]] ** Network [[Intrusion-prevention system]] * [[Zarafa_(software)|Zarafa]] or [[Egroupware|eGroupware]] ** Calendar sharing, address book, webmail... * [[Dovecot (software)|Dovecot]] ** IMAP and POP3 server == Community == Main Zentyal community work and support takes place at Zentyal Forum. Zentyal's (eBox Platform) inclusion on Ubuntu Gutsy Gibbon was preceded by some comments at [[Ubuntu Forums]] community.<ref name="ebox ubuntu forums">{{cite web | authorlink = Ubuntu Forums | title = eBox at Ubuntu Forums | url = http://ubuntuforums.org/showthread.php?p=3026878 | format = | doi = | accessdate = 2007-07-21}}</ref> There is also a very active group of [[Linkstation]] users which succeeded in porting Zentyal (eBox Platform) to PowerPC.<ref name="ebox linkstation">{{cite web | authorlink = Linkstation Wiki | title = eBox on FreeLink-Debian | url = http://linkstationwiki.net/index.php?title=EBox_on_FreeLink-Debian | format = | doi = | accessdate = 2007-03-04}}</ref> == Documentation == * Installation guide: holds instructions about different installation methods like CD and Ubuntu packages, and how to get source code and run Zentyal from scratch.<ref name="zentyal installation guide">{{cite web | authorlink = eBox Technologies S.L. | title = Zentyal 2.0 Installation Guide | url = http://trac.zentyal.org/wiki/Document/Documentation/InstallationGuide | format = | doi = | accessdate = 2010-09-01}}</ref> * Official documentation (available both in English and Spanish): aimed at Zentyal users, introduces concepts and terminology, and explains different services and use cases.<ref name="official Zentyal documentation">{{cite web | authorlink = eBox Technologies S.L. | title = Zentyal Official Documentation | url = http://doc.zentyal.org/ | format = | doi = | accessdate = 2010-02-24}}</ref> * Instructions for developers: Tutorials and tips aimed at software developers, including module development guide, how to create Zentyal Debian packages or a development environment.<ref name="instructions for developers">{{cite web | authorlink = eBox Technologies S.L. | title = Instructions for developers | url = http://trac.zentyal.org/wiki/Document/Development | format = | doi = | accessdate = 2010-09-01}}</ref> * Other documentation: Full list of available documentation including How-Tos, FAQ, Screencasts and other documents.<ref name="other documentation">{{cite web | authorlink = eBox Technologies S.L. | title = Other documentation | url = http://trac.zentyal.org/wiki/Document/Index | format = | doi = | accessdate = 2010-09-01}}</ref> * [[API]] reference: class and method's description and parameters == See also == {{Portal|Free software}} * [[ClearOS]] * [[Webmin]] * [[Control panel (Web hosting)|Control panel]] * [[SysCP]] * [[SME Server]] == References == {{Reflist}} == External links == * [http://www.zentyal.org Project website] * [http://www.zentyal.com Developer's website] {{Firewall software}} [[Category:Firewall software]] [[Category:Linux distributions]] [[Category:Free security software]] [[Category:Free routing software]] [[Category:Gateway/routing/firewall distribution]] [[Category:Ubuntu (operating system) derivatives]] [[Category:Open source network management software]] [[Category:Open source software distributions]] [[Category:Free server software]] [[Category:Network management]] [[de:Zentyal]] [[es:Zentyal]] [[fr:EBox]] [[hu:Zentyal]] [[simple:EBox]]</text> </page> <page> <id>41036</id> <title>Zero-forcing precoding</title> <text>Zero-forcing (or Null-Steering) precoding is a spatial signal processing by which the multiple antenna transmitter can null multiuser interference signals in [[wireless|wireless communications]]. Regularized zero-forcing precoding is enhanced processing to consider the impact on a background [[noise]] and unknown user [[Interference (communication)|interference]]<ref>{{cite journal|author=B. C. B. Peel, B. M. Hochwald, and A. L. Swindlehurst|title=A vector-perturbation technique for near-capacity multiantenna multiuser communication - Part I: channel inversion and regularization|journal=IEEE Trans. Commun.|pages=195–202|volume=53|date=Jan. 2005|doi=10.1109/TCOMM.2004.840638}}</ref>, where the background noise and the unknown user interference can be emphasized in the result of (known) interference signal nulling. In particular, '''Null-Steering''' is a method of [[beamforming]] for [[narrowband]] [[signal processing|signals]] where we want to have a simple way of compensating delays of receiving signals from a specific source at different elements of the antenna array. In general to make use of the antenna arrays, we better to sum and average the signals coming to different elements, but this is only possible when delays are equal. Otherwise we first need to compensate the delays and then to sum them up. To reach this goal, we may only add the weighted version of the signals with appropriate weight values. We do this in such a way that the frequency domain output of this weighted sum produces a zero result. This method is called null steering. The generated weights are of course related to each other and this relation is a function of delay and central working frequency of the source. ==Performance of Zero-forcing Precoding== If the transmitter knows the downlink [[channel state information]] (CSI) perfectly, ZF-precoding can achieve almost the system capacity when the number of users is large. On the other hand, with limited [[channel state information]] at the transmitter (CSIT) the performance of ZF-precoding decreases depending on the accuracy of CSIT. ZF-precoding requires the significant feedback overhead with respect to signal-to-noise-ratio (SNR) so as to achieve the full multiplexing gain<ref name="Jindal_ZF">{{cite journal|author=N. Jindal|title=MIMO Broadcast Channels with Finite Rate Feedback|journal=IEEE Trans. Information Theory.|pages=5045–5059|volume=52|issue=11|date=Nov. 2006|doi=10.1109/TIT.2006.883550}}</ref>. Inaccurate CSIT results in the significant throughput loss because of residual multiuser interferences. Multiuser interferences remain since they can not be nulled with beams generated by imperfect CSIT. ==Mathematical Description== In multiple antenna downlink systems which comprises a <math>N_t</math> transmit antenna access point (AP) and <math>K</math> single receive antenna users, the received signal of user <math>k</math> is described as :<math>y_k = \mathbf{h}_k^T\mathbf{x}+n_k, \quad k=1,2, \ldots, K</math> where <math>\mathbf{x} = \sum_{i=1}^K s_i P_i \mathbf{w}_i</math> is the <math>N_t \times 1</math> vector of transmitted symbols, <math>n_k</math> is the noise signal, <math>\mathbf{h}_k</math> is the <math>N_t \times 1</math> channel vector and <math>\mathbf{w}_i</math> is the <math>N_t \times 