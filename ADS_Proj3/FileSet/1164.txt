steps, as follows. Where values are combined, they are [[delimiter|delimited]] by [[colon (punctuation)|colon]] symbols. # The MD5 hash of the combined username, authentication realm and password is calculated. The result is referred to as HA1. # The MD5 hash of the combined method and digest [[Uniform Resource Identifier|URI]] is calculated, e.g. of <code>"GET"</code> and <code>"/dir/index.html"</code>. The result is referred to as HA2. # The MD5 hash of the combined HA1 result, server nonce (nonce), request counter (nc), client nonce (cnonce), quality of protection code (qop) and HA2 result is calculated. The result is the "response" value provided by the client. Since the server has the same information as the client, the response can be checked by performing the same calculation. In the example given above the result is formed as follows, where <code>MD5()</code> represents a function used to calculate an MD5 hash, backslashes represent a continuation and the quotes shown are not used in the calculation. Completing the example given in RFC 2617 gives the following results for each step. HA1 = MD5( "Mufasa:testrealm@host.com:Circle Of Life" ) = 939e7578ed9e3c518a452acee763bce9 HA2 = MD5( "GET:/dir/index.html" ) = 39aff3a2bab6126f332b942af96d3366 Response = MD5( "939e7578ed9e3c518a452acee763bce9:\ dcd98b7102dd2f0e8b11d0f600bfb0c093:\ 00000001:0a4f113b:auth:\ 39aff3a2bab6126f332b942af96d3366" ) = 6629fae49393a05397450978507c4ef1 At this point the client may make another request, reusing the server nonce value (the server only issues a new nonce for each "401" response) but providing a new client nonce (cnonce). For subsequent requests, the hexadecimal request counter (nc) must be greater than the last value it used – otherwise an attacker could simply "[[replay attack|replay]]" an old request with the same credentials. It is up to the server to ensure that the counter increases for each of the nonce values that it has issued, rejecting any bad requests appropriately. Obviously changing the method, URI and/or counter value will result in a different response value. The server should remember nonce values that it has recently generated. It may also remember when each nonce value was issued, expiring them after a certain amount of time. If an expired value is used, the server should respond with the "401" status code and add <code>stale=TRUE</code> to the authentication header, indicating that the client should re-send with the new nonce provided, without prompting the user for another username and password. The server does not need to keep any expired nonce values – it can simply assume that any unrecognised values have expired. It is also possible for the server to only allow each nonce value to be returned once, although this forces the client to repeat every request. Note that expiring a server nonce immediately will not work, as the client would never get a chance to use it. == SIP digest authentication == [[Session Initiation Protocol|SIP]] uses basically the same digest authentication algorithm. It is specified by RFC 3261. == Browser implementation == Most browsers have substantially implemented the spec, some barring certain features such as auth-int checking or the MD5-sess algorithm. If the server requires that these optional features be handled, clients may not be able to authenticate (though note mod_auth_digest for Apache does not fully implement RFC 2617 either). * [[Amaya (web browser)|Amaya]] * [[Gecko (layout engine)|Gecko]]-based: (not including auth-int: [https://bugzilla.mozilla.org/show_bug.cgi?id=168942]) ** [[Mozilla Application Suite]] ** [[Mozilla Firefox]] ** [[Netscape (version 7)|Netscape 7+]] * [[ICab|iCab 3.0.3+]] * [[KHTML]]- and [[WebKit]]-based: (not including auth-int [http://www.vsecurity.com/download/papers/HTTPDigestIntegrity.pdf]) ** [[ICab|iCab 4]] ** [[Konqueror]] ** [[Google Chrome]] ** [[Safari (web browser)|Safari]] * [[Tasman (layout engine)|Tasman]]-based: ** [[Internet Explorer for Mac]] * [[Trident (layout engine)|Trident]]-based: ** [[Internet Explorer 7|Internet Explorer 7+]] <ref>http://httpd.apache.org/docs/2.2/mod/mod_auth_digest.html#msie</ref> (not including auth-int) * [[Presto (layout engine)|Presto]]-based: ** [[Opera (web browser)|Opera]] ** [[Opera Mobile]] ** [[Opera Mini]] ** [[Nintendo DS Browser]] ** [[Nokia 770]] Browser ** [[mylo (Sony)|Sony Mylo 1]]'s Browser ** [[Wii]] [[Internet Channel]] Browser == See also == * [[AKA (security)]] * [[Basic access authentication]] == References == {{reflist}} == External links == * RFC 2617 * RFC 2069 (obsolete) [[Category:Cryptographic protocols]] [[Category:HTTP]] [[Category:Request for Comments]] [[ja:Digest認証]]</text> </page> <page> <id>10305</id> <title>Digg</title> <text>{{mergefrom|Digg Patriots|discuss=Talk:Digg Patriots#Merge proposal|date=January 2011}} {{Infobox Dotcom company | company_name = Digg, Inc. | company_logo = [[File:Digg-new.svg|162px|Digg logo]] | company_slogan = | owner = | screenshot = [[Image:Digg screenshot.png|256px]] | caption = Digg's "Top News" section, as seen on 27 August 2010 | company_type = [[Private company|Private]] | foundation = [[San Francisco]], [[California]], [[United States]]<ref>{{cite|url=http://techaddress.wordpress.com/2006/09/28/corporate-profile-digg-inc/|title=Corporate Profile - Digg, Inc.|date=2006-09-28|accessdate=2009-01-18}}</ref> | founder = [[Kevin Rose]]<ref name = AboutDigg/> | area_served = [[World]]wide | location_city = [[San Francisco, California]] | location_country = [[United States]] | key_people = Matt Williams<ref>{{cite web| url=http://about.digg.com/blog/company-update|title=Company Update}}</ref> <small> ([[CEO]])</small><br />[[Kevin Rose]] <small>([[Entrepreneur|Founder]]) (ex-CEO)</small><br />[[Jay Adelson]] <small>(ex-CEO)</small><br />John Moffett <small>(CFO)</small><br />[[Owen Byrne]] <small>(Co-Founder)</small><br />Ron Gorodetzky <small>(Co-Founder)</small> | homepage = [http://www.digg.com/ Digg.com] | num_employees = 77<ref name = AboutDigg>{{cite web| archiveurl=http://web.archive.org/web/20080329121633/http://digg.com/about/| archivedate=29 Mar 2008| title=Digg / About Us}}</ref> | url = [http://www.digg.com/ digg.com] | registration = Optional | launch_date = {{Start date|2004|12|05}} | current_status = Active | language = [[Multilingual]] | advertising = [[Banner ads]], [[referral marketing]] | alexa = {{decrease}} 126 ({{As of|2010|25|alt=November 2010}}<ref name="Alexa Internet, Inc">{{cite web| url=http://www.alexa.com/siteinfo/digg.com| title=digg.com - Traffic Details from Alexa| publisher=[[Alexa Internet]], Inc| accessdate=2009-11-13 }}</ref>) | website_type = Social news | revenue = [[US$]]8.5 million (2008 est.)<ref name=businessweek /> }} '''Digg''' is a [[social news]] [[website]]. Prior to Digg v4, its cornerstone function consisted of letting people vote stories up or down, called ''digging'' and ''burying'', respectively. Digg's former popularity prompted the creation of other [[social networking]] sites with story submission and voting systems.<ref>{{cite web|author=Pat McCarthy |url=http://www.conversionrater.com/index.php/2006/09/10/revisiting-top-10-web-predictions-of-2006/ |title=Revisiting Top 10 Web Predictions of 2006 |publisher=Conversionrater.com |date=2006-09-10 |accessdate=2009-02-27}}</ref> The website traffic ranked 130th by [[Alexa internet|Alexa.com]] as of January 2, 2011.<ref name="Alexa Internet, Inc"/> Quantcast estimates Digg's monthly U.S. unique visits at 8.5 million.<ref>{{cite web|url=http://www.quantcast.com/digg.com |title=digg.com - Quantcast Audience Profile |publisher=Quantcast.com |date=2010-10-27 |accessdate=2010-11-07}}</ref> ==History and description== [[Image:Digg1.6.png|left|thumb|200px|Digg, Version 1.6]] Digg started out as an experiment in November 2004 by [[Kevin Rose]], Owen Byrne, Ron Gorodetzky, and Jay Adelson. Only Rose still plays an active role in the management of the site. The original design was free of advertisements, and was designed by Dan Ries. As Digg became more popular, 