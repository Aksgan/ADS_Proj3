one holds are fixed entities. Recently psychologists have progressed from categorizing psychological phenomena as static, to recognizing the dynamic aspects that vary with different contexts. The concept of [[neural network]] models uses the Gestalt principle of totality to explain social, emotional and cognitive tendencies. In a feedback or parallel constraint satisfaction network, activation passes around symmetrically connected nodes until the activation of all the nodes asymptotes or "relaxes" into a state that satisfies the constraints among the nodes. This process allows for the integration of a number of different sources of information in parallel.<ref> Read, S.J., Snow, C.J. & Simon, D. (2003). Constraint Satisfaction Processes in Social Reasoning, In R. Alterman & D. Kirsch (Eds.), Proceedings of the 25th Annual Conference of the Cognitive Science Society [CD-ROM]. Mahwah, NJ: Erlbaum.</ref> ==Social Psychology and Parallel Constraint Satisfaction Processes== Parallel Constraint Satisfaction Processes can be applied to three broad areas in [[social psychology]]:<ref name="Read, S.J. 1997"/> *Impression formation and causal attribution *Cognitive consistency *Goal-directed behavior. This approach revealed that some phenomena that seem unexpected or counterintuitive are in actuality due to the normal functioning of the cognitive system. For example, Shultz and Lepper (1996) noted that in thinking about cognitive dissonance in terms of parallel constraint satisfaction processes, it becomes clear that cognitive consistency phenomena—such as those studied by dissonance researchers—are not the result of atypical or unusual cognitive processes but rather are the direct result of normal cognitive functioning.<ref> Shultz, T.R. & Lepper, M.R. (1996). Constraint satisfaction modeling of cognitive dissonance phenomena. Psychological Review, 103, 219-240.</ref> ==See also== * [[Cognitive Dissonance]] is the original concept of the theory. * [[Self-perception|Self-perception theory]] is a competing theory of attitude change. ==References== {{reflist}} ==External links== * [http://www.ncbi.nlm.nih.gov/pubmed/15647127 Article on Connectionism, parallel constraint satisfaction processes, and gestalt principles] * [http://books.google.com/books?hl=en&lr=&id=T7skQirc94IC&oi=fnd&pg=PA462&dq=Constraint+satisfaction+modeling+of+cognitive+dissonance+phenomena&ots=zSxZ6X2x3K&sig=HJZe8kY4JQgWZvVQgh0d8d8ax7 Article on Constraint satisfaction modeling of cognitive dissonance phenomena] [[Category:Computational neuroscience]]</text> </page> <page> <id>28405</id> <title>Parallel Peripheral Interface</title> <text>{{Unreferenced|date=September 2009}} The '''Parallel Peripheral Interface''' ('''PPI''') is a peripheral found on the [[Blackfin]] embedded processor. The PPI is a [[half-duplex]], [[bi-directional]] port that is designed to connect directly to [[LCD]]s, [[CMOS sensor]]s, [[Charge-coupled device|CCD]]s, video encoders (video [[Digital-to-analog converter|DAC]]s), video decoders (video [[Analog-to-digital converter|ADC]]s) or any generic high speed, parallel device. The width of the PPI is programmable and can be set between 8 and 16-bits in 1 bit increments. The latest Blackfin family (BF54x) also features a 18/24-bit PPI for direct connection to [[RGB]] LCD panels. The PPI can run from 0[[MHz]] up to 66 MHz. The PPI has a dedicated clock pin, three multiplexed frame sync pins, and between 16 and 24 data pins. [[Category:Computer peripherals]] {{compu-hardware-stub}} [[es:Interfaz periférica paralela]]</text> </page> <page> <id>28408</id> <title>Parallel Redundancy Protocol</title> <text>'''Parallel Redundancy Protocol''' ('''PRP''') is a data communication network standardized by the [[International Electrotechnical Commission]], Geneva, as IEC 61439-3 Clause 4, that allows data to overcome any single network failure without affecting the data transmission. It can be applied to most [[Industrial Ethernet]] (Real-Time Ethernet) since it is independent of the protocols and provides seamless failover. To this effect, each node (device) in the network has two Ethernet ports attached to two different local area networks ([[LAN]]s) of arbitrary, but similar topology. The two LANs are completely separated and are assumed to be fail-independent. A source node sends simultaneously two copies of a frame, one over each port. The two frames travel through their respective LANs until they reach a destination node, in the fault-free case, with a certain time skew. The destination node accepts the first frame of a pair and discards the second, taking advantage of a sequence number in each frame that is incremented for each frame sent. Therefore, as long as one LAN is operational, the destination always receives one frame. This protocol provides a zero-time recovery and allowing checking redundancy continuously to avoid lurking failures. Non-PRP nodes are either attached to one network only (and therefore can communicate only with other nodes attached to the same network), or are attached through a ''Red Box'', a device that behaves like a doubly attached node. Node failures are not covered by PRP, but duplicated nodes may be connected via a PRP network. Each node in PRP has two Ethernet bus controllers, which have the same [[MAC address]] and present the same IP address(es). Therefore, PRP is a layer 2 redundancy, which allows network management protocols to operate without modification and simplifies engineering. ==See also== * [[High-availability Seamless Redundancy]] ==External links== * [http://lamspeople.epfl.ch/kirrmann/Pubs/IEC_61439-3/IEC62439_PRP_IEC61850_Kirrmann.pps PRP Tutorial] * [http://www.ines.zhaw.ch/fileadmin/user_upload/engineering/_Institute_und_Zentren/INES/PRP/PRP_Tutorial.pdf Tutorial on Parallel Redundancy Protocol (PRP)] * [http://wiki.wireshark.org/PRP PRP in the Wireshark Wiki] [[Category:Networking standards]]</text> </page> <page> <id>28411</id> <title>Parallel algorithm</title> <text>{{unreferenced|date=October 2010}} In [[computer science]], a '''parallel algorithm''' or '''concurrent algorithm''', as opposed to a traditional [[Sequential algorithm|sequential (or serial) algorithm]], is an [[algorithm]] which can be executed a piece at a time on many different processing devices, and then put back together again at the end to get the correct result. Some algorithms are easy to divide up into pieces like this. For example, splitting up the job of checking all of the numbers from one to a hundred thousand to see which are [[prime number|primes]] could be done by assigning a subset of the numbers to each available processor, and then putting the list of positive results back together. Most of the available algorithms to compute [[pi]] (π), on the other hand, cannot be easily split up into parallel portions. They require the results from a preceding step to effectively carry on with the next step. Such problems are called inherently serial problems. Iterative [[Numerical analysis|numerical methods]], such as [[Newton's method]] or the [[three-body problem]], are also algorithms which are inherently serial. Some problems are very difficult to parallelize, although they are recursive. One such example is the [[depth-first search]] of [[Graph (data structure)|graphs]]. Parallel algorithms are valuable because of substantial improvements in [[multiprocessing]] systems and the rise of [[multi-core]] processors. In general, it is easier to construct a computer with a single fast processor than one with many slow processors with the same [[throughput]]. But processor speed 