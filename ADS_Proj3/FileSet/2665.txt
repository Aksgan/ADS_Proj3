[[National Emergency Number Association]] i2<ref>{{cite paper | author = NENA | title = NENA Interim VoIP Architecture for Enhanced 9-1-1 Services (i2) | version = 08-001 Issue 1 | publisher = NENA| date = 2005-12-06 | url = http://www.nena.org/media/File/08-001_20051205.pdf | format = [[PDF]] | accessdate = 2008-12-17 }} {{Dead link|date=October 2010|bot=H3llBot}}</ref> [[network architecture]] that addresses the intermediate solution for providing [[e911]] service for users of [[VoIP|VoIP telephony]]. The LIS is the [[Node (networking)|node]] that determines the location of the [[Terminal (telecommunication)|VoIP terminal]]. Beyond the [[National Emergency Number Association|NENA]] architecture and [[VoIP]], the LIS is capable of providing location information to any [[Internet Protocol|IP]] device within its served [[access network]]<ref>{{cite book |last= Dawson|first= Martin|coauthors= James Winterbottom, Martin Thomson|title= IP Location|date= 2006-11-13|publisher= McGraw-Hill|isbn= 0-07-226377-6}}</ref>. == The Role of the LIS == The LIS is a service that is provided by an [[access network]] provider to provide [[location information]] to users of the network. To do this, it uses knowledge of [[network topology]] and a range of location determination techniques to locate devices that are attached to the network. The precise methods that are used to determine location are dependent on the type of access network and the information that can be obtained from the device. === Location Determination === The method used to determine the location of a device in an access network varies between the different types of networks. For a wired network, such as [[Ethernet]] or [[DSL]] a wiremap method is common. In wiremap location determination, the location of a device is determined by finding which cables are used to send packets to the device. This involves tracing data through aggregation points in the network (such as [[Ethernet]] switches, or [[DSL]] access nodes) and finding the port that packets for that device are sent to. This information is combined with data available to the LIS (usually extracted from a [[database]]) to determine a final location. How this tracing is done then depends on the type of network. In wireless networks, a range of technologies can be applied to location determination, the most basic of which uses the location of the radio transmitter as an approximation. The actual method applied is similar to the wiremap method, if a radio transmitter can be identified, then the location of the device can be given as the position of the transmitter with a region of [[measurement uncertainty|uncertainty]]. ==Architecture and Protocols== The [[Internet Engineering Task Force|IETF]] has defined an architecture and protocols for acquiring location information from a LIS. A LIS in the immediate access network is automatically discovered<ref>{{cite web | last = Thomson | first = Martin | coauthors = James Winterbottom | title = Discovering the Local Location Information Server (LIS) (work in progress)| url=http://tools.ietf.org/html/draft-ietf-geopriv-lis-discovery | date = 2008-12-17 | accessdate = 2008-12-17 }}</ref> and location information is retrieved using the HELD protocol<ref>{{cite web | last = Barnes (Ed.) | first = Mary | coauthors = James Winterbottom, Martin Thomson, Barbara Stark | title = HTTP Enabled Location Delivery (HELD) (work in progress)| url=http://tools.ietf.org/html/draft-ietf-geopriv-http-location-delivery | date = 2008-12-17 | accessdate = 2008-12-17 }}</ref>. Location information can be retrieved directly—known as by value—or the LIS can generate a temporary [[URI]] that can be used to provide location indirectly—known as a [[location URI]]. The location information provided by a LIS primarily uses the [[GEOPRIV]] format (RFC 4119), an [[XML]] representation based on the [[presence information|presence]] format defined in RFC 3863. RFC 4119 provides a container for both geodetic position and civic address information (now updated by RFC 5139) and also defines elements for expressing a user's privacy preferences. ==References== {{reflist}} [[category:Computer networking]] {{compu-network-stub}}</text> </page> <page> <id>22495</id> <title>Location transparency</title> <text>{{Multiple issues |rewrite=December 2007 |disputed=December 2007 |unreferenced=December 2007 }} In computer networks '''location transparency''' describes names used to identify [[computer network|network]] resources independent of both the user's location and the resource location. A [[distributed system]] will need to employ a networked scheme for naming resources. In other words it is an idea that the resources can be accessed by a user from anywhere on the network without knowing where the resource is located. A file could be on the user's own PC, or thousands of miles away on other servers. ==Software using network transparency== These well-known software, or types of software, can or do use network transparency: * [[Network file system|Distributed file systems]] such as the [[Andrew File System]]. * [[MythTV]] back-ends stream, and otherwise interact, with front-ends transparently to the user. * [[GNOME]] [[GNOME VFS|virtual filesystem]]. * [[KDE]] [[KIO]]. {{Expand list|date=August 2008}} ==Network protocols providing location transparency== * It is a standard feature of [[TIPC]] to address ''Port Names'' regardless of the network ''Node'' they were opened on. ==See also== [[Transparency (computing)]] {{DEFAULTSORT:Location Transparency}} [[Category:Computer networking]] {{compu-stub}}</text> </page> <page> <id>22500</id> <title>Lock (database)</title> <text>{{Unreferenced|date=December 2007}} {{merge|Lock (computer science)|date=November 2010}} {{merge|MS SQL Server|date=November 2010}} A '''lock''' is used when [[multi-user|multiple users]] need to access a [[database]] [[concurrency (computer science)|concurrently]]. This prevents data from being corrupted or invalidated when multiple users try to write to the database. Any single user can only modify those [[database record]]s (that is, items in the database) to which they have applied a lock that gives them exclusive access to the record until the lock is released. Locking not only provides exclusivity to writes but also prevents (or controls) reading of unfinished modifications (AKA uncommitted data). There are two mechanisms for locking data in a database: ''[[pessimistic locking]]'', and ''[[optimistic locking]]''. In pessimistic locking a record or page is locked immediately when the lock is requested, while in an optimistic lock the record or page is only locked when the changes made to that record are updated. The latter situation is only appropriate when there is less chance of someone needing to access the record while it is locked; otherwise it cannot be certain that the update will succeed because the attempt to update the record will fail if another user updates the record first. With pessimistic locking it is guaranteed that the record will be updated. A complaint about very old versions of 