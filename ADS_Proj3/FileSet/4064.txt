alignment]] * Command line interpreter and scripting support fully compatible with existing [[RasMol]] scripts * Full support for [[molecular dynamics]] trajectory visualization * [[BLAST]] search directly in [[Protein Data Bank]] and [[Uniprot]] databases * Ability to move parts of the loaded data while freezing the rest * Interactive calculation of [[hydrogen bond]]ing, steric clashes, [[Ramachandran plot]]s * Support for all major structure and sequence formats * Bundled [[POV-Ray]] for creating photorealistic images * Integrated selection and coloring across individual visualization components Sirius is based on molecular graphics code and data structures developed as a part of [http://mbt.sdsc.edu Molecular Biology Toolkit]. == RasMol-compatible scripting == <!-- Commented out because image was deleted: [[Image:Sirius_rasmol_import.png|right|thumb|275px|Image of a molecular scene encoded by a RasMol script. Created using Sirius.]] --> Sirius features a command line interpreter that can be used to quickly manipulate structure appearance and orientation. The set of commands has been patterned after [[RasMol]], so it's fully compatible with existing scripts. Additional commands introduced in Sirius have been added to provide support for manipulation of multiple structures loaded at the same time, and to enable more flexible selection. Existing RasMol scripts can be imported and run within Sirius to produce high quality representations of encoded molecular scenes. Since RasMol uses a coordinate system that differs from that Sirius, internal conversion is performed when RasMol scripts are imported, so that any orientation changes are shown correctly. Any manually entered commands, however, are executed according to the Sirius coordinate system. For details, refer to [http://sirius.sdsc.edu/help Sirius help]. Sirius supports a number of predefined atom/residue sets and color schemes, as well as allows for editing of scripts using the Command Panel interface. In addition, logical operators and parentheses can be used to create complex selection commands. == Visualization of molecular dynamics trajectories == Sirius contains a full-featured molecular dynamics (MD) visualization component. It can read output files from [[AMBER]] and [[CHARMM]] simulations, including compressed and AMBER out files. [[RMSD]] changes along the trajectory can be calculated using user-defined atom subsets and displayed in an interactively updated graph. In order to reduce memory requirements, large multifile simulations may be loaded in a buffered mode. If a simulation involves changes in [[protein]] fold, Sirius can be set to track and recompute displayed [[secondary structure]] features in real time, which provides a convenient way to observe transformations of the structure. The full trajectory or selected frames can be exported as [[QuickTime]] video or a set of [[POV-Ray]] scene snapshots that can later be converted to a high quality movie. == Sirius access and download == Sirius is distributed freely from the project [http://sirius.sdsc.edu/downloads.php website] to individuals affiliated with academic and non-profit organizations. Native desktop application installers are available for [[Microsoft Windows|Windows]], [[Linux]] and [[Mac OS X]]. In addition to providing the downloads, the project site contains Sirius [http://sirius.sdsc.edu/help help system], [http://sirius.sdsc.edu/tutorial/tutorials.html tutorials] and [http://sirius.sdsc.edu/screenshots.php screenshots]. == See also == * [[List of molecular graphics systems]] * [[List of web resources for visualizing molecular dynamics]] * [[Molecular modelling]] * [[Molecular graphics]] * [[Molecular dynamics]] == External links == * [http://sirius.sdsc.edu Sirius Home Page] * [http://sirius.sdsc.edu/tutorial/tutorials.html Sirius tutorials] * [http://mbt.sdsc.edu Molecular Biology Toolkit] * [http://www.sdsc.edu San Diego Supercomputer Center] * [http://www.ucsd.edu University of California San Diego] [[Category:Molecular modelling software]] [[Category:Bioinformatics software]] [[zh:Sirius可视化软件]]</text> </page> <page> <id>34564</id> <title>SiteKey</title> <text>{{orphan|date=July 2010}} '''SiteKey''' is a web-based security system that provides one type of [[mutual authentication]] between [[end-user]]s and websites. Its primary purpose is to deter [[phishing]]. SiteKey has been deployed by several large financial institutions since 2006, including [[Bank of America]] and [[The Vanguard Group]]. The product is owned by [[RSA Data Security]] which in 2006 acquired its original maker, Passmark Security. ==How it works== SiteKey uses the following [[challenge-response]] technique: #User ''identifies'' ('''not''' authenticates) himself to the site by entering his username (but not his password). If the username is a valid one the site proceeds. #Site authenticates itself to the user by displaying an image and accompanying phrase that he has earlier configured. If the user does not recognize them as his own, he is to assume the site is a [[phishing site]] and immediately abandon it. If he does recognize them, he may consider the site authentic and proceed. #User authenticates himself to the site by entering his password. If the password is not valid for that username, the whole process begins again. If it is valid, the user is considered authenticated and logged in. ==Weaknesses== SiteKey is designed to prevent users from disclosing their login credentials to a [[phishing]] site. The rationale is that a phishing site wouldn't have the SiteKey info for a user. The obvious flaw in the design is that a phishing site can get the correct SiteKey info from the genuine site, then serve it to the user, "proving" its legitimacy<ref>[http://www.usablesecurity.org/emperor/ The Emperor's New Security Indicators]</ref>. SiteKey is thus susceptible to a [[man-in-the-middle attack]]. It also requires users to keep track of more authentication information. Someone associated with ''N'' different websites that use SiteKey must remember ''N'' different 4-[[tuple]]s of information: ''(site, username, phrase, password)''. ==Notes== <references/> ==See also== {{Empty section|date=July 2010}} ==External links== * [http://www.ffiec.gov/ffiecinfobase/resources/info_sec/2006/occ-bul_2005-35.pdf Authentication in an Online Banking Environment] * [http://www.bankofamerica.com/privacy/sitekey/ SiteKey at Bank of America] * [http://cr-labs.com/publications/SiteKey-20060718.pdf Fraud Vulnerabilities in SiteKey Security at Bank of America] [[Category:Authentication methods]] [[Category:Web security exploits]]</text> </page> <page> <id>34569</id> <title>Sith (engine)</title> <text>{{Infobox Software |name = Sith engine |logo = |screenshot =<!-- Image with inadequate rationale removed: [[Image:Darkforcings.jpg|200px]] --> |caption = Screenshot from ''Dark Forces II'' |author = |developer = [[LucasArts]] |programming language = |operating system = [[Microsoft Windows]] |platform = |genre = [[Game engine]] |license = proprietary |website = }} The '''Sith engine''' is a [[game engine]] developed by [[LucasArts]]. The game ''[[Star Wars Jedi Knight: Dark Forces II]]'' is based on this engine, and its expansion, ''[[Star Wars Jedi Knight: Mysteries of the Sith]]'', is based on a slightly updated version. The engine has also been used in ''[[Grim Fandango]]'' as a basis for the [[GrimE]] engine<ref>[http://www.grimfandango.net/?page=articles&pagenumber=2 Lua in Grim Fandango]</ref>, and used in ''[[Star Wars: Droid 