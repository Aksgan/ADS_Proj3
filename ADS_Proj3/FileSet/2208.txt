== External links == *[http://www.met.rdg.ac.uk/~mike/dyn_models/igcm/ IGCM web page] {{Template:Atmospheric, Oceanographic and Climate Models}} [[Category:Numerical climate and weather models]] [[Category:Environment Canada]]</text> </page> <page> <id>18895</id> <title>Intermediate representation</title> <text>{{Merge to|Intermediate language|date=November 2010}} {{Unreferenced|auto=yes|date=December 2009}} In [[computing]], an '''intermediate representation''' (IR) is a [[data structure]] that is constructed from input data to a [[computer program|program]], and from which part or all of the output data of the program is constructed in turn. Use of the term usually implies that most of the [[information]] present in the input is retained by the intermediate representation, with further annotations or rapid lookup features. A canonical example is found in most modern [[compilers]], where the linear human-readable text representing a program is transformed into an intermediate [[graph (data structure)|graph]] data structure that allows [[flow analysis]] and re-arrangements before starting to create the list of actual CPU instructions that will do the work. Use of an intermediate representation allows compiler systems like [[LLVM]] to be targeted by many different source languages, and support generation for many different target architectures. ==See also== * [[Abstract syntax tree]] * [[Symbol table]] * [[Intermediate language]] {{DEFAULTSORT:Intermediate Representation}} [[Category:Compiler theory]] {{Prog-lang-stub}} [[fr:Représentation intermédiaire]] [[it:Rappresentazione intermedia]] [[nl:Interne representatie (compiler)]] [[ja:中間表現]] [[pt:Representação intermediária]]</text> </page> <page> <id>18898</id> <title>Intermittent fault</title> <text>An '''intermittent fault''', often called simply an "intermittent", is a malfunction of a device or system that occurs at intervals, usually irregular, in a device or system that functions normally at other times. Intermittent faults are common to all branches of [[technology]], including [[computer]] [[software]]. An intermittent fault is caused by several contributing factors, some of which may be effectively [[random]], which occur simultaneously. The more complex the system or mechanism involved, the greater the likelihood of an intermittent fault. A simple example of an effectively random cause in a physical system is a borderline electrical connection in the wiring or a component of a [[Electrical circuit|circuit]], where (''cause 1'', the cause that must be identified and rectified) two conductors are very close, and actually do or do not establish a connection allowing enough current to flow for correct operation subject to (''cause 2'', which need not be identified) a minor change in temperature, vibration, orientation, voltage, etc. (Sometimes this particular case is described as an "intermittent connection" rather than "fault".) In computer software a program may (''cause 1'') fail to [[Initialization (programming)|initialise]] a variable which is required to be initially zero; if the program is run in circumstances such that memory is ''almost'' always clear before it starts, it will malfunction on the rare occasions that (''cause 2'') the memory where the variable is stored happens to be non-zero beforehand. Intermittent faults are notoriously difficult to identify and repair ("[[Troubleshooting#Intermittent symptoms|troubleshoot]]") because each individual factor does not create the problem alone, so the factors can only be identified while the malfunction is actually occurring. In addition, the person capable of identifying and solving the problem is seldom the usual operator. Because the timing of the malfunction is unpredictable, and both device or system [[downtime]] and engineers' time incur [[cost]], the fault is often simply tolerated if not too frequent unless it causes unacceptable problems or dangers. For example, some intermittent faults in medical [[life support]] equipment can kill a patient. If an intermittent fault occurs for long enough during troubleshooting, it can be identified and resolved in the usual way. Some techniques to resolve intermittent faults are: * Automatic logging of relevant parameters over a long enough time for the fault to manifest can help; parameter values at the time of the fault may identify the cause so that appropriate remedial action can be taken. * Changing operating circumstances while the fault is present to see if the fault temporarily clears or changes. For example, tapping components, cooling them with freezer spray, heating them. A time-honoured, and sometimes effective, way for a user to clear an intermittent fault in domestic electronics is to hit the cabinet, though this is less likely to work with modern semiconductor electronics and printed circuits. * a database of similar faults which have been resolved in identical or similar equipment<ref>Example of an intermittent TV fault in a database[http://www.highlandelectrix.fsnet.co.uk/tvs/PANASONI.TV.html]: "Z3T CHASSIS - NO START UP - INTERMITTENT. D1124 (5.1V) ZENER LEAKY"</ref> * precautionary changes, without attempting to pinpoint the fault. For example, in much electronic equipment aluminium [[electrolytic capacitor]]s subject to high [[ripple current]]s can be changed as a routine measure, without bothering to troubleshoot the fault at all. Connectors can be disconnected and reseated. This is sometimes a measure of desperation; things are changed until the fault stops happening, and it is hoped that it is actually resolved rather than dormant. * In electrical systems and cable systems, time domain reflectometry techniques are used: pulses are sent down electric wiring and the pulses reflected back are examined for anomalies, for example intermittent leakage during the stresses of aircraft operation.<ref>"Spread Spectrum Time Domain Reflectometry for [http://livewiretest.com/feasibility-of-spread-spectrum-sensors-for-location-of-arcs-on-live-wires/ Locating Intermittent Faults]" Furse, Cynthia; Smith, Paul; IEEE SENSORS JOURNAL, VOL. 5, NO. 6, DECEMBER 2005"</ref> ==References== <references/> ==External links== * [http://www.chiark.greenend.org.uk/~sgtatham/bugs.html A discussion of software [[debugging]] ] * [http://www.repairfaq.org/sam/tshoot.htm#tshint Sci.electronics.repair FAQ, see section "Troubleshooting of Intermittent Problems"] [[Category:Debugging]]</text> </page> <page> <id>18899</id> <title>Intermodal Journey Planner</title> <text>An '''Intermodal Journey Planner''' (IJP), or '''Transport Information System''' is type of [[journey planner]]. Such a computer system can provide a traveller with an itinerary for an [[intermodal passenger transport]] journey. The system can provide timetable, routing and other travel information. A single journey may use a sequence of several [[modes of transport]], meaning that the system must know about [[public transport]] services (bus, train, [[aeroplane]], [[tram]], [[Rapid transit|metro]]) and about transportation networks (roads, footpaths, cycle routes) for private transportation ([[automobile]], [[walking]], [[bicycle]]). == Basic Features of an IJP == Fundamental to an IJP is [[Journey Planner]] engine with public transport timetable and road routing information and knowledge of the stops and [[Transportation hub|interchanges]]: it may also be able to supply maps. An IJP will also have one or more [[User Interface|user interfaces]] optimised for different purposes, for example, for online self-service 