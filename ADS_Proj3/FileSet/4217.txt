|title=Probability |publisher=Springer-Verlag |location=Berlin |year=1993 |pages= |isbn=0-387-97974-3 |oclc= |doi=}} [[Category:Probability|Stars and bars (probability)]] [[Category:Combinatorics|Stars and bars (probability)]] [[Category:Articles containing proofs]]</text> </page> <page> <id>35595</id> <title>StatCVS</title> <text>{{orphan|date=March 2010}} '''StatCVS''' is an [[open source]] program written in [[Java (programming language)|Java]] that generates graphical [[report]]s about [[Concurrent Versions System|CVS]] modules. It reveals, for example, which developer has made the most check-ins to the repository, and plots the development of the [[lines of code]] (LOC) of the entire module and individual folders over time. StatCVS uses [[JFreeChart]] to generate charts. It is licensed under the [[GNU General Public License]]. [[StatSVN]] is an extension to StatCVS that generates the same reports but for the activity of a [[Subversion (software)|Subversion]] repository. == External links == * [http://statcvs.sourceforge.net Official homepage] ** [http://statcvs.sourceforge.net/statcvs-stats/ example report] * [http://www.statsvn.org StatSVN Official homepage] ** [http://sourceforge.net/projects/statsvn/ StatSVN SourceForge page] [[Category:Free software programmed in Java]] [[Category:Statistical software]] {{Compu-soft-stub}}</text> </page> <page> <id>35601</id> <title>State-dependent learning</title> <text>{{No footnotes|date=January 2010}} '''State-dependent learning''' (state-dependent memory) is an idea of learning and recalling that is based upon the physiological and mental state of the organism. An example of this effect is [[transfer-appropriate processing]] which is a strong positive effect on memory when the type of memorization and the type of recall are similar. An example would be rhyming words out loud and recalling the rhyme out loud. Factors affecting state-dependent learning may include: [[natural environment|environment]], [[substance intoxication|intoxication]], [[emotional state]], and [[sensory modality]]. In [[neuropsychopharmacology]], state-dependent learning denotes the fact that information that has been learned while the animal is under the influence of a certain drug ("state") can only be recalled and used to solve a task when the animal is in the same state in which the information was learned, but not in a different, i.e., undrugged state (Colpaert, 1990 [http://www.springerlink.com/content/p117614312310g03/] and Carlezone et al., 1995). (definition quoted from [http://dx.doi.org/10.1016/j.ejphar.2004.06.041]) A recently identified type of [[context-dependent memory|context-dependent learning]] is the effect of language. Research by Marian et al. (2007)<ref>Marian, V. & Kaushanskaya, M. (2007). Language context guides memory content. Psychonomic Bulletin and Review, 14(5), 925–933.</ref> demonstrated that participants were more likely to identify an English answer to a question when asked in English and a Mandarin answer to a question when asked in Mandarin. This illustrates that the linguistic context of a memory may be encoded during learning. ==See also== * [[Cue-dependent forgetting]] * [[Learning]] * [[Forgetting]] * [[Higher consciousness]] ==References== {{Reflist}} ==External links== * http://www.airlinesafety.com/editorials/PilotsAndMemory.htm * http://www.findarticles.com/p/articles/mi_m2405/is_1_130/ai_98709929 * http://www.memorylossonline.com/glossary/statedependentmemory.html [[Category:Learning]] {{psych-stub}}</text> </page> <page> <id>35602</id> <title>State-merging</title> <text>In [[quantum information theory]], quantum state merging (HOW05.I,HOW05.II) is the transfer of a quantum state when the receiver already has part of the state. The process optimally transfers partial information using entanglement and classical communication. It allows for sending information using an amount of entanglement given by the [[conditional quantum entropy]], <math>H(A|B)\,=\,H(AB)-H(B) \, .</math> with <math>H(A)</math> the [[Von Neumann entropy]], <math>H(A):=-Tr\rho_A\log\rho_A</math>. It thus provides an operational meaning to this quantity. Unlike its classical counterpart, the quantum conditional entropy can be negative. In this case, the sender can transfer the state to the receiver using no entanglement, and as an added bonus, this amount of entanglement can be gained, rather than used. Thus quantum information can be negative. The amount of classical information needed is the mutual information <math>I(A:R):=H(A)+H(R)-H(AR)</math>. The case where the classical communication is replaced by quantum communication was considered in (ADHW09). This is known as the Fully Quantum Slepian-Wolf Theorem, since everything is sent down the quantum channel. A single-shot version of state merging was found by Berta (B10), and a multiparty single shot version was found in (DH10). The [[quantum discord]] has been interpreted using state merging (MD10). ==References== *'''HOW05.I''' {{cite journal|id={{arxiv|quant-ph/0505062}} |doi:10.1038/nature03909 | last1= Horodecki | first1=M.|last2=Oppenheim | first2=J.| | last3=Winter | first3=A. |title=Partial quantum information|class=quant-ph|year=2005|journal=Nature|volume=436|pages=673-676}} *'''HOW05.II'''{{cite journal|id={{arxiv|quant-ph/0512247}} |doi:80.1007/s00220-006-0118-x| last1=Horodecki | first1=M.|last2=Oppenheim | first2=J.| | last3=Winter | first3=A. |title=Quantum state merging and negative information|class=quant-ph|year=2005|journal=Communications of Mathematical Physics|volume=269|pages=107-136}} *'''ADHW09'''{{cite journal|id={{arxiv|quant-ph}}|doi:10.1098/rspa.2009.0202 | |first1=A.| last1= Abeyesinghe |first2=I.|last2=Devetak|first3=P|last3=Hayden|first4=A.|last4=Winter |title=The mother of all protocols: restructuring quantum information’s family tree|journal=Proc. R. Soc. A | volume=465 |pages=2537-2563|year=2009 }} *'''B10''' {{cite arxiv|eprint=quant-ph/0912.4495| last1= Berta|first1=M.|title=Single-shot quantum state merging|year=2009}} *'''DH10''' {{cite arxiv|eprint=quant-ph/1011.1974| last1=Dutil|first1=N. | last2=Hayden | first2=P.|title=One-shot Multiparty State Merging|year=2010}} *'''MD10''' {{cite arxiv|eprint=quant-ph/1008.4135| title=Interpreting quantum discord through quantum state merging|last1=Madhok|first1=V.|last1=Datta|first1=A.|year=2010}} [[Category:Quantum information science]]</text> </page> <page> <id>35610</id> <title>State machine replication</title> <text>{{Cleanup|date=July 2009}} {{Context|date=July 2009}} :''Introduction from Schneider's 1990 survey:'' :"Distributed software is often structured in terms of clients and services. Each service comprises one or more servers and exports operations that clients invoke by making requests. Although using a single, centralized, server is the simplest way to implement a service, the resulting service can only be as fault tolerant as the processor executing that server. If this level of fault tolerance is unacceptable, then multiple servers that fail independently must be used. Usually, replicas of a single server are executed on separate processors of a distributed system, and protocols are used to coordinate client interactions with these replicas. The physical and electrical isolation of processors in a distributed system ensures that server failures are independent, as required." :"The '''state machine approach''' is a general method for implementing a fault-tolerant service by replicating servers and coordinating client interactions with server replicas. The approach also provides a framework for understanding and designing replication management protocols. Many protocols that involve replication of data or software - be it for masking failures or simply to facilitate cooperation without centralized control - can be derived using the state machine approach. Although few of these protocols actually were obtained in this manner, viewing them in terms of state machines helps in understanding how and why they work." <ref name=schneider>{{cite journal|curly=yes|last=Schneider|first= Fred|year=1990| title=Implementing Fault-Tolerant Services Using the State Machine Approach: A Tutorial|journal=ACM Computing Surveys|volume=22|url=http://ecommons.library.cornell.edu/bitstream/1813/6640/2/86-800.ps|format=PS| doi=10.1145/98163.98167| pages=299}}</ref> ==Preliminaries== ===State Machine Definition=== For the subsequent discussion a '''State Machine''' will be defined as the following tuple of values <ref name=reliable>{{cite journal|curly=yes|last=Lamport|first=Leslie|year=1978|title=The Implementation of Reliable Distributed Multiprocess Systems|journal=Computer Networks|volume=2|pages=95–114|url=http://research.microsoft.com/users/lamport/pubs/pubs.html#implementation|accessdate=2008-03-13}}</ref> (See also [[Mealy machine]] and [[Moore Machine]]): * A set of '''States''' * A set of '''Inputs''' * A set of '''Outputs''' * A transition function (Input x State -> State) * 