be composed.''<ref>{{cite news | last = Moog | first = Robert | title = International Computer Music Conference: Platypus, Granules, Kyma, Daton, & the DSP56001 in Your Future | publisher = [[Keyboard Magazine]] | date = 1987 | }}</ref></blockquote> When the [[University of Illinois at Urbana-Champaign]] eliminated the funding for the [[PLATO (computer system)|PLATO]] laboratory in 1989, Scaletti and Hebel formed [[Symbolic Sound Corporation]] in order to continue developing Kyma and digital audio signal processing hardware. ==Selected filmography== * [[Wall-E]] * [[War of the Worlds (2005 film)|War of the Worlds (2005)]] * [[Revenge of the Sith]] * [[Finding Nemo]] * [[Attack of the Clones]] * [[Master and Commander: The Far Side of the World]] ''For additional films where Kyma has been used for sound design, please see the Eighth Nerve in external links below'' ==Selected discography== * [[On An Island]] * [[Today (Junkie XL album)]] * [[The Thunderthief]] * [[Emotional Technology]] * [[Movement in Still Life]] * [[Zooma]] * [http://www.cdemusic.org/store/cde_search.cfm?keywords=tw20 Recombinant Art 01] * [http://www.synesthesiarecordings.com/products-page/ Unidentified Sound Object] * [http://www.tresorberlin.com/label/data.pl?release=Tresor.231CD The Never Engine] ''For additional albums and artists using Kyma, please see the Eighth Nerve in external links below'' ==External links== * [http://www.symbolicsound.com Symbolic Sound Corporation] * [http://www.symbolicsound.com/cgi-bin/bin/view/Community/WebHome The Eighth Nerve] * [http://www.carlascaletti.com/Main/HomePage Carla Scaletti] ==References== {{Reflist}} [[Category:Audio programming languages]] [[Category:Acoustics software ]] [[Category:Software synthesizers]] [[Category:Visual programming languages]]</text> </page> <page> <id>20913</id> <title>LART</title> <text>{{for|the acronym meaning "Luser Attitude Readjustment Tool"|Luser}} {{Orphan|date=February 2009}} {{Infobox Information appliance |name = LART |image = |caption = <!--(if image is not a logo)--> |manufacturer = [[Delft University of Technology]] |type = |releasedate = <!-- Use {{Start date|YYYY|MM|DD}} - omit "|DD" or "|MM|DD" if necessary --> |connectivity = |lifespan = |unitssold = |media = |os = <!--(operating system)--> |input = |camera = |power = |cpu = |storage = 4 MB Flash ROM |memory = 32 MB DRAM |display = |service = <!--(online service/s offered)--> |dimensions = |weight = |touchpad = |predecessor = |successor = |related = }} {{Portal|Free software}} '''LART''' is a [[single-board computer]] (SBC) designed by staff of the [[Delft University of Technology|University of Delft/Netherlands]]. The creators advertise complete layout by means of [[Computer-aided design|CAD]] files, [[software]] and [[Linux kernel|kernel]] patches for [[Linux]]. The software is released under the terms of the [[GNU General Public License]] (GPL), and the [[Hardware design]] is released under the [[MIT License]]. TUDelft built some boards, some people built their own LARTs (the board can be made at home by a competent engineer), and a batch was produced and sold in 2002-2003 by [[Aleph One Ltd]] and [[Remote 12]], in an early demonstration of the viability of the [[Open Hardware]] concept (manufacture can be performed by groups other than the designers and copyright holders). The standard LART configuration featured 32 MB DRAM and 4 MB Flash ROM. Most interesting is the low-power consumption of less than 1 W while providing ~ 250 MIPS, making it an ideal system for embedded computing. The project also spun off an Open Hardware parallel port [[JTAG]] interface board and the [[Binary large object|Blob]] [[bootloader]]. == Sources == * [http://www.debian.org/News/2000/20001123.en.html Debian/ARM on LART] * [http://www.lartmaker.nl/ LART hardware shop and related information] [[Category:Embedded Linux]] [[Category:Open source hardware]] {{microcompu-stub}} [[ja:LART]]</text> </page> <page> <id>20915</id> <title>LC-3</title> <text>{{unreferenced|date=February 2009}} {{For|the American launch pads|Launch Complex 3 (disambiguation){{!}}Launch Complex 3}} The '''Little Computer 3''', or '''LC-3''', is a type of computer [[educational programming language]], an [[assembly language]], which is a type of [[low-level programming language]]. It features a relatively simple instruction set, but can be used to write moderately complex assembly programs, and is a theoretically viable target for a [[C (programming language)|C]] [[compiler]]. The language is less complex than [[X86 architecture|x86]] assembly but has many features similar to those in more complex languages. These features make it useful for beginning instruction, so it is most often used to teach fundamentals of programming and computer architecture to [[computer science]] and [[computer engineering]] students. The LC-3 was developed by [[Yale Patt|Yale N. Patt]] at the [[University of Texas at Austin]] and Sanjay J. Patel at the [[University of Illinois at Urbana-Champaign]]. Their specification of the instruction set, the overall architecture of the LC-3, and a hardware implementation can be found in the second edition of their textbook.<ref name="CompSysBook">{{cite book |title=Introduction to Computing Systems: From Bits and Gates to C and Beyond |last=Patt |first=Yale N. |authorlink=Yale Patt |last2=Patel |first2=Sanjay |year=2003 |publisher=McGraw-Hill Higher Education |location=New York, NY |isbn=0-07-246750-9 |url=http://highered.mcgraw-hill.com/sites/0072467509/ |accessdate=6 October 2010}}</ref> Courses based on the LC-3 and Patt and Patel's book are offered in many computer engineering and computer science departments. == Architectural specification == The LC-3 specifies a word size of 16 bits for its registers and uses a 16-bit addressable memory with a 2<sup>16</sup>-location address space. The register file contains eight registers, referred to by number as R0 through R7. All of the registers are general-purpose in that they may be freely used by any of the instructions that can write to the register file, but in some contexts (such as translating from C code to LC-3 assembly) some of the registers are used for special purposes. Instructions are 16 bits wide and have 4-bit [[opcode]]s. The instruction set defines instructions for fifteen of the sixteen possible opcodes, though some instructions have more than one mode of operation. Individual instructions' execution is regulated by a [[finite state machine|state machine]] implemented with a control [[read-only memory|ROM]] and microsequencing unit. The architecture supports the use of a keyboard and monitor to regulate input and output; this support is provided through [[memory mapped I/O]] abstractions. In simulation, these registers can be accessed directly, and the architectural specification describes their contents. Higher-level I/O support is also provided through the use of the TRAP instruction and a basic operating system. The operating system provides functions to read and echo characters from the keyboard, print individual characters to the monitor, print entire strings in both packed and unpacked forms, and halt the machine. All data in the LC-3 is assumed to be stored in a [[two's complement]] representation; there is no separate support for unsigned arithmetic. The I/O devices 