Lloyd writes: <blockquote>everything in the universe is made of bits. Not chunks of stuff, but chunks of information — ones and zeros. … Atoms and electrons are bits. Atomic collisions are "ops." Machine language is the laws of physics. The universe is a quantum computer.<ref>{{cite news | title = Life, the Universe, and Everything | work = Issue 14.03 | publisher = ''Wired'' | date = March 2006 | url = http://www.wired.com/wired/archive/14.03/play.html?pg=4 | accessdate = 2009-06-08 }}</ref></blockquote> Gilbert Taylor, writing in ''[[Booklist]]'' of the [[American Library Association]], said that the book: <blockquote>offers brilliantly clarifying explanations of the "bit," the smallest unit of information; how bits change their state; and how changes-of-state can be registered on atoms via quantum-mechanical qualities such as "spin" and "superposition." Putting readers in the know about quantum computation, Lloyd then informs them that it may well be the answer to physicists' search for a unified theory of everything. Exploring big questions in accessible, comprehensive fashion, Lloyd's work is of vital importance to the general-science audience.<ref>[http://www.amazon.com/dp/1400033861 Quoted on the Amazon website.]</ref></blockquote> ==See also== *[[Digital physics]] *[[Seth Lloyd]] *[[Simulation hypothesis]] ==References== {{reflist}} ==External links== *{{official website|http://www.randomhouse.com/kvpa/lloyd/}} *[http://www.randomhouse.com/kvpa/lloyd/scientist.html Chapter 7, Director’s Cut: It from Qubit] (not included in the book) *[http://puhep1.princeton.edu/~mcdonald/examples/QM/lloyd_nature_406_1047_00.pdf Ultimate physical limits to computation], [[Nature (journal)|Nature]], volume 406, pages 1047&ndash;1054 [[Category:Science books]] [[Category:Computer science books]] [[Category:Information science]] [[it:Il programma dell'universo]]</text> </page> <page> <id>30237</id> <title>Prograph</title> <text>{{Unreferenced|date=June 2009}} {{Infobox programming language | name = Prograph | logo = [[Image:Prograph cpx logo.PNG|150px]] | paradigm = [[Multi-paradigm programming language|multi-paradigm]]: [[Object-oriented programming|object-oriented]], [[Visual programming language|visual]], [[dataflow programming|dataflow]] | year = 1983 | designer =[[Acadia University]] | developer = Various | latest_release_version = | latest release date = | typing = | implementations = Prograph CPX, [http://www.andescotia.com/ Marten] | dialects = | influenced_by = [[functional programming]], [[dataflow]] [[diagram]]s | influenced = | operating_system = [[Cross-platform]]: [[Mac OS|Classic MacOS]], [[Microsoft Windows]], [[Mac OS X]] | license = Proprietary | website = }} '''Prograph''' is a [[Visual programming language|visual]], [[Object-oriented programming|object-oriented]], [[dataflow programming|dataflow]], [[Multi-paradigm programming language|multiparadigm]] [[programming language]] that uses iconic symbols to represent actions to be taken on data. Commercial Prograph software development environments such as Prograph Classic and Prograph CPX were available for the [[Apple Macintosh]] and [[Microsoft Windows|Windows]] platforms for many years but were eventually withdrawn from the market in the late 1990s. Support for the Prograph language on Mac OS X has recently reappeared with the release of the Marten software development environment. ==History== Research on Prograph started at [[Acadia University]] in 1982 as a general investigation into dataflow languages, stimulated by a seminar on [[Functional programming|functional languages]] conducted by Michael Levin. Diagrams were used to clarify the discussion, leading to the insight: "since the diagrams are clearer than the code, why not make the diagrams themselves executable!" Thus Prograph - Programming in Graphics - was born as a visual dataflow language. This work was led by Dr. Tomasz Pietrzykowski, with Stan Matwin and Thomas Muldner co-authoring early papers. From 1983 to 1985, research prototypes were built on a [[Three Rivers PERQ]] graphics [[workstation]] (in [[Pascal programming language|Pascal]], with the data visualized as fireballs moving down datalinks), and a [[VAX]] with a [[Tektronix]] terminal, and an experimental compiler was programmed in an [[IBM]] [[Personal computer|PC]]. This work was continued at [[Technical University of Nova Scotia]] by Pietrzykowski and Dr. Philip Cox, including a version done in [[Prolog]]. In 1985, work began on a commercialisable prototype on the Macintosh, the only widely available, low-priced computer with high-level graphics support available at the time. In early 1986, this prototype was taken over by ''The Gunakara Sun Systems'' (later renamed to ''TGS Systems'') for commercialisation, TGS formerly being a consulting firm formed by Pietrzykowski at [[Acadia University]]. Working with Pietrzykowski and Cox, Terry Kilshaw hired and managed the original development team, with Jim Laskey as the lead developer. In 1987 Mark Szpakowski suggested the merger of object-orientation with visual dataflow, creating an "objectflow" system. After almost four years of development, the first commercial release, v1.2, was introduced at the [[OOPSLA]] conference in New Orleans in October 1989. This product won the 1989 [[MacUser]] Editor's Choice Award for Best Development Tool. Version 2.0, released in July 1990, added a compiler to the system. TGS changed its name to ''Prograph International'' (PI) in 1990. Although sales were slow, development of a new version, ''Prograph CPX'' (''Cross-Platform eXtensions'') was undertaken in 1992, that was intended to build fully cross-platform applications. This version was released in 1993, and was immediately followed by development of a client-server application framework. Despite increasing sales, the company was unable to sustain operating costs, and following a failed financing attempt in late 1994, went into receivership in early 1995. As the receivership proceeded, the management and employees of PI formed a new company, ''Pictorius'', which acquired the assets of PI. Shortly afterwards, development of a Windows version of Prograph CPX was begun. Although it was never formally released, versions of Windows Prograph were regularly made available to Prograph CPX customers, some of whom ported existing applications written in Macintosh Prograph, with varying degrees of success. After management changes at the new company, emphasis shifted from tools development to custom programming and web application development. In April 2002 the web development part of the company was acquired by the Paragon Technology Group of Bermuda and renamed Paragon Canada. The Pictorius name and rights to the Prograph source code were retained by McLean Watson Capital, a Toronto-based investments firm which had heavily funded Pictorius. A reference to Pictorius appeared for a time on the former's Portfolio page, but has since disappeared. The Windows version of CPX was later released for free use, and was available for some time for download from the remnants of the Pictorius website (link below). A group of Prograph users ("Prographers") calling themselves "[http://opi.ospgli.org/ The Open Prograph Initiative]" (OPI) formed in the late 1990s with the goal of keeping Prograph viable in the face of OS advances by Apple and Microsoft. For a time the group also sought to create a 