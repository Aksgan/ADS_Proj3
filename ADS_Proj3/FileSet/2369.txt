of diagramming, but also because their connection to overt forms of language were straightforward. Students quickly picked up on the challenge presented by the structural predictions of the PCCS and undertook to assist in verifying them. Among the memorable sentence types brought forward in class to challenge instructors and the Chart were: * ''Come on up from out of down in under there.''<ref>Lytle deemed this sentence - a verb followed by nine prepositions and particles - of sufficient interest to analyze in a published article. See Lytle, Eldon G.(1985) “Come on up.” ''LINGUISTICS AND PHILOSOPHY. Essays in honor of Rulon S. Wells.'' Amsterdam/Philadelphia: John Benjamins Publishing Co. [http://www.junction-grammar.com/html/come_on_up.htm]</ref> * ''Watermelon is a fruit that you can eat, drink, and wash your face and hands in.'' * ''She drank more of her milkshake than I did of my exotic herbal tea.''<ref>Lytle published a lengthy response to this challenge. See Lytle, Eldon G.(1975) “A Junction Grammar Analysis of Quantifiers.” ''IMPLEMENTATION GUIDE.'' BYU Translation Sciences Institute. [http://www.junction-grammar.com/html/jg_analysis_of_quantifiers.htm]</ref> Studies were conducted to determine whether exposure to the JG method of diagramming was useful as a point of reference in teaching/learning foreign languages. Olson and Tuttle found that the answer was affirmative.<ref>Olsen, Royden S. and Tuttle, David M. (1972) “The Effect of Language Trees on the Acquisition of Generative Capacity in a Foreign Language.” ''LINGUISTICS SYMPOSIUM: AUTOMATIC LANGUAGE PROCESSING'', 29–30 March 1972. Provo, Utah: BYU Language Research Center.[http://www.junction-grammar.com/html/the_acquisition_of_generative_.htm]</ref><ref>Olsen, Roydon S. (1980).''The Effect of Language Trees in Foreign Language Learning.'' Masters Thesis:BYU.</ref> ==Educational software== Subsequent to his experience with computer-assisted translation and voice sythesis, Lytle undertook the development of JG-based educational software in the private sector. To facilitate his objectives he designed what is referred to as ‘JG Markup Notation’ and created a [[pattern matching]] language (JGPL) to complement it.<ref>Lytle, Eldon G.(1987) ''JGPL User Manual.'' Gardnerville, NV: LinguisticTechnologies, Inc. Corporate document.</ref> This endeavor relied on the escalating power of micro-computers to field JG-powered applications able to provide constructive feedback to student writers and their teachers in a writing-lab context. The project culminated in a successful field test in a district of the public school system<ref>Mathews, Neldon C. and Lytle, E. G. (1986) “Field Test of the WordMAP(TM) Writing Aids System.” Panaca, NV. District document.</ref> and ultimately a study conducted jointly with the Educational Testing Service (ETS) to evaluate the potential of such software to holistically score student written products. The joint conclusion: <blockquote>''...computer analysis of student ways can provide a level of detail in feedback to students, teachers, and others that is not possible using human readers alone.  This kind of feedback has important implications for instruction in English composition.  Moreover, computer analysis can provide detailed feedback on many written products, even lengthy ones; a teacher of English will normally provide detailed feedback on only a few brief essays.''<ref>Breland, Hunter M. and Lytle, Eldon G.(1990) “Computer-Assisted Writing Skill Assessment Using WordMAP (TM).” Paper presented at the Annual Meetings of the American Educational Research Association and the National Council on Measurement in Education. Boston, MA).[http://www.writinglab.com/brelandlytle.shtml]</ref></blockquote> In more recent research, Millett has independently demonstrated the ability of the same JG-based software to evaluate the writing of ESL students of mixed nationalities.<ref>Millett, Ronald P.(2006) ''AUTOMATIC HOLISTIC Scoring OF ESL ESSAYS USING LINGUISTIC MATURITY ATTRIBUTES.'' MA Thesis: BYU. [http://contentdm.lib.byu.edu/ETD/image/etd1507.pdf]</ref> Owing to its demonstrated potential for educational assessment, overtures have been made to declare JGPL and its associated software applications - ''The WordMap Writing-Aids Software Ensemble'' - ‘open source’ so that it may serve as an expandable and adaptable public educational resource. This proposal is presently 'under advisement.' Meanwhile, to test the utility of JG-related writing assessment in an internet environment, the JGPL analysis engine has been made available free of charge for experimentation in an online writing-lab setting.[http://www.writinglab.com] ==Sample J-tree== [[File:GlossedSentence.png|frame|alt=NetObjectsFusion utility|left| J-tree for "Students who apply themselves get good grades."]] This tree was constructed in a tutorial setting equipped with experimental software for computer-aided JG diagramming. Note the explicit specification of junction operators on the squiggly lines connecting the node labels. This is one aspect of JG linguistic description which sets it apart from other models and from which its name derives. Conventional branching diagrams may also be used, but in any case the junction operator ''must'' be written between the nodes serving as its operands. ''Junction theory holds that linguistic structures written without junctions have no more meaning/substance than concatenations of algebraic operands written without any indication of the operations to be performed with them.'' Because of its algebraic format - and owing to its use of non-verbal formatives - JG base description has of late been dubbed ''MindMath.'' ==Review of Theoretical and Practical Highlights== *As formerly noted, junction grammar does not analyze or describe natural language with respect to formal, synthetic languages (whether separately or arranged in some hierarchy), but considers all of these to be ‘derivative’ in the sense that they themselves are defined with reference to one natural language or another. Junction grammar construes this dependency upon natural language to mean that natural language is itself the meta-language upon which all formal, synthetic languages (including all forms of mathematics and computer programming languages) supervene. From this it follows that to analyze the meta-language with derivative tools is circular and can yield no more in a particular case than the subset of the source which it circumscribes. For this reason, junction grammar holds that “natural language has its own math.” To discover the rudiments of this foundational math and expand upon it has been the objective of proponents since its inception. * Junction theory further insists that natural language modeling be done with reference to the biology of the organism in which the language manifests. Grammars fashioned in this way use `levels’ of representation or ‘tracts’ in which purpose-specific transpositions of language occur and are separately coded in their peculiar data types - and must therefore be separately described. In a word, JG does not permit intermixture of data types in a single representation except where used to gloss correspondents in related tracts, i.e., to specify 