instructor instead will build up the material anew, leaving the student to work out those key steps which embody the reasoning characteristic of the field. The phrase is sometimes used without derision, especially when the user applies it reflexively, possibly to indicate that although his or her activities might be perceived as merely reinventing the wheel, they actually possess additional value. This added value may work around [[software licensing]] incompatibilities or around technical limitations present in parts or modules provided by third-parties. An example would be to implement a [[quicksort]] for a script written in [[Javascript]] and destined to be embedded in a web page. The quicksort algorithm is well known and readily available from [[Library (computing)|libraries]] for software developers writing general-purpose applications in [[C++]] or [[Java (programming language)|Java]] but Javascript by default provides no such sorting algorithm. Hence, if a developer wants to use quicksort on his web page, he must "reinvent the wheel" by reimplementing the algorithm. He could conceivably copy it from another web page but then he could run into [[copyright]] and software licensing issues. Reinventing the wheel in this case provides the missing functionality and also avoids copyright issues. "Reinventing the wheel" may be an ironic cliche - it is not clear when the wheel itself was actually invented. The modern "invention" of the wheel might actually be a "re-invention" of an old age invention. Additionally, many different wheels featuring enhancements on existing wheels (such as the many types of available tires) are regularly developed and marketed. The metaphor emphasizes understanding existing solutions, but not necessarily settling for them. ==Related phrases== '''Reinventing the square wheel''' is the practice of unnecessarily engineering artifacts that provide functionality already provided by existing standard artifacts (reinventing the wheel) and ending up with a worse result than the standard (a [[square wheel]]). This is an [[anti-pattern]] which occurs when the engineer is unaware or contemptuous of the standard solution or does not understand the problem or the standard solution sufficiently to avoid problems overcome by the standard. It is mostly an affliction of inexperienced engineers, or the [[second-system effect]]. Many problems contain subtleties which were resolved long ago in mainstream engineering (such as the importance of a wheel's rim being smooth). Anyone starting from scratch, ignoring the [[prior art]], will naturally face these problems afresh, and to produce a satisfactory result they will have to spend time developing solutions for them (most likely the same solutions that are already well known). However, when reinventing the wheel is undertaken as a subtask of a bigger engineering project, rather than as a project in its own right hoping to produce a better wheel, the engineer often does not anticipate spending much time on it. The result is that an underdeveloped, poorly performing version of the wheel is used, when using a standard wheel would have been quicker and easier, and would have given better results. '''Preinventing the wheel''' involves delaying a task if it is expected to be undertaken later. An example would be, "We don't want to preinvent the wheel" when discussing a solution to a problem when it is known that the solution is being developed elsewhere. It is not necessarily pejorative.<ref>{{cite|title=Change Leadership Project"|last=Brandt|first=P|date=2003}} unpublished</ref> == See also == * [[Customization|Custom made]] * [[Not Invented Here]] ==References== {{reflist}} *{{cite|last=Kemper|first=Steve|title=A Story of Genius, Innovation, and Grand Ambition|publisher=[[HarperCollins]]|isbn=ISBN 0-06-076138-5|date=}} *{{cite|last=Hershock|first=Peter D.|title=A Buddhist Response to the Information Age|publisher=[[State University of New York Press]]|isbn=0-7914-4232-2|date=}} [[Category:Anti-patterns]] [[Category:English idioms]] [[es:Reinventar la rueda]] [[fr:Réinventer la roue]] [[it:Reinventare la ruota]] [[ja:車輪の再発明]] [[pt:Reinventar a roda]]</text> </page> <page> <id>31710</id> <title>ReiserFS</title> <text>{{About|ReiserFS version 3|version 4|Reiser4}} {{Mergefrom|Namesys|date=September 2008}} {{Infobox Filesystem |name = ReiserFS |full_name = ReiserFS |developer = [[Namesys]] |introduction_os = [[Linux]] 2.4.1 |introduction_date = 2001 |OS = Linux |partition_id = <tt>Apple_UNIX_SVR2</tt> ([[Apple Partition Map]])<br><tt>0x83</tt> ([[Master boot record|MBR]])<br><tt>[[Basic Data Partition|EBD0A0A2-B9E5-4433-87C0-68B6B72699C7]]</tt> ([[GUID Partition Table|GPT]]) |directory_struct = [[B+ tree]] |file_struct = [[bit array|Bitmap]] [http://namesys.com/X0reiserfs.html#nodelayout] |bad_blocks_struct = |max_filename_size = 4032 bytes, limited to 255 by Linux VFS |max_files_no = 2<sup>32</sup>-3 (~4 billion) [http://namesys.com/faq.html#reiserfsspecs] |max_volume_size = 16 [[tebibyte|TiB]] [http://namesys.com/faq.html#reiserfsspecs] |max_file_size = 1 [[exbibyte|EiB]] (8 [[tebibyte|TiB]] on 32 bit systems) [http://namesys.com/faq.html#reiserfsspecs] |filename_character_set = All bytes except [[Null character|NULL]] and <code>'/'</code> |dates_recorded = modification (mtime), metadata change (ctime), access (atime) |date_range = December 14, 1901 - January 18, 2038 |date_resolution = 1s |forks_streams = Extended attributes |attributes = |file_system_permissions = Unix permissions, [[Access control list|ACL]]s and arbitrary security attributes |compression = No |encryption = No | }} '''ReiserFS''' is a general-purpose, [[journaling file system|journaled computer file system]] designed and implemented by a team at [[Namesys]] led by [[Hans Reiser]]. ReiserFS is currently supported on [[Linux]]. Introduced in version 2.4.1 of the [[Linux kernel]], it was the first journaling file system to be included in the standard kernel. ReiserFS is the default file system on the [[Elive]], [[Xandros]], [[Linspire]], [[GoboLinux]], and [[YOPER|Yoper]] [[Linux distribution]]s. ReiserFS was the default file system in [[Novell]]'s SUSE Linux Enterprise until Novell decided to move to [[ext3]] on October 12, 2006 for future releases. <ref name=shankland1>{{cite news |first=Stephen |last=Shankland |title=Novell makes file storage software shift |url=http://news.com.com/Novell+makes+file-storage+software+shift/2100-1016_3-6125509.html |work=Business Tech |publisher=cnet |date=2006-10-12}}.</ref> Namesys considers ReiserFS (now occasionally referred to as Reiser3) stable and feature-complete and, with the exception of security updates and critical bug fixes, has thus ceased development on it to concentrate on its successor, [[Reiser4]]. ==Features== At the time of its introduction, ReiserFS offered features that had not been available in existing Linux file systems: * [[Metadata]]-only [[journaling file system|journaling]] (also block journaling, since Linux 2.6.8), its most-publicized advantage over what was the stock Linux file system at the time, [[ext2]]. * Online resizing (growth only), with or without an underlying volume manager such as [[Logical Volume Manager (Linux)|LVM]]. Since then, Namesys has also provided tools to resize (both grow and shrink) ReiserFS file systems offline. * [[Tail packing]], a scheme to reduce [[Fragmentation (computer)#Internal fragmentation|internal fragmentation]]. Tail packing, however, can have a significant performance impact. Reiser4 may have improved this by packing tails where it does not hurt performance.<ref>{{cite web |url=http://www.namesys.com/v4/v4.html#BLOBs |title=Reiser4 is released! |accessdate=2006-07-15 |last=Reiser |first=Hans}}</ref> ==Performance== Compared with [[ext2]] and [[ext3]] 