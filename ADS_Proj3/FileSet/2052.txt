to floppy drive '''Miscellaneous features''' * Auto boot - can load and start a file on reset or power on. * Custom screen colours - the default blue screen colours can be changed. * Set the TI$ BASIC variable to the correct time on reset. * Displays the start and end address for load. * Special extension for bulk reading and writing of file data ==IDEDOS 0.90== This is the current stable, the latest version is 20100509 (patch 45). Most notable differences to 0.89 are: * CFS 0.11 filesystem allows seekable and relative files, LBA support and partitioning. * CMD compatible syntax for path handling and channel 15 commands * Better PCLink protocol to allow the use of ethernet and USB * Monitor which works like a freezer and is much faster * More powerful file manager supporting CMD devices * DOS wedge commands * Programmable function keys * BASIC extension support for non-IDEDOS devices * Additional device support up to 4 ATA(PI) drives, ZIP and LS-120 support * Support of V4.1 cartridge, linear read/write transfers for additional speed * The battery on the IDE64 cartridge can be replaced with a supercap now. '''Device support''' * 4 ATA(PI) devices: hard disk, CompactFlash, CDROM, DVD, LS-120, ZIP-drive * Duart/SwiftLink/Turbo232/SilverSurfer RS-232, RR-Net/ETFE/ETH64 ethernet, FT245 USB cards for PCLink * SuperCPU v2 * Additional support for JiffyDOS/DolphinDOS drives '''Filesystem''' * Custom filesystem called CFS 0.11 * Up to 128 GiB, CHS/LBA addressing, up to 16 partitions * 16 character file names. * Customizable 3 character file types. * Directories and soft links are supported. * Relative files supported. * Time stamping supported. * Files up to 4 GiB, seekable * [[ISO 9660]] filesystem, partial OFS 0.02 support * FAT12/16/32 slow read-only short filename support with [[Master boot record|DOS style partition tables]] '''Fastload''' Supported devices: * CBM [[Commodore 1541|1541]]/[[Commodore 1571|1571]]/[[Commodore 1581|1581]] * Any drive with JiffyDOS protocol ([[CMD FD series|CMD FD]]) * Additional support for DolphinDOS Device support is automatically detected, but can be disabled manually if needed. PAL/NTSC compatible timing. Fast saver only in the file manager. '''PCLink''' Custom protocol, sequential access only. Supported devices: * IEC serial bus * PC64 parallel cable * Duart, SwiftLink, Turbo232 RS-232 * RR-Net, ETFE, ETH64 ethernet * FT245 USB '''Setup screen''' * Clock with calendar * Device number configuration and remapping * Screen, manager and monitor colours * Miscellaneous settings(auto boot, floppy fast loader, basic clock (TI$)) * ATA(PI) device settings (power management, write retry, read-ahead and write cache, maximal linear read/write) '''DOS wedge''' Mostly the well known standard [[DOS Wedge|DOS wedge]] commands. * @ - DOS command * @$ - Directory * @# - Select device * / - Load BASIC program * % - Load assembly program * ' - Verify assembly program * ↑ - Load BASIC program and execute * ← - Save BASIC program * £ - Load and execute assembly program * . - Change directory * # - Execute shell '''BASIC extensions''' The [[BASIC extension]] adds disk handling commands, which can be used with any device because they use CMD style commands. * CD - change working directory * CDOPEN - open CDROM tray * CDCLOSE - close CDROM tray * CHANGE - change device number * DATE - print date and time * DEF - redefine function keys * DIR - normal directory listing * HDINIT - re-detect IDE devices. * INIT - initialize memory * KILL - disable cartridge * KILLNEW - re-new * LL - long directory listing with timestamps, and file size in bytes. * MAN - start file manager * MKDIR - create directory * RM - remove file * RMDIR - remove directory '''File manager''' The file managers inspiration comes from 0.89, though it was rewritten from scratch. The goal was to have a file manager which not only supports IDEDOS devices, but also works well with CMD and other drives. '''Monitor''' The monitor was rewritten from scratch, the main inspiration was the CCS64 emulator's monitor, but some command ideas came from FC3/AR7/Vice monitors. The goal was to have freezer style (all registers including I/O editable) and fast machine code monitor which supports illegal 6502 and SuperCPU emulation mode opcodes. Commands: * @ - Disk command, status and directory * A - Assemble * B - Memory conﬁguration, select RAM/ROM * BT - Backtrace * C - Compare memory * D - Disassemble * , - Write hex data to memory and disassemble * EC - Edit char (binary) * [ - Write binary data to memory * ES - Edit sprite (binary) * ] - Write binary sprite data to memory * F - Fill memory with byte * G - Execute at address * H - Search hex/any/text * I - Dump memory in PETSCII * ' - Write PETSCII data to memory * IO - Dump I/O registers * - - Write hex data to I/O memory * IV - Restore I/O vectors * J - Dump memory in screen code * . - Write screen code data to memory * K - Defreeze memory * L - Load program * LB - Load binary * M - Dump memory in hex and PETSCII * : - Write hex or PETSCII data to memory * N - Number conversion and calculator * O - Select work drive * R - Show registers * ; - Change registers * S - Freeze memory/save program * SB - Save binary * T - Copy memory * V - Verify program * VB - Verify binary * X - Continue program * Q - Exit to BASIC warm start * ←/↑ - Push and pop address(es) to astack. '''Miscellaneous features''' * Auto boot - can load and start a file on reset or power on. * Custom screen, monitor and manager colours - the default colours can be changed. * Set the TI$ BASIC variable to the correct time on reset. * Displays the start and end address for load/save. * Special extension 