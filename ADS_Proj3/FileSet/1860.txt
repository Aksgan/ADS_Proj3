[[RS-232]] serial lines through which the time-sharing users connected. Depending on the hardware configuration, the system supported between 16 and 32 simultaneous remote users with the possibility of hundreds of user accounts. The usual terminal for a TSB system was an ASR-33 [[Teletype]] connected directly to the I/O processor or through a [[modem]] or [[acoustic coupler]]. Account names were a combination of one alphabetic character followed by three decimal digits, ''e.g.'', B001. Privileged accounts started with the letter "A" and had some additional command and program storage capabilities. [[Superuser]] accounts began with the "@" character, ''e.g.'', @004. During execution, user programs were swapped to fixed-head [[magnetic drum]] storage. When not executing, user programs were stored on moving-head cartridge- or pack-loaded [[disk storage]]. Privileged users could also store programs on the much-faster drum. Backup was to [[magnetic tape]]. The language was a fairly standard implementation of BASIC, providing an integrated editing and runtime environment. Statements were analyzed for correct syntax as they were entered and then stored in semi-compiled form. Each BASIC statement had to be on a uniquely numbered line, eg: 10 PRINT "HELLO WORLD" and could only contain one statement, although multiple variable assignments were allowed, ''e.g.'', 20 LET A=B=C=42 The language supported: * Unconditional program flow-control via [[GOTO]] statements, and [[Subroutine]]s via the [[GOSUB]] and [[Return statement|RETURN]] statements * Conditional flow-control via IF/THEN statement and simple variable-based block loop [[For loop|FOR]] and NEXT statements * Calculated flow-control via the GOTO/OF statement * Numeric variables of the form "A" or "An" (where A is a single letter and n a single, optional digit) stored as 4-byte [[floating-point]] numbers. * [[String (computer science)|String]] variables of the form "A$" or "A0$" or "A1$". Strings could store up to 255 characters<!-- Got to go check this! --> * One- or two-dimensional [[Array data structure|matrix]] (array) variables of the form "A[x,y]" or "An[x,y]" * Matrix operations * Logical operators * Simple built-in mathematical functions including trigonometric (SIN,COS,TAN), logarithms (LOG, EXP), square root (SQR), and random number generator (RND) * [[Computer file|File]] operations * [[Punched tape]] operations using a Teletype Substrings within strings were accessed using a substring notation: "A$[L,R]" where L specified the leftmost byte to be accessed and R specified the rightmost byte to be accessed. This is in sharp contrast to some other BASICs that use functions such as LEFT$(), MID$(), and RIGHT$() to access substrings, although ANSI BASIC continues to use a similar substring syntax to that introduced by Hewlett-Packard. ==References== *The Hewlett Packard Company (May 1976). ''[http://bitsavers.trailing-edge.com/pdf/hp/2000TSB/22687-90009_LearningTSB.pdf Learning Timeshare BASIC''] ==External links== *[http://www.bitsavers.org/pdf/hp/2000TSB/ Documentation (scanned into PDF) archive] *[http://tech.groups.yahoo.com/group/hp2000family/ HP 2000 Users Group] *[http://www.moondew.com/basic/ HP 2000 compatible Basic Interpreter] *[http://www.hpmuseum.net/display_item.php?hw=411 HP Computer Museum] [[Category:Time-sharing operating systems]]</text> </page> <page> <id>16091</id> <title>HSQLDB</title> <text>{{Infobox Software | name = HSQLDB (HyperSQL DataBase) | logo = | screenshot = [[Image:Hsql.png|260px]] | caption = HSQL Database Manager | collapsible = | developer = | status = Active | released = 2001 | latest release version = 2.0.1 | latest release date = {{release date|2010|12|10}} | latest preview version = | latest preview date = {{release date|2010|03|19}} | size = 1100 KB | operating system = [[Cross-platform]] | programming language = [[Java (programming language)|Java]] | genre = [[Relational database management system|RDBMS]] | license = [[BSD license]] | website = http://hsqldb.org }} '''HSQLDB''' (Hyper Structured Query Language Database) is a [[relational database management system]] written in [[Java (programming language)|Java]]. HSQLDB is available under a [[BSD license]]. It has a [[JDBC]] driver and supports a large subset of [[SQL-92]] and [[SQL:2008]] standards.<ref>{{cite web | title=HSQLDB SQL Syntax | publisher=hsqldb.org | url=http://hsqldb.org/doc/2.0/guide/sqlgeneral-chapt.html}}</ref> It offers a fast,<ref>{{cite web | title=PolePosition Performance Comparison | publisher=polepos.org | url=http://polepos.sourceforge.net/results/html/index.html}}</ref> small (around 1100 kilobytes in version 2.0) database engine which offers both in-memory and disk-based tables. Embedded and server modes are available. Additionally, it includes tools such as a minimal [[web server]], command line and GUI management tools (can be run as applets), and a number of demonstration examples. It can run on Java runtimes from version 1.1 upwards, including [[free Java runtimes]] such as [[Kaffe]]. HSQLDB is currently being used as a database and persistence engine in many [[open source]] software projects, such as [[OpenOffice.org Base]] and the Standalone Roller Demo,<ref>{{cite web | title=Standalone Roller Demo | publisher=rollerweblogger.org | url=http://rollerweblogger.org/page/roller/20040707#try_roller_it_s_easy}}</ref> as well as in commercial products, such as [[Mathematica]] or InstallAnywhere (starting with version 8.0).<ref>{{cite web | title=Software using HSQLDB |publisher=hsqldb.org | url=http://hsqldb.org/web/hsqlUsing.html }}</ref> Over 350 book titles document the use of HSQLDB for application development with frameworks such as [[Spring Framework]] or [[Hibernate (Java)|Hibernate]].<ref>{{cite book | title=Books referring to HSQLDB | publisher=Google Books | url=http://books.google.com/books?q=hsqldb&btnG=Search+Books }}</ref> == Transaction support == HSQLDB version 2.0 has three transaction control modes. It supports read committed and serializable isolation levels with table level locks or with multiversion concurrency control ([[Multiversion concurrency control|MVCC]]), or a combination of locks and MVCC. version 1.8.1 supports [[transaction isolation]] level 0 (read uncommitted) only. <ref>{{cite web | title = HSQLDB Documentation | url = http://hsqldb.org/doc/2.0/guide/sessions-chapt.html#sqlgeneral_trans_cc-sect}}</ref> == Data storage == HSQLDB has two main table types used for durable read-write data storage (i.e. if transaction has been successfully committed, it is guaranteed that the data will survive system failure and will keep its integrity). The default MEMORY type stores all data changes to the disk in the form of a [[SQL]] script. During engine start up, these commands are executed and data is reconstructed into the memory. While this behavior is not suitable for very large tables, it provides highly regarded performance benefits and is easy to debug. Another table type is CACHED, which allows one to store gigabytes of data, at the cost of the slower performance. HSQLDB engine loads them only partially and synchronizes the data to the disk on transaction commits. However, the engine always loads all rows affected during an update into the memory. This renders very large updates impossible without splitting the work into smaller parts.<ref>{{cite web | title = HSQLDB Documentation | url = http://hsqldb.org/doc/guide/ch05.html#N10DED}}</ref> Other table types allow for read-write [[Comma-separated values|CSV]]-file access (these tables 