as 172.16.0.0/16 overlaps all the other specific routes, to just store the summary, 172.16.0.0/16. If AS2 wants to send data to prefix 172.16.192.0/18, it will be sent to the routers of AS1 on route 172.16.0.0/16. At AS1's router, it will either be dropped or a destination unreachable [[Internet Control Message Protocol|ICMP]] message will be sent back, depending on the configuration of AS1's routers. If AS1 later decides to drop the route 172.16.0.0/16, leaving 172.16.0.0/18, 172.16.64.0/18 and 172.16.128.0/18, AS1 will drop the number of routes it announces to three. AS2 will see the three routes, and depending on the routing policy of AS2, it will store a copy of the three routes, or aggregate the prefix's 172.16.0.0/18 and 172.16.64.0/18 to 172.16.0.0/17, thereby reducing the number of routes AS2 stores to only two: 172.16.0.0/17 and 172.16.128.0/18. If AS2 wants to send data to prefix 172.16.192.0/18, it will be dropped or a destination unreachable ICMP message will be sent back at the routers of AS2 (not AS1 as before), because 172.16.192.0/18 would not be in the routing table. ===Load-balancing problem=== Another factor causing this growth of the routing table is the need for load balancing of multi-homed networks. It is not a trivial task to balance the inbound traffic to a multi-homed network across its multiple inbound paths, due to limitation of the BGP route selection process. For a multi-homed network, if it announces the same network blocks across all of its BGP peers, the result may be that one or several of its inbound links become congested while the other links remain under-utilized, because external networks all picked that set of congested paths as optimal. Like most other routing protocols, the BGP protocol does not detect congestion. To work around this problem, BGP administrators of that multihomed network may divide a large continuous IP address block into smaller blocks, and tweak the route announcement to make different blocks look optimal on different paths, so that external networks will choose a different path to reach different blocks of that multi-homed network. Such cases will increase the number of routes as seen on the global BGP table. ==Requirements of a router for use of BGP for Internet and backbone-of-backbones purposes== Routers, especially small ones intended for [[Small office/home office|Small Office/Home Office]] (SOHO) use, may not include BGP software. Some SOHO routers simply are not capable of running BGP using BGP routing tables of any size. Other commercial routers may need a specific software executable image that contains BGP, or a license that enables it. Open source packages that run BGP include [[GateD]], [[GNU Zebra]], [[Quagga (software)|Quagga]], [[OpenBGPD]], [[Bird Internet routing daemon|BIRD]], [[XORP]] and [[Vyatta]]. Devices marketed as [[Network layer|Layer 3]] switches are less likely to support BGP than devices marketed as [[routers]], but high-end Layer 3 Switches usually can run BGP. Products marketed as switches may or may not have a size limitation on BGP tables, such as 20,000 routes, far smaller than a full Internet table plus internal routes. These devices, however, may be perfectly reasonable and useful when used for BGP routing of some smaller part of the network, such as a [[confederation-AS]] representing one of several smaller enterprises that are linked, by a BGP [[backbone of backbones]], or a small enterprise that announces routes to an ISP but only accepts a [[default route]] and perhaps a small number of aggregated routes. A BGP router used only for a network with a single point of entry to the Internet may have a much smaller routing table size (and hence RAM and CPU requirement) than a multihomed network. Even simple multihoming can have modest routing table size. See RFC 4098 for vendor-independent performance parameters for single BGP router convergence in the control plane. The actual amount of memory required in a BGP router depends on the amount of BGP information exchanged with other BGP speakers, and the way in which the particular router stores BGP information. The router may have to keep more than one copy of a route, so it can manage different policies for route advertising and acceptance to a specific neighboring AS. The term view is often used for these different policy relationships on a running router. If one router implementation takes more memory per route than another implementation, this may be a legitimate design choice, trading processing speed against memory. A full BGP table as of April 2010 is in excess of 310,000 prefixes. Large ISPs may add another 50% for internal and customer routes. Again depending on implementation, separate tables may be kept for each view of a different peer AS. ==Free and open source implementations of BGP== {{Div col|cols=2}} * [[Bird Internet routing daemon]], a GPL routing package for Unix-like systems. * [[GNU Zebra]], a [[GNU General Public License|GPL]] routing suite supporting BGP4. * [[OpenBGPD]], a [[BSD licence|BSD licensed]] implementation by the [[OpenBSD]] team. * [[Quagga (software)|Quagga]], a fork of GNU Zebra for [[Unix-like]] systems. * [[Vyatta]], a commercial open-source router/firewall/VPN - network operating system. * [[XORP]], the eXtensible Open Router Platform, a BSD licensed suite of routing protocols. * [http://wiki.ucis.nl/VNE VNE], a [[C_Sharp_(programming_language)|C#]] software library implementing BGP {{Div col end}} ==BGP simulators== * [http://www.ris.ripe.net/bgpviz/ BGPviz], a Flash application that presents a graphical visualization of BGP routes and updates for any real AS on the Internet * [http://www.ssfnet.org/homePage.html SSFnet], SSFnet network simulator includes a BGP implementation developed by BJ Premore * [http://cbgp.info.ucl.ac.be C-BGP], a BGP simulator able to perform large-scale simulation trying to model the ASes of the Internet or modelling ASes as large as Tier-1.<ref>[http://www.info.ucl.ac.be/~bqu/downloads/quoitin-ieee-network-2005.pdf Modeling the routing of an Autonomous System with C-BGP]</ref> * [http://www.ece.gatech.edu/research/labs/MANIACS/BGP++/ BGP++], a patch integrating [[GNU Zebra]] software on [[ns-2]] and GTNetS network simulators * [http://www.ensc.sfu.ca/~ljilja/cnl/projects/BGP/ ns-BGP], a BGP extension for [[ns-2]] simulator based on the SSFnet implementation *[http://netlab.cs.memphis.edu/projects_netviews.html NetViews], a Java application that monitors and visualizes BGP activity in real time. ==Test equipment== Systems for testing BGP conformance, load or stress performance come from vendors such as: * [[Ixia Communications]] * [[Spirent Communications]] * [[Agilent Technologies]] ==See also== {{Portal|Computer Science}} 