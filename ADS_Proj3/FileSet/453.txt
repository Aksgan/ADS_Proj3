cover is given in the following diagrams: <gallery Caption="Example for biclique edge cover"> Image:Bipartite-dimension-bipartite-graph.svg|A bipartite graph... Image:Bipartite-dimension-biclique-cover.svg|...and a covering with four bicliques Image:Bipartite-dimension-red-biclique.svg|the red biclique from the cover Image:Bipartite-dimension-blue-biclique.svg|the blue biclique from the cover Image:Bipartite-dimension-green-biclique.svg|the green biclique from the cover Image:Bipartite-dimension-black-biclique.svg|the black biclique from the cover </gallery> ==Bipartite dimension formulas for some graphs== The bipartite dimension of a ''2n''-vertex [[crown graph]] equals <math>\sigma(n)</math>, where :<math>\sigma(n)=\min \left\{\,k \mid n \le \binom{k}{\lfloor k/2 \rfloor} \,\right\}</math> is the inverse function of the [[central binomial coefficient]] {{harv|de Caen|Gregory|Pullman|1981}}. {{harvtxt|Fishburn|Hammer|1996}} determine the bipartite dimension for some special graphs. For example, the path <math>P_n</math> has <math>d(P_n) = \lfloor n/2 \rfloor</math>, the cycle <math>C_n</math> has <math>d(C_n)=\lceil n/2\rceil</math>, and the complete graph <math>K_n</math> has <math>d(K_n) = \lceil\log n \rceil</math>. ==Computing the bipartite dimension== The computational task of determining the bipartite dimension for a given graph ''G'' is an [[optimization problem]]. The [[decision problem]] for bipartite dimension can be phrased as: :INSTANCE: A graph <math>G=(V,E)</math> and a positive integer <math>k</math>. :QUESTION: Does G admit a biclique edge cover containing at most <math>k</math> bicliques? This problem appears as problem '''GT18''' in Garey and Johnson's classical book on [[NP-completeness|'''NP'''-completeness]], and is a rather straightforward reformulation of another decision problem on families of finite sets. The '''set basis problem''' appears as problem '''SP7''' in Garey and Johnson's book. Here, for a family <math>\mathcal{S}=\{S_1,\ldots,S_n\}</math> of subsets of a finite set <math>\mathcal{U}</math>, a '''set basis''' for <math>\mathcal{S}</math> is another family of subsets <math>\mathcal{B} = \{B_1,\ldots,B_\ell\}</math> of <math>\mathcal{U}</math>, such that every set <math>S_i</math> can be described as the union of some basis elements from <math>\mathcal{B}</math>. The set basis problem is now given as follows: :INSTANCE: A finite set <math>\mathcal{U}</math>, a family <math>\mathcal{S}=\{S_1,\ldots,S_n\}</math> of subsets of <math>\mathcal{U}</math>, and a positive integer ''k''. :QUESTION: Does there exist a set basis of size at most <math>k</math> for <math>\mathcal{S}</math>? In its former formulation, the problem was proved to be [[NP-complete|'''NP'''-complete]] by {{harvtxt|Orlin|1977}}, even for [[bipartite graph]]s. The formulation as a set basis problem was proved to be '''NP'''-complete earlier by {{harvtxt|Stockmeyer|1975}}. The problem remains '''NP'''-hard even if we restrict our attention to bipartite graphs whose bipartite dimension is guaranteed to be at most <math>O(\log\,\!n)</math>, with ''n'' denoting the size of the given problem instance {{harv|Gottlieb|Savage|Yerukhimovich|2005}}. On the positive side, the problem is solvable in polynomial time on bipartite [[domino-free graph]]s {{harv|Amilhastre|Janssen|Vilarem|1997}}. Regarding the existence of [[approximation algorithm]]s, {{harvtxt|Simon|1990}} proved that the problem cannot be approximated well (assuming [[P versus NP problem|'''P''' ≠ '''NP''']]). Indeed, the bipartite dimension is [[Hardness of approximation|'''NP'''-hard to approximate]] within <math>|V|^{1/3-\epsilon}</math> for every fixed <math>\epsilon>0</math>, already for bipartite graphs {{harv|Gruber|Holzer|2007}}. In contrast, proving that the problem is [[fixed-parameter tractable]] is an exercise in designing [[kernelization|kernelization algorithms]], which appears as such in the textbook by {{harvtxt|Downey|Fellows|1999}}. {{harvtxt|Fleischner|Mujuni|Szeider|2009}} also provide a concrete bound on the size of the resulting kernel, which has meanwhile been improved by {{harvtxt|Nor|Hermelin|Charlat|Engelstadter|2010}}. In fact, for a given bipartite graph on ''n'' vertices, it can be decided in time <math>O(f(k))+n^3</math> with <math>f(k) = 2^{k2^{k-1}+3k}</math> whether its bipartite dimension is at most ''k'' {{harv|Nor|Hermelin|Charlat|Engelstadter|2010}} ==Bounds== Although determining the bipartite dimension is computationally hard, quite a few estimates are available. For instance, {{harvtxt|Jukna|Kulikov|2009}} established a relation between the size of a [[maximum matching]] and the bipartite dimension. More precisely, they showed that for a graph ''G'' with ''m'' edges that admits a matching of size <math>\scriptstyle \nu </math> the following holds: :<math>d(G)\ge \frac{\nu^2}{m}.</math> ==Applications== The problem of determining the bipartite dimension of a graph appears in various contexts of computing. For instance, in computer systems, different users of a system can be allowed or disallowed accessing various resources. In a [[role-based access control]] system, a role provides access rights to a set of resources. A user can own multiple roles, and he has permission to access all resources granted by some of his roles. Also, a role can be owned by multiple users. The ''role mining problem'' is to find a minimum set of roles, such that for each user, his roles taken together grant access to all specified resources. The set of users together with the set of resources in the system naturally induces a bipartite graph, whose edges are permissions. Each biclique in this graph is a potential role, and the optimum solutions to the role mining problem are precisely the minimum biclique edge covers {{harv|Ene|Horne|Milosavljevic|Rao|2008}}. A similar scenario is known in [[computer security]], more specifically in secure [[broadcast]]ing. In that setup, several messages need to be sent each to a set of receivers, over an insecure channel. Each message has to be encrypted using some cryptographic key that is known only to the intended receivers. Each receiver may possess multiple encryption keys, and each key will be distributed to multiple receivers. The ''optimum key generation problem'' is to find a minimum set of encryption keys for ensuring secure transmission. As above, the problem can be modeled using a bipartite graph whose minimum biclique edge covers coincide with the solutions to the optimum key generation problem {{harv|Shu|Lee|Yannakakis|2006}}. ==See also== [[List of NP-complete problems]] ==References== *{{Citation | first1 = Jérôme |last1 = Amilhastre | first2 = Philippe | last2 = Janssen | first3 = Marie-Catherine | last3 = Vilarem | year = 1997 | contribution = Computing a minimum biclique cover is polynomial for bipartite domino-free graphs | title = Proceedings of the Eighth Annual ACM-SIAM Symposium on Discrete Algorithms, 5–7 January 1997, New Orleans, Louisiana. | pages = 36–42 | publisher = ACM/SIAM | url=http://portal.acm.org/citation.cfm?id=314175}} *{{Citation | last1 = de Caen | first1 = Dominique | last2 = Gregory | first2 = David A. | last3 = Pullman | first3 = Norman J. | contribution = The Boolean rank of zero-one matrices | editor-last = Cadogan | editor-first = Charles C. | pages = 169–173 | publisher = Department of Mathematics, University of the West Indies | title = 3rd Caribbean Conference on Combinatorics and Computing | id = {{MR|0657202}} | year = 1981}}. *{{Citation | last1 = Downey | first1 = Rod | last2 = Fellows | first2 = Michael R. | 