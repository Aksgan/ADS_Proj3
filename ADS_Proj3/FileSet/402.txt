a failure for various political reasons, and after delivering a beta version the project died in late 1993. Bedrock started as an internal effort at Symantec in the early 1990s. At the time many of Symantec's products ran on both Mac and Windows, and Bedrock was intended to ease the effort of keeping both platforms up to date. Symantec was also the supplier of the premier development platform on the Mac, [[Think C]], which included an application framework of its own, [[Think Class Library|TCL]]. At about the same time Apple had delivered the latest version of their own framework, [[MacApp]]. The upgrade to 3.0 had not gone smoothly, due largely to a switch in language from [[Object Pascal]] to [[C++]]. Applications written in earlier versions of MacApp had to be completely re-written for 3.0, and even the new version didn't support many of the new features introduced in [[System 7]], or at least not well. Making matters worse was that their development environment, [[Macintosh Programmer's Workshop|MPW]], was hopelessly outdated and completely un-Mac-like. At some point the system would have to be replaced outright, by something that would likely look a lot like Think C. Adding to the concern was the ongoing rise of Windows, which had finally matured into a usable system that would run on the average machine of the era. Cross-platform systems became something of a holy grail in the Mac developer community, but most efforts up to that point had resulted in lowest-common-denominator products that looked like neither platform and were generally detested. A collaboration between Apple and Symantec thus seemed natural. In early 1992 they first mentioned a cross-platform strategy in the flier for [[Apple Worldwide Developers Conference|WWDC '92]], and talked about it very briefly at the show, calling it '''Cross Platform Framework''' and mentioning that more would be revealed at the MacWorld show in June. At the show they announced the concept as Bedrock, with plans to expand it in the future to support [[Unix]], [[OS/2]], [[Windows NT]] and [[Taligent]]. The first releases would be officially supported by Apple's follow-on for MPW and Symantec's Think C on the Mac, and Symantec's Zortech C++ on Windows. Although not officially supported, the system would be deliberately written to be able to compile under any C++ compiler. As the follow-on to MacApp, development of that product was stopped to concentrate solely on Bedrock. While it appeared that the effort was a joint project, in fact the entire development was being carried out by Symantec, a fact that slowly became apparent during the year. Developers started commenting about the dangerous position this placed Apple in, leaving their future development platform in the hands of a 3rd party. It appeared that Apple had completely abandoned the tools market, which may have not been far from the truth at that time. Making matters considerably worse was the fact that Symantec's CEO had given up on the Mac, and even publicly announced that Windows was the future. A developer's preview was delivered in the spring of 1993 that included several demo apps built using the system. These apps looked nothing like Mac or Windows programs, using custom UI widgets for many common tasks like Open File dialog boxes. Furthermore the applications were simply downright ugly; buttons didn't line up, dialogs had spelling mistakes and bad grammar, and the menu bar often included the same command in several menus. Few previews have been so effective at ensuring the failure of a project (with the possible exception of [[Copland (operating system)|Copland]]). Throughout this period Apple was also working on [[OpenDoc]], positioning it as a unique document-centered technology that led to a better user experience than monolithic applications. Apple was particularly effective in "selling" the OpenDoc concept to end users and developers, and the obvious contradiction between working on Bedrock while claiming classic applications were outmoded led to infighting between the project teams in Apple. In January 1994 Apple finally made the obvious official, and stated that the Bedrock efforts were no longer taking place with Symantec. Instead, Apple took out a perpetual license for the software and was re-purposing it an OpenDoc development platform. How this was to be accomplished was not clear, and the announcement was generally taken to be a death knell &ndash; which it was. All mention of Bedrock quickly disappeared from both company's public statements, although various parts of the technology showed up in products from both companies over the years. Apple was left with the programming framework and development platform they had two years earlier, and native support for the [[PowerPC]] was still spotty, at best. If not for the "upstarts" at [[Metrowerks]], developers may have abandoned Apple entirely. In the end the effort served as yet another example of the problems Apple was having at the time. After largely ignoring the developer tools market until 3rd parties had completely surpassed them, they suddenly found themselves with no compelling tools just when Windows was starting to break out. Their desperate attempts to address the problem resulted in a string of failed projects, Bedrock, [[Dylan (programming language)|Dylan]], [[Apple Open Collaboration Environment|AOCE]] and, eventually, OpenDoc among them. ==External links== *[http://www.mactech.com/articles/frameworks/6_4/MacApp_is_Bedrock_Addison.html MacApp is Bedrock is MacApp] *[http://www.mactech.com/articles/mactech/Vol.10/10.03/Mar94Editor'sPage Bedrock - the continuing saga] [[Category:Mac OS software]] [[Category:Windows software]]</text> </page> <page> <id>3560</id> <title>Behavior Driven Development</title> <text>{{Essay-like|date=June 2010}} '''Behavior driven development''' (or '''BDD''') is an [[agile software development]] technique that encourages collaboration between developers, [[quality assurance|QA]] and non-technical or business participants in a software project. It was originally named in 2003 by Dan North<ref name="origin">D.North, [http://dannorth.net/introducing-bdd Introducing Behaviour Driven Development]</ref> as a response to [[Test Driven Development]], including Acceptance Test or Customer Test Driven Development practices as found in [[Extreme Programming]]. It has evolved over the last few years<ref name="evolution">D.North, comments, [http://forums.pragprog.com/forums/95/topics/3035 The RSpec Book - Question about Chapter 11: Writing software that matters]</ref>. On the "Agile Specifications, BDD and Testing eXchange" in November 2009 in London, Dan North<ref>Dan North: [http://skillsmatter.com/podcast/java-jee/how-to-sell-bdd-to-the-business How to sell BDD to the business]</ref> gave the following definition of BDD: <blockquote> 