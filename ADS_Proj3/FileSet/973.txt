allows them to cooperate with each other by employing the principle of replicated computation (synchronization) together with a peer-based messaging protocol. The technology is designed to facilitate replication of computation between peers in order to greatly reduce the overhead required for widespread deployment of collaborative virtual worlds. This efficiency, combined with the ability to deploy Croquet-based virtual worlds on consumer-level hardware, makes it possible for developers to deploy large-scale and highly-participatory collaborative worlds at very low cost compared with virtual world technologies that are entirely dependent on server-based infrastructures to support the activities of their users. ==Virtual machine== [[Image:Adding Notes To 3D objects and places.jpg|thumb|300px|Adding 3D Notes linked to 3D Objects & Places]] Croquet’s [[virtual machine]] (VM) runs bit identically on multiple platforms and it supports a number of capabilities that could only be provided by a true [[Late-bound|late bound]], message sending language. Croquet’s relationship to [[Squeak]] gives Croquet the property of a purely [[Object (computer science)|object-oriented]] system allowing for significant flexibility in the design and the nature of the protocols and architectures that have been developed for the system. Because of this, Croquet has the ability to keep running while testing, and especially while changes are made – an essential part of the Croquet collaborative development capability. Programmers can therefore modify the code running the environment while the environment is running. [[Image:Edit Source Code.jpeg|thumb|300px|'''Croquet allows the user to edit the source code of the 3D world from within the world, and immediately see the result''' while the world is still running. The running program does not have to be ended, and there is no compile-link-run-debug development loop. Any part of the program may be edited, down to the [[VM]] & [[OpenGL]] calls.]] ===Synchronization architecture=== Croquet's time-based synchronization capabilities enable [[Real-time computing|real-time]], identical interactions between groups of users while dramatically reducing the need for server infrastructures to support virtual world deployment. Croquet's architecture makes it easy to develop deeply collaborative applications without having to spend a lot of effort and expertise in understanding how replicated applications work. TeaTime is a scalable real-time multi-user architecture that is the basis for Croquet's object-object communication and synchronization. It is designed to support multi-user applications that can be scaled to massive numbers of concurrently interacting users in a shared virtual space. The most directly visible part of this architecture is the TObject class which is used to define and construct subclassed Tea objects. All of the interesting objects inside of Croquet are constructed from subclasses of TObject. A Tea object acts with the property that messages sent to it are redirected to replicated copies of itself on other users' participating machines in a [[peer-to-peer network]]. This [[messaging protocol]] supports a coordinated distributed [[two-phase commit]] that is used to control the progression of computations at participating user sites. In this way messages may be dynamically redirected to large numbers of users while maintaining the appropriate deadline-based scheduling. Thus, TeaTime is designed to allow for a great deal of adaptability and resilience and works on a heterogeneous set of resources. It is a framework of abstraction that works over a range of implementations and that can be evolved and tuned over time, both within an application and across applications. Key elements of the TeaTime synchronization architecture include: *A coordinated universal timebase embedded in communication protocol *Replicated, versioned objects that unify replicated computation and distribution of results *Replication strategies that separate the mechanisms of replication from the behavioral semantics of objects *Deadline-based scheduling extended with failure and nesting *Coordinated, distributed two-phase commit that is used to control the progress of computations at multiple sites, to provide resilience, deterministic results, and adaptation to available resources *Uses distributed sets ==Open Cobalt== [[Open Cobalt]] is a multi-institutional community software development effort to deploy an open source production-grade metaverse browser/toolkit application built using the Croquet SDK. The [[Open Cobalt]] application is made available under the [http://croquetconsortium.org/index.php/The_Croquet_License Croquet license]. [[Image:Croquet Screenshot.jpeg|thumb|300px|Croquet Avatar with Wireframe Portal, eToy, & Mirror]] ==History== Croquet is the confluence of several independent lines of work that were being carried out by its six principal architects, [[Alan Kay]], [[David A. Smith (computer scientist)|David A. Smith]]. [[David P. Reed]], Andreas Raab, [[Julian Lombardi]], and [[Mark P. McCahill|Mark McCahill]]. The present identity of the project has its origins in a conversation between Smith and Kay in [[1990]], where both expressed their frustration with the state of [[operating systems]] at the time. In [[1994]] Smith built ICE, a working prototype of a two user collaborative system that was a predecessor of the core of what Croquet is today. Also in [[1994]] Mark McCahill's team at the University of Minnesota developed [[GopherVR]], a 3D user interface to [[Internet Gopher]] to explore how spatial metaphors could be used to organize information and create social spaces. In [[1996]] Julian Lombardi approached Smith to explore the development of highly extensible collaborative interfaces to the [[WWW]]. Later, in [[1999]], Smith built a system called OpenSpace, which was an [[Name binding|early-bound]] variant of Croquet. Also in [[1999]], Lombardi began working with Smith on prototype implementations of highly extensible collaborative online environments based on OpenSpace. One of these implementations was a prototype implementation of [[ViOS]], a way of spatially organizing all [[Internet]]-deliverable resources (including web pages) into a massively-scaled multiuser 3D environment. Smith and Kay officially started the Croquet Project in late [[2001]] and were immediately joined by David Reed and Andreas Raab. Reed brought to the project his longstanding work on massively scalable [[peer-to-peer]] messaging architectures in a form deriving from his [[doctoral dissertation]] that was published in [[1978]]. The first working Croquet code was developed in January [[2002]]. Simultaneously and independently, Lombardi and McCahill began collaborating on defining and implementing highly scalable and enterprise-integrated architectures for multi-user collaboration and were invited by Kay to join the core architectural group in [[2003]]. From [[2003]]-[[2006]] the technology was developed under the leadership of its six principal architects with financial support from [[Hewlett-Packard]], Viewpoints Research Institute Inc., the [[University of Wisconsin–Madison]], the [[University of Minnesota]], the Japanese National Institute of 