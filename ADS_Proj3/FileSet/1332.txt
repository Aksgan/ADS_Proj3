is finite. It is thought the only rational points on it correspond to polynomials x<sup>8</sup>+16x+28, x<sup>8</sup>+576x+1008, 19<sup>4</sup>53x<sup>8</sup>+19x+2 which have Galois group AL(8), and x<sup>8</sup>+324x+567, which comes from two different rational points and has Galois group PSL(2, 7) again, this time as the Galois group of a polynomial of degree eight. == References == *{{cite conference | author = Bruin, Nils; [[Noam Elkies|Elkies, Noam]] | title = Trinomials ''ax''<sup>7</sup>+''bx''+''c'' and ''ax''<sup>8</sup>+''bx''+''c'' with Galois Groups of Order 168 and 8⋅168 | booktitle = Algorithmic Number Theory: 5th International Symposium, ANTS-V | publisher = Lecture Notes in Computer Science, vol. 2369, Springer-Verlag | year = 2002 | pages = 172–188 | id = {{MathSciNet | id = 2041082}}}} *{{cite journal | author = Erbach, D. W.; Fisher, J.; McKay, J. | title = Polynomials with PSL(2,7) as Galois group | journal = [[Journal of Number Theory]] | volume = 11 | year = 1979 | issue = 1 | pages = 69–75 | id = {{MathSciNet | id = 0527761}} | doi = 10.1016/0022-314X(79)90020-9}} [[Category:Number theory]] [[Category:Algebraic curves]] [[ca:Corbes trinòmiques d'Elkies]]</text> </page> <page> <id>11977</id> <title>Elkonin boxes</title> <text>{{Unreferenced|date=December 2009}} {{Orphan|date=December 2009}} '''Elkonin boxes''' are an instructional method used in the early elementary grades to build [[phonological awareness]] by segmenting words into [[syllable]]s or sounds. They are named after [[D.B. Elkonin]], the Russian psychologist who pioneered their use. The "boxes" are squares drawn on a piece of paper or a chalkboard, with one box for each syllable or [[phoneme]], depending on what kind of segmentation is being done. To use Elkonin boxes, a child listens to a [[word]] and moves a token into a box for each syllable or phoneme. In some cases different colored tokens may be used for [[consonants]] and [[vowels]] or just for each phoneme in the word. {{DEFAULTSORT:Elkonin Boxes}} [[Category:Learning]]</text> </page> <page> <id>11988</id> <title>Elliptic curve primality proving</title> <text>'''Elliptic Curve Primality Proving''' (ECPP) is a method based on [[elliptic curves]] to prove the [[prime number|primality]] of a number (see [[Elliptic curve primality testing]]). It is a general-purpose [[algorithm]], meaning it does not depend on the number being a special form. ECPP is currently in practice the fastest known algorithm for testing the primality of general numbers, but the [[worst-case execution time]] is not known. ECPP [[Heuristic argument|heuristically]] runs in time:<ref name="Lenstra">{{cite journal|last=Lenstra, Jr.|first=A. K.|coauthors=Lenstra, Jr., H. W.|title=Algorithms in number theory|journal=Handbook of Theoretical Computer Science: Algorithms and Complexity|volume=A|publisher=The MIT Press|location=Amsterdam and New York|pages=673–715|year=1990}}</ref> :<math> O((\log n)^{5+\epsilon})\, </math> for some <math>\epsilon > 0</math>. This exponent may be decreased to <math>4+\epsilon</math> for some versions by heuristic arguments. This exponent is less than that of the [[AKS primality test|AKS method]]. ECPP works the same way as most other [[primality test]]s do, finding a [[group (mathematics)|group]] and showing its size is such that <math>p</math> is prime. For ECPP the group is an elliptic curve over a finite set of quadratic forms such that <math>p-1</math> is trivial to factor over the group. ECPP generates an [[A. O. L. Atkin|Atkin]]-[[Shafi Goldwasser|Goldwasser]]-Kilian-Morain [[primality certificate|certificate]] of primality by [[recursion (computer science)|recursion]] and then attempts to verify the certificate. The step that takes the most [[CPU]] time is the certificate generation, because factoring over a [[class field]] must be performed. The certificate can be verified quickly, allowing a check of operation to take very little time. {{As of|2008|4}} the largest prime that has been proved with ECPP is the 20,562-digit [[Mills' constant|Mills' prime]]:<ref>Martin, Marcel. [http://www.ellipsa.net/primo/record.html#03 ''ECPP records (multiprocessor)'']. Retrieved on 2007-06-09.</ref><ref>Caldwell, Chris. [http://primes.utm.edu/top20/page.php?id=27 ''The Top Twenty: Elliptic Curve Primality Proof''] from the [[Prime Pages]]. Retrieved on 2007-06-09.</ref> :<math>(((((((((2^3+3)^3+30)^3+6)^3+80)^3+12)^3+450)^3+894)^3+3636)^3+70756)^3+97220.</math> The [[distributed computing|distributed computation]] with software by [[François Morain]] started in September 2005 and ended in June 2006. The cumulated time corresponds to one [[AMD Opteron]] 250 processor at 2.39 GHz for 2219 days (near 6 years).<ref>{{cite mailing list |url=http://listserv.nodak.edu/cgi-bin/wa.exe?A2=ind0606&L=nmbrthry&T=0&P=159 |title=A new prime |date=2006-06-05 |accessdate=2007-06-09 |mailinglist=NMBRTHRY |last=Morain |first=François |authorlink= }}</ref> ==References== {{Reflist}} == External links == *[http://citeseer.ist.psu.edu/rd/9227084%2C72628%2C1%2C0.25%2CDownload/http://citeseer.ist.psu.edu/cache/papers/cs/426/ftp:zSzzSzftp.inria.frzSzINRIAzSzpublicationzSzpubli-ps-gzzSzRRzSzRR-1256.pdf/atkin93elliptic.pdf Elliptic Curves and Primality Proving] by [[A. O. L. Atkin|Atkin]] and Morain. *{{MathWorld|urlname=EllipticCurvePrimalityProving|title=Elliptic Curve Primality Proving}} *Chris Caldwell, [http://primes.utm.edu/prove/prove4_2.html "Primality Proving 4.2: Elliptic curves and the ECPP test"] at the [[Prime Pages]]. *François Morain, [http://www.lix.polytechnique.fr/~morain/Prgms/ecpp.english.html "The ECPP home page"] (includes old ECPP software for some architectures). *Marcel Martin, [http://www.ellipsa.net/public/primo/index.html "Primo"] (Windows implementation). *[http://sourceforge.net/projects/gmp-ecpp GMP-ECPP] - a free ECPP implementation *[http://www.cdc.informatik.tu-darmstadt.de/TI/LiDIA LiDIA] - a free library with ECPP {{number theoretic algorithms}} {{DEFAULTSORT:Elliptic Curve Primality Proving}} [[Category:Primality tests]] [[Category:Elliptic curves]] {{numtheory-stub}} [[it:Algoritmo ECPP]] [[pl:Test pierwszości ECPP]]</text> </page> <page> <id>11989</id> <title>Elliptic curve primality testing</title> <text>{{New unreviewed article|date=February 2010}} '''[[Elliptic curve]] primality testing''' techniques are among the quickest and most widely used methods in primality proving.<ref name="HEHCC">{{cite book|title=Handbook of Elliptic and Hyperelliptic Curve Cryptography|editor=Henri Cohen, Gerhard Frey|publisher=Chapman & Hall/CRC|location=Boca Raton|year=2006}}</ref> It is an idea forwarded by [[Shafi Goldwasser]] and [[Joe Kilian]] in 1986 and turned into an algorithm by [[A.O.L. Atkin]] the same year. The algorithm was altered and improved by several collaborators subsequently, and notably by Atkin and [[Francois Morain]], in 1993.<ref>Top, Jaap, ''Elliptic Curve Primality Proving'', http://www.math.rug.nl/~top/atkin.pdf</ref> The concept of using [[Lenstra elliptic curve factorization|elliptic curves in factorization]] had been developed by [[H.W. Lenstra]] in 1985, and the implications for its use in primality testing (and proving) followed quickly. [[Primality testing]] is a field that has been around since the time of [[Fermat]], in whose time most algorithms were based on factoring, which become unwieldy with large input; modern algorithms treat the problems of determining whether a number is prime and what its factors are separately. It enjoys a great deal of interest with the advent of modern cryptography. Although many current tests result in a probabilistic output (''N'' is either shown composite, or probably prime, such as with the [[Miller–Rabin test]]), the elliptic curve test, proves primality (or compositeness) with a quickly verifiable certificate.<ref name="atkin-morain">Atkin, A.O.L., Morain, F., ''Elliptic Curves and Primality Proving'', http://www.iai.uni-bonn.de/~adrian/ecpp/1992-atkin-morain-elliptic.pdf</ref> Elliptic curve primality proving provides an alternative to (among others) the [[Pocklington primality test]], which can be difficult to implement in practice. Interestingly, the elliptic curve primality tests are based on criteria which is analogous to the Pocklington criterion, on which that test is 