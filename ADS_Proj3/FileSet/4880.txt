requirements === * 1.8 V [[Vdd]] * Programmable ultra-low-voltage DRSL 200 mV swing * Low-power [[Phase-locked loop|PLL]]/[[Delay-locked loop|DLL]] design * Power-down self-refresh support * Dynamic data width support with dynamic clock gating * Per-pin I/O power-down * Sub-page activation support === Ease of system design === * Per-bit [http://www.rambus.com/us/technology/innovations/detail/flexphase_timing.html FlexPhase] circuits compensate to a 2.5 ps resolution * XDR Interconnect uses minimum pin count === Latency === * 1.25/2.0/2.5/3.33 ns request packets == Protocol == An XDR RAM chip's high-speed signals are a differential clock input (clock from master, CFM/CFMN), a 12-bit [[Single-ended signalling|single-ended]] request/command bus (RQ11..0), and a bidirectional differential data bus up to 16 bits wide (DQ15..0/DQN15..0). The request bus may be connected to several memory chips in parallel, but the data bus is point to point; only one RAM chip may be connected to it. To support different amounts of memory with a fixed-width memory controller, the chips have a programmable interface width. A 32-bit-wide DRAM controller may support 2 16-bit chips, or be connected to 4 memory chips each of which supplies 8 bits of data, or up to 16 chips configured with 2-bit interfaces. In addition, each chip has a low-speed serial bus used to determine its capabilities and configure its interface. This consists of three shared inputs: a reset line (RST), a serial command input (CMD) and a serial clock (SCK), and serial data in/out lines (SDI and SDO) that are daisy-chained together and eventually connect to a single pin on the memory controller. All single-ended lines are [[active-low]]; an asserted signal or logical 1 is represented by a low voltage. The request bus operates at [[double data rate]] relative to the clock input. Two consecutive 12-bit transfers (beginning with the falling edge of CFM) make a 24-bit command packet. The data bus operates at 8x the speed of the clock; a 400 MHz clock generates 3200 MT/s. All data reads and writes operate in 16-transfer bursts lasting 2 clock cycles. Request packet formats are as follows: {|class=wikitable style="text-align:center;" |+XDR DRAM request packet formats<ref>[http://www.rambus.com/assets/documents/products/dl_0161_v0_8.pdf XDR™ Architecture] (Rambus)</ref> !rowspan=2| Clock<br/>edge ||rowspan=2| Bit |rowspan=26| ! NOP |rowspan=26| !colspan=2| Column read/write |rowspan=26| !colspan=2| Calibrate/power-down |rowspan=26| !colspan=2| Precharge/refresh |rowspan=26| !colspan=2| Row Activate |rowspan=26| !colspan=2| Masked write |- ! Bit || Bit || Description || Bit || Description || Bit || Description || Bit || Description || Bit || Description |- | ↓ || RQ11 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 0 ||rowspan=4| COL opcode ||bgcolor=palegreen| 0 ||rowspan=4| COLX opcode ||bgcolor=palegreen| 0 ||rowspan=4| ROWP opcode ||bgcolor=palegreen| 0 ||rowspan=2| ROWA opcode ||bgcolor=palegreen| 1 || COLM opcode |- | ↓ || RQ10 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 1 || M3 ||rowspan=4| Write mask<br/>low bits |- | ↓ || RQ9 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 1 ||bgcolor=palegreen| 1 || R9 ||rowspan=3| Row address<br/>high bits || M2 |- | ↓ || RQ8 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 1 ||bgcolor=palegreen| 0 ||bgcolor=palegreen| 1 || R10 || M1 |- | ↓ || RQ7 ||bgcolor=lightgrey| x ||bgcolor=palegreen| WRX || Write/Read bit ||bgcolor=lightgrey| x ||rowspan=4 bgcolor=lightgrey| ''reserved'' || POP1 ||rowspan=2| Precharge delay<br/>(0..3) || R11 || M0 |- | ↓ || RQ6 ||bgcolor=lightgrey| x || C8 ||rowspan=2| Column address<br/>high bits ||bgcolor=lightgrey| x || POP0 ||bgcolor=lightgrey| R12 ||rowspan=4 bgcolor=lightgrey| ''reserved'' || C8 ||rowspan=2| Column address<br/>high bits |- | ↓ || RQ5 ||bgcolor=lightgrey| x || C9 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||rowspan=3 bgcolor=lightgrey| ''reserved'' ||bgcolor=lightgrey| R13 || C9 |- | ↓ || RQ4 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| C10 ||rowspan=2 bgcolor=lightgrey| ''reserved'' ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||bgcolor=lightgrey| R14 ||bgcolor=lightgrey| C10 ||rowspan=2 bgcolor=lightgrey| ''reserved'' |- | ↓ || RQ3 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| C11 ||bgcolor=palegreen| XOP3 ||rowspan=4| Subopcode ||bgcolor=lightgrey| x ||bgcolor=lightgrey| R15 ||bgcolor=lightgrey| C11 |- | ↓ || RQ2 ||bgcolor=lightgrey| x ||bgcolor=PaleTurquoise| BC2 ||rowspan=3| Bank address ||bgcolor=palegreen| XOP2 ||bgcolor=PaleTurquoise| BP2 ||rowspan=3| Precharge bank ||bgcolor=PaleTurquoise| BA2 ||rowspan=3| Bank address ||bgcolor=PaleTurquoise| BC2 ||rowspan=3| Bank address |- | ↓ || RQ1 ||bgcolor=lightgrey| x ||bgcolor=PaleTurquoise| BC1 ||bgcolor=palegreen| XOP1 ||bgcolor=PaleTurquoise| BP1 ||bgcolor=PaleTurquoise| BA1 ||bgcolor=PaleTurquoise| BC1 |- | ↓ || RQ0 ||bgcolor=lightgrey| x ||bgcolor=PaleTurquoise| BC0 ||bgcolor=palegreen| XOP0 ||bgcolor=PaleTurquoise| BP0 ||bgcolor=PaleTurquoise| BA0 ||bgcolor=PaleTurquoise| BC0 |- | ↑ || RQ11 ||bgcolor=lightgrey| x || DELC || Command delay (0..1) ||bgcolor=lightgrey| x ||rowspan=12 bgcolor=lightgrey| ''reserved'' || POP2 || Precharge enable || DELA || Command delay (0..1) || M7 ||rowspan=4| Write mask<br/>high bits |- | ↑ || RQ10 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||rowspan=3 bgcolor=lightgrey| ''reserved'' ||bgcolor=lightgrey| x ||bgcolor=palegreen| ROP2 ||rowspan=3| Refresh command || R8 ||rowspan=9| Row address<br/>low bits || M6 |- | ↑ || RQ9 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||bgcolor=palegreen| ROP1 || R7 || M5 |- | ↑ || RQ8 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||bgcolor=palegreen| ROP0 || R6 || M4 |- | ↑ || RQ7 ||bgcolor=lightgrey| x || C7 ||rowspan=4| Column address<br/>low bits ||bgcolor=lightgrey| x || DELR1 ||rowspan=2| Refresh delay<br/>(0..3) || R5 || C7 ||rowspan=4| Column address<br/>low bits |- | ↑ || RQ6 ||bgcolor=lightgrey| x || C6 ||bgcolor=lightgrey| x || DELR0 || R4 || C6 |- | ↑ || RQ5 ||bgcolor=lightgrey| x || C5 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x ||rowspan=3 bgcolor=lightgrey| ''reserved'' || R3 || C5 |- | ↑ || RQ4 ||bgcolor=lightgrey| x || C4 ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x || R2 || C4 |- | ↑ || RQ3 ||bgcolor=lightgrey| x || SC3 ||rowspan=4| Sub-column address ||bgcolor=lightgrey| x ||bgcolor=lightgrey| x || R1 || SC3 ||rowspan=4| Sub-column address |- | ↑ || RQ2 ||bgcolor=lightgrey| x || SC2 ||bgcolor=lightgrey| x ||bgcolor=PaleTurquoise| BR2 ||rowspan=3| Refresh bank || R0 || SC2 |- | ↑ || RQ1 ||bgcolor=lightgrey| x || SC1 ||bgcolor=lightgrey| x ||bgcolor=PaleTurquoise| BR1 || SR1 ||rowspan=2| Sub-row address || SC1 |- | ↑ || RQ0 ||bgcolor=lightgrey| x || SC0 ||bgcolor=lightgrey| x ||bgcolor=PaleTurquoise| BR0 || SR0 || SC0 |} There are a large number of timing constraints giving minimum times that must elapse between various commands (see [[Dynamic random access memory#Memory_timing|Dynamic random access memory: Memory timing]]); the DRAM controller sending them must ensure they are all met. Some commands contain delay fields. These delay the effect of the command by the given number of clock cycles. This permits multiple commands (to different banks) to take effect on the same clock cycle. ===Row activate command=== This operates equivalently to standard 