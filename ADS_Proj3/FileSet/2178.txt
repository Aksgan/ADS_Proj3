considerable overlap in the message of directives, at the expense of clarity, efficiency, and communication, or even of consistency. ==See also== * [[Scope creep]] * [[Creep (project management)]] ==References== * [http://books.google.com/books?id=LCsFMKrclp8C&pg=PA118&dq=%22instruction+creep%22&hl=en&ei=Y06XTKSgLdKOOKP4mIgJ&sa=X&oi=book_result&ct=result&resnum=1&ved=0CCkQ6AEwAA#v=onepage&q=%22instruction%20creep%22&f=false Managing Project Delivery: Maintaining Control and Achieving Success] - Page 118 * [http://books.google.com/books?id=a_5SAAAAMAAJ&q=%22instruction+creep%22&dq=%22instruction+creep%22&hl=en&ei=Y06XTKSgLdKOOKP4mIgJ&sa=X&oi=book_result&ct=result&resnum=6&ved=0CEYQ6AEwBQ Wikis: tools for information work and collaboration] Page 190 [[Category:Anti-patterns]] [[Category:Technical communication]] [[Category:Management]] [[ca:Enfilament d'instruccions]] [[sk:Instruction creep]]</text> </page> <page> <id>18595</id> <title>Instruction unit</title> <text>{{Multiple issues|orphan =October 2006|context =October 2009|unreferenced =October 2008}} The '''instruction unit''' (IU) in a [[CPU]] is responsible for maintaining the fetch pipeline and for dispatching instructions. It stores the instruction that is required to process the data. ==See also== [[Instruction pipeline]] {{DEFAULTSORT:Instruction Unit}} [[Category:Central processing unit]] {{microcompu-stub}}</text> </page> <page> <id>18596</id> <title>Instruction window</title> <text>{{unreferenced|date=October 2010}} An '''instruction window''' in the field of [[superscalar]] [[CPU]] architecture is a group of [[Instruction (computer science)|instructions]] actively processed in parallel. Also the size or maximum size of either such a group or its containing facility can be meant (size being measured in number of instructions). Instructions which, in [[out-of-order execution]], are put aside into a [[shelving buffer]] or are waiting in an [[instruction queue]] are not thought of being inside of an instruction window. [[Instruction pipeline|Pipelined instructions]] in different states of processing are not in the same instruction window. Both concepts might be visualized as being orthogonal to each other. In more complex situations each pipeline step could be viewed as having its own instruction window, or each slot in an instruction window having its own pipeline. == External links == example usage: *[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.77.1004&rep=rep1&type=pdf ''Runahead Execution: An Effective Alternative To Large Instruction Windows''] *[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.9981&rep=rep1&type=pdf ''A Large, Fast Instruction Window for Tolerating Cache Misses''] *[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.136.3049&rep=rep1&type=pdf ''Branch Prediction, Instruction-Window Size, and Cache Size: Performance Trade-offs and Simulation Techniques''] *[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.70.7402&rep=rep1&type=pdf ''Fetch Gating Control through Speculative Instruction Window Weighting''] *[http://www.itee.uq.edu.au/~philip/Publications/Techreports/2002/Reports/memory-wall-survey.pdf ''Approaches to Addressing the Memory Wall''] {{Parallel_computing}} [[Category:Computer architecture]] [[Category:Instruction processing]] [[Category:Parallel computing]]</text> </page> <page> <id>18613</id> <title>Integer (computer science)</title> <text>{{Refimprove|date=January 2008}} In computer science, the term '''integer''' is used to refer to a [[data type]] which represents some finite subset of the mathematical [[integer]]s. These are also known as '''integral data types'''.<ref>"C provides six operators for bit manipulation; these may only be applied to integral operands, that is, char, short, int and long, whether signed or unsigned." section 2.9. Kernighan & Ritchie, The C Programming Language - Second Edition, 43rd printing (c) 2008</ref> == Value and representation == The ''value'' of a [[data|datum]] with an integral type is the mathematical integer that it corresponds to. Integral types may be ''unsigned'' (capable of representing only non-negative integers) or ''signed'' (capable of representing negative integers as well). An integer is typically specified in the program as a sequence of digits, without spaces or thousands separators, optionally prefixed with + or -. Sometimes also alternative notations are allowed, such as hexadecimal (base 16) or octal (base 8). The ''internal representation'' of this datum is the way the value is stored in the computer’s memory. Unlike mathematical integers, a typical datum in a computer has some minimal and maximum possible value. Typically all integers from the minimum through the maximum can be represented. The maximum is sometimes called MAXINT or—as in the C standard library [[limits.h]] header—INT_MAX. The most common representation of a positive integer is a string of [[bit]]s, using the [[binary numeral system]]. The order of the memory bytes storing the bits varies; see [[endianness]]. The ''width'' or ''precision'' of an integral type is the number of bits in its representation. An integral type with ''n'' bits can encode 2<sup>''n''</sup> numbers; for example an unsigned type typically represents the non-negative values 0 through 2<sup>''n''</sup>&minus;1. There are four different ways to represent negative numbers in a binary numeral system. The most common is [[two's complement|two’s complement]], which allows a signed integral type with ''n'' bits to represent numbers from &minus;2<sup>(n&minus;1)</sup> through 2<sup>(n&minus;1)</sup>&minus;1. Two’s complement arithmetic is convenient because there is a perfect [[bijection|one-to-one correspondence]] between representations and values (in particular, no separate +0 and -0), and because [[addition]], [[subtraction]] and [[multiplication]] do not need to distinguish between signed and unsigned types. The other possibilities are [[offset binary]], sign-magnitude and ones' complement. See [[Signed number representations]] for details. Another, rather different, representation for integers is [[binary-coded decimal]], which is still commonly used in [[Mainframe computer|mainframe]] financial applications and in databases. == Common integral data types == {| class="wikitable" |- ! Bits ! Name ! Range (assuming [[two's complement]] for signed) ! Decimal digits !scope=col colspan="2"| Uses |- |rowspan=2| 4 |rowspan=2| [[nibble]], [[semioctet]] |''Signed:'' From <math>-8</math> to <math>7</math>, from <math>-(2^3)</math> to <math>2^3-1</math> |1 |rowspan=2 colspan="2"| [[Binary-coded decimal]], single decimal kamal digit representation. |- |''Unsigned:'' From <math>0</math> to <math>15</math> which equals to <math>2^4 -1</math> |2 |- |rowspan=2| 8 |rowspan=2| [[byte]], [[octet (computing)|octet]] |''Signed:'' From [[127 (number)|<math>-128</math> to <math>127</math>]], from <math>-(2^7)</math> to <math>2^7-1</math> | 3 |rowspan=2 colspan="1"| [[ASCII]] characters, [[C (programming language)|C]]/C++ char, C/C++ uint8_t, int8_t, C# byte (unsigned), T-SQL tinyint, Delphi Byte, Shortint, Java byte |- |''Unsigned:'' From <math>0</math> to <math>255</math> which equals to <math>2^8 -1</math> |3 |- |rowspan=2| 16 |rowspan=2| halfword, [[word (computing)|word]], [[short integer|short]], short |''Signed:'' From [[30000 (number)|<math>-32,768</math> to <math>32,767</math>]], from <math>-(2^{15})</math> to <math>2^{15}-1</math> | 5 |rowspan=2 colspan="1"| [[UCS-2]] characters, C/C++ short, C/C++ int (minimum), C/C++ uint16_t, int16_t, C# short, Delphi Word, Smallint, T-SQL smallint, Java char/short |- |''Unsigned:'' From <math>0</math> to <math>65,535</math> which equals to <math>2^{16} -1</math> |5 |- |rowspan=2| 32 |rowspan=2| word, [[long integer|long]], doubleword, longword, int |''Signed:'' From [[2147483647 (number)|<math>-2,147,483,648</math> to <math>2,147,483,647</math>]], from <math>-(2^{31})</math> to <math>2^{31}-1</math> | 10 |rowspan=2 colspan="1"| [[UCS-4]] characters, [[Truecolor]] with alpha, C/C++ int (with some compilers, 32 and 64 bit),<ref>"On compilers for 32 bit and larger processors (including Intel x86 processors executing in 32 bit mode, such as Win32 or Linux) an int is usually 32 bits long and has exactly the same representation as a long." The Int Types Jack Klein, Integer Types In C and C++, http://jk-technology.com/c/inttypes.html (c) 2008</ref> C/C++ long (on Windows and 32-bit DOS and Unix), C/C++ uint32_t, int32_t, C# int, [[FourCC]], Delphi Cardinal, Integer, LongWord, LongInt, T-SQL int, Java int |- |''Unsigned:'' From <math>0</math> 