and steady growth. ==Special warrants== During the holidays, there are "holiday warrants" that allow one to predict the final gross of a movie by President's Day Weekend of the following year. For example, there was a [[The Chronicles of Narnia: The Lion, the Witch and the Wardrobe|Narnia]] warrant of $180 million. Since Narnia could make $300 million by 2/20/06, anyone who purchased the warrant would be looking at $120 per share. On the other hand, ''[[Zathura (film)|Zathura]]'' had a holiday warrant for $70 million. Since it closed a month after its release making less than $30 million during its run, anyone who predicted it as making more than $70 million would lose their investment. During the summer, there are similar "blockbuster warrants" that allow one to predict the final gross of a movie by Labor Day Weekend of that year. HSX also releases various special derivatives throughout the year. During the summer of 2006, there were derivatives for the [[FIFA World Cup|World Cup Tournament]]. ==2008 Site Redesign== On Tuesday October 21, 2008, HSX released a total redesign of their website. The redesign was met by harsh criticism from the site's users on the site's message forums.<ref>http://www.hsx.com/cms/topic/bug-reports-and-other-issues</ref> One week later, on October 28, HSX announced that it was rolling back to the previous design due to user complaints, and would keep the new design up as a beta site run concurrently with the old design until bugs were worked out.<ref>http://beta.hsx.com/cms/topic/return-hsx-classic</ref> On November 14, HSX announced it was closing the beta site in order to improve performance and functionality. A completely new redesign came online in June 2009. ==See also== * [[The simExchange]] ==References== {{reflist|1}} ==External links== * [http://www.hsx.com Hollywood Stock Exchange] * [http://www.iht.com/articles/2005/11/27/news/bxtip.php International Herald Tribune article 27 November 2005] - [[Category:Prediction markets]] [[Category:Browser-based multiplayer online games]] [[Category:Multiplayer online games]]</text> </page> <page> <id>16876</id> <title>Holos</title> <text>{{notability|date=May 2010}} {{Unreferenced|date=May 2010}} '''Holos''' is an influential [[OLAP]] (Online Analytical Processing) product of the 1990s. Developed by Holistic Systems in 1987, the product remained in use until around 2004. ==Conception== The Holos product succeeded an older generation of mainframe products such as System-W. It was the first to use an industry standard [[SQL]] database (as opposed to a proprietary one), and also the first to use the new GUI PC for the user interface. In physically separating the ''number crunching'' from the user interface, the product was immediately client/server, although the term didn't come into use until some time later. In fact the process was described as cooperative processing at the time as client/server was not a current term at that time. The client/server model used for Holos was initially for a very "light" client as it was not clear at that time (1986/7)that PC's were going to be so commonplace and most PC's were still running MS-DOS. In fact it was technically possible to run the system using "dumb" terminal with reduced functionalty in early versions although save for in Holistic's test environment this was rarely if ever done. In time due to the increased popularly of PC's and their increased power and the available of a stsble and more funtional version of Microsoft Windows additional funtionality was added to the client end mostly in the form of development aids. In addition to data services, the Holos Server supplied business logic and calculation services. It also provided complementary services to the Holos Client which meant the internal processing associated with the report writer, worksheet, etc., was distributed between the two components. ==Architecture== The core of the Holos Server was a Business Intelligence (BI) virtual machine. The Holos Language (HL) was compiled into a soft instruction code, and executed in this virtual machine (similar in concept to Java in more modern systems). The virtual machine was fully fault-tolerant, using structured exception handling internally, and provided a debugger interface. The debugger was machine-level until quite late on, after which it also supported source-level access. The virtual machine accounts for one of the most misunderstood aspects of the product: OLAP data was handled as a core data type of HL, with specific syntax to accommodate multidimensional data concepts, and complete programmatic freedom to explore and utilise the data. This made it very different from the industry trend of query-based OLAP and SQL engines. On the upside, it allowed amazing flexibility in the applications to which it could be applied. On the downside, it mean that 3-tier configurations were never successfully implemented since the processing had to be close to the data itself. This hindered large-scale deployment to many clients, and the use of OLAP data from other vendors. In reality, its own data access times were probably some of the fastest around -- at the individual cell level; they had to be in order to be practical. However, when fetching back bulk data for non-cooperating clients, or data from other vendors, the queries could not be optimised as a whole. Its own data access used a machine-wide shared memory cache. ==Language== The Holos Language was a very broad language in that it covered a wide range of statements and concepts, including the reporting system, business rules, OLAP data, SQL data (using the Embedded SQL syntax within the hosting HL), device properties, analysis, forecasting, and data mining. It even supported elements to enable self-documentation and self-verification. Placing all these areas on a common footing, and allowing them to co-operate by sharing data, events, etc., was key to the number of possibilities that resulted. For instance, the report writer supported input as well as output, plus interactive graphics, and a comprehensive event mechanism to pass back information about the viewed data to event handlers. Also, reports and data were separate entities, thus allowing the same report to be applied to different data as long as it was described by similar meta-data. This meant that when terms like [[EIS]] and [[MIS]] were first coined, the industry norm was "slideshows", i.e. pre-programmed transitions between views, whereas Holos provided data-driven drill-down, i.e. no pre-programmed views or links. The transitions could be made dependent 