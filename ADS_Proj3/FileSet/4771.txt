for the STA to reconnect with its new configuration (handed to it by the [[Wireless access point|AP]] just before). # Registrar STA configures the AP as an Enrollee. This case is subdivided in two aspects: first the session could occur on both a wired or wireless medium, and second the AP could already be configured by the time the Registrar found it. In the case of a wired connection between the devices, the protocol runs over [[Universal Plug and Play|UPnP]], and both devices will have to support [[Universal Plug and Play|UPnP]] for that purpose. When running over [[Universal Plug and Play|UPnP]], a shortened version of the protocol is run (only 2 messages) as no authentication is required other than that of the joined wired medium. In the case of a wireless medium, the session of the protocol is very similar to the internal registrar scenario, just with opposite roles. As to the configuration state of the AP, the registrar is expected to ask the user whether to reconfigure the AP or keep its current settings, and can decide to reconfigure it even if the AP describes itself as configured. Multiple registrars should have the ability to connect to the AP. # Registrar STA configures Enrollee STA. In this case the AP stands in the middle and acts as an Authenticator, meaning it only proxies the relevant messages from side to side. UPnP is intended to apply only to a wired medium, while actually it applies to any interface to which an IP connection can be set up. Thus having manually set up a wireless connection, the UPnP can be used over it in the same manner as with the wired. ==Protocol Structure== The WPS protocol itself consists as a series of [[Extensible Authentication Protocol|EAP]] message exchanges that is triggered by a user action and relies on an exchange of descriptive information that should precede that user's action. The descriptive information is transferred through a new [[Information Element|IE]] that's added to the Beacon, Probe Response and optionally to the Probe Request and Association Request/Response messages. Other than purely informative [[Type-length-value|TLVs]], those [[Information Element|IEs]] will also hold the possible, and the currently deployed, configuration methods of the device. After the identification of the device's capabilities on both ends, a human trigger is to initiate the actual session of the protocol. The session consists of 8 messages, that are followed in the case of a successful session by a message to indicate the protocol is done. The exact stream of messages may change when configuring different kinds of devices (AP or STA) or using different physical media (wired or wireless). ==See also== # [http://www.wi-fi.org/ The Wi-Fi Alliance Official Site] # [http://www.wi-fi.org/wifi-protected-setup/ Wi-Fi Protected Setup Knowledge Center at the Wi-Fi Alliance] # [http://www.upnp.org/ The UPnP Forum Main Page] # [http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.0-20080424.pdf UPnP Device Architecture] [[Category:Cryptographic protocols]] [[Category:Wi-Fi]] [[ca:WPS]] [[de:Wi-Fi Protected Setup]] [[es:Wi-fi protected setup]] [[fa:وای-فای پروتکتد ستاپ]] [[fr:Wi-Fi Protected Setup]] [[it:Wi-Fi Protected Setup]] [[ja:Wi-Fi Protected Setup]]</text> </page> <page> <id>40097</id> <title>Wide-spectrum language</title> <text>A '''wide-spectrum language''' (WSL) is a [[programming language]] designed to be simultaneously a [[Low-level programming language|low-level]] and a [[High-level programming language|high-level]] language&mdash;possibly a [[specification language|non-executable specification language]]. Wide-spectrum languages are designed to support a [[programming methodology]] based on [[program refinement]]. The concept was introduced by [[F. L. Bauer]] ''et al.'' in 1978: <blockquote>...The program should then be developed step by step applying correctness preserving transformations.... The development process thus involves usually multiple reshapings.... Since most current programming languages do not contain all the concepts needed for the formulation of the different versions, the programmer is nowadays forced to use different languages. To avoid the transition from one language to another, it seems appropriate to have one coherent language frame covering the whole spectrum outlined above, i.e. a ''wide spectrum language''.<ref>Bauer, p. 15</ref> </blockquote> The advantage of a single language rather than separate specification, high-level, and low-level languages is that the program can be incrementally refined, with intermediate versions retaining some higher-level and some lower-level constructs. Bauer's group developed the [[CIP-L]] wide-spectrum language and the [[CIP-S]] program transformation system. ==See also== * [[Extended ML]], a wide-spectrum language based on [[ML (programming language)|ML]] * [[RAISE Specification Language]], described as a wide-spectrum specification language ==Notes== <references/> ==References== * [[F. L. Bauer]], ''et al.'', "Towards a wide spectrum language to support program specification and program development", ''[[ACM SIGPLAN Notices]]'' '''13''':12:15-24 December, 1978. [http://delivery.acm.org/10.1145/960000/954588/p15-bauer.pdf?key1=954588&key2=1902261321&coll=GUIDE&dl=GUIDE&CFID=17837149&CFTOKEN=93594898 full text (subscription)] * F.L. Bauer, ''The wide spectrum language CIP-L'', vol. 1 of ''The Munich Project CIP'', ''in'' ''[[Lecture Notes in Computer Science]]'' '''183''', Berlin, 1985. ISBN 3540151877. * Z. Chen ''et al.'', "A wide-spectrum language for object-based development of real-time systems", ''International Journal of Information Sciences'' '''118''':15-35 (1999) * Theo de Ridder, "Using Python as a Wide-Spectrum Language", EuroPython 2002. [http://www.nlnet.nl/project/timewalker/200206europython.pdf] [[Category:Programming language classification]]</text> </page> <page> <id>40114</id> <title>Wii WAD</title> <text>{{Multiple issues|notability=August 2009|refimprove=August 2009}} A '''WAD''' file is a file archive containing .APP files, which can be extracted and installed on a [[Wii]] [[Video game console|gaming console]]. They often contain information for the Wii, such as System Menu, IOS, Channels etc. Although they are mainly used to install custom channels and IOS, they have also been linked to piracy, as users can install pirated [[WiiWare]] and [[Virtual Console]] titles through the use of WADs. WADs are generally installed using the homebrew application WAD Manager.<ref>http://wiibrew.org/wiki/WAD</ref> ==References== {{Reflist}} {{DEFAULTSORT:Wii Wad}} [[Category:Video game consoles]] [[Category:Wii]]</text> </page> <page> <id>40117</id> <title>Wiki</title> <text>{{About|the type of website}} {{Redirect|Edit summary|edit summaries as used in Wikipedia|Help:Edit summary}} {{pp-semiprotected|small=yes}} {{Selfref|"WikiNode" redirects here. For the WikiNode of Wikipedia, see [[Wikipedia:WikiNode]].}} A '''wiki''' ({{IPAc-en|icon|ˈ|w|ɪ|k|i}} {{respell|WIK|ee}}) is a [[website]] that allows the creation and editing of any number of [[free links|interlinked]] [[web page]]s via a [[web browser]] using a simplified [[markup language]] or a [[WYSIWYG]] text editor.<ref>[http://dictionary.oed.com/cgi/entry/50293088 Dictionary.oed.com], [[Oxford English Dictionary]] (draft entry, March 2007) Requires Paid Subscription</ref><ref name="Britannica">{{Citation|title=wiki|encyclopedia=[[Encyclopædia Britannica]]|volume=1|publisher=[[Encyclopædia Britannica, Inc.]]|year=2007|location=[[London]]|url=http://www.britannica.com/EBchecked/topic/1192819/wiki|accessdate=2008-04-10}}</ref><ref name="urlEasy Wiki Hosting, Scott Hanselmans blog, and Snagging Screens">{{Citation|url=http://msdn.microsoft.com/en-us/magazine/cc700339.aspx |title=Easy Wiki Hosting, Scott Hanselman's blog, and Snagging Screens |date=July, 2008 |author=Mitchell, Scott |publisher=MSDN Magazine |accessdate=2010-03-09}}</ref> Wikis are typically powered by [[wiki software]] and are often 