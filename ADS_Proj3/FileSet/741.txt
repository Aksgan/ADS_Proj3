span is indeed the [[closure (mathematics)|closure]] of the linear span. Closed linear spans are important when dealing with closed linear subspaces (which are themselves highly important, consider [[Riesz's lemma]]). ==A useful lemma== Let ''X'' be a normed space and let ''E'' be any non-empty subset of ''X''. Then (a) <math>\overline{\operatorname{Sp}}(E)</math> is a closed linear subspace of ''X'' which contains ''E'', (b) <math>\overline{\operatorname{Sp}}(E)=\overline{\operatorname{Sp}(E)}</math>, viz. <math>\overline{\operatorname{Sp}}(E)</math> is the closure of <math>\operatorname{Sp}(E)</math>, (c) <math>E^\perp=(\operatorname{Sp}(E))^\perp=(\overline{\operatorname{Sp}(E)})^\perp.</math> (So the usual way to find the closed linear span is to find the linear span first, and then the closure of that linear span.) ==References== * Rynne & Youngson (2001). ''Linear functional analysis'', Springer. ==See also== * [[Linear span]] {{DEFAULTSORT:Closed linear span}} [[Category:Abstract algebra]] [[Category:Linear algebra]] {{Linear algebra}}</text> </page> <page> <id>6537</id> <title>Closed proxy</title> <text>A '''closed proxy''' is a [[proxy server]] that is only accessible to specific individuals because it only allows users within its area connect to it and/or requires a username and password.<ref>[http://theproxyconnection.com/openproxy.html Information About Open Proxy Servers]</ref> ==See also== *[[Open proxy]] == References == {{Reflist}} {{Compu-network-stub}} [[Category:Computer network security]] [[Category:Proxy servers]]</text> </page> <page> <id>6549</id> <title>Clothing label</title> <text>'''Clothing label''' may refer to: *The clothing '''[[brand]]''' *The physical [[Label#Textile labeling|'''textile labeling''']] on garments {{disambig}} [[Category:Brands]] [[Category:Marketing]] [[Category:Regulatory compliance]] [[Category:Textiles]]</text> </page> <page> <id>6566</id> <title>Cloud testing</title> <text>{{Cleanup|date=April 2010}} {{COI|date=April 2010}} {{Verifiability|date=April 2010}} '''Cloud testing''' is a form of [[software testing]] in which [[web applications]] that use [[cloud computing]] environments (a "cloud") seek to simulate real-world user traffic as a means of [[load testing]] and [[stress testing]] web sites. The ability and cost to simulate [[web traffic]] for [[software testing]] purposes has been an inhibitor to overall web reliability. The low cost and accessibility of the cloud's extremely large computing resources provides the ability to replicate real world usage of these systems by geographically distributed users, executing wide varieties of user scenarios, at scales previously unattainable in traditional testing environments. Companies simulate real world Web users by using cloud testing services that are provided by cloud service vendors such as [[SOASTA]], [[HP]] and [[Keynote Systems]]. Once user scenarios are developed and the test is designed, these service providers leverage cloud servers (provided by cloud platform vendors such as [[Amazon.com]], [[Google]], [[Rackspace]], etc.) to generate [[Web traffic]] that originates from around the world. Once the test is complete, the cloud service providers deliver results and analytics back to corporate IT professionals through real-time dashboards for a complete analysis of how their applications and networks will perform during peak volumes. Testing in the cloud is often discussed in the context of performance or load tests against cloud-based applications. However, all types of software application tests, be they performance, functionality, usability, etc., can be regarded as cloud testing if the testing entity targets an application residing on a third-party computing platform, and accesses that platform via the Internet. Cloud computing itself is often referred to as the marriage of [[Software as a Service]] (Saas) and [[Utility Computing]]. In regard to test execution, the software offered as a service may be a transaction generator and the cloud provider's infrastructure software, or may just be the latter. Leading cloud computing service providers include, among others, Amazon, 3-terra, Skytap, HP and SOASTA. Some keys to successful testing in the cloud include # understanding a platform provider's elasticity model/dynamic configuration method, # staying abreast of the provider's evolving monitoring services and [[Service Level Agreement]]s (SLAs), # potentially engaging the service provider as an on-going operations partner if producing [[commercial off-the-shelf]] (COTS) software, and # being willing to be used as a case study by the cloud service provider. The latter may lead to cost reductions. An evolving cloud testing community is forming under the auspices of the Software Testing & Quality Assurance group hosted by LinkedIn. Testing professionals openly share their experiences and exchange ideas related to cloud testing in order to enhance one anothers' proficiencies. ==External links== *[http://www.ddj.com/web-development/213000642 Computing in the Clouds] *[http://www.infoworld.com/article/09/01/28/cloud-computing-shapes-up-as-big-trend-for-2009_1.html Cloud computing shapes up as big trend for 2009] *[http://www.cloud-intelligence.com/sites/www.cloud-intelligence.com/files/Cloud%20Testing%20White%20Paper_0.pdf Cloud testing White Paper] * [http://www.hp.com/go/loadrunnercloud HP LoadRunner in the Cloud] *[https://www.cloudsleuth.net/web/guest/applications CloudSleuth Testing Tools] {{Portal|Software Testing}} {{DEFAULTSORT:Cloud Testing}} [[Category:Cloud computing]] [[Category:Software testing]]</text> </page> <page> <id>6570</id> <title>Cloudvpn</title> <text>{{notability|date=September 2009}} {{unreferenced|date=September 2009}} {{Infobox software | name = cloudvpn | logo = | screenshot = | caption = secure mesh networking tool | author = Mirek Kratochv√≠l | developer = | released = December 2008 | latest release version = 1.99.8 | latest release date = {{release date and age|2009|08|03}} | latest preview version = | latest preview date = | operating system = | platform = [[Cross-platform]] | language = | genre = [[virtual private network|VPN]] | license = [[GNU General Public License|GNU GPLv3]] | website = [http://dev.e-x-a.org/projects/cloudvpn/wiki/] }} Cloudvpn is an [[Open source|open-source]], [[Mesh networking|mesh-networking]] capable communication tool. It differentiates itself from other [[Virtual Private Network|VPN]]s by serving as a generic transport layer for any [[Packet (information technology)|packet]]-based data traffic, which can include traditional VPN purpose, but is easily extensible to any other kind of traffic. ==Capabilities== Cloudvpn tries to establish a decentralized transport network, routing through which is done using an optimized [[Distance-vector routing protocol|DVR]]-like algorithm. This gives the "cloud" of nodes a great potential, allowing simple failover of connections and traffic route optimalization. All transported traffic is [[Encryption|encrypted]], giving the peers some security against [[eavesdropping]] and related attacks. Communication peers, on the other side, aren't secured from attacks from themselves - one node can usually see and read all traffic coming through it, if the traffic isn't secured or encrypted on some higher level. Peers are therefore needed to trust each other. Cloudvpn is designed as a set of tools. Every node runs a 'cloud' program, which provides an encrypted connection and mesh routing capabilities, and then attaches various other 'mesh clients', that communicate using the pre-created network. For example, 'ether' tool creates a virtual [[Ethernet]] interface and routes its traffic through the mesh, giving the transport Ethernet-VPN capabilities. Other mesh clients are yet in development, [[WASTE]]-like features are planned. ==External links== * [http://e-x-a.org/?view=cloudvpn-howto how-to document] {{VPN}} [[Category:Computer network security]] [[Category:Tunneling protocols]] 