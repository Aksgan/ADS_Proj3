Unified Process]] [[pl:Rational Unified Process]] [[pt:IBM Rational Unified Process]] [[ru:Rational Unified Process]] [[sk:Rational Unified Process]] [[fi:RUP]] [[sv:Rational Unified Process]] [[uk:Rational Unified Process]] [[zh:Rational统一过程]]</text> </page> <page> <id>17350</id> <title>IBM Redbooks</title> <text>{{unreferenced|date=June 2009}} [[IBM]] '''Redbooks''' are technical books developed and published by IBM's International Technical Support Organization, the ITSO. IBM Redbooks are ITSO's core product. They typically provide positioning and value guidance, installation and implementation experiences, typical [[solution]] [[scenario]]s, and step-by-step "how-to" guidelines. They often include sample code and other support materials that are also available as downloads. They are available as hardcopy books, in IBM Redbooks [[CD-ROM]] collections, and on the [[Internet]]. IBM say that they have approximately 500,000 downloads per month.<ref>[http://www.redbooks.ibm.com/Redbooks.nsf/pages/history IBM Redbooks, History]</ref> Redbooks are created through the ITSO residency process and are generally published 60-90 days after residency completion. Draft Redbooks are redbooks under development. The objective of making the draft versions available is to speed up access to books that are not yet published. Usually they are technically complete but are less polished and have not undergone the formal review that takes place for completed IBM Redbooks. [[Redpapers]] are shorter technical documents that are only Web-published. They can be the result of ITSO residencies and may also be contributed from other sources. They reflect working experiences on the specific topic. ==References== {{Reflist}} ==External links== * [http://www.redbooks.ibm.com Redbooks Home] ** [http://www.redbooks.ibm.com/Redbooks.nsf/pages/residencies Residency Process] [[Category:IBM|Redbooks]] [[de:IBM Redbooks]]</text> </page> <page> <id>17362</id> <title>IBM System/360 architecture</title> <text>{{Merge to |IBM System/360 |discuss=Talk:IBM System/360#Merge IBM System/360 architecture into IBM System/360 |date=November 2010}} {{Multiple issues |lead rewrite=December 2010 |citations missing=December 2010 }} {{condense|date=December 2010}} {{Infobox CPU architecture |name = System/360 |designer = [[IBM]] |bits = 32 |introduced = 1964 |design = CISC |type = Register-Register/Register-Memory/Memory-Memory |encoding = Variable <small>(2, 4 or 6 bytes long)</small> |branching = Condition code, indexing, counting |endianness = Big |extensions = |open = Yes |page size = N/A, but see [[IBM System/360 Model 67]] |gpr = 16 32-bit |fpr = 4 64-bit }} {{IBM mainframes}} '''IBM System/360 architecture''' While this is currently a stand-alone article, the intent is to eventually merge it into [[IBM System/360]] Some models had features that were not part of the S/360 architecture but became part of the S/370 architecture. However, the Control Register mapping, PSW format and storage assignments were not the same as in the S/370. Some deviations from the architecture were notable because they served as prototypes for features of the [[IBM System/370|S/370]] architecture or because of their importance in scientific computing; these are included in some of the reference charts with footnotes that they are not part of the architecture. Any more detailed explanations should go in the articles on the respective models or on the S/370, not here. <!-- ==Architecture== --> IBM documented the processor<ref name=A22-6821/><ref name=A22-6821-7/> and I/O<ref name=A22-6843/> architecture of the S/360 in manuals that apply to all models of the System/360 with the exception of the 360/20 and the 360/44. The 360/20 is radically different and should not be considered to be a S/360. The 360/44 is missing certain instructions, but the ''Commercial Instruction Feature'' allows the simulation of the missing instructions in hidden memory, and thereby the use of standard S/360 operating systems and applications. Some models have features beyond those specified in the architecture, e.g., emulation instructions, paging. Finally, some models have minor deviations from the architecture.{{#tag:ref|The multisystem feature on the 360/65<ref name=A22-6884/> modifies the behavior of the direct control feature and of the Set System Mask (SSM) instruction. The 360/67-2<ref name=GA27-2719/> had similar, but incompatible, changes.|group=NB|name=M65MP}}<ref group=NB name=multimpr/>. The architecture of the System/360 is independent of its implementation on any specific processor, and includes the following elements. ===Memory=== Memory (''storage'') in the S/360 is addressed in terms of 8-bit bytes. Various instructions operate on larger units called ''halfword'' (2 bytes), ''fullword'' (4 bytes), ''doubleword'' (8 bytes), ''quad word'' (16 bytes) and 2048 byte storage block, specifying the leftmost (lowest address) of the unit. Within a halfword, fullword, doubleword or quadword, low numbered bytes are more significant than high numbered bytes; this is sometimes referred to as [[Endianness#Big-endian#with 8-bit atomic element size and 1-byte (octet) address increment|big-endian]]. Many uses for these units require aligning them on the corresponding boundaries. Within this article the unqualified term ''word'' refers to a ''fullword''. The architecture of System/360 provided for up to 2<sup>24</sup> = {{val|16777216}} bytes of memory; however, the 360/67 extended the architecture and allowed 2<sup>32</sup> = {{val|4294967296}}<ref group=NB>Twice the size of the later System/370</ref> bytes of virtual memory. ===Addressing=== The S/360 uses truncated addressing. That means that instructions do not contain complete addresses, but rather specify base address and offsets past those base addresses. In the case of the S/360 the base address is contained in one of 15 general registers. In some instructions, e.g., shifts, the same computations are performed for 32-bit quantities that are not addresses. ===Data formats=== The S/360 architecture defines formats for characters, integers, decimal integers and hexadecimal floating point numbers. Character and integer instructions are mandatory, but decimal and floating point instructions are part of the Decimal arithmetic and Floating-point arithmetic features. ====Character data==== Characters are stored as 8-bit bytes. Character strings are from 1 to 256 consecutive characters. ====Integer data==== Integers are stored as two's complement binary halfword or fullword values. ====Packed decimal data==== Packed decimal numbers are stored as 1-16 8-bit bytes containing an odd number of decimal digits followed by a 4-bit sign. Sign values of hexadecimal A, C, E and F are positive and sign values of hexadecimal B and D are negative. Digit values of hexadecimal A-F and sign values of 0-9 are invalid, but the PACK and UNPK instructions do not test for validity. ====Zoned decimal data==== Zoned decimal numbers are stored as 1-16 8-bit bytes, each containing a zone in bits 0-3 and a digit in bits 4-7. The zone of the rightmost byte is interpreted as a sign. ====Floating point data==== On older models, floating-point numbers are stored only as fullword or doubleword values. On the 360/85<ref name=A22-6916/> and 360/195<ref name=A22-6943/> there are also extended precision floating 