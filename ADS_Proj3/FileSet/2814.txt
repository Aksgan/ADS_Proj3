|- | 0x05 || 1 || {| class="wikitable" |- | colspan="8" style="text-align: center;" | h<sub>7-0</sub> | rowspan="2" | head {{Ref|c|[c]}} |- | x | x | x | x | x | x | x | x |} |- | 0x06 || 1 || {| class="wikitable" |- | colspan="2" style="text-align: center;" | c<sub>9-8</sub> | colspan="6" style="text-align: center;" | s<sub>5–0</sub> | rowspan="2" | sector is in bits 5–0, bits 9–8 of cylinder are in bits 7–6 {{Ref|c|[c]}} |- | x | x | x | x | x | x | x | x |} |- | 0x07 || 1 || {| class="wikitable" |- | colspan="8" style="text-align: center;" | c<sub>7-0</sub> | rowspan="2" | bits 7–0 of cylinder {{Ref|d|[d]}} |- | x | x | x | x | x | x | x | x |} |- | 0x08 || 4 || [[Logical block addressing|LBA]] of first absolute sector in the partition {{Ref|e|[e]}} |- | 0x0C || 4 || Number of sectors in partition, in little-endian format {{Ref|e|[e]}} |- | colspan="3"| '''Notes''': {{note|a}}'''a''' Formally, status values other than <code>0x00</code> and <code>0x80</code> are ''undefined''. {{-}} {{note|b}}'''b''' ''Starting Sector'' fields are limited to 1024 cylinders, 255 heads, and 63 sectors; {{Citation needed|date=November 2010}} ''Ending Sector'' fields have the same limitations.{{-}} {{note|c}}'''c''' The range for sector is 1 through 63; the range for cylinder is 0 through 1023; the range for head is 0 through 254 inclusive. {{Citation needed|date=November 2010}} {{-}} {{note|d}}'''d''' The 10-bit cylinder value is split into two bytes. The value can be reassembled using this formula: cylinder = ((byte[2] & 0xc0) << 2) | byte[3] {{-}} {{note|e}}'''e''' Used by OSes only in certain circumstances; in such cases the CHS addresses are ignored.<ref name=lbablocks>[Microsoft (2000). ''Microsoft Windows 2000 Server Operations Guide'', Microsoft Press. pp. 18.]</ref> |} The MBR is not located in a partition, it is located at a main boot record area in front of (with a lower LBA sector number than) the first partition. In cases where the disk has a [[interrupt vector|BIOS overlay]] or [[boot manager]] installed, the partition table may be moved to some other physical location on the drive; e.g., [[Disk Manager|Ontrack Disk Manager]] often places a copy of the original MBR contents in the second sector ("<code>sector 1</code>") then ''hides itself'' from any subsequently booted OS or application, so the MBR copy in sector 1 is treated as if it were still residing in the first sector. On all [[IBM PC]], [[PC compatible]] or any other [[Endianness|little-endian]] computers, [[hexadecimal]] numbers of two or more bytes are always stored on media or in memory in reverse order (for more efficient CPU processing). Thus, the MBR signature, hex number 0xAA55 (or AA55h), will appear in a [[disk editor]] as the sequence: <code>55 AA</code>. When a data storage device has been partitioned with the MBR partition table scheme (i.e., the conventional [[IBM PC]] partitioning scheme), the master boot record contains the primary partition entries in its partition table. The partition table may also contain entries for other, secondary partitions which are stored in [[extended boot record]]s (EBRs), [[BSD disklabel]]s, and [[Logical Disk Manager]] metadata partitions that are described by those primary entries.<ref>{{cite book|title=The Multi-Boot Configuration Handbook|author=Roderick W. Smith|pages=260&ndash;261|year=2000|publisher=Que Publishing|isbn=0789722836}}</ref> By convention, there are exactly four primary partition table entries in the MBR partition table scheme, although some DOS operating systems did extend this to five (PTS-DOS)<ref>{{cite web|url=http://www.win.tue.nl/~aeb/partitions/partition_types-2.html|title=Properties of partition tables|work=Partition types|author=Andries Brouwer}}. PTS-DOS uses "a special 5th partition entry in front of the other four entries in the MBR and corresponding AAP-aware MBR bootstrap code." (Brouwer).</ref> or even eight (AST or NEC DOS)<ref>Brouwer, ibid. Some OEM systems, such as AST DOS (type '''14'''h) and NEC DOS (type '''24'''h) had 8 instead of 4 partition entries in their MBR sectors.</ref><ref>{{cite web|url=http://mirror.href.com/thestarman/asm/mbr/DOS33MBR.htm|title=Notes on the Differences in one OEM version of the DOS 3.30 MBR|work=Master Boot Records|author=Daniel B. Sedory}} Shows an 8-entry partition table and where its boot code differs from MS-DOS 3.30.</ref> entries. Both the partition length and partition start address are stored as 32-bit quantities. Because the sector size is 512 (2<sup>9</sup>) bytes, this implies that either the maximum size of a partition or the maximum start address (both in bytes) cannot exceed 2.19 [[TB]] or 2 [[TiB]]−512 bytes (2,199,023,255,040 bytes or 4,294,967,295 (2<sup>32</sup>−1) sectors × 512 (2<sup>9</sup>) bytes per sector). Alleviating this capacity limitation is one of the prime motivations for the development of the [[GUID Partition Table|GUID partition table]] (GPT). Sector indices have always begun with a 1, not a zero, and due to an early error in MS-DOS, the heads are generally limited to 255{{Citation needed|date=November 2010}} instead of 256. When a CHS address is too large to fit into these fields, the [[tuple]] (1023, 254, 63) is used, which is 0xfeffff. (If the situation involves a "protective" MBR on a disk with a [[GUID Partition Table|GUID partition table]], Intel's [[Extensible Firmware Interface]] specification requires that the [[tuple]] (1023, 255, 63) be used, which is 0xffffff.) The 10-bit cylinder value is recorded within two bytes in order to facilitate making calls to the original/legacy [[INT 13]] BIOS disk access routines, where 16 bits were divided into sector and cylinder parts, and not on byte boundaries. {{Citation needed|date=November 2010}} Where a data storage device has been partitioned with the GPT scheme, the master boot record will still contain a partition table, but its only purpose is to indicate the existence of the GPT and to prevent utility programs which understand only the MBR partition table scheme from creating any partitions in what they would otherwise see as free space on the disk, thereby accidentally erasing the GUID table. ==System bootstrapping == The ''Status'' fields in an non-extended partition table record are used by the embedded bootstrap code within the MBR to determine which partition is bootable (it is referred to as the ''active'' partition, and there can be only one active/bootable partition within the MBR). The status fields in an extended partition table record may also be used by boot manager programs to determine which partitions are bootable, 