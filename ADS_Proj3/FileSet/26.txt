F800:7FFF, pointing to the physical addresses 0x000F8000 - 0x000FFFFF) as well as the I/O data (e.g. keyboard buffer) that was located in the first memory segment (with addresses F800:8000 to F800:FFFF pointing to the physical addresses 0x00000000 to 0x00007FFF).{{Citation needed|date=December 2010}} When [[IBM]] designed the [[IBM PC AT]] machine, they decided to use the new higher-performance [[Intel 80286]] microprocessor. The 80286 could address up to 16 [[Mebibyte|MiB]] of system memory, thus removing the ability for memory addresses to wrap around: Since the required address line now existed, the combination F800:8000 would no longer point to the physical address 0x0000000 but the correct address 0x00100000. As a result some DOS programs would no longer work. In order to remain compatible with these programs, IBM decided to fix the problem themselves, on the [[motherboard]]. This was accomplished by inserting a [[logic gate]] on the A20 line between the processor and system bus, which logically got named ''Gate-A20''. Gate-A20 can be enabled or disabled by software to allow or prevent the address bus from receiving a signal from A20. It is set to non-passing for the execution of older programs which rely on the wrap-around. At boot time, the [[BIOS]] first enables Gate-A20 when counting and testing all of the system's memory, and disables it before transferring control to the operating system. Originally, the logic gate was a gate connected to the [[Intel 8042]] keyboard controller. Controlling it was a relatively slow process. Other methods have since been added to allow for more efficient multitasking of programs which require this wrap-around with programs that access all of the system's memory. There was at first a variety of methods, but eventually the industry settled on the PS/2 method of using a bit in port 92h to control the A20 line. Disconnecting A20 would not wrap '''all''' memory accesses above 1 MiB, just those in the 1 MiB-2 MiB, 3 MiB-4 MiB, 5 MiB-6 MiB, etc. ranges. [[Real mode]] software only cared about the area slightly above 1 MiB, so Gate-A20 was enough. Enabling the Gate-A20 line is one of the first steps a [[protected mode]] [[x86]] [[operating system]] does in the bootup process, often before control has been passed onto the kernel from the [[booting|bootstrap]] (in the case of Linux, for example). [[Virtual 8086 mode]], introduced with the [[Intel 80386]], allows the A20 wrap-around to be simulated by using the [[virtual memory]] facilities of the processor: physical memory may be mapped to multiple virtual addresses thus allowing the memory mapped at first mebibyte of virtual memory may be mapped again in the second mebibyte of virtual memory. The operating system may intercept changes to Gate A20 and make corresponding changes to the virtual memory address space, which also makes irrelevant the efficiency of Gate-A20 toggling. ==A20 handler== The '''A20 handler''' is [[IBM PC]] [[memory manager]] software controlling access to the [[high memory area]] (HMA). [[Extended memory]] managers usually provide this functionality. A20 handlers are named after the 21st address line of the microprocessor, the A20 line. In MS-DOS, [[high memory area]] managers, such as [[HIMEM.SYS]] has the "extra task" of managing A20. [[HIMEM.SYS]] provided an [[API]] for opening/closing A20. DOS itself could utilize the area for some of its storage needs, thereby freeing up more conventional memory for programs. This functionality was enabled by the "DOS=HIGH" directive in the [[CONFIG.SYS]] configuration file. ==A20 gate== Controlling the A20 line was an important feature at one stage in the growth of the IBM PC architecture, as it added access to an additional 65520 bytes (64 KiB - 16 B) of memory in [[real mode]] without dramatic software changes. In what was arguably a "hack", the A20 gate was originally part of the keyboard controller on the motherboard, which could open/close it depending on what behaviour was desired. <ref> Tom Shanley, Don Anderson, John Swindle, '' ISA system architecture'', Addison-Wesley, 1995, ISBN 0-201-40996-8, pp.79-80 </ref> The A20 gate is still present on all modern PC's and the gate is initially closed right after boot. Modern [[protected mode]] operating systems typically open the A20 gate early during the boot process and never close it again. These operating systems do not have the compatibility reasons for keeping it closed and they gain access to the full range of physical addresses available by opening it. The [[Intel 80486]] and [[Pentium]] added a special pin named ''A20M#'', which when asserted low forces bit 20 of the physical address to be zero for all on-chip cache or external memory accesses. This enhancement is mostly significant for mainboard manufacturers, because it makes parts of the external Gate A20 circuitry unnecessary. Software still needs to manipulate the gate and must still deal with external peripherals (the [[chipset]]) for that. <ref> Tom Shanley,''Protected mode software architecture'', Taylor & Francis, 1996 ,ISBN 0-201-55447-X, page 60 </ref> {{FOLDOC}} [[Category:X86 memory management]] [[Category:Memory expansion]] ==See also== * [[Computer storage]] * [[High memory area]] (HMA) ==References== <references/> ==External links== *[http://www.win.tue.nl/~aeb/linux/kbd/A20.html A20 - a pain from the past] [[Category:X86 architecture]] [[Category:IBM PC compatibles]] [[de:A20-Gate]] [[it:Linea A20]] [[nl:A20 (informatica)]] [[zh:A20总线]]</text> </page> <page> <id>228</id> <title>A2100</title> <text>The '''A2100''' is a [[communications satellite]] [[spacecraft]] made by [[Lockheed Martin Space Systems]] for [[telecommunications]] in [[geosynchronous orbit]]. The [[Lockheed Martin]] A2100 geosynchronous spacecraft series is designed for a variety of telecommunications needs including [[Ka-band]] [[broadband]] and [[broadcast]] services, fixed satellite services in [[C-band]] and Ku-band payload configurations, high-power direct broadcast services using the Ku-band [[frequency spectrum]], and mobile satellite services using [[UHF]], [[L-band]] and [[S-band]] payloads.<ref>[http://space.skyrocket.de/doc_sat/lockheed_a2100.htm skyrocket.de "Lockheed Martin: A2100"]</ref> The A2100 satellite system was developed by a [[Skunk Works]] team at the Astro Space East Windsor, New Jersey facility. A group of design Architects, including Brian Stewart, John Close, Pete Wise and Keith Davies delivered a flexible common bus with substantially fewer components, lower spacecraft weight, and reduced customer delivery time. Jim Wilson led a team from GE's corporate r&d lab located in Niskayuna, NY, which helped with several technology underpinnings which advanced the A2100 design. The first A2100 satellite, AMC-1, was launched September 8, 