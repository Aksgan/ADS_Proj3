{{cite conference | author = [[János Pach|Pach, János]]; Thiele, Torsten; Tóth, Géza | title = Three-dimensional grid drawings of graphs | date = 1998 | booktitle = [[International Symposium on Graph Drawing|Graph Drawing, 5th Int. Symp., GD '97]] | publisher = Lecture Notes in Computer Science, no. 1353, Springer-Verlag | pages = 47&ndash;51 |doi =10.1007/3-540-63938-1_49}} * {{cite journal | author = Attila Pór and David R. Wood | title = No-three-in-line-in-3D | journal = Algorithmica | year = 2007 | doi = 10.1007/s00453-006-0158-9 | volume = 47 | pages = 481}} * {{cite journal | author = Roth, K. F. | title = On a problem of Heilbronn | journal = Journal of the London Mathematical Society | volume = 26 | year = 1951 | pages = 198&ndash;204 | doi = 10.1112/jlms/s1-26.3.198}} * {{cite journal | author = David R. Wood | title = Grid drawings of ''k''-colourable graphs | journal = Computational Geometry | volume = 30 | issue = 1 | year = 2005 | pages = 25&ndash;28 | doi = 10.1016/j.comgeo.2004.06.001}} ==External links== * {{cite web | author = Flammenkamp, Achim | url = http://wwwhomes.uni-bielefeld.de/achim/no3in/readme.html | title = The No-Three-in-Line Problem}} * {{mathworld | title = No-Three-in-a-Line-Problem | urlname = No-Three-in-a-Line-Problem}} [[Category:Combinatorics]] [[Category:Lattice points]] [[Category:Conjectures]] [[Category:Mathematical problems]] [[th:ปัญหาไม่มีจุดสามจุดเรียงกัน]]</text> </page> <page> <id>26501</id> <title>Node graph architecture</title> <text>{{New unreviewed article|source=ArticleWizard|date=April 2010}} '''Node graph architecture''' is a type of software design which builds around modular [[Node (graph theory)|node]] components which can be connected together to form a [[Graph (mathematics)|graph]]. Often the software's underlying node graph architecture is also exposed to the end user as a 2 dimensional visualization of the node graph. The node graph architecture is popular in the film and computer games industry. There are often many different node types participating in the node graph. For example in the [http://www.thefoundry.co.uk/dl_file.aspx?ui=CDFE2804-D087-4AFF-A942-1337A426BDB6 Nuke Manual] they list hundreds of nodes. Each node type performs one specific task. For example Nuke's Merge node produces an output image in which a number of input images have been layered. By connecting many different node types together complex image effects can be produced. The node graph architecture often allows grouping of nodes inside other group nodes. This hides complexity inside of the group nodes, and limits their coupling with other nodes outside the group. This leads to a hierarchy where smaller graphs are embedded in group nodes. In Nuke the group node is simply called the Group node. In the paper [http://arxiv.org/abs/cond-mat/0307278v2 Hierarchical Small Worlds in Software Architecture] they argue that most large software systems are built in a modular and hierarchical fashion, and they use node graphs to analyze large software systems. In fact a large number of software analysis papers often use node graphs to analyze large software systems suggesting that node graphs are good models of the internal structure and operation of the software. Many commercial and non-commercial software systems allow users to visualize and interact with internal components via the node graph. Below are a number of node graph based software applications from the film and games industry. ==Commercial Applications== [[Nuke (software)|Nuke]] is a compositing application for film made by The Foundry. The nodes in its graph can be connected together to produce complex 2d image processing effects. * [http://www.youtube.com/watch?v=_PT-AwmgYCk Nuke Node Graph Basics] * [http://www.thefoundry.co.uk/dl_file.aspx?ui=CDFE2804-D087-4AFF-A942-1337A426BDB6 Nuke Manual] [[Shake (software)|Shake]] is a discontinued compositing application for film made by [[Apple inc|Apple]]. The nodes in its graph can be connected together to produce complex 2d image processing effects. * [http://www.appleinsider.com/images/shake351.gif Shake Screenshot] * [http://manuals.info.apple.com/en/Shake_4_User_Manual.pdf Shake Manual] [[Autodesk Maya|Maya]] is a modeling, animation, and rendering application made by [[Autodesk]]. The nodes in its graph are more general and produce 3d geometry and various other attributes. * [http://www.djx.com.au/blog/wp-content/images/layeringShadersInMR/layersHyperGraph.jpg Maya Screenshot] * [http://download.autodesk.com/us/maya/2010help/index.html?url=Dependency_graph_plugins_Dependency_Graph_DG_nodes.htm,topicNumber=d0e641346 Maya Nodes] [[Houdini (software)|Houdini]] is a procedural modelling, animation, and rendering application made by Side Effects Software. The nodes in its graph produce procedural geometry. Side Effects Software refers to their node graphs as networks. * [http://www.youtube.com/watch?v=o4hMrmg9ZkA Houdini Nodes and Networks] * [http://www.google.com/url?sa=t&source=web&ct=res&cd=7&ved=0CBgQFjAG&url=http%3A%2F%2Fwww.foro3d.com%2Fattachments%2F102154d1241624468-videotutoriales-houdini-houdini-nodes-quickref.pdf&rct=j&q=houdini+nodes&ei=lajLS_W1A4fSsgPkuJiaAw&usg=AFQjCNHdjTDff1mTLrSMOtLIX6Hf2ihUDg Houdini Nodes] [[Valve Software|Valve]]'s Source SDK allows players to create custom maps for all of their games. The nodes in its graphs are used in AI path planning and also in sending signals between game entities. * [http://developer.valvesoftware.com/wiki/Nodegraph Valve Nodes for Path Planning] * [http://developer.valvesoftware.com/wiki/Inputs_and_Outputs Entity Inputs and Outputs] ==Open Source Applications== Blender is a modelling, animation, compositing, and rendering application. The nodes in its graph produce images, 3d geometry, and various other attriutes. * [http://www.blender.org/index.php?eID=tx_cms_showpic&file=uploads%2Fpics%2FMolecule.png&width=800m&height=600m&bodyTag=%3Cbody%20style%3D%22margin%3A0%3B%20background%3A%23fff%3B%22%3E&wrap=%3Ca%20href%3D%22javascript%3Aclose%28%29%3B%22%3E%20|%20%3C%2Fa%3E&md5=cc734902d6a6c27c0dd1dd66a11bdc86 Blender Node Graph Screen Shot] * [http://www.blender.org/development/release-logs/blender-242/generic-node-system-for-blender/ Blender Node System] NodeBox is procedural image creation application. The nodes in its graph produce vector based images. * [http://beta.nodebox.net NodeBox Screen Shot] * [http://beta.nodebox.net/reference/nodes/corevector NodeBox Node Reference] ==In-House Studio Applications== Many large movie studios are rumored to be using the node graph architecture to design many of their in-house software tools. Sony Pictures Imageworks uses an in-house compositing and lighting tool called Katana. In a recent press release (November 2009) it was announced that the Sony Pictures Imageworks' Katana software would be integrated into The Foundry's Nuke software. * [http://www.thefoundry.co.uk/dl_file.aspx?ui=F1843300-44FD-44AB-9598-71F88D77F005 Katana and Nuke FAQ] * [http://www.thefoundry.co.uk/dl_file.aspx?ui=B809A76B-40BC-495E-B45F-B2F8EADFA5B6 Katana and Nuke Press Release] ==References== * [http://arxiv.org/abs/cond-mat/0307278v2 Hierarchical Small Worlds in Software Architecture] * [http://www.cs.umd.edu/~basili/publications/proceedings/P114.pdf Metrics of Software Architecture Changes Based on Structural Distance] * [http://www.google.com/url?sa=t&source=web&ct=res&cd=5&ved=0CBcQFjAE&url=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fdownload%3Fdoi%3D10.1.1.108.9362%26rep%3Drep1%26type%3Dpdf&rct=j&q=node+graph+software+architecture&ei=PMDLS8DwDYaqtgP7jbnIAw&usg=AFQjCNHYhzyvs4NTnewR5UTxkeYfmQqeMQ Graph Grammars and Constraint Solving for Software Architecture Syles] {{DEFAULTSORT:Node Graph Architecture}} [[Category:Software architecture]]</text> </page> <page> <id>26511</id> <title>Noise reduction</title> <text>{{about||sound proofing|soundproofing|scientific aspects of noise reduction of machinery and products|noise control}} {{refimprove|date=March 2010}} '''Noise reduction''' is the process of removing [[noise]] from a [[signal (information theory)|signal]]. Noise reduction techniques are conceptually very similar regardless of the signal being processed, however [[A priori and a posteriori (philosophy)|a priori]] knowledge of the characteristics of an expected signal can mean the implementations of these techniques vary greatly depending on the type of signal. All recording devices, both [[analog electronics|analogue]] or [[digital]], have traits which make them susceptible to noise. Noise can be random or [[white noise]] with no coherence, or coherent noise introduced by the device's mechanism or processing [[algorithm]]s. In [[electronic circuit|electronic]] recording devices, a 