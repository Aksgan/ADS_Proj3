</td></tr></table></blockquote> The result is actually in η-long form, as can be easily seen by normalizing it at a different identity type: <blockquote><table><tr><td> - nbe (Arrow (Arrow (Basic "a", Basic "b"), Arrow (Basic "a", Basic "b"))) SKK; val it = lam ("v1",lam ("v2",app (var "v1",var "v2"))) : tm </td></tr></table></blockquote> == Correctness == {{Empty section|date=June 2008}} == Extensions == {{Empty section|date=June 2008}} == See also == * [[MINLOG]], a [[proof assistant]] that uses NBE as its rewrite engine. == References == {{reflist}} {{DEFAULTSORT:Normalisation By Evaluation}} [[Category:Lambda calculus]] [[Category:Programming language semantics]]</text> </page> <page> <id>26645</id> <title>Normalization property (abstract rewriting)</title> <text>{{Unreferenced|date=December 2009}} In [[mathematical logic]] and [[theoretical computer science]], a [[rewrite system]] has the '''strong normalization property''' (in short: the '''normalization property''') if every term is ''strongly normalizing''; that is, if every sequence of rewrites eventually terminates to a term in [[Normal form (term rewriting)|normal form]]. A rewrite system may also have the '''weak normalization property''', meaning that for every term, there exists at least one particular sequence of rewrites that eventually yields a normal form. == Lambda calculus == === Untyped lambda calculus === The ''pure'' untyped [[lambda calculus]] does not satisfy the strong normalization property, and not even the weak normalization property. Consider the term <math>\lambda x . x x x</math>. It has the following rewrite rule: For any term <math>t</math>, : <math>(\mathbf{\lambda} x . x x x) t \rightarrow t t t</math> But consider what happens when we apply <math>\lambda x . x x x</math> to itself: {| | <math>(\mathbf{\lambda} x . x x x) (\lambda x . x x x)</math> | <math> \rightarrow (\mathbf{\lambda} x . x x x) (\lambda x . x x x) (\lambda x . x x x)</math> |- | | <math> \rightarrow (\mathbf{\lambda} x . x x x) (\lambda x . x x x) (\lambda x . x x x) (\lambda x . x x x)</math> |- | | <math> \rightarrow (\mathbf{\lambda} x . x x x) (\lambda x . x x x) (\lambda x . x x x) (\lambda x . x x x) (\lambda x . x x x)</math> |- | | <math>\ldots\,</math> |} Therefore the term <math>(\lambda x . x x x) (\lambda x . x x x)</math> is not strongly normalizing. === Typed lambda calculus === Various systems of [[typed lambda calculus]] including the [[typed lambda calculus|simply typed lambda calculus]], [[Jean-Yves Girard]]'s [[System F]], and [[Thierry Coquand]]'s [[calculus of constructions]] are strongly normalizing. A lambda calculus system with the '''normalization property''' can be viewed as a programming language with the property that every program [[termination analysis|terminates]]. Although this is a very useful property, it has a drawback: a programming language with the normalization property cannot be [[turing completeness|Turing complete]]. That means that there are computable functions that cannot be defined in the simply typed lambda calculus (and similarly there are computable functions that cannot be computed in the calculus of constructions or System F). As an example, it is impossible to define a [[self-interpreter]] in any of the calculi cited above.<ref>Conor McBride (May 2003), [http://www.haskell.org/pipermail/haskell-cafe/2003-May/004343.html "on termination"] (posted to the Haskell-Cafe mailing list).</ref> ==See also== * [[Typed lambda calculus]] * [[Rewriting]] * [[Total functional programming]] * [[Barendregt&ndash;Geuvers&ndash;Klop conjecture]] {{DEFAULTSORT:Normalization Property (Lambda-Calculus)}} [[Category:Lambda calculus]] [[Category:Logic in computer science]] [[eo:Normaliga propraĵo (lambda-kalkulo)]] [[zh:规范化性质]] ==References== {{Reflist}}</text> </page> <page> <id>26657</id> <title>Norsk Data</title> <text>[[Image:ND-logo.png|thumb|The characteristic ND dotted logo used from 1973]]'''Norsk Data''' was a ([[minicomputer|mini-]])[[computer]] [[manufacturer]] located in [[Oslo]], [[Norway]]. Existing from 1967 to 1992, it had its most active period in the years from the early 1970s to the late 1980s. At the company's peak in 1987 it was the second largest company in Norway and employed over 4,500 people. Throughout its history Norsk Data produced a long string of extremely innovative systems, with a disproportionately large number of world firsts. Some examples of this are the [[NORD-1]], the first minicomputer to have memory paging as a standard option, and the first machine to have floating-point instructions standard, the [[NORD-5]], the world's first 32-bit minicomputer (beating the [[VAX]], often claimed the first, by 6 years) ==Historical overview== The origins of Norsk Data go back to the development of digital computers at the [[Norwegian Defense Research Establishment]] at [[Kjeller]], [[Norway]], where several early computers had been designed, such as the [[SAM]] and the [[SAM 2]], also known as the [[FLINK]]. The success of this program resulted in the founding of ''A/S Nordata - Norsk Data Elektronikk'' on August 8, 1967 by [[Lars Monrad Krohn]], [[Per Bjørge]] and [[Rolf Skår]]. The company became a significant supplier of minicomputers to many research projects, in particular to [[CERN]] in [[Geneva]], [[Switzerland]], where they were chosen to produce the computers for many projects, starting with their Nuclear Accelerator Project, Norsk Data's international breakthrough contract. The other market segments Norsk Data succeeded in were process control, Norwegian [[municipality|municipal administration]] [[data center]]s, newspapers, as well as parts of the educational, health, and university sector. For a period in 1987, Norsk Data was the second largest company by stock value in Norway, second only to [[Norsk Hydro]], and employed over 4,500 people. In March 1991, shortly after [[January Events]], Norsk Data donated the first computer to [[Lithuanian Institute of Mathematics and Informatics]]. This donation started the development of [[LITNET]] - Academic and Research Network in [[Lithuania]]. Later that year, the network connection lines, directly connecting [[Vilnius]] to [[Moscow]], were shut down. With the help of the hardware, again donated by Norsk Data, Lithuania was able to use its first [[Satellite Internet access|satellite-based internet connection]], which operated at 9,6 kbit/s. This was the first Lithuanian communications line, which was totally independent from former [[Soviet Union]].<ref> [http://www.litnet.lt/index.php?option=com_content&task=view&id=28&Itemid=16 http://www.litnet.lt/index.php?option=com_content&task=view&id=28&Itemid=16] (lithuanian) </ref> After a long period of exceptional success, the Norsk Data "empire" collapsed in the early 1990s, mostly due to not realizing the impact of the [[Personal Computer|PC]] revolution (as well as the growing competition from [[Unix|UNIX]]-based [[workstation]]s). Norsk Data technology was continued by [[Dolphin Interconnect Solutions|Dolphin]]. See more about Norsk Data [http://www.norsk-data.no here (Norwegian)]. Norsk Data was purchased by Telenor and went through several rebrands and relaunches. 