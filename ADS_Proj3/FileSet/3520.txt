* [http://www.contextures.com/xlfaqPivot.html Pivot Table FAQs by Contextures] * [http://www.crazybikes.com/mrcjava/servlet/CBB2E.R00180s Web-based pivot table example] [[Category:Microsoft Office]] [[Category:Spreadsheet software]] [[de:Pivot-Tabelle]] [[fr:Tableau crois√© dynamique]] [[it:Tabella pivot]] [[pl:Tabela przestawna]]</text> </page> <page> <id>29322</id> <title>PixelLight</title> <text>{{Infobox software | name = PixelLight | developer = Stefan Buschmann, Christian Ofenberg | latest_release_version = 0.9.4-R1 | latest_release_date = {{Start date and age|2010|12|23|br=yes}} | programming language = [[C++]] | operating_system = [[Cross-platform]]: [[Microsoft Windows]], [[Linux]] | genre = [[Application framework]] | license = [[GNU Lesser General Public License|LGPL]] | website = {{URL|http://www.pixellight.org}} }} [[File:PixelLight DungeonDemo 15.png|thumb|300px|Screenshot from the official PixelLight dungeon demo V1.1]] '''PixelLight''' is an [[open source]], cross-platform 3D application framework written in [[C++]]. It currently supports [[Microsoft Windows|Windows]] and [[Linux]]. PixelLight has a highly plugin driven architecture with plugins for many third-party middleware such as sound and physics engines, input devices etc. It has a modern deferred shader renderer and currently supports both [[OpenGL]] and [[OpenGL ES]]. == See also == {{Portal|Free software}} * [[Game engine]] ==External links== * {{official website|http://www.pixellight.org}} * [http://developer.pixellight.org/wiki/ PixelLight Engine Wiki at pixellight.org] {{Video game engines}} [[Category:3D Scenegraph APIs]] [[Category:Free 3D graphics software]] [[Category:Free software programmed in C++]]</text> </page> <page> <id>29333</id> <title>Pixlet</title> <text>{{Unreferenced|date=December 2009}} '''Pixlet''' is a [[video codec]] created by [[Apple Inc.|Apple]] and based on [[wavelet]]s, designed to enable viewing of full resolution, [[High-definition video|HD]] movies in real time at low [[DV]] data rates. According to Apple's claims, it allows for a 20-25:1 [[compression ratio]]. Similar to DV, it does not use [[interframe compression]], making it suitable for previewing in production and special effects studios. It is designed to be an editing codec. However, this makes it poorly suited for broadcast use, due to high bitrates. When it was introduced by [[Steve Jobs]] at [[Worldwide Developers Conference]] [[2003]], it was said that the codec was developed in cooperation with the animation company [[Pixar]]. A [[Power Macintosh]] with at least a 1 [[GHz]] [[PowerPC G4]] processor is required for real time playback of half resolution High-Definition Video (960x540). Pixlet, while part of the cross-platform [[QuickTime]], is only available on [[Apple Macintosh|Macs]] running [[Mac OS X v10.3]] or later. {{Compression formats}} [[Category:Video codecs]] [[Category:Wavelets]] [[Category:Apple Inc. software]] [[it:Pixlet]] [[ja:Pixlet]] [[yo:Pixlet]]</text> </page> <page> <id>29347</id> <title>Plain Old Java Object</title> <text>{{Unreferenced|date=November 2007}} In [[computing]] [[software]], '''''POJO''''' is an acronym for '''Plain Old Java Object'''. The name is used to emphasize that a given [[Object (computer science)|object]] is an ordinary Java Object, not a special object, and in particular not an [[Enterprise JavaBean]]. The term was coined by [[Martin Fowler]], Rebecca Parsons and Josh MacKenzie in September 2000: <blockquote> "We wondered why people were so against using regular objects in their systems and concluded that it was because simple objects lacked a fancy name. So we gave them one, and it's caught on very nicely."<ref>[http://www.martinfowler.com/bliki/POJO.html MF Bliki: POJO] from MartinFowler.com</ref> </blockquote> The term "POJO" is mainly used to denote a Java object which does not follow any of the major Java object models, conventions, or frameworks such as EJB. The term continues the pattern of older terms for technologies that do not use fancy new features, such as POTS ([[Plain Old Telephone Service]]) in [[telephony]], and PODS ([[Plain Old Data Structures]]) that are defined in [[C++]] but use only [[C (programming language)|C]] language features, and POD (Plain Old Documentation) in [[Perl]]. The equivalent to POJO on the [[.NET framework]] is [[Plain Old CLR Object]]. ==Contextual variations== The POJO phenomenon has most likely gained widespread acceptance because of the need for a common and easily understood term that contrasts with complicated object frameworks. A [[JavaBean]] is a POJO that is [[Serialization#Java|serializable]], has a no-argument [[Constructor (computer science)|constructor]], and allows access to properties using [[Mutator method|getter and setter methods]]. An [[Enterprise JavaBean]] is not a single class but an entire component model (though [[Enterprise JavaBean|EJB 3]] reduces the complexity of Enterprise JavaBeans). As designs using POJOs have become more commonly used, systems have arisen that give POJOs some of the functionality used in frameworks and more choice about which areas of functionality are actually needed. [[Hibernate (Java)|Hibernate]] and [[Spring Framework|Spring]] are examples. Ideally speaking, a POJO is a Java object not bound by any restriction other than those forced by the Java Language Specification. I.e., a POJO '''should not''' have to #Extend prespecified classes, as in<source lang="java">public class Foo extends javax.servlet.http.HttpServlet { ...</source> #Implement prespecified interfaces, as in<source lang="java">public class Bar implements javax.ejb.EntityBean { ...</source> #Contain prespecified annotations, as in<source lang="java">@javax.ejb.Entity public class Baz{ ...</source></li> However, due to technical difficulties and other reasons, many software products or frameworks described as POJO-compliant actually still require the use of prespecified annotations for features such as persistence to work properly. ==POJO generation projects== ; [http://prevayler.org Prevayler] : an open source [[System Prevalence|system prevalence]] layer that transparently persists POJOs. ; [https://sourceforge.net/projects/beanexaminer BeanExaminer] : framework to present any java objects in an interactive surface to browse and edit them. A generator is included to create the desired POJOs through a given db connection. ; [http://www.romaframework.org Roma Meta Framework] : DDD centric framework. The innovative holistic approach lets the designer/developer to view anything as a POJO: GUI, I18N, Persistence, etc. ; [http://sourceforge.net/projects/openxava OpenXava] : Framework to develop J2EE business applications rapidly and easily. It's based in business components defined with XML. Feature rich and flexible since it's used for years to create business applications. Generates POJO Hibernate EJB2 and EJB3 JPA ... ; [http://sourceforge.net/projects/plainxml PlainXML] : Generating POJO by DTD; XML-POJO mapping via Java5 annotations or DTD; XML manipulations using POJO without SAX/DOM; Preprocessing of XML documents using expression language; Binary XML; RMI friendly XML; Exporting to JSON; XML marshall/unmarshall ... ; [http://sourceforge.net/projects/patsystem PAT] : AOP (JBossAOP) persistence library (aspect library). Provides persistence layer with underlying Prevayler (1.02). Allows users to write their code without worrying about persistence code (POJO). Uses annotations. ; [http://sourceforge.net/projects/jor Java O/RM] : This is a Java Object Relational mapping tool that is very simple to use. It works with all major databases and requires only minimal coding effort. JOR strictly follows the POJO / POJI (Plain Old Java Objects / Plain 