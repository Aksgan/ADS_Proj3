pp.431–433. 1979.</ref> a critical foundation for [[Mahaney's theorem]]. ==Formal definition== A [[decision problem]] ''C'' is co-NP-complete if it is in [[co-NP]] and if every problem in co-NP is [[polynomial-time many-one reduction|polynomial-time many-one reducible]] to it. This means that for every Co-NP problem ''L'', there exists a polynomial time algorithm which can transform any instance of ''L'' into an instance of ''C'' with the same [[truth value]]. As a consequence, if we had a polynomial time algorithm for ''C'', we could solve all co-NP problems in polynomial time. ==Example== One simple example of a co-NP complete problem is [[Tautology (logic)|tautology]], the problem of determining whether a given [[Boolean algebra (logic)|Boolean]] formula is a tautology; that is, whether every possible assignment of true/false values to variables yields a true statement. This is closely related to the [[Boolean satisfiability problem]], which asks whether there exists ''at least one'' such assignment. ==References== <references /> {{ComplexityClasses}} [[Category:Complexity classes]] [[es:Co-NP-completo]] [[fr:Co-NP-complet]] [[ko:Co-NP-완전]] [[pl:Klasa Co-NPC]]</text> </page> <page> <id>6611</id> <title>Co-occurrence matrix</title> <text>A '''co-occurrence matrix''' or '''co-occurrence distribution''' (less often '''coöccurrence matrix''' or '''coöccurrence distribution''') is a [[matrix (mathematics)|matrix]] or [[Distribution (mathematics)|distribution]] that is defined over an [[Digital image|image]] to be the distribution of co-occurring values at a given offset. Mathematically, a co-occurrence matrix '''C''' is defined over an '''n x m''' image '''I''', parameterized by an offset '''(Δx,Δy)''', as: <math>C_{\Delta x, \Delta y}(i,j)=\sum_{p=1}^n\sum_{q=1}^m\begin{cases} 1, & \mbox{if }I(p,q)=i\mbox{ and }I(p+\Delta x,q+\Delta y)=j \\ 0, & \mbox{otherwise}\end{cases}</math> The 'value' of the image originally referred to the [[grayscale]] value of the specified [[pixel]]. The value could be anything, from a [[binary numeral system|binary]] on/off value to 32-bit color and beyond. Note that 32-bit color will yield a <math>2^{32} \times 2^{32}</math> co-occurrence matrix! Really any matrix or pair of matrices can be used to generate a co-occurrence matrix, though their main applicability has been in the measuring of [[Texture (computer graphics)|texture]] in images, so the typical definition, as above, assumes that the matrix is in fact an image. It is also possible to define the matrix across two different images. Such a matrix can then be used for [[color mapping]]. Note that the '''(Δx,Δy)''' parameterization makes the co-occurrence matrix sensitive to rotation. We choose one offset vector, so a rotation of the image not equal to 180 degrees will result in a different co-occurrence distribution for the same (rotated) image. This is rarely desirable in the applications co-occurrence matrices are used in, so the co-occurrence matrix is often formed using a set of offsets sweeping through 180 degrees (i.e. 0, 45, 90, and 135 degrees) at the same distance to achieve a degree of [[rotational invariance]]. ==Aliases== Co-occurrence matrices have been referred to as: :* GLCM (Gray-Level Co-occurrence Matrices) :* spatial dependence matrix ==Scripts== A [[Matlab]] function for calculating a co-occurrence matrix across two binary images (containing only values 0 and 1) with offsets of 0: <source lang="matlab"> function M=getCoMatrix(M1,M2) M = zeros(2); % 2x2 result matrix for binary image. [r,c] = size(M1); for i=1:r for j=1:c v1 = M1(i,j)+1; % Add one to binary image values to get Matlab indices. v2 = M2(i,j)+1; M(v1,v2) = M(v1,v2)+1; % Increment co-occurrence value. end end </source> ==Application to image analysis== Whether considering the intensity or [[grayscale]] values of the image or various dimensions of color, the co-occurrence matrix can measure the texture of the image. Because co-occurrence matrices are typically large and sparse, various metrics of the matrix are often taken to get a more useful set of features. Features generated using this technique are usually called [[Haralick features]], after [[R M Haralick]], attributed to his paper ''Textural features for image classification (1973)''. Texture measures like the co-occurrence matrix, [[wavelet transforms]], and [[model fitting]] have found application in medical image analysis in particular. ==References== * {{ cite journal | author = Robert M Haralick, K Shanmugam, Its'hak Dinstein | year = 1973 | title = Textural Features for Image Classification | journal = IEEE Transactions on Systems, Man, and Cybernetics | volume = SMC-3 | issue = 6 | pages = 610–621 }} ==External links== * [http://www.fp.ucalgary.ca/mhallbey/tutorial.htm A Grey Level Co-occurrence Matrix tutorial] * [http://reference.wolfram.com/mathematica/ref/ImageCooccurrence.html ImageCooccurrence function in ''Mathematica''] * [http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=11727&objectType=file MATLAB code for co-occurrence matrix calculation] [[Category:Image processing]] [[de:Grauwertematrix]] [[it:Matrice di co-occorrenza]]</text> </page> <page> <id>6612</id> <title>Co-occurrence networks</title> <text>'''[[Co-occurrence]] [[wikt:network|network]]s''' are generally used to provide a graphic visualization of potential relationships between people, organizations, concepts or other entities represented within written material. The generation and visualization of co-occurrence networks has become practical with the advent of electronically stored text amenable to [[text mining]]. By way of definition, co-occurrence networks are the collective interconnection of terms based on their paired presence within a specified unit of text. Networks are generated by connecting pairs of terms using a set of criteria defining co-occurrence. For example, terms A and B may be said to “co-occur” if they both appear in a particular article. Another article may contain terms B and C. Linking A to B and B to C creates a co-occurrence network of these three terms. Rules to define co-occurrence within a [[text corpus]] can be set according to desired criteria. For example, a more stringent criteria for co-occurrence may require a pair of terms to appear in the same sentence. Co-occurrence networks can be created for any given list of terms (any dictionary) in relation to any collection of texts (any text corpus). Co-occurring pairs of terms can be called “neighbors” and these often group into “neighborhoods” based on their interconnections. Individual terms may have several neighbors. Neighborhoods may connect to one another through at least one individual term or may remain unconnected. Individual terms are, within the context of text mining, symbolically represented as [[text string]]s. In the real world, the entity identified by a term normally has several symbolic representations. It is therefore useful to consider terms as being represented by one primary symbol and up to several [[synonymous]] alternative symbols. Occurrence of an individual term is established by searching for each known symbolic representations of the term. The process can be augmented 