Slnka]] [[sl:Sončev mrk]] [[so:Qorax madoobaad]] [[sr:Помрачење Сунца]] [[sh:Pomrčina Sunca]] [[su:Samagaha]] [[fi:Auringonpimennys]] [[sv:Solförmörkelse]] [[tl:Eklipse ng araw]] [[ta:சூரிய கிரகணம்]] [[tt:Кояш тотылу]] [[te:సూర్య గ్రహణం]] [[th:สุริยุปราคา]] [[tr:Güneş tutulması]] [[uk:Сонячне затемнення]] [[ur:سورج گرہن]] [[vec:Crisse solar]] [[vi:Nhật thực]] [[zh-classical:日食]] [[vls:Zunsverduusterienge]] [[yo:Ìsúlẹ̀ Òòrùn]] [[zh-yue:日食]] [[diq:Gırewtena Roci]] [[zh:日食]]</text> </page> <page> <id>35057</id> <title>SolidDB</title> <text>{{Lowercase}} '''IBM solidDB''' is a product family<ref>Product family home page - http://www-01.ibm.com/software/data/soliddb/</ref>, developed and sold by [[IBM]]. The product family includes two products built around an in-memory [[relational database management system]]. The first product is a stand-alone relational database management system entitled solidDB<ref>Link to solidDB product page http://www-01.ibm.com/software/data/soliddb/soliddb/</ref>. The second product, released to market in 2008<ref>Link to press release from IBM http://www-03.ibm.com/press/us/en/pressrelease/25803.wss</ref>, is a Universal Cache product, aptly entitled solidDB Universal Cache<ref>Link to solidDB Universal Cache product page http://www-01.ibm.com/software/data/soliddb/universal-cache/</ref>. == Technology == solidDB includes an [[in-memory database]] as well as a traditional [[database]], which both employ the same [[SQL]] interface, and a [[high availability]] option. solidDB presents a DB2-like instance to applications where developers can write commands that would normally have retrieved or written data to a database (thereby incurring some latency). The difference is, because solidDB reads and writes its data only to [[Random Access Memory]] within the transaction window, the speed of such operations is up to ten times faster. In solidDB version 7, tuning and optimization towards the [[POWER7|Power7]] architecture further enhances the capability of the product. Power7 applications have access to 8 terabytes of memory per core, and up to 2 petabytes of memory globally. In addition, Power7-hosted applications can operate at the speed of [[petaflops]]. == Customers == It is historically used as an [[embedded database]] in telecommunications equipment, network software, and similar systems.<ref>Monash, Curt. [http://www.dbms2.com/2007/12/21/ibm-acquires-soliddb/ "IBM acquires SolidDB to compete with Oracle TimesTen"] "DBMS2", 2007-12-21. Retrieved on June 12, 2008.</ref> Companies using solidDB include [[Alcatel-Lucent]], [[Cisco Systems]], [[EMC Corporation]], [[Hewlett-Packard]], [[Nokia]] and [[Siemens AG]]. == History == Solid was acquired by IBM in late 2007 [http://www-03.ibm.com/press/us/en/pressrelease/22921.wss]. It was a [[privately held company]] originally founded in [[Helsinki]], [[Finland]] in 1992. == Notes == {{Reflist}} ==External links== * [http://www-01.ibm.com/software/data/soliddb/ Home page for solidDB product family] {{DEFAULTSORT:Soliddb}} [[Category:Privately held companies of the United States]] {{database-software-stub}} [[ja:solidDB]]</text> </page> <page> <id>35079</id> <title>Solver</title> <text>{{For|the band|Solver (band)}} {{Unreferenced|date=September 2009}} A '''solver''' is a generic term indicating a piece of [[mathematical software]], possibly in the form of a stand-alone [[computer program]] or as a [[Library (computing)|software library]], that 'solves' a mathematical problem. A solver takes problem descriptions in some sort of generic form and calculate their solution. In a solver, the emphasis is on creating a program or library that can easily be applied to other problems of similar type. Types of problems with existing dedicated solvers include: * [[Linear equation|Linear]] and [[non-linear equation]]s, or [[System of linear equations|systems]] of such equations. In this case the "solver" is more appropriately called a [[root-finding algorithm]]. * Linear and non-linear [[Optimization (mathematics)|optimisation]] problems * Systems of [[ordinary differential equation]]s * Systems of [[differential algebraic equation]]s * Logic/[[Boolean satisfiability problem|satisfiability]] problems * [[Constraint satisfaction problem]]s * [[Shortest path problem]]s * [[Minimum spanning tree]] problems * [[Search algorithm]]s The [[General Problem Solver]] (''GPS'') is a particular computer program created in 1957 by Herbert Simon, J.C. Shaw, and Allen Newell intended to work as a universal problem solver, that theoretically can be used to solve every possible problem that can be formalized in a symbolic system, given the right input configuration. It was the first computer program which separated its knowledge of problems (in the form of [[problem domain|domain]] rules) from its strategy of how to solve problems (as a general search [[Software engine|engine]]). Solvers typically use an architecture similar to the GPS to decouple a problem's definition from the strategy used to solve it. While the strategy utilized by GPS was a general algorithm with the only goal of completeness, modern solvers tend to use a more specialized approach tailored to the specific problem class which the solver aims for. The advantage in this decoupling is that the solver doesn't depend on the details of any particular problem instance. For problems of a particular class (e.g., systems of [[non-linear equation]]s) there are usually a wide range of different algorithms available; sometimes a solver implements multiple algorithms, but sometimes just one. Normally, solvers just use numerical methods, although there are some solvers that are capable of performing some symbolic manipulation to find a solution. ==See also== * [[Mathematical software]] for other types of mathematical software. * [[Problem Solving Environment]]: a specialized software combining automated problem-solving methods with human-oriented tools for guiding the problem resolution. * [[Satisfiability Modulo Theories]] for solvers of logical formulas with respect to combinations of background theories expressed in classical first-order logic with equality. ==References== {{Reflist}} {{Expand section|date=September 2010}} {{DEFAULTSORT:Solver (Computer Science)}} [[Category:Numerical software]] [[Category:Formal methods tools]] {{Science-software-stub}} [[pl:Solver]] [[ru:Решатель]]</text> </page> <page> <id>35081</id> <title>Soma File</title> <text>{{notability|date=October 2009}} {{refimprove|date=October 2009}} {{orphan|date=October 2009}} A ''Soma File'' is a proprietary [[XML]] based language that is used to describe a memory model. Soma Files include parameters that configure the timing and protocol requirements for a memory model as specified by the memory vendor. This file format was create by [[Denali Software]]<ref>[https://www.denali.com/en/ememory Soma File]</ref>. This file is typically encrypted. Soma files are read into a proprietary memory modeling object, called a MMAV, that is used to in a [[ASIC]] simulation environment. This allows the simulation to modeling any type of memory provided a corresponding SOMA file exists.<ref>[https://www.denali.com/en/products/mmav.jsp MMAV]</ref> In contrast to soma, memory models are typically provided in non-proprietary [[verilog]] format from the memory vendors, eg. [http://download.micron.com/downloads/models/verilog/sdram/ddr/256meg/256Mb_ddr.zip micron memory models], and are readily downloadable from the memory vendor's webpage. ==External links== * [https://www.denali.com/en/ememory Soma File] * [http://www.freemodelfoundry.com Free Memory Models] * [http://www.micron.com/faq/answer.aspx?qid=122 Micron Memory Model FAQ] ==References== <references /> [[Category:Data modeling languages]] [[Category:SDRAM]]</text> </page> <page> <id>35101</id> <title>Sony Toshiba IBM Center of Competence for the Cell Processor</title> <text>The '''Sony Toshiba IBM Center of Competence for the Cell Processor''' is the first Center of Competence dedicated to the promotion and development of [[Sony]] [[Toshiba]] [[IBM]]'s [[Cell microprocessor]], an eight-core [[multiprocessor]] designed using principles of [[parallel computing|parallelism]] and 