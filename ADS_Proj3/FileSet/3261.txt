a theoretical foundation on OOP that uses OOP as a kind of customizable [[Data type|type system]] to support RDBMS. * [[Alexander Stepanov]] suggested that OOP provides a mathematically-limited viewpoint and called it "almost as much of a hoax as [[Artificial Intelligence]]" (possibly referring to the Artificial Intelligence projects and marketing of the 1980s that are sometimes viewed as overzealous in retrospect).<ref name="stepanov">{{Cite web| url=http://www.aaai.org/aitopics/html/aieffect.html| title=The AI Effect| date=2008-12-13| accessdate=2010-04-21| last=Stepanov |first=Alexander| authorlink=Alexander Stepanov}}</ref><ref name="stepanov2">{{Cite web| url=http://www.stlport.org/resources/StepanovUSA.html| title=STLport: An Interview with A. Stepanov| last=Stepanov| first=Alexander| accessdate=2010-04-21| authorlink=Alexander Stepanov}}</ref> * [[Paul Graham (computer programmer)|Paul Graham]] has suggested that the purpose of OOP is to act as a "herding mechanism" that keeps mediocre programmers in mediocre organizations from "doing too much damage". This is at the expense of slowing down productive programmers who know how to use more powerful and more compact techniques.<ref name="graham">{{Cite web| last=Graham| first=Paul| title=Why ARC isn't especially Object&ndash;Oriented.| url=http://www.paulgraham.com/noop.html| publisher=PaulGraham.com| accessdate=13 November 2009| authorlink=Paul Graham (computer programmer)}}</ref> * [[Joe Armstrong (programming)|Joe Armstrong]], the principal inventor of [[Erlang (programming language)|Erlang]], is quoted as saying "The problem with object-oriented languages is they've got all this implicit environment that they carry around with them. You wanted a banana but what you got was a gorilla holding the banana and the entire jungle."<ref name="armstrongjoe">Armstrong, Joe. In ''Coders at Work: Reflections on the Craft of Programming. Peter Seibel, ed. [http://www.codersatwork.com/ Codersatwork.com], Accessed 13 November 2009.</ref> * Richard Mansfield, author and former editor of ''[[COMPUTE!]]'' magazine, states that "like countless other intellectual fads over the years ("relevance", communism, "modernism", and so on&mdash;history is littered with them), OOP will be with us until eventually reality asserts itself. But considering how OOP currently pervades both universities and workplaces, OOP may well prove to be a durable delusion. Entire generations of indoctrinated programmers continue to march out of the academy, committed to OOP and nothing but OOP for the rest of their lives."<ref name="mansfield1">Mansfield, Richard. "Has OOP Failed?" 2005. Available at [http://www.4js.com/en/fichiers/b_genero/pourquoi/Has_OOP_Failed_Sept_2005.pdf 4JS.com], Accessed 13 November 2009.</ref> He also is quoted as saying "OOP is to writing a program, what going through [[airport security]] is to flying".<ref name="mansfield2">Mansfield, Richard. "OOP Is Much Better in Theory Than in Practice" 2005. Available at [http://www.devx.com/DevX/Article/26776 Devx.com] Accessed 7 January 2010.</ref> * [[Rich Hickey]], creator of [[Clojure]], described object systems as over simplistic models of the real world. He emphasized the inability of OOP to model time properly, which is getting increasingly problematic as software systems become more concurrent.<ref>Rich Hickey, JVM Languages Summit 2009 keynote, [http://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey Are We There Yet?] November 2009.</ref> ==See also== * [[Aspect-oriented programming]] * [[Circle-ellipse problem]] * [[Comparison of programming languages (object-oriented programming)]] * [[Comparison of programming paradigms]] * [[Component-based software engineering]] * [[Constructor overloading]] * [[CORBA]] * [[Distributed Component Object Model|DCOM]] * [[Design by contract]] * [[GRASP (object-oriented design)|GRASP]] * [[IDEF4]] * [[Interface description language]] * [[Structured programming]] * [[Lepus3]] * [[Modular programming]] * [[Object association]] * [[Object database]] * [[Object-oriented analysis and design]] * [[Object-relational impedance mismatch]] (and [[The Third Manifesto]]) * [[Object-relational mapping]] * [[Procedural programming]] * [[Refactoring]] * [[Solid (object-oriented design)|SOLID]] * [[Visual FoxPro]] * [[ZZT-oop]] ==References== {{Reflist|2}} ==Further reading== {{Wikiversity|at=Topic:Object-Oriented Programming}} * {{Cite book |first=Stephen |last=Schach |authorlink= |year=2006 |title=Object-Oriented and Classical Software Engineering, Seventh Edition |publisher=[[McGraw-Hill]] |isbn=0-073-19126-4 }} * {{Cite book |first=Martin |last=Abadi |authorlink=Martin Abadi |coauthors=[[Luca Cardelli]] |year=1998 |title=A Theory of Objects |publisher=[[Springer Verlag]] |isbn=0-387-94775-2 }} * {{Cite book |first=Harold |last=Abelson |authorlink=Harold Abelson |coauthors=[[Gerald Jay Sussman]], |year=1997 |title=[http://mitpress.mit.edu/sicp/ Structure and Interpretation of Computer Programs] |publisher=[[MIT Press]] |isbn=0-262-01153-0 }} * {{Cite journal | last = Armstrong | first = Deborah J. | year = 2006 | month = February | title = The Quarks of Object-Oriented Development | journal = Communications of the ACM | volume = 49 | issue = 2 | pages = 123–128 | issn = 0001-0782 | url =http://portal.acm.org/citation.cfm?id=1113040 | accessdate = 2006-08-08 | doi = 10.1145/1113034.1113040 }} * {{Cite book |first=Grady |last=Booch |authorlink=Grady Booch |year=1997 |title=Object-Oriented Analysis and Design with Applications |publisher=[[Addison-Wesley]] |isbn=0-8053-5340-2 }} * {{Cite book |first=Peter |last=Eeles |authorlink= |coauthors=Oliver Sims |year=1998 |title=Building Business Objects |publisher=[[John Wiley & Sons]] |isbn=0-471-19176-0 }} * {{Cite book |first=Erich |last=Gamma |authorlink=Erich Gamma |coauthors=[[Richard Helm]], [[Ralph Johnson]], [[John Vlissides]] |year=1995 |title=Design Patterns: Elements of Reusable Object Oriented Software |publisher=Addison-Wesley |isbn=0-201-63361-2 }} * {{Cite book |first=Paul |last=Harmon |authorlink=Paul Harmon (management author) |coauthors=William Morrissey |year=1996 |title=The Object Technology Casebook - Lessons from Award-Winning Business Applications |publisher=John Wiley & Sons |isbn=0-471-14717-6 }} * {{Cite book |first=Ivar |last=Jacobson |authorlink=Ivar Jacobson |year=1992 |title=Object-Oriented Software Engineering: A [[use case|Use Case]]-Driven Approach |publisher=Addison-Wesley |isbn=0-201-54435-0 }} * {{Cite book |first=Alan |last=Kay |authorlink=Alan Kay |year= |title=The Early History of Smalltalk |url=http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html }} * {{Cite book |first=Bertrand |last=Meyer |authorlink=Bertrand Meyer |year=1997 |title=[[Object-Oriented Software Construction]] |publisher=[[Prentice Hall]] |isbn=0-13-629155-4 |url= }} * {{Cite book |first=James |last=Rumbaugh |authorlink=James Rumbaugh |coauthors=Michael Blaha, William Premerlani, Frederick Eddy, William Lorensen |year=1991 |title=Object-Oriented Modeling and Design |publisher=Prentice Hall |isbn=0-13-629841-9 }} * {{Cite book |first=David A. |last=Taylor |year=1992 |title=Object-Oriented Information Systems - Planning and Implementation |publisher=John Wiley & Sons |isbn=0-471-54364-0 }} * {{Cite book |first=Axel-Tobias |last=Schreiner |year=1993 |title=Object oriented programming with ANSI-C |publisher=Hanser |isbn=3-446-17426-5 |url=http://hdl.handle.net/1850/8544 }} ==External links== {{Wikibooks|Computer programming|Object oriented programming}} * {{dmoz|Computers/Programming/Methodologies/Object-Oriented|Object-oriented programming}} * [http://www.polberger.se/components/read/demystifying-dynamic-dispatch-wikipedia.html Chapter on implementing OOP in the programming language C] by David Polberger * [http://www.dreamincode.net/forums/blog/191/entry-1016-styles-of-programming-managing-your-code/ Programming Styles: Procedural, OOP, and AOP] * [http://programmersnotes.info/2009/02/28/what-is-oop-object-oriented-programming/ What is OOP? (Tutorial on OOP in PHP)] * [http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/ Discussion about the flaws of OOD] * [http://java.sun.com/docs/books/tutorial/java/concepts/index.html OOP Concepts (Java Tutorials)] * [http://www.mytinybreak.com/ MDS Model Driven C Code Generation] {{Programming language}} {{Software Engineering}} {{Use dmy dates|date=September 2010}} {{DEFAULTSORT:Object-Oriented Programming}} [[Category:Object-oriented programming|*]] [[Category:Programming paradigms]] [[af:Objekgeoriënteerde programmering]] [[ar:برمجة كائنية التوجه]] [[bn:অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং]] [[be:Аб'ектна-арыентаванае праграмаванне]] [[be-x-old:Аб’ектна-арыентаванае праграмаваньне]] [[bs:Objektno orijentisano programiranje]] [[bg:Обектно-ориентирано програмиране]] [[ca:Programació orientada a objectes]] [[cs:Objektově orientované programování]] [[da:Objektorienteret programmering]] [[de:Objektorientierte Programmierung]] [[et:Objektorienteeritud programmeerimine]] [[el:Αντικειμενοστρεφής προγραμματισμός]] [[es:Programación orientada a objetos]] [[eo:Objektema programado]] [[eu:Objektuei orientatutako programazio]] [[fa:برنامه‌نویسی شئ‌گرا]] [[fr:Programmation orientée objet]] [[gl:Programación orientada a obxectos]] [[ko:객체 지향 프로그래밍]] [[hr:Objektno orijentirano programiranje]] [[io:Objekt-orientizita programifo]] [[id:Pemrograman berorientasi objek]] [[is:Hlutbundin forritun]] [[it:Programmazione orientata agli oggetti]] [[he:תכנות מונחה עצמים]] [[ka:ობიექტურად ორიენტირებული პროგრამირება]] [[lv:Objektorientētā programmēšana]] [[lt:Objektinis programavimas]] [[hu:Objektumorientált programozás]] [[mk:Објектно-ориентирано програмирање]] [[ms:Pengaturcaraan berorientasi objek]] [[mn:Объект хандалтат програмчлал]] [[nl:Objectgeoriënteerd]] 