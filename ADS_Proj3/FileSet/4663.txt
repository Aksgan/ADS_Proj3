the entire system. When logging in as a user in the Administrators group, two separate tokens are assigned. The first token contains all privileges typically awarded to an administrator, and the second is a restricted token similar to what a standard user would receive. User applications, including the [[Windows Shell]], are then started with the restricted token, resulting in a reduced privilege environment even under an Administrator account. When an application requests higher privileges or "Run as administrator" is clicked, UAC will prompt for confirmation and, if consent is given, start the process using the unrestricted token.<ref name="kennykerr">{{cite web |url=http://weblogs.asp.net/kennykerr/archive/2006/09/29/Windows-Vista-for-Developers-_1320_-Part-4-_1320_-User-Account-Control.aspx |title=Windows Vista for Developers – Part 4 – User Account Control |date=September 29, 2006 |accessdate=2007-03-15 |last=Kerr |first=Kenny }}</ref> In [[Windows 7]], Microsoft updated UAC in several ways. By default, UAC does not prompt when certain programs included with Windows make changes requiring elevated permissions. Other programs still trigger a UAC prompt. The strictness of UAC can be changed to either always prompt, or to never do so. ==Tasks that trigger a UAC prompt== <!-- Deleted image removed: [[Image:Windows Vista Control Panel (shield).png|thumb|300px|Operating system commands or actions that require administrator rights (and will thus trigger UAC) are marked with the security shield symbol. {{deletable image-caption}}]] --> Tasks that require administrator privileges will trigger a UAC prompt (if UAC is enabled); they are typically marked by a security shield icon with the 4 colors of the Windows logo (in Vista and Windows Server 2008) or with two panels yellow and two blue (Windows 7 and Server 2008 R2). In the case of executable files, the icon will have a security shield overlay. Ed Bott's ''Windows Vista Inside Out'' lists the following tasks which require administrator privileges:<ref>{{cite web |url=http://www.edbott.com/weblog/?p=1602 |title=What triggers User Account Control prompts? |last=Bott |first=Ed |date=2007-02-02 }}</ref> *Running an Application as an Administrator *Changes to system-wide settings or to files in %SystemRoot% or %ProgramFiles% *Installing and uninstalling applications *Installing device drivers *Installing ActiveX controls *Changing settings for Windows Firewall *Changing UAC settings *Configuring Windows Update *Adding or removing user accounts *Changing a user’s account type *Configuring Parental Controls *Running Task Scheduler *Restoring backed-up system files *Viewing or changing another user’s folders and files *Running Disk Defragmenter Common tasks, such as changing the time zone, do not require administrator privileges<ref>{{cite web |url=http://windowsvistablog.com/blogs/windowsvista/archive/2007/01/23/security-features-vs-convenience.aspx |title=Security Features vs. Convenience |work=Windows Vista Team Blog |publisher=[[Microsoft]] |last=Allchin |first=Jim |authorlink=James Allchin |date=2007-01-23 |accessdate=2007-03-04 }}</ref> (although changing the system time itself does, since the system time is commonly used in security protocols such as [[Kerberos (protocol)|Kerberos]]). A number of tasks that required administrator privileges in earlier versions of Windows, such as installing critical Windows updates, no longer do so in Vista.<ref>{{cite web |url=http://technet.microsoft.com/en-us/windowsvista/aa906021.aspx |title=User Account Control Overview |work=Technet |publisher=[[Microsoft]] }}</ref> Any program can be run as administrator by right-clicking its icon and clicking "Run as administrator", except MSI or MSU packages as, due to their nature, if administrator rights will be required a prompt will usually be shown. Should this fail the only workaround is to run a Command Prompt as an administrator and launch the MSI or MSP package from there. ==Features== User Account Control asks for credentials in a ''Secure Desktop'' mode, where the entire screen is temporarily dimmed, [[Windows Aero]] disabled, and only the authorization window at full brightness, to present only the elevation user interface (UI). This is to prevent spoofing of the UI or the mouse by the application requesting elevation.<ref>{{cite web |url=http://blogs.msdn.com/uac/archive/2006/05/03/589561.aspx |title=User Account Control Prompts on the Secure Desktop |date=2006-05-03 |accessdate=2007-02-25 |work=UACBlog |publisher=MSDN Blogs }}</ref> If an administrative activity comes from a minimized application, the secure desktop request will also be minimized so as to prevent the [[Focus (computing)|focus]] from being lost. It is possible to disable ''Secure Desktop'', though this is inadvisable from a security perspective.<ref>{{cite web |url=http://www.edbott.com/weblog/?p=1600 |title=Why you need to be discriminating with those Vista tips |last=Bott |first=Ed |date=February 2, 2007 |accessdate=2007-12-08 |work=Ed Bott's Windows Expertise }}</ref> Applications written with the assumption that the user will be running with administrator privileges experienced problems in earlier versions of Windows when run from limited user accounts, often because they attempted to write to machine-wide or system directories (such as ''Program Files'') or registry keys (notably [[HKEY LOCAL MACHINE|HKLM]])<ref name="Channel 9"/>. UAC attempts to alleviate this using ''File and Registry Virtualization'', which redirects writes (and subsequent reads) to a per-user location within the user’s profile. For example, if an application attempts to write to “C:\program files\appname\settings.ini” and the user doesn’t have permissions to write to that directory, the write will get redirected to “C:\Users\username\AppData\Local\VirtualStore\Program Files\appname\settings.ini”. There are a number of configurable UAC settings. It is possible to:<ref>{{cite web |url=http://technet.microsoft.com/en-us/bb629436.aspx |title=Chapter 2: Defend Against Malware |work=Windows Vista Security Guide |publisher=[[Microsoft]] |date=November 8, 2006 |accessdate=2007-03-15 }}</ref> *Require administrators to re-enter their password for heightened security; *Require the user to press [[Control-Alt-Delete|Ctrl+Alt+Del]] as part of the authentication process for heightened security; *Disable ''Admin Approval Mode'' (UAC prompts for administrators) entirely; [[Command Prompt (Windows)|Command Prompt]] windows that are running elevated will prefix the title of the window with the word "Administrator", so that a user can discern which instances are running with elevated privileges.<ref>{{cite web |url=http://blogs.msdn.com/uac/archive/2006/08/01/685645.aspx |title=Administrator Marking for Command Prompt |accessdate=2006-08-07 |date=August 1, 2006 |work=UACBlog |publisher=MSDN Blogs }}</ref> A distinction is made between elevation requests from a signed executable and an unsigned executable; and if the former, whether the publisher is 'Windows Vista'. The color, icon, and wording of the prompts are different in each case; for example, attempting to convey a greater sense of warning if the executable is unsigned than if not.<ref>{{cite web |url=http://windowsvistablog.com/blogs/windowsvista/archive/2007/01/25/accessible-uac-prompts.aspx |title=Accessible UAC Prompts |work=Windows Vista Blog |publisher=Microsoft }}</ref> [[Internet Explorer 7]]'s "Protected Mode" feature uses UAC to run with a 'low' [[Mandatory Integrity Control|integrity level]] (a Standard user token has an integrity level of 'medium'; an elevated (Administrator) token has an integrity level of 'high'). As such, it effectively runs in a sandbox, unable to write to most of the system (apart from the Temporary Internet Files folder) without elevating via UAC.<ref name="kennykerr"/><ref name="MRtechnet">{{cite web |url=http://www.microsoft.com/technet/technetmag/issues/2007/06/UAC/ |title=Inside Windows Vista 