firms in a market earn positive profits that lie somewhere between the perfectly competitive and monopoly levels. Some reasons the Bertrand paradox do not strictly apply: * ''Capacity constraints''&ndash;Sometimes firms do not have enough capacity to satisfy all demand * ''Product differentiation''&ndash;If products of different firms are differentiated, then consumers may not switch completely to the product with lower price * ''Dynamic competition''&ndash;Repeated interaction or repeated price competition can lead to the price above MC in equilibrium. * ''More money for higher price''&ndash;It follows from repeated interaction: If one company sets their price slightly higher, then they will still get about the same amount of buys but more profit for each buy, so the other company will raise their price, and so on (only in repeated games, otherwise the price dynamics are in the other direction). * ''Oligopoly'' If the two companies can agree on a price, it is in their long-term interest to keep the agreement: the revenue from cutting prices is less than twice the revenue from keeping the agreement, and lasts only until the other firm cuts its own prices. ==See also== *[[Joseph Bertrand]] *[[Bertrand model]] *[[Differentiated Bertrand competition]] *[[Edgeworth paradox]] *[[Prisoner's dilemma]] ==References== * Baye, M.R. and J. Morgan (1997) "Necessary and sufficient conditions for existence and uniqueness of Bertrand paradox outcomes" Princeton Woodrow Wilson School, Discussion Paper in Economics, 186. * Baye, M.R. and J. Morgan (1999) "A folk theorem for one-shot Bertrand games," Economics Letters, 65:1, 59-65. * Bertrand, J. (1883) "Book review of theorie mathematique de la richesse sociale and of recherches sur les principles mathematiques de la theorie des richesses", Journal des Savants 67: 499–508. * Kaplan, T.R. and D. Wettstein (1997) "Mixed strategy equilibria with constant-returns-to-scale technology," Monaster Center Discussion Paper 97–4. * [http://www.springerlink.com/content/wuu31dtnc7d6rpty/ Kaplan, T.R. and D. Wettstein], (2000) "The Possibility of Mixed-Strategy Equilibria with Constant-Returns-to-Scale Technology under Bertrand Competition", Spanish Economic Review, 2(1):65-71. {{game theory}} [[Category:Economics paradoxes]] [[Category:Game theory]] [[ru:Парадокс Бертрана (экономика)]] [[uk:Парадокс Бертрана (економіка)]]</text> </page> <page> <id>3669</id> <title>Beta BASIC</title> <text>{{Unreferenced|date=May 2010}} '''Beta BASIC''' was a [[BASIC programming language|BASIC]] [[Interpreter (computing)|interpreter]] for the [[Sinclair Research]] [[ZX Spectrum]] [[microcomputer]], written by Dr Andy Wright and sold by his one-man software house BetaSoft. BetaSoft also produced a regular newsletter/magazine, BetaNews, which was one of the main fora of the time for advanced Spectrum BASIC programmers. Originally it started as a [[BASIC toolkit]] but over time it grew into an interpreter in its own right. [[Image:Screenshot betabasic 31.png|right|Screenshot of BetaBasic in operation]] == Operation == It ran as a [[terminate and stay resident]] program, completely replacing [[Sinclair BASIC]]. As with most micros of the 1980s, the Spectrum's BASIC interpreter was also its operating system, providing the [[command line interface]] (CLI), the on-screen program [[text editor|editor]] and everything else. It was the sole means of operating and controlling the computer. == Facilities == Beta BASIC provided a new and improved CLI and editor. It supported Sinclair's idiosyncratic single-key entry system for BASIC keywords but also allowed keywords to be spelled out letter-for-letter, which was quicker if the user had fitted a full-size full-travel keyboard to their machine, a very popular modification for serious users. This also removed the necessity for memorising the sometimes arcane key combinations necessary to enter less-commonly-used BASIC keywords. However, the single-key entry system was also extended by mapping the Spectrum's 'graphics' characters to Beta BASIC's new keywords. To switch from keyword entry to typed entry, it was merely necessary to type a single space, causing the cursor mode to change from K (keyword) to L (lowercase) or C (capital). (The KEYWORDS statement could also be used to alter this behaviour, for example by disabling the K mode.) This was a much simpler, more elegant & less intrusive change than Sinclair's own full-screen editor for the Spectrum 128. Another nicety was that the editor, when listing, could optionally automatically [[prettyprint]] code. It was possible to do this manually in Sinclair BASIC, but automatic indentation has the advantage of highlighting certain types of coding error - primarily those to do with failing to correctly close constructs. Other editing improvements included automatic highlighting of the current-line indicator - a small tweak but disproportionately helpful - and the ability to move the cursor up and down as well as left and right, a huge boon when editing long lines. Combined with the 64-column display (see "New functionality" section below), these improvements made Beta BASIC a much more productive environment even for coding standard Sinclair BASIC and making no use of BetaSoft's language additions. Beta BASIC was also a BASIC interpreter in its own right, completely replacing and bypassing the Spectrum [[Read-only memory|ROM]], which it used as a library. It occasionally made calls into the ROM to access useful functions which it was not worth re-implementing in Beta BASIC itself, either because the ROM routines were good enough or for reasons of space - Beta BASIC had to run in the meagre 48 [[kilobyte|KB]] of memory available on a Spectrum and still leave room for the user's code. == Language changes == For its time, Beta BASIC was astonishingly sophisticated. It provided full [[structured programming]] with named procedures and functions, complete with local variables, allowing for programming using [[recursion]]. Although it supported line numbers, they were not necessary and it offered a mode of operation which completely suppressed the display of line numbers. It provided array operations and commands for accessing files on tape and disk. In terms of facilities, it exceeded many other available 8-bit BASICs of the 1980s and in some ways approached the capabilities of [[Microsoft]]'s [[QuickBASIC]] 4.5 compiler or [[QBASIC]] interpreter, which were programs for far more sophisticated 16-bit computers a decade later. On the 128K Spectrum machines, Beta BASIC provided extended facilities allowing programmers to access the machine's extra memory, which took the form of a [[RAM disk]]. As well as allowing the programmer to save and load programs, blocks of memory or screen images into the RAM disc and catalogue the contents of the RAM disk, Beta BASIC 