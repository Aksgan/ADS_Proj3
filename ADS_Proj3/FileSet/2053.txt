for bulk reading and writing of file data * C128 keyboard support in C64 mode * Special commands for handling CDROM drives * Raw directory read * CMD style long directory lists with timestamps ==IDEDOS 0.91 beta== This is still in development. Most notable differences to 0.90 are: * OFS 0.02 support removed * Protected BASIC, serial and PCLink routines * F-keys work with interrupts * Read ($DEF4) works below I/O * Auto starting programs work from IEC devices now * PCLink load below I/O * SilverSurfer PCLink support, PCLink optional * FAT filesystem read ($DEF4) and load * Combined CFS and FAT partitions, per partition filesystem support * Partition list for FAT and ISO9660 * Dynamic drive ennumeration, PCLink detection * Read ($DEF4) and write ($DEF1) support on modifiable files * Timestamp update only if modified * Seeking, modifiable and appendable files on PCLink * PCLink protocol changes * PCLink activity LED ==External links== * [http://idedos.ide64.org/ The webpage of IDEDOS] * [http://ide64.org/ The webpage of the IDE64 cartridge] ==References== * IDEDOS 0.91 beta [http://singularcrew.hu/idedos/beta/ http://singularcrew.hu/idedos/beta/] * IDEDOS 0.90 [http://singularcrew.hu/idedos/IDE64_users_guide.pdf http://singularcrew.hu/idedos/IDE64_users_guide.pdf] * IDEDOS 0.89 [http://www.volny.cz/dundera/manual.html http://www.volny.cz/dundera/manual.html] [[Category:Disk operating systems]] [[hu:IDEDOS]]</text> </page> <page> <id>17450</id> <title>IDL specification language</title> <text>{{Distinguish|IDL (programming language)}} '''IDL''' ('''I'''nterface '''D'''escription '''L'''anguage) is a software [[interface description language]] (also referred to as Interface Descriptor Language) created by [[William Wulf]] and John Nestor of [[Carnegie Mellon University]] and David Lamb of [[Queen's University, Canada]]. Like other interface description languages, IDL defined interfaces in a language- and machine- independent way, allowing the specification of interfaces between components written in different languages, and possibly executing on different machines using [[remote procedure calls]]. ==References== * David Alex Lamb, ''Sharing intermediate representations: the interface description language'', Ph.D. Dissertation, Carnegie-Mellon University, Department of Computer Science, 1983 * David Alex Lamb, "IDL: sharing intermediate representations", ''ACM Transactions on Programming Languages and Systems'' '''9''':3:297-318 (July 1987) * John Nestor, Joseph M. Newcomer, Paola Gianinni, and Donald Stone, ''IDL: The language and its Implementation'', Prentice-Hall, 1990. * [[Richard Snodgrass]], ''The Interface Description Language: Definition and Use'', W.H. Freeman, 1989 ==See also== * [[DIANA (intermediate language)]], an application of IDL {{compu-lang-stub}} [[Category:Specification languages]] [[nl:Interface description language]]</text> </page> <page> <id>17454</id> <title>IDV</title> <text>{{Primarysources|date=December 2006}} {{for|the Italian political party|Italy of Values}} The '''Integrated Data Viewer (IDV)''' from [http://www.unidata.ucar.edu Unidata/UCAR] is a [[Java language|Java]] based software framework for analyzing and visualizing [[geoscience]] data. The IDV release includes a software library and a reference application made from that software. It uses the [[VisAD]] library and other Java-based utility packages. The IDV is developed at the Unidata Program Center (UPC), part of the [[University Corporation for Atmospheric Research]], [[Boulder, Colorado]] which is funded by the [[National Science Foundation]]. The software is freely available under the terms of the GNU [[LGPL|Lesser General Public License]]. ===Bibliography=== * D. Murray, J. McWhirter, S. Wier, S. Emmerson, [http://ams.confex.com/ams/pdfpapers/57870.pdf The Integrated Data Viewer: A Web-enabled application for scientific analysis and visualization], Preprints, 19th Int. Conf. on Interactive Information and Processing Systems (IIPS) for Meteorology, Oceanography, and Hydrology, Long Beach, CA, Amer. Meteor. Soc., 13.2. ==External links== *[http://www.unidata.ucar.edu/software/idv/index.html The IDV Homepage] [[Category:3D graphics software]] [[category:Earth sciences graphics software]]</text> </page> <page> <id>17465</id> <title>IEC 61334</title> <text>'''IEC 61334''' is a standard for low-speed reliable [[power line communication]]s by [[electricity meter]]s, [[water meter]]s and [[SCADA]]. <ref>IEC 61334-5-1, preface.</ref> It is also known as [[S-FSK]], for "[[spread frequency shift keying]]" and was formerly known as '''[[IEC 1334]]''' before IEC's most recent renumbering. It is actually a series of standards describing the researched physical environment of power lines, a well-adapted physical layer, a workable low-power media access layer, and a management interface. Related standards use the robust physical layer (e.g. [[Internet Protocol|IP]] over S-FSK), but not the higher layers. <ref>ADD GRUP, Russia</ref> The physical layer synchronizes a small packet of tones to the zero-crossing of the power line's voltage. The tones are chosen by utilities, not specified in the standard. Tones are usually between 20[[KHz]] and 100 kHz, and should be separated by at least 10 kHz to prevent cross talk. One tone is chosen for mark (i.e. a [[Binary numeral system|binary]] 1), and the other for space (i.e. 0). The standard permits each zero-crossing to convey 1, 2, 4 or 8 bits, with decreased sensitivity to timing as the number of bits increases. In multiphase power lines, a separate signal might be sent on each phase to speed up the transmission. The standard's low speed is caused by the limited number of bits per power line cycle. The high reliability comes from its reliable timing system (i.e. zero crossing), high signal to noise ratio (frequencies are chosen to avoid common power line noise), lack of intermodulation distortion, and adaptive signal detection. The most significant bits are sent first, unlike a conventional [[RS-232|serial port]]. The data from zero crossings should be collected into 8-bit bytes. Each byte is collected into 42-byte packets. The first four bytes of each packet are a preamble to measure the channel's current condition. This is followed by 38 bytes of data, and 3 byte-times of silence. The physical layer is adaptive. The silence and the preamble allow the receiver's signal processing to measure the channel's noise ratios. Depending on the signal to noise ratios, the bits can be recovered from the difference between the power of the mark and space tones, the power of the mark tones only, or the space tones only. The system should be able to adjust the receiving method on each 42-byte packet. The bytes from the low-layer packets are reformed into bytes for the higher layers. The higher link-layer strongly resembles [[HDLC]], except with a novel feature that allows selected stations to retransmit messages.<ref>IEC 61334-4-1</ref> The management interface layer provides remote control of a station's protocol layers, including diagnostics and configuration. For example, it lets a central controller read a unit's signal to noise ratios, and set the bit that enables a station to retransmit weak stations.<ref>IEC 61334-4-1154</ref><ref>IEC 61334-1155</ref> The protocol layers are designed to integrate with any application layer, but the presence of a management interface 