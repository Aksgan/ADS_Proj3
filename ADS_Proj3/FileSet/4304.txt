except for the slash), was primarily used in hand-written coding sheets before transcription to punched cards or tape, and is also used in old-style [[ASCII]] graphic sets descended from the default typewheel on the [[ASR-33 Teletype]]. This form is similar to the symbol <math>\emptyset</math>, or "∅" ([[Unicode]] character U+2205), representing the [[empty set]], as well as to the letter [[Ø]] used in several [[North Germanic languages|Scandinavian languages]]. Some [[Burroughs Corporation|Burroughs]]/[[Unisys]] equipment displays a digit 0 with a ''reversed'' slash. The opposing convention that has the letter O ''with'' a slash and the digit 0 ''without'' was advocated by SHARE, a prominent [[IBM]] user group,<ref name="bemer"/> and recommended by IBM for writing [[Fortran|FORTRAN]] programs,<ref name="einarsson">Bo Einarsson and Yurij Shokin. ''Fortran 90 for the Fortran 77 Programmer''. [http://www.nsc.liu.se/~boein/f77to90/a7.html Appendix 7: "The historical development of Fortran"]</ref> and by a few other early mainframe makers; this is even more problematic for Scandinavians because it means two of their letters collide. Others advocated the opposite convention,<ref name="bemer" /> including IBM for writing [[Algol]] programs.<ref name="einarsson" /> Another convention used on some early [[line printer]]s left digit 0 unornamented but added a tail or hook to the capital O so that it resembled an inverted [[Q]] or cursive capital letter-O (<math>\mathcal O</math>).<ref name="bemer" /> Some fonts designed for use with computers made one of the capital-O–digit-0 pair more rounded and the other more angular (closer to a rectangle). The [[Texas Instruments TI-99/4A]] computer featured a more angular capital O and a more rounded digit 0, whereas others made the choice the other way around. [[File:Deutsches Kfz-Kennzeichen für Behördenfahrzeuge (Nummernbereich 3).jpg|thumb|German license plate with slit zeros]] The typeface used on most European [[vehicle registration plate]]s distinguishes the two symbols partially in this manner (having a more rectangular or wider shape for the capital O than the digit 0), but in several countries a further distinction is made by slitting open the digit 0 on the upper right side (as in [[Vehicle registration plates of Germany|German plates]] using the ''[[FE-Schrift|fälschungserschwerende Schrift]]'', "harder-to-falsify script"). Sometimes the digit 0 is used either exclusively, or not at all, to avoid confusion altogether. For example, [http://southwest.com/content/travel_center/retrieveCheckinDoc.html confirmation numbers] used by [[Southwest Airlines]] use only the capital letters O and I instead of the digits 0 and 1, while [[Canadian postal code]]s use only the digits 1 and 0 and never the capital letters O and I, although letters and numbers always alternate. ==Other== {| align="right" | [[File:7-segment cdeg.svg|80px|Unusual smaller appearance of zero on seven-segment displays]] | [[File:7-segment abcdef.svg|80px|Usual appearance of zero on seven-segment displays]] |} On the [[seven-segment display]]s of calculators, watches, and household appliances, 0 is usually written with six line segments, though on some historical calculator models it was written with four line segments. In [[Braille]], the numeral 0 has the same dot configuration as the letter [[J]]. [[File:ICS Zero.svg|thumb|[[International maritime signal flags|International maritime signal flag]] for 0]] ==References== {{reflist}} [[Category:Zero]] [[Category:Symbols]]</text> </page> <page> <id>36351</id> <title>Symlink race</title> <text>{{Unreferenced|date=December 2009}} {{Cleanup|date=December 2008}} A '''symlink race''' is a kind of [[Vulnerability (computer science)|software security vulnerability]] that results from a program creating [[computer file|files]] in an insecure manner. A malicious user can create a [[symbolic link]] to a file not otherwise accessible to him or her. When the [[setuid|privileged]] program creates a file of the same name as the symbolic link, it actually creates the linked-to file instead, possibly inserting content provided by the malicious user. It is called a "[[race condition|race]]" because in its typical manifestation, the program checks to see if a file by that name already exists, then creates the file. An attacker must create the link in the interval between the check and when the file is created. ==Example== In this naive example, the [[Unix]] program <tt>foo</tt> is <tt>[[setuid]]</tt>. Its function is to retrieve information for the [[account (computing)|account]]s specified by the user. For "efficiency", it sorts the requested accounts into a temporary file (<tt>/tmp/foo</tt> naturally) before making the queries. The directory <tt>/tmp</tt> is world-writable. Malicious user Mallory creates a symbolic link to the file <tt>/.rhosts</tt> named <tt>/tmp/foo</tt>. Then, he invokes <tt>foo</tt> with <tt>+ +</tt> as the requested account. The program creates the (temporary) file <tt>/tmp/foo</tt> (really creating <tt>/.rhosts</tt>) and puts the requested account (<tt>+ +</tt>) in it. It removes the temporary file (merely removing the symbolic link). Now the <tt>/.rhosts</tt> contains <tt>+ +</tt>, which is the incantation necessary to allow anyone to use <tt>[[rlogin]]</tt> to log into the computer as the [[superuser]]. ==Workaround== The standard library function ''mkstemp(3)'' can be used to safely create temporary files. For shell scripts, the system utility <tt>mktemp</tt> does the same thing. {{DEFAULTSORT:Symlink Race}} [[Category:Computer security exploits]] [[Category:Unix]] [[de:Symlink-Schwachstelle]] [[pl:Symlink race]]</text> </page> <page> <id>36368</id> <title>Symposium on Computational Geometry</title> <text>{{Unreferenced|date=November 2010}} {{Wikipedia-stub}} '''SoCG''', the '''Annual Symposium on Computational Geometry''', is an [[academic conference]] in the field of [[theoretical computer science]] more specifically in field of Discrete and Computational Geometry. SoCG is sponsored by the [[Association for Computing Machinery]]. {{Uncategorized|date=October 2010}} {{Comp-eng-stub}}</text> </page> <page> <id>36388</id> <title>Synchronization (computer science)</title> <text>In [[computer science]], '''synchronization''' refers to one of two distinct but related concepts: synchronization of [[process (computer science)|processes]], and synchronization of data. '''Process synchronization''' refers to the idea that multiple processes are to join up or handshake at a certain point, so as to reach an agreement or commit to a certain sequence of action. '''Data synchronization''' refers to the idea of keeping multiple copies of a dataset in coherence with one another, or to maintain data integrity. Process synchronization primitives are commonly used to implement data synchronization. ==Process synchronization== Process synchronization or serialization, strictly defined, is the application of particular mechanisms to ensure that two concurrently-executing [[thread (computer science)|threads]] or [[process (computer science)|processes]] do not execute specific portions of a program at the same time. If one process has begun to execute a serialized portion of the program, any other process trying to execute this portion must wait until the first process finishes. Synchronization is used to control access to state both in small-scale multiprocessing systems -- in multithreaded and multiprocessor computers -- and in distributed 