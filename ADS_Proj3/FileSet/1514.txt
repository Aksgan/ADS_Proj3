database</title> <text>A '''flat file database''' describes any of various means to encode a [[database model]] (most commonly a [[Table (database)|table]]) as a single file (such as [[.txt]] or [[.ini]]). [[Image:Flat File Model.svg|thumb|280px|Example of a Flat File Model.<ref name="USDT01">[http://knowledge.fhwa.dot.gov/tam/aashto.nsf/All+Documents/4825476B2B5C687285256B1F00544258/$FILE/DIGloss.pdf Data Integration Glossary], U.S. Department of Transportation, August 2001.</ref>]] == Overview == A "flat file" is a [[plain text]] or mixed text and [[binary file]] which usually contains one [[Record (computer science)|record]] per line<ref>{{Citation | last = Fowler | first = Glenn | year = 1994 | title = cql: Flat file database query language | periodical = WTEC'94: Proceedings of the USENIX Winter 1994 Technical Conference on USENIX Winter 1994 Technical Conference | url = http://www.research.att.com/~gsf/publications/cql-1994.pdf }} [[Record (computer science)|record]] </ref> or 'physical' record (example on [[Disk storage|disc]] or [[Magnetic tape|tape]]). Within such a record, the single [[field (computer science)|field]]s can be separated by delimiters, e.g. [[Comma-separated values|commas]], or have a fixed length. In the latter case, padding may be needed to achieve this length. Extra formatting may be needed to avoid [[Delimiter#Delimiter_collision|delimiter collision]]. There are no structural relationships between the records. Typical examples of flat files are <code>/etc/passwd</code> and <code>/etc/group</code> on [[Unix-like]] operating systems. Another example of a flat file is a name-and-address list with the fields ''Name'', ''Address'', and ''Phone Number''. A list of names, addresses, and phone numbers written on a sheet of paper is a flat file database. This can also be done with any [[typewriter]] or [[word processor]]. A [[spreadsheet]] or [[text editor]] program may be used to implement flat file databases. == History == The first uses of computing machines were implementations of simple databases. [[Herman Hollerith]] conceived the idea that census data could be represented by holes punched in paper cards and tabulated by machine. He sold his concept to the [[United States Census Bureau|US Census Bureau]]; thus, the Census of 1890 was the first ever computerized databaseâ€”consisting, in essence, of thousands of boxes full of [[punched card]]s. Hollerith's enterprise grew into computer giant [[IBM]], which dominated the data processing market for most of the 20th century. IBM's fixed-length field, 80-column punch cards became the ubiquitous means of inputting electronic data until the 1970s. In the 1980s, configurable flat-file database [[computer application]]s were popular on [[DOS]] and the [[Apple Macintosh|Macintosh]]. These programs were designed to make it easy for individuals to design and use their own databases, and were almost on par with [[word processors]] and [[spreadsheet]]s in popularity. Examples of flat-file database products were early versions of [[FileMaker]] and the [[shareware]] [[PC-File]]. Some of these, like [[dBase II]], offered limited relational capabilities, allowing some data to be shared between files. === Contemporary implementations === [[Faircom]]'s [[C-tree]] is an example of a modern enterprise-level solution, and [[spreadsheet]] software is often used for this purpose, but aside from that there are very few programs available today that would allow a novice to create and use a general-purpose flat file database. This functionality is implemented in [[Microsoft Works]] (available only for some versions of Windows) and [[AppleWorks]], sometimes named ClarisWorks (available for both Macintosh and Windows platforms). Over time, products like [[Borland]]'s Paradox, and [[Microsoft]]'s Access started offering some relational capabilities, as well as built-in programming languages. Database Management Systems ([[DBMS]]) like [[MySQL]] or [[Oracle database|Oracle]] generally require programmers to build applications. Flat file databases are still used internally by many computer applications to store configuration data. Many applications allow users to store and retrieve their own information from flat files using a pre-defined set of fields. Examples are programs to manage collections of books or appointments. Some small [[address book]] applications are essentialy single-purpose flat file databases. [[XML]] is now a popular format for storing data in plain text files, but as XML allows very complex nested data structures to be represented and contains the definition of the data, it is very different from the flat-file model. == Terms == "Flat file database" may be defined very narrowly, or more broadly. The narrower interpretation is correct in [[Database|database theory]]; the broader covers the term as generally used. Strictly, a flat file database should consist of nothing but data and, if records vary in length, delimiters. More broadly, the term refers to any database which exists in a single file in the form of rows and columns, with no relationships or links between records and fields except the table structure. Terms used to describe different aspects of a database and its tools differ from one implementation to the next, but the concepts remain the same. FileMaker uses the term "Find", while MySQL uses the term "Query"; but the concept is the same. FileMaker "files" are equivalent to MySQL "tables", and so forth. To avoid confusing the reader, one consistent set of terms is used throughout this article. However, the basic terms "record" and "field" are used in nearly every flat file database implementation. ==Example database== The following example illustrates the basic elements of a flat-file database. The [[data]] arrangement consists of a series of columns and rows organized into a [[table (information)|tabular format]]. This specific example uses only one table. The columns include: ''name'' (a person's name, second column); ''team'' (the name of an athletic team supported by the person, third column); and a numeric ''unique ID'', (used to uniquely identify records, first column). Here is an example textual representation of the described data: id name team 1 Amy Blues 2 Bob Reds 3 Chuck Blues 4 Dick Blues 5 Ethel Reds 6 Fred Blues 7 Gilly Blues 8 Hank Reds This type of data representation is quite standard for a flat-file database, although there are some additional considerations that are not readily apparent from the text: * '''Data types:''' each column in a database table such as the one above is ordinarily restricted to a specific [[data type]]. Such restrictions are usually established by convention, but not formally indicated unless the data is transferred to a [[relational database]] system. * '''Separated columns:''' In the above example, individual columns are separated using [[Whitespace (computer science)|whitespace]] characters. 