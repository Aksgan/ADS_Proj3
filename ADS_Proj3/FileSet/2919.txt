[http://www.bit-tech.net/hardware/2006/11/30/directx10_future_of_pc_gaming/1.html DirectX 10: The Future of PC Gaming] Technical article discussing the new features of DirectX 10 and their impact on computer games {{Microsoft APIs}} {{DEFAULTSORT:Direct3d, Microsoft}} [[Category:Graphics libraries]] [[Category:DirectX|3d Microsoft Direct3D]] [[ar:دايركت ثري دي]] [[cs:Direct3D]] [[de:Direct3D]] [[es:Direct3D]] [[eu:Direct3D]] [[fr:Direct3D]] [[ko:Direct3D]] [[it:Direct3D]] [[nl:Direct3D]] [[ja:Direct3D]] [[pl:Direct3D]] [[pt:Direct3D]] [[ru:Direct3D 10]] [[sk:Direct3D]] [[tr:Direct3D]] [[zh:Direct3D]]</text> </page> <page> <id>24445</id> <title>Microsoft Enterprise Library</title> <text>{{Infobox Software | name = Enterprise Library | caption = | developer = [[Microsoft]] and Community | latest_release_version = 5.0.414.0 | latest_release_date = {{release date and age|df=yes|2010|04|20}} | latest_preview_version = | latest_preview_date = | operating_system = [[Windows7]], [[Windows Server 2008]], [[Windows Server 2003]], [[Windows Vista]] and [[Microsoft Windows|above]] | genre = [[Application Blocks (computing)|Application Blocks]] | license = [[Microsoft Public License|Ms-PL]] | website = http://www.codeplex.com/entlib }} The '''Microsoft Enterprise Library''' is a set of tools and [[Library (computing)|programming libraries]] for the [[Microsoft .NET Framework]]. It provides an API to facilitate best practices in core areas of programming including data access, security, logging, exception handling and others. Enterprise Library is provided as pluggable binaries and [[source code]], which can be freely used and customized by developers for their own purposes. == Benefits == * Improved Productivity: Each of the Application Blocks provides several interfaces meant to satisfy common application concerns. * Configuration Driven Design: Many technical decisions about the application behavior can be delayed until configuration time of the application. For instance, if an application does not properly handle an exception, instead of adding another exception handler to the code, an administrator can configure an additional exception handling policy. * Improved Testability: Many application areas can be reconfigured to improve testing of the application in isolation. *It reduce the work load of developer == Application Blocks == Each application block addresses a specific cross-cutting concern and provides highly configurable features, which results in higher developer productivity.The Application Blocks in Enterprise Library are designed to be as agnostic as possible to the application architecture, for example the Logging Application Block may be used equally in a web, [[smart client]] or [[service-oriented]] application. The patterns and practices team also produces more specialized Application Blocks that are not included in Enterprise Library, such as the User Interface Process Application Block, Aggregator Application Block, Updater Application Block and the [[Composite UI Application Block]]. The patterns and practices team produces a number of other deliverables that leverage Enterprise Library Application Blocks. These include the Web Service [[Software factory|Software Factory]] and Smart Client [[Software factory|Software Factory]]. == Utilities == In addition to the Application Blocks, the standard Microsoft distribution of the Enterprise library includes: * Configuration Console: to visually add an Application Block to an application's configuration. * Security Database Console: to add roles, profiles and authorization rules to support the Security Application Block. == History == There have been several versions of the Microsoft Enterprise Library: * Enterprise Library 5.0 (April 2010) - ''Current'' * Enterprise Library 4.1 (October 2008) - ''Active'' * Enterprise Library 4.0 (May 2008) - ''Active'' * Enterprise Library 3.1 (May 2007) - ''Active'' * Enterprise Library 3.0 (April 2007) - ''Deprecated'' * Enterprise Library 2.0 (January 2006) - ''Active/Retired'' * Enterprise Library 1.1 (June 2005) - ''Deprecated'' * Enterprise Library 1.0 (January 2005) - ''Deprecated'' ===Version 5.0 === Microsoft Enterprise Library 5.0 was [http://msdn.microsoft.com/en-us/library/ff632023.aspx released] in April 2010. Public announcement by Grigori Melnik, Enterprise Library Producer is available [http://blogs.msdn.com/agile/archive/2010/04/20/microsoft-enterprise-library-5-0-released.aspx here]. New features include: * Architectural refactoring fully supporting [[Dependency_injection|DI]]-style of development * Simplification of the codebase * Container independence (ships with Unity but you can choose to use other DI containers) * Async database support * Data accessors * Fluent configuration interface support * Configuration schemas to enable IntelliSense * New configuration tool * Higher performing logging * Support for hierarchical configuration merge and redirects * Honouring validation attributes between VAB and System.ComponentModel.DataAnnotations * WPF Validation * Clearer error messaging throughout * Side-by-side support * A la carte installer * Visual Studio 2008 and Visual Studio 2010 RC support * Bug fixes Note: Existing public APIs (v4.1) are mostly supported. For the list of breaking changes, see [http://entlib.codeplex.com/wikipage?title=EntLib5ChangeLog#breakingChanges] Note: Several features are demoed in this video: [http://blogs.msdn.com/agile/archive/2009/12/07/enterprise-library-5-0-preview-video-posted.aspx] Note: For the full Change Log, see [http://entlib.codeplex.com/wikipage?title=EntLib5ChangeLog] ===Version 4.1 === This release of Enterprise Library in October 2008 is a service release that includes the following: * Unity interception mechanism and integration of the Policy Injection Application Block with the Unity Application Block * Added support for generics in the Unity Application Block * Added support for arrays in the Unity Application Block * Performance improvements * Usability improvements to the configuration tool * Visual Studio 2008 Service Pack 1 support * Bug fixes Note: Existing public APIs (v3.1) are still supported. The Application Block Software Factory and the Strong Naming Guidance Package are not included in this release but are available as a separate download. Thus, there is no longer a dependency on Guidance Automation Extensions (GAX). For the detailed list of all changes, see [http://msdn.microsoft.com/en-us/library/cc511712.aspx About This Release of Enterprise Library]. ===Version 4.0 === This release of Enterprise Library in May 2008 includes the following: * Integration with the [http://msdn.microsoft.com/unity Unity Application Block] * Windows Management Instrumentation (WMI) 2.0 support and improved instrumentation * Performance improvements (particularly, in the Logging Application Block) * Pluggable Cache Managers * Visual Studio 2008 support * Bug fixes ===Version 3.1=== In May 2007, Enterprise Library 3.1 was released with minor enhancements to the Validation and Policy Injection Application Blocks. ===Version 3.0=== In April 2007, Enterprise Library 3.0 was released. It contains new Application Blocks, a new Application Block [[Software factory]] designed to simplify the development of new Application Blocks and extensions, and new features providing better integration with '''.NET Framework 3.0.''' The 3.0 release of Enterprise Library contains the following Application Blocks: * Caching * Data Access * Cryptography * Exception Handling * Logging * Policy Injection (new) * Security * Validation (new) ===Version 2.0=== In January 2006, a new version of Enterprise Library was released that targeted .NET Framework 2.0. The most significant change in this release 