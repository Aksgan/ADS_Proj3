for example [[operating system]] files. With solutions that use single instance storage, only one copy of a file is written to the backup media therefore reducing space. This becomes more important when the storage is offsite and on cloud such as Storage as a Service like Amazon S3. In such cases, it has been reported that deduplication can help reduce the costs of storage, costs of bandwidth and backup windows by up to 10:1.<ref> [http://secobackup.com/blog/2008/06/20/deduplication-amazon-s3-can-save-money-and-time/ Deduplication + Amazon S3 will save you time and money]. White Paper: Published June 2008</ref> [[Novell GroupWise]] was built on single-instance storage which accounts for the large data stores that GroupWise is able to achieve. ISO CD/DVD image files can be optimized to use SIS to reduce the size of a CD/DVD compilation (if there are enough duplicated files) to make it fit into smaller media. SIS is related to system wide file duplication search and multiple file instance detection tools such as the P2P application [[Bearshare]] (5.n Versions and below) but differs in that SIS reduces storage utilization automatically and creates and retains symbolic linkages, whereas Bearshare allows for manual deletion of duplicates and associated user level file system, [[Windows Explorer]] type of icon links. == Microsoft == In [[United States]] [[Microsoft]] has a patent related to Single-instance storage<ref>[http://patft.uspto.gov/netacgi/nph-Parser?Sect2=PTO1&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=1&f=G&l=50&d=PALL&RefSrch=yes&Query=PN%2F5813008 United States Patent 5,813,008; Benson, et al., September 22, 1998] at US Pat. Ofc.</ref>. The [[NTFS]] file system supports single-instance storage. The file-based [[Windows Imaging Format]] introduced in [[Windows Vista]] also supports single-instance storage. Single-instance storage has been a feature of [[Microsoft Exchange Server]] since version 4.0 and is also present in Microsoft's [[Windows Home Server]]. It is protected by several patent applications, including United States Patent numbers 6389433 and 6477544. Microsoft states <ref>[http://download.microsoft.com/download/8/a/e/8ae7f07d-b888-4b17-84c3-e5a1976f406c/SingleInstanceStorage.doc Single Instance Storage in Microsoft Windows Storage Server 2003 R2]: Technical White Paper: Published May 2006</ref>, "SIS works by searching a hard disk volume to identify duplicate files. When SIS finds identical files, it saves one copy of the file to a central repository, called the SIS Common Store, and replaces other copies with pointers to the stored versions." [[Windows Server 2003]] Standard Edition has SIS capabilities but is limited to OEM OS system installs. Microsoft announced Windows Storage Server 2008 (WSS2008)<ref>[http://www.microsoft.com/Windowsserver2008/en/us/wss08.aspx Windows Storage Server 2008] at Microsoft</ref> with Single Instance Storage on June 1, 2009, and states this feature is not available on [[Windows Server 2008]].<ref>http://www.microsoft.com/windowsserver2008/en/us/wss08.aspx</ref> == References == {{reflist}} == See also == *[[WinFS]] *[[Peer to peer file sharing]] *[[Data deduplication]] *[[Capacity optimization]] {{DEFAULTSORT:Single-Instance Storage}} [[Category:Computer storage]] [[Category:Storage software]] [[Category:Databases]] [[Category:Computer file systems]] [[hu:Egypéldányos tárolás]]</text> </page> <page> <id>34533</id> <title>Single machine scheduling</title> <text>{{Unreferenced|date=December 2009}} '''Single machine scheduling''' or '''single resource scheduling''' is the process of assigning a group of tasks to a single machine or resource. The tasks are arranged so that one or many performance measures may be optimized. ==Performance Measures== The performance measures of the tasks in the single machine scheduling problem include: *[[Tardiness]] - <math>max(0, receipt\;date - due\;date)</math> *[[Earliness]] - <math>max(0, due\;date - receipt\;date)</math> *[[Lateness]] - <math>receipt\;date - due\;date</math> *[[Flowtime]] - <math>end\;date - start\;date</math> ==Solution Techniques== Many solution techniques have been applied to solving single machine scheduling problems. Some of them are listed below. ===Heuristics=== *Shortest Processing Time (SPT) :The SPT schedule is optimal if the objective is to minimize the average flowtime. *Earliest Due Date (EDD) :The EDD schedule is optimal if the objective is to minimize the maximum lateness. ===Computational=== *[[Genetic Algorithm]]s *[[Neural Network]]s *Simulated Annealing *Ant Colonies {{DEFAULTSORT:Single Machine Scheduling}} [[Category:Mathematical optimization]] [[Category:Manufacturing]]</text> </page> <page> <id>34536</id> <title>Single precision floating-point format</title> <text>When it comes to computers and/or computer programming, IEEE single-precision floating point [[computer numbering format]], is usually binary that occupies 4 bytes, 32 bits in modern computers, in computer memory. In [[IEEE 754-2008]] the 32-bit base 2 format is officially referred to as '''binary32'''. It was called '''single''' in [[IEEE 754-1985]]. In older computers, some older floating point format of 4 bytes was used. One of the first [[programming language]]s to provide single- and double-precision floating-point data types was [[Fortran]]. Before the widespread adoption of [[IEEE 754-1985]], the representation and properties of the double float data type depended on the computer manufacturer and computer model. Single precision binary floating-point is used due to its wider range over [[Fixed-point arithmetic|fixed point]] (of the same bit-width), even if at the cost of precision. Single precision is known as '''float''' in [[C (programming language)|C]], [[C++ (programming language)|C++]], [[C Sharp (programming language)|C#]], [[Java (programming language)|Java]]<ref>http://java.sun.com/docs/books/tutorial/java/nutsandbolts/datatypes.html</ref>, and [[Haskell (programming language)|Haskell]], and as '''single''' in [[Pascal (programming language)|Pascal]] and [[MATLAB]]. However, '''float''' in [[Python (programming language)|Python]] and '''single''' in versions of [[GNU Octave|Octave]] prior to 3.2 refer to [[Double precision floating-point format|double precision]] numbers. {{Floating-point}} == IEEE 754 single precision binary floating-point format: binary32 == The IEEE 754 standard specifies a '''binary32''' as having: * [[Sign bit]]: 1 bit * [[Exponent]] width: 8 bits * [[Significand]] [[precision (arithmetic)|precision]]: 24 (23 explicitly stored) <!-- "significand", with a d at the end, is a technical term, please do not confuse with "significant" --> Sign bit determines the sign of the number, which is the sign of the significand as well. Exponent is either an 8 bit signed integer from -128 to 127 or an 8 bit unsigned integer from 0 to 255 which is the accepted biased form in IEEE 754 binary32 definition. For this case an exponent value of 127 represents the actual zero. The true significand includes 23 fraction bits to the right of the binary point and an implicit leading bit (to the left of the binary point) with value 1 unless the exponent is stored with all zeros. Thus only 23 fraction bits of the [[significand]] appear in the memory format but the total precision is 24 bits (equivalent to log<sub>10</sub>(2<sup>24</sup>) ≈ 7.225 decimal digits). The bits are laid out as follows: [[Image:Float example.svg]] The real value assumed by a given 32 bit '''binary32''' data with a given biased exponent '''e''' and a '''23 bit fraction''' is <math> = (-1)^{sign}(1.b_{-1}b_{-2}...b_{-23})_2 \times 2^{e-127} </math> where more precisely we have 