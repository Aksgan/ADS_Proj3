may be detectable in [[Central processing unit|CPU]] instructions.<ref name="Harris"/> The "SubVirt" laboratory rootkit, developed jointly by [[Microsoft]] and [[University of Michigan]] researchers, is an academic example of a virtual machine–based rootkit (VMBR),<ref>{{cite conference |url=http://www.eecs.umich.edu/virtual/papers/king06.pdf |accessdate=2008-09-15 |title=SubVirt: Implementing malware with virtual machines |date=2006-04-03 |conference = 2006 IEEE Symposium on Security and Privacy |conferenceurl=http://www.computer.org/portal/web/csdl/proceedings/s#4 | doi = 10.1109/SP.2006.38 | isbn = 0-7695-2574-1 | publisher = [[Institute of Electrical and Electronics Engineers]] | editor = [[IBM|International Business Machines]] (ed.) | last = King | first = Samuel T. | last2 = Chen | first2 = Peter M. | last3 = Wang | first3 = Yi-Min | last4 = Verbowski | first4 = Chad | last5 = Wang | first5 = Helen J. | last6 = Lorch | first6 = Jacob R. }}</ref> while [[Blue Pill (malware)|Blue Pill]] is another. In 2009, researchers from Microsoft and [[North Carolina State University]] demonstrated a hypervisor-layer anti-rootkit called Hooksafe, which provides generic protection against kernel-mode rootkits.<ref>{{Cite conference | url = http://research.microsoft.com/en-us/um/people/wdcui/papers/hooksafe-ccs09.pdf |title=Countering Kernel Rootkits with Lightweight Hook Protection | conference = CCS 2009: 16th ACM Conference on Computer and Communications Security | conferenceurl = http://www.sigsac.org/ccs/CCS2009/ | booktitle = Proceedings of the 16th ACM Conference on Computer and Communications Security | isbn = 978-1-60558-894-0 | editor = Al-Shaer, Ehab (General Chair) | others = Jha, Somesh; Keromytis, Angelos D. (Program Chairs) | doi = 10.1145/1653662.1653728 | format=pdf | date=2009-08-11 | accessdate=2009-11-11 | publisher=ACM New York | location = New York | last = Wang | first = Zhi | last2 = Jiang | first2 = Xuxian | last3 = Cui | first3 = Weidong | last4 = Ning | first4 = Peng }}</ref> ===Hardware/Firmware=== A [[firmware]] rootkit uses device or platform firmware to create a persistent malware image in hardware, such as a [[Network interface controller|network card]],<ref>{{cite conference|conference=hack.lu|url=http://esec-lab.sogeti.com/dotclear/public/publications/10-hack.lu-nicreverse_slides.pdf|title=Reversing the Broacom NetExtreme's Firmware|date=2010-11-21|accessdate=2010-11-25|first=Guillaume|last=Delugré|format=PDF|publisher=Sogeti}}</ref> [[Hard disk drive|hard drive]], or the system [[BIOS]].<ref name="McAfee2"/> The rootkit hides in firmware, because firmware is not usually inspected for code integrity. John Heasman demonstrated the viability of firmware rootkits in both [[ACPI]] firmware routines<ref>{{cite conference | url = http://www.blackhat.com/presentations/bh-europe-06/bh-eu-06-Heasman.pdf | format=PDF | title = Implementing and Detecting an ACPI BIOS Rootkit | first = John | last = Heasman | conference = Black Hat Federal 2006 | conferenceurl = http://www.blackhat.com/html/bh-federal-06/bh-fed-06-index.html | date = 2006-01-25 | accessdate = 2010-11-21 | publisher = NGS Consulting }}</ref> and in a [[Conventional PCI|PCI]] expansion card [[Read-only memory|ROM]].<ref>{{cite journal| url=http://www.ngsconsulting.com/research/papers/Implementing_And_Detecting_A_PCI_Rootkit.pdf |title=Implementing and Detecting a PCI Rootkit|first=John |last= Heasman| date=2006-11-15| accessdate=2010-11-13|publisher=Next Generation Security Software | doi = 10.1.1.89.7305 }}</ref> In October 2008, criminals tampered with European credit-card-reading machines before they were installed. The devices intercepted and transmitted credit card details via a mobile phone network.<ref>{{cite web |url=http://www.theregister.co.uk/2008/10/10/organized_crime_doctors_chip_and_pin_machines/|title=Organized crime tampers with European card swipe devices: Customer data beamed overseas|first=Austin |last=Modine|date=2008-10-10|accessdate=2008-10-13|work=The Register|publisher=Situation Publishing}}</ref> In March 2009, researchers Alfredo Ortega and Anibal Sacco published details of a BIOS-level Windows rootkit that was able to survive disk replacement and operating system re-installation.<ref>{{ Cite conference | last1 = Sacco | first1 = Anibal | first2= Alfredo |last2=Ortéga | title = Persistent BIOS infection | conference = CanSecWest 2009 | conferenceurl = http://cansecwest.com/csw09archive.html | publisher = Core Security Technologies | accessdate = 2010-11-21 | year = 2009 | url = http://cansecwest.com/csw09/csw09-sacco-ortega.pdf | format=PDF }}</ref><ref>{{ cite web|url=http://www.theregister.co.uk/2009/03/24/persistent_bios_rootkits/|title=Newfangled rootkits survive hard disk wiping|first=Dan |last=Goodin|date=2009-03-24|accessdate=2009-03-25|work=The Register|publisher = Situation Publishing}}</ref><ref>{{cite journal|journal=[[Phrack]] |url=http://phrack.org/issues.html?issue=66&id=7|volume= 66|issue=7|date=2009-06-01|accessdate=2010-11-13|title=Persistent BIOS Infection: The Early Bird Catches the Worm| last1 = Sacco | first1 = Anibal | first2= Alfredo |last2=Ortéga}}</ref> A few months later they found that some laptops are sold with a legitimate rootkit, known as CompuTrace or [[LoJack#LoJack for Laptops|LoJack for Laptops]], preinstalled in the BIOS. This is an anti&ndash;theft technology system that researchers showed can be turned to malicious purposes.<ref name="sacco">{{cite conference| last1 = Sacco| first1 = Anibal | first2=Alfredo |last2=Ortéga | title = Deactivate the Rootkit: Attacks on BIOS anti-theft technologies | publisher = Core Security Technologies | date = 2009-07-24 | url = http://www.blackhat.com/presentations/bh-usa-09/ORTEGA/BHUSA09-Ortega-DeactivateRootkit-PAPER.pdf | format = PDF | conference = Black Hat USA 2009 | conferenceurl = http://www.blackhat.com/html/bh-usa-09/bh-usa-09-archives.html }}</ref> ==Installation and cloaking== Rootkits employ a variety of techniques to gain control of a system; the type of rootkit influences the choice of attack vector. The most common technique leverages [[vulnerability (computing)|security vulnerabilities]]. Another approach is to use a [[Trojan horse (computing)|Trojan horse]], deceiving a computer user into trusting the rootkit's installation program as benign&mdash;in this case, [[social engineering (security)|social engineering]] convinces a user that the rootkit is beneficial.<ref name="UAMT"/> The installation task is made easier if the [[principle of least privilege]] is not applied, since the rootkit then does not have to explicitly request elevated (administrator-level) privileges. Other classes of rootkits can be installed only by someone with physical access to the target system. The installation of rootkits is commercially driven, with a [[compensation methods#PPI|Pay-Per-Install]] (PPI) compensation method for distributors.<ref>{{cite web|url=http://www.eset.com/resources/white-papers/TDL3-Analysis.pdf|title=TDL3: The Rootkit of All Evil?|date=2010-06-25|accessdate=2010-08-17|publisher=[[ESET]]|first=Aleksandr |last=Matrosov|first2= Eugene|last2= Rodionov|format=PDF}}</ref>{{dubious|GA Review|date=December 2010|reason=Unsupported by source and contradicts other statements in this article}} Once installed, a rootkit takes active measures to obscure its presence within the host system through subversion or evasion of standard operating system [[computer security|security]] tools and [[Application programming interface|APIs]] used for diagnosis, scanning, and monitoring. Rootkits achieve this by modifying the behavior of [[Ring (computer security)|core parts of an operating system]] through loading code into other processes, the installation or modification of [[Device driver|drivers]], or [[Loadable kernel module|kernel modules]]. Obfuscation techniques include concealing running processes from system-monitoring mechanisms and hiding system files and other configuration data.<ref>{{ cite web | url=http://www.usenix.org/publications/login/1999-9/features/rootkits.html | title=Invisible Intruders: rootkits in practice | date=1999-11-16 | last=Brumley |first= David | work = USENIX| publisher=[[USENIX]]}}</ref> It is not uncommon for a rootkit to disable the [[event log]]ging capacity of an operating system, in an attempt to hide evidence of an attack. Rootkits can, in theory, subvert ''any'' operating system activities.<ref name="MIT"/> The "perfect rootkit" can be thought of as similar to a "[[perfect crime]]": one that nobody realizes has taken place. Rootkits also take a number of measures to ensure their survival against detection and cleaning by antivirus software 