development tools, such as Project Manager and Interface Builder, with the SunPro compiler. In order to provide a complete end-user environment, Sun also ported the NeXTSTEP-3.3 versions of several end-user applications, including Mail.app, Preview.app, Edit.app, Workspace Manager, and the dock. The OpenStep and CORBA parts of the products were later split, and NEO was released in late 1995 without the OpenStep environment. In March 1996, Sun announced Joe, a product to integrate NEO with [[Java (programming language)|Java]]. Sun shipped a beta release of the OpenStep environment for Solaris on July 22, 1996,<ref>{{cite press release | url = http://www.sun.com/smi/Press/sunflash/1996-07/sunflash.960722.21109.xml | title = SUN announces availability of Solaris OPENSTEP and Workshop OPENSTEP Beta | accessdate = 2006-10-25 | publisher = Sun Microsystems, Inc. }}</ref> and made it freely available for download in August 1996 for non-commercial use, and for sale in September 1996. OpenStep/Solaris only shipped for the SPARC architecture. ==Description== The API OpenStep contrasts with the earlier NeXTSTEP primarily in five ways: *OpenStep describes only the upper-level libraries and services (like [[Display PostScript]]), whereas NeXTSTEP referred to both these libraries and the operating system as well. *Any code depending entirely on the [[Mach kernel]] was removed, so that OpenStep could be run on top of any reasonably powerful operating system. *A significant amount of effort was put into making the system "[[Endianness|endian]]-free", an issue NeXT had already faced during a port of NeXTSTEP to the [[Intel]] platform. *Low-level objects such as strings were represented with C data types in NeXTSTEP, whereas in OpenStep a number of new classes (NSString, NSNumber, etc.) were introduced to support endian-conversion as well as provide added functionality and become platform-independent. This had ripple-effects throughout the API, mostly for the better. This set of classes (a ''framework'') was called the [[Foundation Kit]], or just Foundation for short. *OpenStep uses [[reference counting]] to manage memory and object lifetimes, and provides Autorelease Pools as a form of automatic memory management. NeXTSTEP does not provide reference counted memory management. The API specification itself is composed of the two main sets of [[object oriented]] classes: the [[GUI]] and graphics front-end known as the [[Application Kit]], and the aforementioned Foundation Kit. However, OpenStep also specified the use of Display PostScript, a versatile and powerful [[PostScript]]-based method of drawing windows and graphics on screen. NeXT, with its devotion to implementing object-oriented solutions, supplied ''pswraps'' for interfacing C code to Display PostScript. ''pswraps'' acted in an encapsulative way and was somewhat object oriented. The Application Kit, Foundation, and Display PostScript comprise the three key technologies in the OpenStep specification; however, Display PostScript was featured in older NeXT technologies, such as NeXTSTEP. ==Building on OpenStep== The standardization on OpenStep also allowed for the creation of several new library packages that were delivered on the OPENSTEP platform. Unlike the operating system as a whole, these packages were designed to run [[stand-alone application|stand-alone]] on practically any operating system. The idea was to use OpenStep code as a basis for network-wide applications running across different platforms, as opposed to using [[CORBA]] or some other system. Primary among these packages was [[Portable Distributed Objects]] (PDO). PDO was essentially an even more "stripped down" version of OpenStep containing only the Foundation Kit technologies, combined with new libraries to provide [[remote invocation]] with very little code. Unlike OpenStep, which defined an operating system that applications would run in, under PDO the libraries were compiled into the application itself, creating a stand-alone "native" application for a particular platform. PDO was small enough to be easily portable, and versions were released for all major server vendors. PDO became somewhat infamous in the mid-1990s when NeXT staff took to writing in solutions to various CORBA magazine articles in a few lines of code, whereas the original article would fill several pages. Even though using PDO required the installation of a considerable amount of supporting code (Objective-C and the libraries), PDO applications were nevertheless considerably smaller than similar CORBA solutions, typically about one-half to one-third the size. The similar '''D'OLE''' provided the same types of services, but presented the resulting objects as [[DCOM]] objects, with the goal of allowing programmers to create DCOM services running on high-powered platforms, called from [[Microsoft Windows]] applications. For instance one could develop a high-powered financial modeling application using D'OLE, and then call it directly from within [[Microsoft Excel]]. When D'OLE was first released, OLE by itself only communicated between applications running on a single machine. PDO enabled NeXT to demonstrate Excel talking to other Microsoft applications across a network before Microsoft themselves were able to implement this functionality. Another package developed on OpenStep was [[Enterprise Objects Framework]] (EOF), a tremendously powerful (for the time) [[object-relational mapping]] product. EOF became very popular in the enterprise market, notably in the financial sector where OPENSTEP caused something of a minor revolution. ==Implementations== === OPENSTEP/Mach === [[Image:OPENSTEP Workspace Manager.jpg|right|300px|thumb|OPENSTEP's desktop and Workspace Manager]] NeXT's first operating system was [[NeXTSTEP]], a sophisticated Mach-UNIX based operating system that was ported to run on several architectures ([[PA-RISC]], [[SPARC]], [[i386]] and [[Motorola 68000|68k]]). However, NeXT's new direction for NeXTSTEP was to free the operating system libraries from being tied to UNIX and becoming more device independent. NeXT completed an implementation of OpenStep on their existing Mach-based OS and called it '''OPENSTEP for Mach''' 4.0, 4.1 and 4.2. It was, for all intents, NeXTSTEP 4.0, and still retained flagship NeXTSTEP technologies (such as [[Display PostScript|DPS]], UNIX underpinnings, user interface characteristics like the [[Dock (computing)|Dock]] and [[Shelf (computing)|Shelf]], and so on), and retained the classic NeXTSTEP user interface and styles. OPENSTEP/Mach was further improved, in comparison to NeXTSTEP 3.3, with vastly improved driver support &ndash; however the environment to actually write drivers was changed with the introduction of the object-oriented DriverKit. OPENSTEP/Mach supported [[x86|Intel x86]], Sun's [[SPARC]] and NeXT's own Motorola based [[68000 family|68k]] architectures, while the HP [[PA-RISC]] version was dropped. These versions continued to run on the underlying Mach-based OS used in NeXTSTEP. OPENSTEP/Mach became NeXT's primary OS from 1995 on, and was used mainly on the 