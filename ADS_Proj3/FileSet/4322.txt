processes. In fact, the project processes are not sequential processes and go in parallel with the whole project, because at each moment a project needs planning, assessment and control. The design loop indicates that during the technical processes, after each step the project-management will assess whether changes have to be made in for example the schedule, which falls under project management. To ensure that a project will be successful the project management takes care that objectives are met within time, costs and a certain performance level, to help the project-management with this a [[work breakdown structure]] is made. [[Software configuration management|Configuration management]] records the changes that are made in the design or requirements. This enables stakeholders to comment on a certain change proposal. But very important for a project success is [[Risk management|risk control]]. Identifying risks and think about solutions in an early stage will save a lot of work and money in a later stage. === Technical processes === The technical processes cover the design, development and implementation phase of a system life cycle. In the earlier agreement phase top level (or customer) [[requirements]] have been established. This set of top level requirements are translated into software requirements which will define the functionalities of the software product. These software requirements can lead to a few alternate designs for the product. Each requirement is periodically examined for validity, consistency, desirability and attainability (see evaluation processes). With these examinations, or evaluations a decision can be made on the design. With the chosen design a [[requirements analysis]] will be performed and a functional design can be made. This functional design is a description of the product in the form of a model: the [[Functional Software Architecture|functional architecture]]. This model describes what the product does and of which items it consists of (allocation and synthesis). Thereafter, the product can actually be developed, integrated and implemented in the user environment. === Evaluation processes === Another loop in the model is the evaluation loop. During and after the creation of a software product the following questions have to be answered: Does the product do what it is intended to do? Are the requirements met? and as mentioned in the previous paragraph: Are the requirements valid and consistent? How is the [[requirements prioritization]]? This requires that the requirements are testable. For example a usability requirement, such as “the software product must be easy to use” can be tested through a [[heuristic evaluation]]. During the lifetime of a software product it will be continuously revised, updated and re-evaluated until the product is not used anymore and is disposed of. == Example == To clarify the systems engineering process, figure 3 contains an example of such a process. It is a quite simple example and not every step of the process is mentioned. Furthermore, systems engineering might be more appropriate for a more complex system, but the example gives a slight idea of the practical use of systems engineering. The CEO of a software company encounters a problem: a (systems engineering) method has been made, but now he wants to share this method with his employees. To acquire all their needs, interviews with stake holders, including the CEO are performed. This results in a list with initial requirements. The feasibility study points out that there is no such system already available that would be appropriate and less expensive than creating a new framework to display the method. There are three possible solutions to the problem: A book that describes the method, a CD-ROM or some XML pages that can be used over an intranet. The Requirement that one has to be able to quickly search through the processes can be met by creating a CD-ROM or the XML pages. But during the project another requirement is added to the list: the content must be reusable. This rules out the CD-ROM, because with each update a new CD-ROM has to be given to the employees. This would also object the low-cost requirement. So, only the last alternative, the XML pages, is sufficient. Even when the requirements and solution are re-evaluated this alternative is the best design. Then, a functional architecture is made and the product is divided in sub functionalities. After creating the sub products, it is integrated and implemented in the organization. Because of all the evaluation and the involvement of the user the intranet is commonly used. The project is successful. [[Image:voorb.png|centre|thumb|400px|Figure 3: Example]] <span id="activities"> == Activities == </span> {| class="wikitable" |+ '''Activity table''' |- !Activity ||Subactivity ||Description |- | '''Agreement processes''' || Define needs || Through interviewing the users and other stakeholders of the product the user needs can be conducted. |- | || State the problem || The problem (why do we need this product?) is described in the PROBLEM DEFINITION |- | || Project analysis || Research has to indicate if the project is feasible and in which degree beneficial. On basis of the FEASIBLITY REPORT the project manager decides whether or not to continue with the project. |- | '''Project processes''' || Plan project || The project starts with creating a PROJECT PLAN that will be updated and revised through whole the technical processes phase. In fact the whole project processes phase will be continuously repeated. |- | || Assess project || How is the project going? Are there any changes? These are questions of assessment. |- | Control project || Control risks |rowspan=3| System control includes technical management activities required to measure progress, evaluate and select alternatives, and document data and decisions. Control activities include risk management, configuration management and data management. These are closed concepts, because they are processes on their own and not in the scope of the high level systems engineering process. |- | || Control data |- | || Control configuration |- |'''Technical Processes'''<br> Define Requirements || Analyze missions and environments || Analyze the customer’s needs to identify the requirements |- | || Identify functional requirements || Functional requirements define quantify (how many), qualify (how good), coverage 