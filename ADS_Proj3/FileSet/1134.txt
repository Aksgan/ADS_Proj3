that do not appear on the left hand side of axioms) * Concept intersection * Universal restrictions * Limited existential quantification |- | || |-|<math>\mathcal{FL^-}</math> ||A sub-language of <math>\mathcal{AL}</math>, which is obtained by disallowing atomic negation. |- | || |- |<math>\mathcal{FL}_o</math>||A sub-language of <math>\mathcal{FL^-}</math>, which is obtained by disallowing limited existential quantification. |- | || |- |<math>\mathcal{EL}</math>||Intersection and full existential restriction. |} == History == Description logic (DL) was given its current name in the 1980s. Previous to this it was called (chronologically): ''terminological systems'', and ''concept languages''. === Knowledge Representation === [[semantic frames|Frame]]s and [[semantic network]]s lack formal (logic-based) semantics<ref name="DLHB">Franz Baader, Ian Horrocks, and Ulrike Sattler ''Chapter 3 Description Logics''. In Frank van Harmelen, Vladimir Lifschitz, and Bruce Porter, editors, ''Handbook of Knowledge Representation''. Elsevier, 2007.</ref>. DLs were first introduced into [[Knowledge Representation]] (KR) systems to overcome this deficiency<ref name="DLHB"/>. The first DL-based KR system was [[KL-ONE]] (by Brachman and Schmolze, 1985). During the '80s other DL-based systems using ''structural subsumption algorithms''<ref name="DLHB"/> were developed including KRYPTON (1983), [[LOOM (ontology)|LOOM]] (1987), BACK (1988), K-REP (1991) and CLASSIC (1991). This approach featured DLs with limited expressiveness but relatively efficient (polynomial time) reasoning <ref name="DLHB"/>. In the early '90s, the introduction of a new ''tableau based algorithm'' paradigm allowed efficient reasoning on more expressive DLs<ref name="DLHB"/>. DL-based systems using these algorithms - such as KRIS (1991) - show acceptable reasoning performance on typical inference problems even though the worst case complexity is no longer polynomial<ref name="DLHB"/>. From the mid '90s, reasoners were created with good practical performance on very expressive DLs with high worst case complexity<ref name="DLHB"/>. Examples from this period include FaCT (1998), RACER (2001), CEL (2005), and [[KAON|KAON 2]] (2005). === Semantic Web === The [[DARPA Agent Markup Language]] (DAML) and [[Ontology Inference Layer]] (OIL) [[Ontology Language|ontology languages]] for the [[semantic web]] can be viewed as [[Syntax (logic)|syntactic]] variants of DLs<ref name="HS">Ian Horrocks and Ulrike Sattler ''Ontology Reasoning in the SHOQ(D) Description Logic'', in ''Proceedings of the Seventeenth International Joint Conference on Artificial Intelligence'', 2001.</ref>. In particular, the formal semantics and reasoning in OIL use the <math>\mathcal{SHIQ}</math> DL <ref>D. Fensel, F. van Harmelen, I. Horrocks, D. McGuinness, and P. F. Patel-Schneider ''OIL: An Ontology Infrastructure for the Semantic Web''. IEEE Intelligent Systems, 16(2):38-45, 2001. DOI 10.1109/5254.920598.</ref>. The [[DAMLplusOIL|DAML+OIL]] DL was developed as a submission to<ref>Ian Horrocks and Peter F. Patel-Schneider ''The Generation of DAML+OIL''. In ''Proceedings of the 2001 Description Logic Workshop (DL 2001)'', volume 49 of CEUR <http://ceur-ws.org/>, pages 30–35, 2001.</ref> - and formed the starting point of - the [[World Wide Web Consortium]] (W3C) Web Ontology Working Group<ref>Web Ontology Working Group Charter, 2003</ref>. In 2004, the Web Ontology Working Group completed its work by issuing the [[Web Ontology Language|OWL]]<ref>W3C Press Release, 2004</ref> recommendation. The design of OWL is based on the <math>\mathcal{SH}</math> family of DLs<ref name="HPH">Ian Horrocks, Peter F. Patel-Schneider, and Frank van Harmelen ''From SHIQ and RDF to OWL: The Making of a Web Ontology Language''. Journal of Web Semantics, 1(1):7-26, 2003. DOI: 10.1016/j.websem.2003.07.001.</ref> with OWL DL and OWL Lite based on <math>\mathcal{SHOIN}^\mathcal{(D)}</math> and <math>\mathcal{SHIF}^\mathcal{(D)}</math> respectively<ref name="HPH"/>. The W3C OWL Working Group began work in 2007 on a refinement of - and extension to - OWL<ref>OWL Working Group Charter, 2007</ref>. In 2009, this was completed by the issuance of the [[OWL2]] recommendation<ref name='owl2.primer'>{{cite web |url=http://www.w3.org/TR/2009/REC-owl2-primer-20091027/ |title=OWL 2 Web Ontology Language Primer |last1=Hitzler |first1=Pascal | authorlink1=Pascal Hitzler |last2=Krötzsch |first2=Markus | authorlink2=Markus Krötzsch |last3=Parsia |first3=Bijan | authorlink3=Bijan Parsia |last4=Patel-Schneider |first4=Peter F. | authorlink4=Peter F. Patel-Schneider |last5=Rudolph |first5=Sebastian | authorlink5=Sebastian Rudolph |date=27 October 2009 |work=OWL 2 Web Ontology Language |publisher=World Wide Wed Consortium |accessdate=2010-12-14}}</ref>. OWL2 is based on the description logic <math>\mathcal{SROIQ}(D)</math><ref>{{cite book |title=Foundations of Semantic Web Technologies |author=Pascal Hitzler, Markus Krötzsch, Sebastian Rudolph |publisher=CRCPress |date=August 25, 2009 |isbn=142009050X |url=http://www.semantic-web-book.org}}</ref>. Practical experience demonstrated that OWL DL lacked several key features necessary to model complex domains<ref name="GHMPPS"/>. == Modeling == In DLs, a distinction is drawn between the so-called [[TBox]] (terminological box) and the [[ABox]] (assertional box). In general, the TBox contains sentences describing concept hierarchies (i.e., relations between [[concept]]s) while the ABox contains [[ground sentence]]s stating where in the hierarchy individuals belong (i.e., relations between individuals and concepts). For example, the statement: (1) Every employee is a person belongs in the TBox, while the statement: (2) Bob is an employee belongs in the ABox. Note that the TBox/ABox distinction is not significant, in the same sense that the two "kinds" of sentences are not treated differently in first-order logic (which subsumes most DLs). When translated into first-order logic, a subsumption [[axiom]] like (1) is simply a conditional restriction to [[unary operation|unary]] [[Predicate (logic)|predicate]]s (concepts) with only variables appearing in it. Clearly, a sentence of this form is not privileged or special over sentences in which only constants ("grounded" values) appear like (2). So why was the distinction introduced? The primary reason is that the separation can be useful when describing and formulating decision-procedures for various DLs. For example, a reasoner might process the TBox and ABox separately, in part because certain key inference problems are tied to one but not the other one ('classification' is related to the TBox, 'instance checking' to the ABox). Another example is that the complexity of the TBox can greatly affect the performance of a given decision-procedure for a certain DL, independently of the ABox. Thus, it is useful to have a way to talk about that specific part of the [[knowledge base]]. The secondary reason is that the distinction can make sense from the knowledge base modeler's perspective. It is plausible to distinguish between our conception of terms/concepts in the world (class axioms in the TBox) and particular manifestations of those terms/concepts (instance assertions in the ABox). In the above example: when the hierarchy within a company is the same in every branch but the assignment to employees is different in every department (because there are other people working there), this distinction makes sense to reuse the TBox for different branches. There are two features of Description Logics that are not shared 