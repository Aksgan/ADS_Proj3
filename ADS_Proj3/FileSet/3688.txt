resolution of the ISO council. The Table of Contents and Index were prepared by Lovelace Computing and are being made available by Lovelace Computing as a service to the standards community.</ref> <ref>Some resources related to the current version of [http://www.rm-odp.net/files/resources/LON-040_UML4ODP_IS/LON-040_UML4ODP_IS.pdf | ITU-T X.906 | ISO/IEC 19793 "Use of UML for ODP systems specifications"] are also available from the [http://www.rm-odp.net RM-ODP resource site]. They include the UML Profiles of the five ODP viewpoints, the viewpoint metamodels, the GIF files for the ODP-specific icons, etc.</ref> # Overview<ref>[http://www.iso.org/iso/en/ittf/PubliclyAvailableStandards/c020696_ISO_IEC_10746-1_1998(E).zip ISO/IEC 10746-1 | ITU-T Rec. X.901]</ref> : Contains a motivational overview of ODP, giving scoping, justification and explanation of key concepts, and an outline of the ODP architecture. It contains explanatory material on how the RM-ODP is to be interpreted and applied by its users, who may include standard writers and architects of ODP systems. # Foundations <ref>[http://www.iso.org/iso/en/ittf/PubliclyAvailableStandards/s018836_ISO_IEC_10746-2_1996(E).zip ISO/IEC 10746-2 | ITU-T Rec. X.902]</ref> : Contains the definition of the concepts and analytical framework for normalized description of (arbitrary) distributed processing systems. It introduces the principles of conformance to ODP standards and the way in which they are applied. In only 18 pages, this standard sets the basics of the whole model in a clear, precise and concise way. # Architecture<ref>[http://www.iso.org/iso/en/ittf/PubliclyAvailableStandards/s020697_ISO_IEC_10746-3_1996(E).zip ISO/IEC 10746-3 | ITU-T Rec. X.903]</ref> : Contains the specification of the required characteristics that qualify distributed processing as open. These are the constraints to which ODP standards must conform. This recommendation also defines RM-ODP viewpoints, subdivisions of the specification of a whole system, established to bring together those particular pieces of information relevant to some particular area of concern. # Architectural Semantics<ref>[http://www.iso.org/iso/en/ittf/PubliclyAvailableStandards/c020698_ISO_IEC_10746-4_1998(E).zip ISO/IEC 10746-4 | ITU-T Rec. X.904]</ref> : Contains a formalization of the ODP modeling concepts by interpreting many concepts in terms of the constructs of the different standardized formal description techniques. === Viewpoints modeling and the RM-ODP framework === Most complex system specifications are so extensive that no single individual can fully comprehend all aspects of the specifications. Furthermore, we all have different interests in a given system and different reasons for examining the system's specifications. A business executive will ask different questions of a system make-up than would a system implementer. The concept of RM-ODP viewpoints framework, therefore, is to provide separate viewpoints into the specification of a given complex system. These viewpoints each satisfy an audience with interest in a particular set of aspects of the system. Associated with each viewpoint is a viewpoint language that optimizes the vocabulary and presentation for the audience of that viewpoint. [[Viewpoint modeling]] has become an effective approach for dealing with the inherent complexity of large distributed systems. Current software architectural practices, as described in [[IEEE 1471]], divide the design activity into several areas of concerns, each one focusing on a specific aspect of the system. Examples include the [[4+1|"4+1" view model]], the [[Zachman Framework]], [[TOGAF]], [[DoDAF]] and, of course, RM-ODP. A [[viewpoint]] is a subdivision of the specification of a complete system, established to bring together those particular pieces of information relevant to some particular area of concern during the analysis or design of the system. Although separately specified, the viewpoints are not completely independent; key items in each are identified as related to items in the other viewpoints. Moreover, each viewpoint substantially uses the same foundational concepts (defined in Part 2 of RM-ODP). However, the viewpoints are sufficiently independent to simplify reasoning about the complete specification. The mutual consistency among the viewpoints is ensured by the architecture defined by RM-ODP, and the use of a common object model provides the glue that binds them all together. More specifically, the RM-ODP framework provides five generic and complementary viewpoints on the system and its environment: * The ''enterprise viewpoint'', which focuses on the purpose, scope and policies for the system. It describes the business requirements and how to meet them. * The ''information viewpoint'', which focuses on the semantics of the information and the information processing performed. It describes the information managed by the system and the structure and content type of the supporting data. * The ''computational viewpoint'', which enables distribution through functional decomposition on the system into objects which interact at interfaces. It describes the functionality provided by the system and its functional decomposition. * The ''engineering viewpoint'', which focuses on the mechanisms and functions required to support distributed interactions between objects in the system. It describes the distribution of processing performed by the system to manage the information and provide the functionality. * The ''technology viewpoint'', which focuses on the choice of technology of the system. It describes the technologies chosen to provide the processing, functionality and presentation of information. ==RM-ODP and UML== Currently there is growing interest in the use of [[Unified Modeling Language|UML]] for system modelling. However, there is no widely agreed approach to the structuring of such specifications. This adds to the cost of adopting the use of [[Unified Modeling Language|UML]] for system specification, hampers communication between system developers and makes it difficult to relate or merge system specifications where there is a need to integrate IT systems. Although the ODP reference model provides abstract languages for the relevant concepts, it does not prescribe particular notations to be used in the individual viewpoints. The viewpoint languages defined in the reference model are abstract languages in the sense that they define what concepts should be used, not how they should be represented. This lack of precise notations for expressing the different models involved in a multi-viewpoint specification of a system is a common feature for most [[enterprise architecture framework|enterprise architectural approaches]], including the [[Zachman Framework]], the "[[4+1]]" model, or the RM-ODP. These approaches were consciously defined in a notation- and representation-neutral manner to increase their use and flexibility. However, this makes more difficult, among other things, the development of industrial tools for modeling the viewpoint specifications, the formal analysis of the specifications produced, and the possible derivation of implementations from the system specifications. In order to address these issues, ISO/IEC and the ITU-T started a joint project in 