could accept: *What are the length, width, and draft of the Kitty Hawk? *When will Reeves achieve readiness rating C2? *What is the nearest ship to Naples with a doctor on board? *What ships are carrying cargo for the United States? *Where are they going? *Print the American cruisers’ current positions and states of readiness? ==References== <references/> [[Category:History of artificial intelligence]] [[Category:United States Navy]] {{Compu-soft-stub}}</text> </page> <page> <id>20962</id> <title>LIRC</title> <text>{{About|Linux Infrared Remote Control|the railroad with reporting mark LIRC|Louisville and Indiana Railroad}} {{Infobox software | name = LIRC | logo = | screenshot = | caption = | collapsible = | developer = | status = Active | latest_release_version = 0.8.7 | latest_release_date = {{release_date|2010|9|6}} | latest_preview_version = | latest_preview_date = | operating_system = [[Linux]] | size = 653 KB (archived) | programming_language = [[C (programming language)|C]] | genre = [[Infrared remote control]] | license = [[GNU General Public License]] | website = http://www.lirc.org/ }} {{Portal|Free software}} '''LIRC''' ([[Linux]] [[Infrared remote control]]) is an [[open source]] package that allows users to receive and send [[infrared]] signals with a [[Linux]]-based computer system. There is a [[Microsoft Windows]] equivalent of LIRC called WinLIRC. With LIRC and an IR receiver the user can control their computer with almost any infrared remote control (e.g. a TV remote control). The user may for instance control DVD or music playback with their remote control. One GUI frontend is KDELirc, built on the [[KDE]] libraries. ==External links== *[http://www.lirc.org LIRC - Linux Infrared Remote Control] *[http://sourceforge.net/projects/lirc/ SourceForge.net: Linux Infrared Remote Control] *[http://winlirc.sourceforge.net/ WinLIRC Homepage] *[http://utils.kde.org/projects/kdelirc KDELirc Homepage] [[Category:Free software programmed in C]] [[Category:Linux embedded-related software]] [[Category:Linux software]] [[Category:Infrared technology]] {{Software-stub}} [[de:LIRC]] [[es:LIRC]] [[nl:LIRC]] [[pl:LIRC]] [[pt:LIRC]] [[ru:LIRC]] [[sv:LIRC]] [[zh:LIRC]]</text> </page> <page> <id>20975</id> <title>LMule</title> <text>{{Distinguish|iMule}} {{lowercase}} {{Refimprove|date=June 2007}} {{Infobox Software |screenshot = |caption = |name = lMule |author = Timo Kujala |developer = |released = {{release date and age|mf=yes|2003|01}} |frequently updated = yes |operating_system = [[Linux]] |status = Inactive |genre = [[Peer-to-peer]] |license = [[GNU General Public License|GPL]] |website = [http://lmule.sourceforge.net/ lmule.sourceforge.net] }} '''lMule''' (meaning [[Linux]] Mule) was an early attempt to bring an [[eMule]]-like client to [[Linux]] started in January [[2003]] by Timo Kujala, who ported all eMule code to Linux by himself. Alternative applications were at the time [[Command line interface|command line]] applications whilst lMule was very similar to [[eMule]] in look and feel. The development team grew during the short lifespan of the project, but in June 2003, due to differences between the developers and the hijacking of the website by one contributor, the fork [[xMule]] was born, where the initial "x" was supposed to mean the multiplatform goals of the project (this claim was much later changed by xMule maintainer to "X11 mule"). Timo Kujala and the other lMule developers not part of xMule project abandoned all development after this event. The developers fell out with one another again, spawning the [[Fork (software development)|fork]] [[aMule]], meaning "another Mule" at the time it was started, then changed to "All-platform Mule" after some time. While the lMule project was completely dropped, the [[xMule]] was abandoned on [[2006]], and the [[aMule]] project continues in active development. ==See also== {{Portal|Free software}} * [[aMule]] ==External links== * [http://lmule.sourceforge.net/ Official website] {{EDonkey}} {{DEFAULTSORT:Lmule}} [[Category:File sharing programs]] [[Category:Discontinued software]] [[es:LMule]] [[fr:LMule]] [[ja:LMule]] [[pt:LMule]]</text> </page> <page> <id>20978</id> <title>LOBOS</title> <text>'''LOBOS''' (Linux OS Boots OS) is a software program (or "system") that allows remote booting ("netbooting") of a [[personal computer]] without using a [[BIOS]]. It allows one [[Kernel (computing)|kernel]] to boot another kernel. LOBOS is part of an effort to move away from fixed, proprietary BIOSes to systems that allow more adaptability, especially with different physical peripheral devices. ==See also== * [[coreboot]] ==Sources and external links== *[http://www.usenix.org/publications/library/proceedings/als00/2000papers/papers/full_papers/minnichLOBOS/minnichLOBOS.pdf Ronald Minnich, Advanced Computing Lab, Los Alamos National Laboratory] [[Category:Linux software]] {{Linux-stub}}</text> </page> <page> <id>20983</id> <title>LOCUS (operating system)</title> <text>{{Infobox_OS | name = LOCUS | developer = [[UCLA]] | family = [[Unix]] | source_model = [[Closed source]] | working_state = Historic | kernel_type = [[Monolithic kernel]] | license = [[Proprietary software|Proprietary]] | }} '''LOCUS''' was a [[distributed operating system]] developed at [[UCLA]] during the 1980s. It was notable for providing an early implementation of the [[single-system image]] idea, where a [[cluster (computing)|cluster]] of machines appeared to be one larger machine. <ref> {{cite web |title=The LOCUS Distributed Operating System |url=http://www.cs.princeton.edu/courses/archive/fall03/cs518/papers/locus.pdf |author = [[Bruce J. Walker|Walker, Bruce]] |year = 1983 |doi = 10.1145/800217.806615 }} </ref> A desire to commercialize the technologies developed for LOCUS inspired the creation of the [[Locus Computing Corporation]] which went on to include ideas from LOCUS in various products, including [[Tru64 UNIX#OSF/1 AD|OSF/1 AD]] and, finally, the [[Santa Cruz Operation|SCO]]–[[Tandem Computers|Tandem]] [[UnixWare NonStop Clusters]] product. ==Description== The LOCUS system was created at [[UCLA]] between 1980 and 1983, initial implementation was on a cluster of [[PDP-11]]/45s using 1 and 10 megabit [[token ring network|ring network]]s, by 1983 the system was running on 17 [[VAX-11|VAX-11/750]]s using a 10 megabit [[Ethernet]]. The system was [[Unix]] compatible and provided both a [[Single-system image#Single root|single root]] view of the file system and a [[Single-system image#Single process space|unified process space]] across all nodes. The development of LOCUS was supported by an [[DARPA|ARPA]] research contract, DSS-MDA-903-82-C-0189. ===File system=== In order to allow reliable and rapid access to the cluster wide filesystem LOCUS used [[replication (computer science)|replication]], the data of files could be stored on more than one node and LOCUS would keep the various copies up to date. This provided particularly good access times for files that were read more often than they were written, the normal case for directories for example. In order to ensure that all access was made to the most recent version of any file LOCUS would nominate one node as the "current synchronization site" (CSS) for a particular file system. All accesses to files a file system would need to be coordinated with the appropriate CSS. =====Node dependent files===== As with other [[Single-system image|SSI]] systems LOCUS sometimes found it necessary to ''break the illusion'' of a single system, notably to allow some files to be different on a per-node basis. For 