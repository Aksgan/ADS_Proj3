Apple [[value-added reseller]] and IBM Business Partner, Terra Soft Solutions provided [[turnkey]] and build-to-order desktop workstations, servers, and High Performance Computing clusters. Terra Soft made their Yellow Dog Linux distribution solely for [[Power Architecture]], optimizing the distributions for [[AltiVec]] and the [[Cell (microprocessor)|Cell]]. Terra Soft was the first to support a variety of [[Apple Inc.|Apple]] computers with Linux pre-installed (under a unique license with Apple). When Apple abandoned PowerPC CPUs in favor of the Intel Core chips, Terra Soft was able to concentrate on high-performance computing and the Cell Broadband Engine, working closely with IBM and Sony for the [[PlayStation 3]] products.{{Citation needed|date=December 2008}} In 2006, Terra Soft was contracted by Sony to provide a Linux operating system for the PlayStation 3, used by several University researchers as an inexpensive, powerful cluster compute node. Today, Fixstars of Tokyo, Japan carries forward the Yellow Dog Linux and Yellow Dog Enterprise Linux product line with primary focus on heterogeneous, multi-core CPUs such as the Cell Broadband Engine and Nvidia GPU.{{what|date=December 2010}} == References == {{Reflist}} == External links == * [http://us.fixstars.com/ Corporate web site] [[Category:Companies based in Colorado]] [[Category:Free software companies]] [[Category:Linux companies]] [[Category:Software companies of the United States]] [[Category:Computer companies of the United States]] [[Category:Parallel computing]] [[Category:Power Architecture]] [[es:Fixstars]] [[it:Terra Soft]] [[ja:フィックスターズ]] [[sv:Terra Soft]]</text> </page> <page> <id>13730</id> <title>Flame (robot)</title> <text>'''Flame''' is the name of a roughly human-shaped [[robot]], developed in the [[Netherlands]] by Daan Hobbelen of the Mechanical Engineering department of [[Delft University]]. Robot motion is more easily done with wheels, but this robot was designed specifically to study human walking. Flame is a continuation of Denise, another walking robot developed at Delft University, which featured in a [[Science (journal)|Science]] article in 2005. Just like Denise, Flame walks through controlled falling. It does not try to keep balance, but accepts that it loses balance and reacts to that by placing a foot such that it will stop the fall. Do this continuously, and the result is walking. The idea is that humans walk in the same manner. Flame uses just a little more energy than a human of the same weight. It turned out Flame walked most efficiently if the 'rear heel' is lifted the moment the 'front heel' hits the ground. Humans do the same. Flame works differently from [[Japan]]ese robots, which are generally based on assembly line robots and know exactly what to do when because the environment is fixed. For example, they can walk up stairs quite impressively, but only the set of stairs that they have been programmed for. According to Hobbelen this approach is a dead end.{{Citation needed|date=January 2010}} Flame is more flexible and reacts to changing circumstances. ==References== * [http://www.sciencedaily.com/releases/2008/05/080522083814.htm Flame robot] [[Category:Humanoid robots]]</text> </page> <page> <id>13737</id> <title>FlashPix</title> <text>{{Infobox file format | name = FlashPix | icon = | logo = | screenshot = | caption = | extension = .fpx | mime = | type code = | uniform type = | magic = | owner = | released = <!-- {{Start date|YYYY|mm|dd|df=yes/no}} --> | latest release version = | latest release date = <!-- {{Start date and age|YYYY|mm|dd|df=yes/no}} --> | genre = [[bitmap]] [[image file]] | container for = | contained by = | extended from = [[IVUE]] | extended to = | standard = | free = | url = }} '''FlashPix''' is a [[bitmap]]ped [[computer graphics]] file format where the image is saved in more than one [[Display resolution|resolution]]. Though this makes it larger even than a [[TIFF]] file, when a request is sent for the file by a [[Web browser]] only the resolution required for the current screen resolution is sent to the browser; this therefore saves on [[Bandwidth (computing)|bandwidth]] and download time.<ref name="techweb">{{ cite web |url=http://www.techweb.com/encyclopedia/defineterm.jhtml?term=flashpix&x=32&y=16 |publisher=TechWeb |title=TechWeb: TechEncyclopedia |date=September 1, 2006 }}</ref> == History == '''FlashPix''' is based on the [[IVUE]] file format, the tiled/multi-resolution image file format that was used by the Live Picture software ([[Live Picture Inc]]). In 1995, a [[consortium]] of [[Eastman Kodak]] (PhotoCD), [[Microsoft]], [[Hewlett-Packard]], and [[Live Picture Inc]] were looking for a powerful image file solution, and Live Picture's solution was the best approach for handling large image files. == Technical Overview == FlashPix files have the .fpx [[file extension]]. FlashPix uses Microsoft's [[structured storage]] format<ref name="storage">{{ cite web |url=http://www.i3a.org/technologies/image-formats/flashpix/ |publisher=International Imaging Industry Association |title=AI3A Standards - Initiatives- Flashpix |date=September 1, 2006 }}</ref> which stores hierarchical data in a single file. Each image is stored with its sub-resolutions. Each resolution is divided by 2, until the entire image can fit in a single tile. Tile size is variable, but the default usage is to have 64x64 pixels tiles (IVUE was using 256x256 pixels). Each tile can be compressed independently of other tiles using various algorithms (LZH, JPEG, RLE). Each pixel can have any number of channel of any size (for instance a 16bits CMYK image), interleaved or not. Including Alpha channel. The result is a file bigger than the original file (at same compression), but never more than 33%. But it allows user to access only the needed parts of the image without having to read the entire file. Let's take a 10200x7650 16bits CMYK image... using 64x64 tiles. It would use 595MB of disk-space. FlashPix, will store: * The original image: 10200x7650 pixels in 160x120 tiles (~ 595MB, but usually less using RLE or LZH per-tile). * Sub-resolution 1: 5100x3825 pixels in 80x60 tiles (~ 149MB) * Sub-resolution 2: 2550x1913 pixels in 40x30 tiles (~ 37MB) * Sub-resolution 3: 1275x957 pixels in 20x15 tiles (~ 9MB) * Sub-resolution 4: 638x479 pixels in 10x8 tiles (~ 2.3MB) * Sub-resolution 5: 319x240 pixels in 5x4 tiles (~ 598KB) * Sub-resolution 6: 160x120 pixels in 3x2 tiles (~ 150KB) * Sub-resolution 7: 80x60 pixels in 2x1 tiles (~ 37.5KB) * Sub-resolution 8: 40x30 pixels in a single tile (~ 9KB) Total size: ~ 793MB A viewer (like photo editing software) will access only the needed part... In the worst case, for a 1680x1050 display, 53x33 tiles (56MB) are needed in memory, whatever portion of the 