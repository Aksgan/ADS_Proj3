the requirements of their CLASS for this FEATURE. |- | | Inspect Code | | A CODE INSPECTION with the FEATURE TEAM members or with other project members is held either before or after the unit test task. The decision to inspect within the FEATURE TEAM or with other project team members is that of the Chief Programmer. The decision to inspect before or after unit test is that of the Chief Programmer. |- | | Conduct Unit Test | | The development CLASS owner tests their code to ensure all requirements of their CLASS are satisfied. The Chief Programmer determines what FEATURE TEAM-level unit testing is required (if any). That is, if any testing across the CLASSES developed for this FEATURE is required. |- | | Promote to Build | | PROMOTION to the BUILD of CLASSES is only possible after a successful CODE INSPECTION. The Chief Programmer tracks the individual CLASSES being promoted, through feedback from the developers, and is the integration point for the entire FEATURE. |} {| class="wikitable" |+ Table 3: Concepts ! | CONCEPT ! | Definition (source) |- | | <span id="BUILD PROMOTION">BUILD PROMOTION</span> | | Wiki: [[Software build]] |- | | <span id="BUSINESS ACTIVITY">BUSINESS ACTIVITY</span> | | Activity undertaken as part of a commercial enterprise. (http://www.thefreedictionary.com/) |- | | <span id="CLASS">CLASS</span> | | Wiki: [[Class (computer science)|Class]] |- | | <span id="CLASS AND METHOD PROLOGUE">CLASS AND METHOD PROLOGUE</span> | | The main goal of a class and method prologue is to explain the purpose of the class or method. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="CLASS DIAGRAM">CLASS DIAGRAM</span> | | Wiki: [[Class diagram]] |- | | <span id="CLASS OWNER">CLASS OWNER</span> | | A class owner is someone responsible for the design and implementation of a class. (http://www.hst.fhso.ch/Archiv/2000/swe/otherResources/ch03/fdd.PDF) |- | | <span id="CLASS OWNER LIST">CLASS OWNER LIST</span> | | A class owner list is a list of class owners. (http://www.hst.fhso.ch/Archiv/2000/swe/otherResources/ch03/fdd.PDF) |- | | <span id="CODE INSPECTION">CODE INSPECTION</span> | | Wiki: [[Code review]] |- | | <span id="COVERING MEMO">COVERING MEMO</span> | | A paper that integrates and describes the design package such that it stands on its own for reviewers. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="DATE">DATE</span> | | Wiki: [[Calendar date]] |- | | <span id="DESIGN ALTERNATIVE">DESIGN ALTERNATIVE</span> | | Section of the Design Package containing the diagram files in the version control system, alternative designs, design decisions, requirements clarifications and notes. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="DESIGN PACKAGE">DESIGN PACKAGE</span> | | Package containing: * A covering memo, or paper, that integrates and describes the design package such that it stands on its own for reviewers. * The referenced requirements (if any) in the form of documents and all related confirmation memos and supporting documentation. * The Sequence diagram(s). * Design alternatives (if any) * The object model with new/updated classes, methods and attributes. * The <your tool> generated output for the class and method prologues created or modified by this design. * Calendar/To-Do task-list entries for action items on affected classes for each team member. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="DEVELOPMENT SEQUENCE">DEVELOPMENT SEQUENCE</span> | | The planned order for completion of each business activity. The planning team shall assign a date (month and year only) for completion of each business activity. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="DOMAIN OVERVIEW">DOMAIN OVERVIEW</span> | | The domain expert gives an overview of the domain area for the feature to be designed. This should also include domain information that is related to the feature but not necessarily a part of its implementation. This is an optional task based on the complexity of the feature and/or its interactions. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="EXPLANATORY NOTE">EXPLANATORY NOTE</span> | | Notes made on detailed or complex model shapes and on significant model alternatives are made for future reference by the project. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="FEATURE">FEATURE</span> | | Features are granular functions expressed in client-valued terms using this naming template: <action> <result> <object>. For example, calculate the total of a sale, calculate the total quantity sold by a retail outlet for an item description. Features are granular in accordance with the rule that a feature will take no more than two weeks to complete, but not so granular as to be at the level of getters and setters. Two weeks is an upper limit; most features take less than this time. When a business activity step looks larger than two weeks, the step is broken into smaller steps that then become features. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="FEATURE DRIVEN DEVELOPMENT">FEATURE DRIVEN DEVELOPMENT</span> | | Wiki: Feature Driven Development |- | | <span id="FEATURE LIST">FEATURE LIST</span> | | A Feature list is intended as a potentially client deliverable piece of work. (http://www.uidesign.net/2001/papers/fddui.html) |- | | <span id="FEATURE LIST TEAM">FEATURE LIST TEAM</span> | | The team comprises the chief programmers from the modeling team in process. Their task is to make a Feature list. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="FEATURE TEAM">FEATURE TEAM</span> | | A feature team is a small, dynamically formed team that develops the feature(s) that a Chief Programmer selects for development. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="IMPLEMENTATION">IMPLEMENTATION</span> | | Wiki: [[Implementation]] |- | | <span id="MODELING TEAM">MODELING TEAM</span> | | The modeling team comprises permanent members from the domain and development areas, specifically the domain experts and the chief programmers. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="OVERALL MODEL">OVERALL MODEL</span> | | A merged domain area model. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="PLANNING">PLANNING</span> | | Wiki: [[Planning]] |- | | <span id="PLANNING TEAM">PLANNING TEAM</span> | | The planning team comprises the development manager plus the chief programmers for making a planning. (http://www.featuredrivendevelopment.com/files/fddprocessesA4.pdf) |- | | <span id="REFERENCE">REFERENCE</span> | | Wiki: [[Reference (work)]] |- | | <span id="REFERENCED REQUIREMENT">REFERENCED REQUIREMENT</span> | | Need or expectation that is stated, generally implied or obligatory. (www.finnevo.fi/eng/contents/iso9000_terms.htm) |- | | <span id="REFINEMENT">REFINEMENT</span> | | Wiki: [[Refinement]] |- | | <span id="SEQUENCE DIAGRAM">SEQUENCE DIAGRAM</span> | | Wiki: [[Sequence diagram]] |- | | <span id="SMALL GROUP">SMALL GROUP</span> | | Group of no more than three that will compose a model 