machines, that match their models and safety rules. == Pens == Pen-modding is the act of combining many pen parts either to help with [[pen spinning]], in which a perfect balance is desired to create an ideal spinning pen, or simply for decoration. These pen mods can either be made by combining parts from different pens and/or mechanical pencils, or by buying modded pens online. In some cases, pen mods can exceed over $30–40 USD per pen<ref>[http://penwish.com Custom Pen Spinning Gear, Japanese Mechanical Pencils and Pens]. PenWish. Retrieved on 2010-11-26.</ref>. Recently, the practice of pen modding has grown dramatically in popularity, with several mod brands appearing, and multiple online communities dedicated to pen modding and spinning<ref>[http://www.upsb.info/wiki/index.php?title=Main_Page Main Page - UPSB]. Upsb.info. Retrieved on 2010-11-26.</ref>. == See also == * [[Artistic computer game modification]] * [[Cartridge tilting]] which modifies a game with often unpredictable effects * [[Case modding|Computer case modding]] * [[DIY audio]] Audio equipment modifications and construction. * [[Holga]] An inexpensive brand of medium-format cameras that are often modded in numerous ways by their owners. * [[Hot rod|Hot Rodding]] * [[Mod (computer gaming)]] * [[Orthopedics]] == References == {{Commons category}} {{reflist}} [[Category:Computer hardware tuning]] [[Category:Computing culture]] [[ca:Modding]] [[es:Modding]] [[fr:Tuning PC]] [[it:Modding]] [[he:מודינג]] [[hu:Modding]] [[pt:Modding]] [[ru:Моддинг]] [[fi:Modaus]] [[sv:Modding]]</text> </page> <page> <id>24863</id> <title>Model-driven architecture</title> <text>'''Model-driven architecture''' (MDA) is a [[software design]] approach for the development of [[software system]]s. It provides a set of guidelines for the structuring of specifications, which are expressed as [[computer model|model]]s. Model-driven architecture is a kind of [[domain engineering]], and supports [[model-driven engineering]] of software systems. It was launched by the [[Object Management Group]] (OMG) in 2001.<ref name=proposal>[http://www.omg.org/news/releases/pr2001/2001-03-08a.htm "OMG pursues new strategic direction to build on success of past efforts"]</ref> == Overview == The Model-Driven Architecture approach defines system functionality using a [[platform-independent model]] (PIM) using an appropriate [[domain-specific language]] (DSL){{Citation needed|date=January 2011}}. Then, given a [[platform definition model]] (PDM) corresponding to [[CORBA]], [[.NET Framework|.NET]], the Web, etc., the PIM is translated to one or more [[platform-specific model]]s (PSMs) that computers can run. This requires mappings and transformations and should be modeled too. The PSM may use different [[Domain Specific Language]]s (DSLs), or a [[General-purpose programming languages|General Purpose Language]] (GPL) like [[Java (programming language)|Java]], [[C Sharp (programming language)|C#]], [[PHP]], [[Python (programming language)|Python]], etc.{{Citation needed|date=February 2007}}. Automated tools generally perform this translation. The OMG organization provides rough specifications rather than implementations, often as answers to [[Request for Proposal|Requests for Proposals]] (RFPs). Implementations come from private companies or open source groups. MDA principles can also apply to other areas such as [[business process modeling]] (BPM) where the PIM is translated to either automated or manual processes{{Citation needed|date=February 2007}}. === Related standards === The MDA model is related to multiple standards, including the [[Unified Modeling Language]] (UML), the [[Meta-Object Facility]] (MOF), [[XMI|XML Metadata Interchange]] (XMI), [[Enterprise Distributed Object Computing]] (EDOC), the [[Software Process Engineering Metamodel]] (SPEM), and the [[Common Warehouse Metamodel]] (CWM). Note that the term “architecture” in Model-driven architecture does not refer to the architecture of the system being modeled, but rather to the architecture of the various standards and model forms that serve as the technology basis for MDA. [[Executable UML]] is another specific approach to implement MDA === Trademark === The [[Object Management Group]] holds trademarks on MDA, as well as several similar terms including Model Driven Application Development, Model Based Application Development, Model Based Programming, and [http://www.omg.org/legal/tm_list.htm others]. The main acronym that has not yet been deposited by [[OMG]] until now is [[Model-driven engineering|Model-driven engineering (MDE)]]. As a consequence, the research community uses MDE to refer to general model engineering ideas, without committing to strict [[OMG]] standards.{{Citation needed|date=February 2007}} == Model-driven architecture topics == === MDA approach === OMG focuses Model-driven architecture on forward engineering, i.e. producing code from abstract, human-elaborated modelling diagrams (e.g. class diagrams){{Citation needed|date=February 2007}}. OMG's ADTF (Analysis and Design Task Force) group leads this effort. With some humour, the group chose ADM (MDA backwards) to name the study of reverse engineering. ADM decodes to Architecture-Driven Modernization. The objective of ADM is to produce standards for model-based reverse engineering of legacy systems <ref>adm website http://adm.omg.org</ref>. [[Knowledge Discovery Metamodel]] (KDM) is the furthest along of these efforts, and describes information systems in terms of various assets (programs, specifications, data, test files, database schemas, etc.). One of the main aims of the MDA is to separate design from architecture{{Citation needed|date=July 2009}}. As the concepts and technologies used to realize designs and the concepts and technologies used to realize architectures have changed at their own pace, decoupling them allows system developers to choose from the best and most fitting in both domains. The design addresses the functional ([[use case]]) requirements while architecture provides the infrastructure through which non-functional requirements like scalability, reliability and performance are realized. MDA envisages that the platform independent model (PIM), which represents a conceptual design realizing the functional requirements, will survive changes in realization technologies and [[software architecture]]s. Of particular importance to model-driven architecture is the notion of [[model transformation]]. A specific standard language for model transformation has been defined by [[Object Management Group|OMG]] called [[QVT]]. === MDA tools === The OMG organization provides rough specifications rather than implementations, often as answers to [[Request for Proposal|Requests for Proposals]] (RFPs). The OMG documents the overall process in a document called the [[MDA Guide]]. Basically, an MDA tool is a tool used to develop, interpret, compare, align, measure, verify, transform, etc. models or metamodels.<ref>{{cite paper|author=Bézivin, J, Gérard, S, Muller, P-A, and Rioux, L|title=MDA components: Challenges and Opportunities|version = In: Metamodelling for MDA|date=2003|url=http://www.sciences.univ-nantes.fr/lina/atl/www/papers/MDAComponents-ChallengesOpportunities.V1.3.PDF}}</ref> In the following section "model" is interpreted as meaning any kind of model (e.g. a UML model) or metamodel (e.g. the CWM metamodel). In any MDA approach we have essentially two kinds of models: ''initial models'' are created manually by human agents while ''derived models'' are created automatically by programs. For example an analyst may create a UML initial model from its observation of some loose business situation while a Java model may be automatically derived from this UML model by a [[Model 