π<sub>2</sub> : ''C true'', ''then'' Ω;Γ {{Unicode|⊢}} [π<sub>1</sub>/''u''] π<sub>2</sub> : ''C true''. This framework of separating judgements into distinct collections of hypotheses, also known as ''multi-zoned'' or ''polyadic'' contexts, is very powerful and extensible; it has been applied for many different modal logics, and also for [[linear logic|linear]] and other [[substructural logic]]s, to give a few examples. However, relatively few systems of modal logic can be formalised directly in natural deduction; to give proof-theoretic characterisations of these systems, extensions such as labelling,<ref>The addition of labels to formulae permits much finer control of the conditions under which rules apply, allowing the more flexible techniques of [[analytic tableu]]x to be applied, as has been done in the case of [[labelled deduction]]. Labels also allow the naming of worlds in Kripke semantics; Simpson (1993) presents an influential technique for converting frame conditions of modal logics in Kripke semantics into inference rules in a natural deduction formalisation of [[hybrid logic]].</ref> or systems of deep inference<ref>Stouppa (2004) surveys the application of many proof theories, such as Avron and Pottinger's [[hypersequent]]s and Belnap's [[display logic]] to such modal logics as S5 and B.</ref> ==Comparison with other foundational approaches== ===Sequent calculus=== {{Main|Sequent calculus}} The sequent calculus is the chief alternative to natural deduction as a foundation of [[mathematical logic]]. In natural deduction the flow of information is bi-directional: elimination rules flow information downwards by deconstruction, and introduction rules flow information upwards by assembly. Thus, a natural deduction proof does not have a purely bottom-up or top-down reading, making it unsuitable for automation in proof search, or even for proof checking (or type-checking in type theory). To address this fact, [[Gerhard Gentzen|Gentzen]] in 1935 proposed his [[sequent calculus]], though he initially intended it as a technical device for clarifying the consistency of [[predicate logic]]. [[Stephen Cole Kleene|Kleene]], in his seminal 1952 book ''Introduction to Metamathematics'' (ISBN 0-7204-2103-9), gave the first formulation of the sequent calculus in the modern style. In the sequent calculus all inference rules have a purely bottom-up reading. Inference rules can apply to elements on both sides of the [[Turnstile (symbol)|turnstile]]. (To differentiate from natural deduction, this article uses a double arrow ⇒ instead of the right tack {{Unicode|⊢}} for sequents.) The introduction rules of natural deduction are viewed as ''right rules'' in the sequent calculus, and are structurally very similar. The elimination rules on the other hand turn into ''left rules'' in the sequent calculus. To give an example, consider disjunction; the right rules are familiar: <table style="margin-left: 2em;"><tr><td> Γ ⇒ A --------- ∨R<sub>1</sub> Γ ⇒ A ∨ B </td><td with="10%"></td><td> Γ ⇒ B --------- ∨R<sub>2</sub> Γ ⇒ A ∨ B </td></tr></table> On the left: <table style="margin-left: 2em;"><tr><td> Γ, u:A ⇒ C Γ, v:B ⇒ C --------------------------- ∨L Γ, w: (A ∨ B) ⇒ C </td></tr></table> Recall the ∨E rule of natural deduction in localised form: <table style="margin-left: 2em;"><tr><td> Γ {{Unicode|⊢}} A ∨ B Γ, u:A {{Unicode|⊢}} C Γ, v:B {{Unicode|⊢}} C --------------------------------------- ∨E Γ {{Unicode|⊢}} C </td></tr></table> The proposition ''A ∨ B'', which is the succedent of a premise in ∨E, turns into a hypothesis of the conclusion in the left rule ∨L. Thus, left rules can be seen as a sort of inverted elimination rule. This observation can be illustrated as follows: <table align="center"> <tr><th>natural deduction</th><td></td><th>sequent calculus</th></tr> <tr><td> ------ hyp | | elim. rules | ↓ ---------------------- ↑↓ meet ↑ | | intro. rules | conclusion </td><td width="20%" align="center">⇒</td><td> --------------------------- init ↑ ↑ | | | left rules | right rules | | conclusion </td></tr></table> In the sequent calculus, the left and right rules are performed in lock-step until one reaches the ''initial sequent'', which corresponds to the meeting point of elimination and introduction rules in natural deduction. These initial rules are superficially similar to the hypothesis rule of natural deduction, but in the sequent calculus they describe a ''transposition'' or a ''handshake'' of a left and a right proposition: <table style="margin-left: 2em;"><tr><td> ---------- init Γ, u:A ⇒ A </td></tr></table> The correspondence between the sequent calculus and natural deduction is a pair of soundness and completeness theorems, which are both provable by means of an inductive argument. ; Soundness of ⇒ wrt. {{Unicode|⊢}} : ''If'' Γ ⇒ ''A'', ''then'' Γ {{Unicode|⊢}} ''A''. ; Completeness of ⇒ wrt. {{Unicode|⊢}} : ''If'' Γ {{Unicode|⊢}} ''A'', ''then'' Γ ⇒ ''A''. It is clear by these theorems that the sequent calculus does not change the notion of truth, because the same collection of propositions remain true. Thus, one can use the same proof objects as before in sequent calculus derivations. As an example, consider the conjunctions. The right rule is virtually identical to the introduction rule <table style="margin-left: 2em;"> <tr><th>sequent calculus</th><td></td><th>natural deduction</th></tr> <tr><td> Γ ⇒ π<sub>1</sub> : A Γ ⇒ π<sub>2</sub> : B --------------------------- ∧R Γ ⇒ (π<sub>1</sub>, π<sub>2</sub>) : A ∧ B </td><td width="20%"></td><td> Γ {{Unicode|⊢}} π<sub>1</sub> : A Γ {{Unicode|⊢}} π<sub>2</sub> : B ------------------------- ∧I Γ {{Unicode|⊢}} (π<sub>1</sub>, π<sub>2</sub>) : A ∧ B </td></tr> </table> The left rule, however, performs some additional substitutions that are not performed in the corresponding elimination rules. <table style="margin-left: 2em;"> <tr><th>sequent calculus</th><td></td><th>natural deduction</th></tr> <tr><td> Γ, v: (A ∧ B), u:A ⇒ π : C -------------------------------- ∧L<sub>1</sub> Γ, v: (A ∧ B) ⇒ ['''fst''' v/u] π : C </td><td width="20%"></td><td> Γ {{Unicode|⊢}} π : A ∧ B ------------- ∧E<sub>1</sub> Γ {{Unicode|⊢}} '''fst''' π : A </td></tr> <tr><td> Γ, v: (A ∧ B), u:B ⇒ π : C -------------------------------- ∧L<sub>2</sub> Γ, v: (A ∧ B) ⇒ ['''snd''' v/u] π : C </td><td width="20%"></td><td> Γ {{Unicode|⊢}} π : A ∧ B ------------- ∧E<sub>2</sub> Γ {{Unicode|⊢}} '''snd''' π : B </td></tr> </table> The kinds of proofs generated in the sequent calculus are therefore rather different from those of natural deduction. The sequent calculus produces proofs in what is known as the ''β-normal η-long'' form, which corresponds to a canonical representation of the normal form of the natural deduction proof. If one attempts to describe these proofs using natural deduction itself, one obtains what is called the ''intercalation calculus'' (first described by John Byrnes 