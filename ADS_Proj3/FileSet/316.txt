systems to produce better pictures. The problem for the MSX 1 was that many European software companies who converted Spectrum games to MSX 1 ignored all the improvements the MSX 1 had over the Spectrum, and thus the resulting MSX 1 versions had the same amount of attribute clash as the original Spectrum games. To ease conversion, the software developers simply copied the single attribute byte value of the Spectrum to all eight corresponding attribute bytes of the MSX 1. For the same reason, the software companies also ignored the sprite capabilities of the MSX 1, and because the video display capabilities were otherwise quite similar (256×192 resolution, 16 colors), both systems produced virtually identical displays for the same game. In contrast, Japanese MSX 1 games did use all the capabilities of MSX 1, often resulting in better looking games. ==Effects== To avoid attribute clash, static graphic displays had to be constructed with care. Finely-detailed colour graphics were impossible, as colour could only be applied in 8×8 pixel blocks. Careful design could achieve impressive results, as could synchronizing colour changes to the refresh rate of the display &mdash; usually a television set. However, animated displays were more difficult &mdash; a distinct drawback in a machine whose primary use was playing [[video game]]s. If just one pixel in an 8×8 block was recoloured because a moving part of the display touched it, the entire block would change colour. Thus detailed moving graphics caused large ugly fringes of rapidly-changing colours to follow them around. ==Workarounds== Early software simply ignored the problem. Later, the standard workaround was to use colour for static display elements &mdash; such as a decorative border around the edges of the screen, which might include score displays and so on, or some form of instrumentation &mdash; with a smaller central [[monochrome]] area containing all the animated graphics. This also made graphics faster, as less of the screen had to be updated &mdash; both a smaller region, plus only changing pixel information and leaving the colour area untouched. Some late Spectrum software, such as FTL's ''[[Lightforce (video game)|Lightforce]]'', used extremely careful graphics design to achieve full-colour moving graphics, essentially by limiting both the design of the onscreen elements and their paths of motion to 8×8 colour resolution boundaries. The moving elements were thus relatively large and rather blocky or squarish, and their movement was constrained, but this was not visually obvious and the sight of moving full-colour graphics was hugely impressive to Spectrum owners. No mainstream developers were able to find a suitable all-round fix for the attribute clash problem, instead preferring to use the monochrome graphics method when fast, clear graphics were needed, and full-colour graphics when the situation permitted. It was possible by paying careful attention to timing to modify the attribute area of RAM at certain specific times as the display was drawn - let the display hardware draw one line of the display, then change the attribute RAM before the next line is drawn to give the effect of different attributes for each individual line. These changes had to be done in software and were time-consuming to program, meaning that this technique was usually limited to special effects. This technique was also very popular in the demoscene. ==Screenshots showing the problem and solutions== {| class="wikitable" |- bgcolor="#CCCCCC" |- | Most illustrative of the problem were games pre-1987 that ignored attribute clash, such as shown here by the game ''[[Knight Tyme]]''. Note how the central character (the small figure with a knight's helmet just to the right of the green plant) is almost hidden by the attribute clash that has occurred. ''Knight Tyme'' was one of the few games that let players select between two modes of attribute clash: one which ignored main character attributes (producing the shown effect), and one which applied main character attributes, turning any graphics surrounding the character white. || [[Image:Knight tyme attribute clash.png|center|256px]] |- | One workaround was to simply render the graphics in two colours, otherwise known as monochrome, as shown here with the Spectrum version of ''[[Knight Lore]]'' in 1984. || [[Image:Knight_lore_3.gif|center|256px]] |- | Many games used full-colour backgrounds and "character scrolling" (where the environment was scrolled eight pixels at a time), but monochrome sprites that were effectively transparent, as displayed here in ''[[Double Dragon (arcade game)|Double Dragon]]''. The sprites in this case were drawn in such a way so they stand out, avoiding dependence on colour. Many games used this method with smooth pixel-by-pixel scrolling, but the attribute clash as elements of one character block were "passed" to the next were clearly visible. || [[Image:Spectrum Double Dragon.png|320px]] |- | A prominent (and less successful) example of the use of full-colour graphics was the Spectrum conversion of ''[[Altered Beast]]''. Note that the game suffers from considerable attribute clash. || [[Image:Spectrum Altered Beast.png|320px]] |- | Programmer [[Don Priestley]] developed a distinctive style for several of his games by using large, cartoon-like sprites which were carefully designed to span whole character blocks without appearing unduly square. A disadvantage of this technique was that the gameplay had to be designed around the graphics, and so it was not useful for [[porting|ports]] from other platforms. Games that used this technique included ''Popeye'', ''[[The Trap Door (game)|The Trap Door]]'' (shown right), ''Through the Trapdoor'', and ''[[Flunky (computer game)|Flunky]]''. Other developers who used a similar technique included [[Mike Singleton]], with ''[[Dark Sceptre]]'', and Gang of Five, with ''[[Dan Dare: Pilot of the Future]]''. || [[Image:ZX trapdoor1.png|320px]]. |- |} ==References== * [http://www.worldofspectrum.org/faq/reference/reference.htm comp.sys.sinclair FAQ: Reference] [[Category:Computer graphic artifacts]] [[Category:ZX Spectrum]] [[ru:Конфликт атрибутов]]</text> </page> <page> <id>2722</id> <title>Attributor</title> <text>{{COI|date=February 2010}} '''Attributor''' is a subscription based Internet-monitoring [[web service]] targeted at publishers. Attributor also offers a free service - [http://www.fairshare.cc FairShare ] - for bloggers through a partnership with Creative Commons. {{Infobox company |name = Attributor Corporation |logo = <!-- Commented out because image was deleted: [[Image:Attributor.gif|center|180px]] --> |caption = |type = [[Private company|Private]] |founder = Jim Pitkow, Jim Brock |location_city = |location_country = |location = |locations = |area_served = 