project. |- | rowspan="2" | '''Build Feature List''' | | Form Features List Team | | The FEATURE LIST TEAM comprises the chief programmers from the MODELING TEAM in the process ‘Develop Overall Model’. |- | | Build Features List | | The FEATURE LIST TEAM shall identify the FEATURE LIST using the knowledge obtained from the process ‘Develop Overall Model’. This is a simple functional decomposition into SUBJECT AREAS that come from the partitioning of the domain by the domain experts for their domain area walkthroughs in the process ‘Develop Overall Model’. It is decomposed into SUBJECT AREAS that comprise BUSINESS ACTIVITIES that comprise BUSINESS ACTIVITY steps (FEATURES). |- | rowspan="4" | '''Plan By Feature''' | | Form Planning Team | | The PLANNING TEAM comprises the development manager plus the chief programmers. |- | | Determine Development Sequence | | The main tasks in the process ‘Plan By Feature’ are not a strict sequence. Like many PLANNING activities they are considered together, with REFINEMENTS made from one or more tasks and then considering the others again. The PLANNING TEAM shall assign a DATE (month and year only) for completion of each BUSINESS ACTIVITY. The identification of the BUSINESS ACTIVITY and the completion DATE (and thus the DEVELOPMENT SEQUENCE) is based on: * Dependencies between FEATURES in terms of CLASSES involved; * Balancing load across CLASS OWNERS; * The complexity of the FEATURES to be implemented; * Bringing forward high-risk or complex BUSINESS ACTIVITIES; * Consideration of any external (visible) milestones such as [[Development stage#Beta|betas]], previews, feedback checkpoints and the "whole products" that satisfy such milestones. |- | | Assign Business Activities to Chief Programmers | | The PLANNING TEAM shall assign chief programmers as owners of BUSINESS ACTIVITIES. The assignment is based on: * The DEVELOPMENT SEQUENCE; * Dependencies between FEATURES in terms of CLASSES involved; * Balancing load across CLASS OWNERS (remember that chief programmers are also CLASS OWNERS); * The complexity of the FEATURES to be implemented. |- | | Assign Classes to Developers | | The PLANNING TEAM shall assign developers as CLASS OWNERS. Developers own multiple CLASSES. The assignment of CLASSES to developers is based on: * Balancing load across developers; * The complexity of the CLASSES; * The usage (e.g. high-use) of the CLASSES; * The DEVELOPMENT SEQUENCE. |- | rowspan="7" | '''Design By Feature''' | | Form Feature Team | | The Chief Programmer identifies the CLASSES likely to be involved in the design of this set of FEATURES and updates the FEATURE database accordingly. From the CLASS OWNER LIST, the Chief Programmer identifies the developers needed to form the FEATURE TEAM. As part of this step, the Chief Programmer creates a new DESIGN PACKAGE for the FEATURES(S) as part of the work package. |- | | Conduct Domain Walk-through | | The domain expert gives a DOMAIN OVERVIEW of the domain area for the FEATURE to be designed. This should also include domain information that is related to the FEATURE but not necessarily a part of its implementation. This is an optional task based on the complexity of the FEATURE and/or its interactions. |- | | Study Referenced Documents | | The FEATURE TEAM studies the REFERENCED REQUIREMENT(S) for the feature to be designed, all COVERING MEMOS, screen designs, external system interface specifications and any other supporting documentation. This is an optional task based on the complexity of the FEATURE and/or its interactions. |- | | Develop Sequence Diagram(s) | | Develop the SEQUENCE DIAGRAM(S) required for the FEATURE to be designed. The diagram files should be checked into the [[version control system]]. Any ALTERNATIVE DESIGNS, design decisions, requirements clarifications and EXPLANATORY NOTES are also recorded and written up in the DESIGN ALTERNATIVES section of the DESIGN PACKAGE. |- | | Refine Object Model | | The Chief Programmer creates a FEATURE TEAM Area for the FEATURE(S). This area is either a directory on the file server or a directory on their [[Personal Computer|PC]] that is backed up to the server by the Chief Programmer as required or utilizes work area support in your version control system. The purpose of the FEATURE TEAM Area is that work in progress by the FEATURE TEAM can be shared and is visible amongst the FEATURE TEAM but is not visible to the rest of the project. The Chief Programmer makes some REFINEMENTS on the model to add new / updated CLASSES, methods, attributes and/or to make changes to existing CLASSES, methods or [[Attribute (computing)|attribute]]s based on the SEQUENCE DIAGRAM(S) defined for the FEATURE(S). This results in the implementation language source files being updated in the FEATURE TEAM Area. The Chief Programmer creates model diagrams in a publishable format. These files should be checked into the version control system and submitted for publishing on the project [[intranet]]. |- | | Write Class and Method Prologue | | Using the updated implementation language source files from the ‘Refine Object Model’ task in the shared FEATURE TEAM Area, the development owner of each CLASS writes the CLASS AND METHOD PROLOGUE for each item defined by the FEATURE and SEQUENCE DIAGRAM(S). This includes [[parameter]] types, [[return type]]s, [[exceptions]] and messages. Once each developer has completed this task, the Chief Programmer generates the [[API documentation]] using <your tool> and submits it for publication on the project intranet. |- | | Design Inspection | | A design inspection with the FEATURE TEAM members or with other project members is held. The decision to inspect within the FEATURE TEAM or with other project team members is that of the Chief Programmer. On acceptance a TODO TASK LIST is generated per affected CLASS, and each team member adds their tasks to their calendar task list. The Chief Programmer must also merge changes from the shared FEATURE TEAM Area into the change control system. |- | rowspan="4" | '''Build By Feature''' | | Implement Classes and Methods | | The development CLASS owners will perform the IMPLEMENTATION of the items necessary to satisfy 