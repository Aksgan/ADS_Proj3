process includes the diffusion of the investigation results impact and the evaluation of their impact in the academic community. The impact and visibility are processed from the articles consulted, which allow us make a detailed follow up. The statistics obtained are: * Site use * Articles report * Visits report * Consults comparatives * Global use reports * Internationalization index * Individual reports * Editorial reports * Institutional reports ==References == Eduardo Aguado López, Rosario Rogel Salazar, Arianna Becerril García, and Honorio García Flores, [http://dcpapers.dublincore.org/ojs/pubs/article/view/856/852 "Redalyc OAI - PMH: the open archives initiative protocol for metadata harvesting (protocol version 2.0)]" ''in'' '''International Conference on Dublin Core and Metadata Applications archive: Proceedings of the 2006 international conference on Dublin Core and Metadata Applications: metadata for knowledge and learning (Manzanillo, Colima, Mexico)''', Dublin Core Metadata Initiative: 2006, pages 244-252. ISBN 970-692-268-7 Ricyt, (2002), El estado de la ciencia. Principales indicadores de ciencia y tecnología iberoamericanos / interamericanos 2001, Red iberoamericana de indicadores de ciencia y tecnología (Ricyt), Buenos Aires. William Miller, Rita M. Pellen (2006), Evolving Internet References Resources, Binghamton. Katz JS and Hicks D (1997). 'Bibliometric Indicators for National Systems of Innovation' prepared for IDEA project funded by TSER program of the EC, ESRC Centre on Science, Technology, Energy and Environment Policy [[Science Policy Research Unit]], Brighton. Narin, F. (1976). Evaluative Bibliometrics: The Use of Publication and Citation Analysis in the Evaluation of Scientific Activity, Cherry Hill. [[Category:Open access archives]]</text> </page> <page> <id>31578</id> <title>Reduced cost</title> <text>{{citations missing|date=May 2009}} In [[linear programming]], '''reduced cost''', or '''opportunity cost''', is the amount by which an [[objective function]] coefficient would have to improve (so increase for maximization problem, decrease for minimization problem) before it would be possible for a corresponding variable to assume a positive value in the optimal solution. It is the cost for increasing a variable by a small amount, i.e., the first derivative from a certain point on the [[polyhedron]] that constrains the problem. When the point is a vertex in the polyhedron, the variable with the most extreme cost, negatively for minimisation and positively maximisation, is sometimes referred to as the '''steepest edge'''. Given a system minimize <math>\mathbf{c}^T\mathbf{x}</math> subject to <math>\mathbf{Ax}\leq\mathbf{b}, \mathbf{x}\geq 0</math>, the reduced cost vector can be computed as <math>\mathbf{c} - \mathbf{y}^T \mathbf{A}</math>, where <math>\mathbf{y}</math> is the dual cost vector. It follows directly that for a minimisation problem, any non-[[basic variable]]s at their lower bounds with strictly negative reduced costs are eligible to enter that basis, while any basic variables must have a reduced cost that is exactly 0. For a maximisation problem, the non-basic variables at their lower bounds that are eligible for entering the basis have a strictly positive reduced cost. == Interpretation == For the case where x and y are optimal, the reduced costs can help explain why variables attain the value they do. For each variable, the corresponding sum of that stuff gives the reduced cost show which constraints forces the variable up and down. For non-basic variables, the distance to zero over the gives the minimal change in the object coefficient to change the solution vector x. == Reduced costs in pivot strategy == In principle, a good [[pivot strategy]] would be to select whichever variable has the greatest reduced cost. However, the steepest edge might ultimately not be the most attractive, as the edge might be very short, thus affording only a small betterment of the object function value. From a computational view, another problem is that to compute the steepest edge, an inner product must be computed for every variable in the system, making the computational cost too high in many cases. The [[Devex algorithm]] attempts to overcome the latter problem by estimating the reduced costs rather than calculating them at every pivot step, exploiting that a pivot step might not alter the reduced costs of all variables dramatically. == See also == * [[Linear programming]] * [[Shadow price]] ==References== {{reflist}} [[Category:Mathematical optimization]]</text> </page> <page> <id>31583</id> <title>Reduction (complexity)</title> <text>[[Image:3SAT reduced too VC.svg|thumb|300px|Example of a reduction from a [[boolean satisfiability problem]] to a [[vertex cover problem]]. Blue vertices form a vertex cover which corresponds to [[truth value]]s.]] In [[computability theory]] and [[computational complexity theory]], a '''reduction''' is a transformation of one [[computational problem|problem]] into another problem. Depending on the transformation used this can be used to define [[complexity class]]es on a set of problems. Intuitively, problem A is reducible to problem B if solutions to B exist and give solutions to A whenever A has solutions. Thus, solving A cannot be harder than solving B. We write A ≤<sub>m</sub> B, usually with a subscript on the ≤ to indicate the type of reduction being used (m : mapping reduction, p : polynomial reduction). ==Introduction== Often we find ourselves trying to solve a problem that is similar to a problem we've already solved. In these cases, often a quick way of solving the new problem is to transform each instance of the new problem into instances of the old problem, solve these using our existing solution, and then use these to obtain our final solution. This is perhaps the most obvious use of reductions. Another, more subtle use is this: suppose we have a problem that we've proven is hard to solve, and we have a similar new problem. We might suspect that it, too, is hard to solve. We argue by contradiction: suppose the new problem is easy to solve. Then, if we can show that every instance of the old problem can be solved easily by transforming it into instances of the new problem and solving those, we have a contradiction. This establishes that the new problem is also hard. A very simple example of a reduction is from ''multiplication'' to ''squaring''. Suppose all we know how to do is to add, subtract, take squares, and divide by two. We can use this knowledge, combined with the following formula, to obtain the product of any two numbers: : <math>a \times b = \frac{\left(\left(a + b\right)^{2} - a^{2} - b^{2}\right)}{2}</math> We also 