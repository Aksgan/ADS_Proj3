random number is returned in the variable RV GOSUB 270 Count the available system memory The available system memory is returned in the variable FR GOSUB 300 Convert a numerical variable to a string The number is passed in the variable SR The string is returned in the variable SR$ GOSUB 310 Like GOSUB 300, additional arguments: A fixed string length is passed in the variable CT The position of the decimal point is passed in the variable CN GOSUB 350 Output a string on the printer The string to print is passed in the variable SR$ GOSUB 360 Send a line break to the printer </pre> '''Further general rules and definitions''' A line of BASICODE code may only have a length of 60 characters, including line number and whitespace, and it may only contain one command. The argument for angular functions must be given in [[radian]]s. In BASICODE, the AND and OR logical operators may not be used for bitwise combination of numbers. When using string functions, possible differences in the character set of different computer types have to be considered. Variable names may be no longer than two characters (one or two capital letters or a capital letter and a digit). Each variable has to be given a value before it is used for the first time with commands or functions, because implicit initialisation does not work on all computer types. Numerical variables are of single precision (six allowed digits). String variables have a maximum length of 255 characters. Each BASICODE programs starts a line number 1000. The lines above 30000 are used for comments, and lines above 32000 for [[metadata]] like the name of the author or version information. ===BASICODE 3 / 3C=== '''Commands, functions and operators allowed in BASICODE 3 / 3C''' In regard to the allowed BASIC commands, BASICODE 3 / 3C and BASICODE 2 differ only slightly. The biggest change is the addition of DEF FN for the definition of new functions. * Commands: <pre> DATA DEF FN DIM FOR GOSUB GOTO IF INPUT LET NEXT ON PRINT READ REM RESTORE RETURN STEP TAB THEN TO Differences to BASICODE 2: New : DEF FN LET Removed : END RUN STOP </pre> * Functions: <pre> ABS ASC ATN COS EXP INT LEN LOG SGN SIN SQR TAN VAL CHR$ LEFT$ MID$ RIGHT$ AND OR NOT </pre> * Mathematical operators: <pre> ^ Exponential function * Multiplication / Division + Addition and concatenation of string variables - Subtraction </pre> * Comparison operators: <pre> = <> < > <= >= </pre> '''Routines implemented in the Bascoder of BASICODE 3 / 3C''' Compared to its predecessor, the Bascoder subroutines of BASICODE 3/3C were greatly expanded. Especially the new functions for sound output (400), accessing external files (500-580) and graphics display (600-650) considerably increased the capabilities of BASICODE. <pre> GOTO 20 Start program, reset system, delete all variables GOSUB 100 Initialize text mode, clear screen GOSUB 110 Set the cursor to the specified position The position is passed in the variables HO and VE GOSUB 120 Get the position of the cursor The values are returned in the variables HO and VE GOSUB 150 Obvious display of a string on the display (Three spaces to the left and to the right) The string is passed in the variable SR$ GOSUB 200 Read a character from the keyboard The character is returned in the variable IN$ IN$ is returned empty if no key is pressed GOSUB 210 Wait for a keypress The character is returned in the variable IN$ GOSUB 220 Read a character from the screen The position is passed in the variables HO and VE The character is returned as a numerical value in the variable IN GOSUB 250 Play a short tone ("beep") GOSUB 260 Create a random number between 0 and 1 The random number is returned in the variable RV GOSUB 270 Count the available system memory The available system memory is returned in the variable FR GOSUB 280 Toggle the STOP/BREAK key between on and off The status is returned in the variable FR (FR=0 or FR=1) GOSUB 300 Convert a numerical variable to a string The number is passed in the variable SR The string is returned in the variable SR$ GOSUB 310 Like GOSUB 300, additional arguments: A fixed string length is passed in the variable CT The position of the decimal point is passed in the variable CN GOSUB 330 Convert all lowercase characters in a string to uppercase The string is passed and returned in the variable SR$ GOSUB 350 Output a string on the printer The string to print is passed in the variable SR$ GOSUB 360 Send a line break to the printer GOSUB 400 Play a tone The volume, length and pitch are passed in the variables SV, SD and SP GOSUB 450 Wait for a keypress for a predefined amount of time The time is passed in the variable SD (in units of 100 milliseconds) GOSUB 500 Open a file The file name is passed in the variable NF$ A file indentifier is defined in the variable NF GOSUB 540 Read a string from a file The identifier is passed in the variable NF The string is returned in the variable IN$ GOSUB 560 Write a string to a file The identifier is passed in the variable NF The string is passed in the variable SR$ GOSUB 580 Close a file The identifier is passed in the variable NF GOSUB 600 Initialize graphics mode, clear screen GOSUB 620 Paint a pixel The position is passed in the variables HO and VE The color is passed in the variable CN GOSUB 630 Print a line starting from the current graphics position The end position is passed in the variables HO and VE The color is passed in the variable CN The graphics position is defined by painting a pixel earlier GOSUB 650 Display a string in graphics mode The position is passed in the variables HO and VE 