the purpose and the limitations of ADSP. One of ADSP authors holds that it is better to publish private lists of ''discardable'' domains, maintained by competent people, rather than letting each domain state their policy<ref>{{cite web |url=http://mipassoc.org/pipermail/ietf-dkim/2008q1/008985.html |title=1: 1 and assertions about third parties |author=[[John Levine]] |date=Thu Jan 17 20:58:34 PST 2008 |work=IETF DKIM Discussion List |publisher=mipassoc |accessdate=2010-06-28}}</ref><ref>{{cite web |url=http://mipassoc.org/pipermail/ietf-dkim/2010q2/013664.html |title=shared drop lists |author=[[John Levine]] |date=Wed Jun 2 21:13:05 PDT 2010 |work=IETF DKIM Discussion List |publisher=mipassoc |accessdate=2010-06-09}}</ref>. Recognizing that the spec has shipped an untested prototype, the author of a popular ADSP implementation has proposed to downgrade ADSP to ''experimental'' status<ref>{{cite web |url=http://mipassoc.org/pipermail/ietf-dkim/2010q2/013643.html |title=the danger of ADSP, was list vs contributor |author=Murray S. Kucherawy |date=Wed Jun 2 14:58:13 PDT 2010 |work=IETF DKIM Discussion List |publisher=mipassoc |accessdate=2010-06-09}}</ref>. == History == For some time ADSP was known as ASP (Author Signing Practices)<ref>{{cite web |url=http://mipassoc.org/pipermail/ietf-dkim/2008q1/009316.html |title=Draft of ASP, Author Signing Policy |author=[[John Levine]] |date=Thu Jan 31 20:31:14 PST 2008 |work=IETF DKIM Discussion List |publisher=mipassoc |accessdate=2010-06-24}}</ref>, or the original SSP (Sender Signing Practices) considered misleading, until a protocol naming poll<ref>{{cite web |url=http://mipassoc.org/pipermail/ietf-dkim/2008q2/009866.html |title=Practices protocol naming poll (Closing issue 1550) |author=Stephen Farrell |date=Fri Apr 4 05:05:48 PDT 2008 |work=IETF DKIM Discussion List |publisher=mipassoc |accessdate=2010-06-24}}</ref>. [[Domainkeys]], DKIM's predecessor, had an ''Outbound Signing policy'' consisting of a single character, "-" if a domain signs all email, and "~" otherwise<ref>RFC 4870, Section 3.6 ''Policy Statement of Sending Domain''.</ref>. DKIM specification intentionally avoided signers' policies considerations, so that DKIM does not validate a message's "From" field ''directly'', but is a policy-neutral authentication protocol. The association between the signer and the right to use "From", a field visible to end users, was deferred to a separate specification<ref>{{cite web |url=http://mipassoc.org/pipermail/ietf-dkim/2005q3/000047.html |title=DKIM Threat Assessment v0.02 (very rough draft) |author=[[Eric Allman]] |date=Tue Aug 9 15:45:15 PDT 2005 |work=IETF DKIM Discussion List |publisher=mipassoc |accessdate=2010-06-24}}</ref>. The draft ADSP specification started in June 2007 and went through 11 revisions and uncountable discussions before being published as RFC in August 2009. [[Eric Allman]], the author of [[Sendmail]], was an editor of the ADSP specification for the [[IETF]] [[DKIM]] Working Group. ==See also== *[[DKIM]] *[[Simple Mail Transfer Protocol|SMTP]] *[[Phishing]] *[[E-mail authentication]] ==References== {{Reflist}} == External links == * [http://tools.ietf.org/html/rfc5617 DomainKeys Identified Mail (DKIM) Author Domain Signing Practices (ADSP)] * [http://tools.ietf.org/wg/dkim IETF DKIM working group] (started 2006) * [http://www.dkim.org/ Domain Keys Identified Mail (DKIM)] [[Category:Email authentication]]</text> </page> <page> <id>2799</id> <title>Author function</title> <text>The '''author function''' is a concept related to [[deconstruction|deconstructionist]] [[literary theory]]. It was developed by [[Michel Foucault]] in his [[1969]] essay "What is the Author?" ==Theory== Foucault posits that the [[legal system]] was central in the rise of the [[author]], as an author was needed (in order to be punished) for making [[Transgressive art|transgressive]] statements. This is made evident through the rise of the printing press during the time of the [[Protestant Reformation|Reformation]], when religious texts that circulated challenged the authority of the [[Catholic Church]]. The author function does not affect all texts in the same way. For example, the author of a science [[Textbook|text books]] is not clear or definable as the author of a well known [[novel]]. It is not a spontaneous creation or entity, but a carefully constructed social position. ==See also== *[[Roland Barthes]] *[[Death of the Author]] == References == * [http://books.google.com/books?hl=en&lr=&id=Ma77jxOOmBcC&oi=fnd&pg=PA3&dq=Foucault+author+function&ots=YiruK6BRjI&sig=YtAZ7vXy7bc3b5Kzoc6Z5VAm3f0 Archaeology of knowledge], by Michel Foucault, Alan Sheridan {{Reflist}} [[Category:Writing]] [[Category:deconstruction]] [[Category:literary theory]]</text> </page> <page> <id>2817</id> <title>AutoFetch</title> <text>{{Context|date=October 2009}} '''AutoFetch''' is a mechanism for automatically tuning [[object-relational mapping]] queries. Ali Ibrahim and William Cook at the University of Texas developed the idea of "AutoFetch" including an implementation for [http://sourceforge.net/projects/autofetch Hibernate] and followed later by an implementation in [[Ebean]]. == Benefits == ==== Improving the modularity of application code ==== AutoFetch uses the program state (typically the Call Stack) to classify queries. This means that AutoFetch can tune the same query depending on HOW it was called. For example, a Data Access API such as <code>findCustomer(int customerId)</code> can be tuned differently depending on the callers of the method. ==== Reducing the development and maintenance burden from Developers ==== Because AutoFetch automatically gathers the profiling information developers do not need to manually try and gather this information and apply performance optimizations to the code. AutoFetch can monitor the object graph usage so that if the usage changes the tuning of the query can change to suit. This reduces the code maintenance issues for developers and maintains optimal performance as usage changes over time. == How it works == AutoFetch collects object graph usage when queries are executed. It collects the 'profile' information which is later used to automatically tune the query on subsequent executions. The ORM query is tuned by determining and automatically adding the correct prefetch directives for each query. This improves the performance of the application by reducing "lazy loading". For ORMs that support partial objects AutoFetch can also tune the query by just including the properties that the application uses rather than all properties. == Future directions == AutoFetch profiling can also be used to select optimal query strategies such as "array fetching" where object graph use is known to be uneven (typically weighted to the first object graphs in a list). This could lead to much more efficient and higher performing object graph traversal than is currently possible with current techniques employed by ORM tools. == See also == *[[Object-relational mapping]] *[[Hibernate (Java)|Hibernate]] *[[Ebean]] == External links == * http://www.cs.utexas.edu/~aibrahim/autofetch/ * http://sourceforge.net/projects/autofetch/ [[Category:Object-relational mapping]]</text> </page> <page> <id>2818</id> <title>AutoIt</title> <text>{{Infobox Software | name = AutoIt | logo = [[Image:Autoitlogo.png]] | screenshot = | caption = | developer = Jonathan Bennett & AutoIt Team | latest_release_version = 3.3.6.1 | latest_release_date = {{Release date|2010|04|16}} | latest preview version = 3.3.5.6 | latest preview date = {{Release date|2010|2|28}} | operating_system = [[Microsoft Windows]] | genre = [[Graphical user interface|GUI]] [[Scripting language]] [[Automation]] | license = [[Freeware]] closed source | website = [http://www.autoitscript.com/autoit3/ www.autoitscript.com/autoit3/] }} '''AutoIt''' (pronounced '''aw'''-tow-it)<ref>[http://www.autoitscript.com/forum/index.php?s=&showtopic=22349&view=findpost&p=155491 Reply by Jon (AutoIt creator) to a forum topic discussing correct pronunciation]</ref> is a [[freeware]] [[automation]] [[programming language|language]] for [[Microsoft Windows]]. In its earliest release, the software 