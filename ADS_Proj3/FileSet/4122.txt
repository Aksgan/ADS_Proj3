[[handle leak|file handles]] are exhausted by repeated allocation without release. * [[Buffer overflow]], in which a program tries to store data past the end of allocated storage. This may or may not lead to an access violation or [[storage violation]]. These bugs can form a [[Software bug#Security_vulnerabilities|security vulnerability]]. * Excessive recursion which though logically valid causes [[stack overflow]] ===Multi-threading programming bugs=== * [[Deadlock]] * [[Race condition]] * Concurrency errors in [[Critical section]]s, [[Mutual exclusion]]s and other features of [[Concurrent programming#Coordinating access to resources|concurrent processing]]. [[Time-of-check-to-time-of-use]] (TOCTOU) is a form of unprotected critical section. ===Teamworking bugs=== * Unpropagated updates; e.g. programmer changes "myAdd" but forgets to change "mySubtract", which uses the same algorithm. These errors are mitigated by the [[Don't repeat yourself|Don't Repeat Yourself]] philosophy. * Comments out of date or incorrect: many programmers assume the comments accurately describe the code * Differences between documentation and the actual product == Bugs in popular culture == * In the 1968 novel ''[[2001: A Space Odyssey (novel)|2001: A Space Odyssey]]'' (and the [[2001: A Space Odyssey (film)|corresponding 1968 film]]), a spaceship's onboard computer, [[HAL 9000]], attempts to kill all its crew members. In the followup 1982 novel, ''[[2010: Odyssey Two]]'', and the accompanying 1984 film, ''[[2010 (film)|2010]]'', it is revealed that this action was caused by the computer having been programmed with two conflicting objectives: to fully disclose all its information, and to keep the true purpose of the flight secret from the crew; this conflict caused HAL to become paranoid and eventually homicidal. * In the 1984 song ''[[99 Red Balloons]]'' (though not in the original German version), "bugs in the software" lead to a computer mistaking a group of balloons for a [[nuclear missile]] and starting a [[Nuclear warfare|nuclear war]]. * The 2004 novel ''The Bug'', by [[Ellen Ullman]], is about a programmer's attempt to find an elusive bug in a database application. ==See also== {{Portal|Software Testing}} * [[Anti-pattern]] * [[Bit rot]] * [[Bug tracking system]] * [[ISO/IEC 9126]], which classifies a bug as either a ''defect'' or a ''nonconformity'' * [[One-line fix]] * [[Racetrack problem]] * [[Software defect indicator]] * [[Software regression]] * [[Unusual software bug]]s (schroedinbug, heisenbug, Bohr bug, and mandelbug) ==Notes== {{Reflist|2}} ==Further reading== * Allen, Mitch, May/Jun 2002 "Bug Tracking Basics: A beginner’s guide to reporting and tracking defects" ''The Software Testing & Quality Engineering Magazine''. Vol. 4, Issue 3, pp. 20-24. == External links == * [http://www5.in.tum.de/~huckle/bugse.html Collection of Software Bugs] (Thomas Huckle, TU München) * [http://www.rvs.uni-bielefeld.de/publications/compendium/index.html Computer-Related Incidents with Commercial Aircraft] (Peter B. Ladkin et al., Universität Bielefeld) * [http://courses.cs.vt.edu/~cs3604/lib/Therac_25/Therac_1.html An Investigation of the Therac-25 Accidents] ([[Nancy Leveson]], University of Washington and Clark S. Turner, University of California at Irvine) * [http://www.ccnr.org/fatal_dose.html Fatal Dose: Radiation Deaths linked to AECL Computer Errors] (Barbara Wade Rose, Canadian Coalition for Nuclear Responsibility) * [http://www.cs.tau.ac.il/~nachumd/verify/horror.html Software Horror Stories] (Nachum Dershowitz) * [http://www.history.navy.mil/photos/images/h96000/h96566kc.htm Picture of the "first computer bug"] The error of this term is elaborated above. (Naval Historical Center) * [http://americanhistory.si.edu/collections/object.cfm?key=35&objkey=30 Page from 1947 log book with "first actual case of bug being found" (moth)] ([[National Museum of American History]]) * [http://www.waterholes.com/~dennette/1996/hopper/bug.htm The First Computer Bug!] An email from 1981 about Adm. Hopper's bug * [http://www.chiark.greenend.org.uk/~sgtatham/bugs.html How to Report Bugs Effectively] ([[Simon Tatham|Simon G. Tatham]]) * [http://www.rustyspigot.com/Software_Engineering/Rates_of_Design_Failures.htm Rates of Design Failure] * [http://wired.com/news/technology/bugs/0,2924,69355,00.html History's Worst Software Bugs] * [http://bugspy.net Open source bug search engine] * [http://www.cs.wisc.edu/cbi/ Bug Isolation Project] - This project is to track bugs of popular open source software. (Packages for Fedora available)'' {{Use dmy dates|date=August 2010}} {{DEFAULTSORT:Software Bug}} [[Category:Programming bugs]] [[ar:خطأ برمجي]] [[bg:Бъг]] [[ca:Error de programari]] [[cs:Programátorská chyba]] [[da:Bug (computer)]] [[de:Programmfehler]] [[el:Software bug]] [[es:Error de software]] [[eo:Cimo (komputscienco)]] [[fa:اشکال نرم‌افزاری]] [[fr:Bug (informatique)]] [[gl:Bug]] [[ko:소프트웨어 버그]] [[id:Bug]] [[it:Bug]] [[he:באג]] [[lb:Bug]] [[hu:Bug (informatika)]] [[ml:സോഫ്റ്റ്‌വെയർ ബഗ്ഗ്]] [[ms:Pepijat]] [[nl:Bug (technologie)]] [[ja:バグ]] [[no:Programvarefeil]] [[oc:Bug (informatica)]] [[pl:Błąd (informatyka)]] [[pt:Defeito de software]] [[ru:Баг]] [[sq:Bug]] [[simple:Software bug]] [[sl:Hrošč (računalništvo)]] [[sr:Баг (информатика)]] [[fi:Ohjelmointivirhe]] [[sv:Bugg (dator)]] [[th:บั๊ก]] [[tr:Bug]] [[uk:Баґ]] [[wuu:虱误]] [[yi:סאפטוועיר באג]] [[zh:程序错误]]</text> </page> <page> <id>34978</id> <title>Software developer</title> <text>{{other uses|Software developer (disambiguation)}} {{Multiple issues | onesource=August 2010 | sections=August 2010 }} A '''software developer''' is a person or organization concerned with facets of the [[software development process]]. They can be involved in aspects wider than design and coding, a somewhat broader scope of [[computer programming]] or a specialty of [[project manager|project managing]] including some aspects of [[software product management]]. This person may contribute to the overview of the project on the application level rather than component level or individual programming tasks. Software developers are often still guided by [[lead programmer]]s but also encompasses the class of [[freelancer|freelance]] software developers. A person who develops stand-alone software (that is more than just a simple program) and got involved with all phases of the development (design and code) is a software developer. Many legendary software people including [[Peter Norton]] (developer of ''Norton Utilities''), [[Richard Garriott]] ([[Ultima (series)|Ultima]]-series creator), [[Philippe Kahn]] ([[Borland]] key founder), started as entrepreneurial individual or small-team software developers before they became rich and famous. Other names which are often used in the same close context are [[software analyst]] and [[software engineer]]. With time and a little luck, differences between system design, [[software development]] and programming are more apparent. Already in the current market place there can be found a segregation between [[programmer]]s and developers, being that one who actually implements is not the same as the one who designs the [[Class (computer science)|class]] structure or hierarchy. Even more so that developers become [[systems architect]]s, those who design the multi-leveled architecture or component interactions of a large software system.<ref name="Sourcegear_2005">{{cite web |url=http://software.ericsink.com/No_Programmers.html |title= Small ISVs: You need Developers, not Programmers |author=[[Eric Sink]] |publisher=[http://www.sourcegear.com/ sourcegear] |accessdate=2008-06-06 |quote=A programmer is someone who does nothing but code new features and (if you're lucky) fix bugs. They don't write specs. They don't write automated test cases. They don't help keep the automated build system up to date. They don't help customers work out tough problems. They don't help write documentation. They don't help with testing. They don't even read code. All they do is write new code.}}</ref> (see also [[software engineer#Debate 