membrane systems include modelling of biological processes ([[photosynthesis]], certain [[signaling pathways]], [[quorum sensing]] in bacteria, cell-mediated [[Immunity (medical)|immunity]]), as well as computer science applications such as [[computer graphics]], [[public-key cryptography]], [[approximation algorithm|approximation]] and [[sorting algorithms]], as well as analysis of various [[computationally hard problems]]. === Amorphous computing === In biological organisms, [[morphogenesis]] (the development of well-defined shapes and functional structures) is achieved by the interactions between cells guided by the genetic ''program'' encoded in the organism's DNA. Inspired by this idea, [[amorphous computing]] aims at engineering well-defined shapes and patterns, or coherent computational behaviours, from the local interactions of a multitude of simple unreliable, irregulary placed, asynchronous, identically programmed computing elements (particles).<ref name="AAC00">Abelson, H., Allen, D., Coore, D., Hanson, C., Homsy, G., Knight Jr., T., Nagpal, R., Rauch, E., Sussman, G., Weiss, R. [http://portal.acm.org/citation.cfm?id=332842 Amorphous computing]. Communications of the ACM 43, 5 (May 2000), 74-82</ref>. As a programming paradigm, the aim is to find new [[abstraction (computer science)|programming techniques]] that would work well for amorphous computing environments. Amorphous computing also plays an important role as the basis for "[[#Cellular computing|cellular computing]]" (see the topics [[synthetic biology]] and [[cellular computing]], below). == Synthesizing nature by means of computing == === Artificial life === [[Artificial life]] (ALife) is a research field whose ultimate goal is to understand the essential properties of life organisms <ref name="Langton90">Langton, C., editor. Artificial Life. Addison-Wesley Longman, 1990</ref> by building, within electronic computers or other artificial media, ''[[ab initio]]'' systems that exhibit properties normally associated only with living organisms. Early examples include [[Lindenmayer systems]] (L-systems), that have been used to model plant growth and development. An L-system is a parallel rewriting system that starts with an initial word, and applies its rewriting rules in parallel to all letters of the word.<ref name="RoSa80">Rozenberg, G. and Salomaa, A. The Mathematical Theory of L Systems. Academic Press, 1980</ref> Pioneering experiments in artificial life included the design of evolving "virtual block creatures" acting in simulated environments with realistic features such as [[kinetics]], [[dynamics]], [[gravity]], [[collision]], and [[friction]].<ref name="Brooks00">Brooks. R. [http://www.nature.com/doifinder/10.1038/35023200 Artificial life: from robot dreams to reality]. Nature 406 (2000), 945-947</ref> These artificial creatures were selected for their abilities endowed to swim, or walk, or jump, and they competed for a common limited resource (controlling a cube). The simulation resulted in the evolution of creatures exhibiting surprising behaviour: some developed hands to grab the cube, others developed legs to move towards the cube. This computational approach was further combined with rapid manufacturing technology to actually build the physical robots that virtually evolved.<ref name="LiPo00">Lipson, P., Pollack, J. [http://www.nature.com/nature/journal/v406/n6799/full/406974a0.html Automatic design and manufacture of robotic lifeforms]. Nature 406 (2000), 974-978</ref> This marked the emergence of the field of '''mechanical artificial life'''. The field of [[#Synthetic biology|synthetic biology]] explores a biological implementation of similar ideas. Other research directions within the field of artificial life include [[artificial chemistry]] as well as traditionally biological phenomena explored in artificial systems, ranging from computational processes such as [[coevolution|co-evolutionary]] adaptation and development, to physical processes such as growth, [[self-replication]], and [[self-repair]]. == Nature-inspired novel hardware == All of the computational techniques mentioned above, while inspired by nature, have been implemented until now mostly on traditional [[electronic hardware]]. In contrast, the two paradigms introduced here, [[#Molecular computing|molecular computing]] and [[#Quantum computing|quantum computing]], employ radically different types of hardware. === Molecular computing === [[Molecular computer|Molecular computing]] (a.k.a. biomolecular computing, biocomputing, biochemical computing, [[DNA computing]]) is a computational paradigm in which data is encoded as [[biomolecules]] such as [[DNA sequence|DNA strands]], and molecular biology tools act on the data to perform various operations (e.g., [[arithmetic operation|arithmetic]] or [[logical operations]]). The first experimental realization of special-purpose molecular computer was the [[1994]] breakthrough experiment by [[Leonard Adleman]] who solved a 7-node instance of the [[Hamiltonian Path Problem]] solely by manipulating DNA strands in test tubes.<ref name="Adleman94">Adleman, L. [http://www.usc.edu/dept/molecular-science/papers/fp-sci94.pdf Molecular computation of solutions to combinatorial problems]. Science 266 (1994), 1021-1024</ref>. DNA computations start from an initial input encoded as a DNA sequence (essentially a sequence over the four-letter alphabet {A, C, G, T}), and proceed by a succession of bio-operations such as cut-and-paste (by [[restriction enzymes]] and [[ligases]]), extraction of strands containing a certain subsequence (by using Watson-Crick complementarity), copy (by using [[polymerase chain reaction]] that employs the polymerase enzyme), and read-out.<ref name="Kari97">Kari, L. [http://www.csd.uwo.ca/~lila/intelh.pdf DNA computing - the arrival of biological mathematics]. The Mathematical Intelligencer 19, 2 (1997) 9-22</ref> Recent experimental research succeeded in solving more complex instances of [[NP-complete]] problems such as a 20-variable instance of [[3SAT]], and wet DNA implementations of finite state machines with potential applications to the design of [[smart drugs]]. [[file:Selfassemble Sierpinski.jpg|thumb|400px|right|DNA tile self-assembly of a Sierpinski triangle, starting from a '''seed''' obtained by the DNA origami technique<ref name=murata>Fujibayashi, K., Hariadi, R., Park, S-H., Winfree, E., Murata, S. [http://www.dna.caltech.edu/Papers/sierpinski_ribbons_2007final.pdf Toward reliable algorithmic self-assembly of DNA tiles: A fixed-width cellular automaton pattern]. Nano Letters 8(7) (2007) 1791-1797.</ref>]] One of the most notable contributions of research in this field is to the understanding of [[self-assembly]].<ref name="ReLa07">Reif, J. and LaBean, T. [http://portal.acm.org/citation.cfm?id=1284647 Autonomous programmable biomolecular devices using self-assembled DNA nanostructures]. Communications of the ACM 50, 9 (Spet. 2007), 46-53</ref> Self-assembly is the [[bottom-up]] process by which objects autonomously come together to form complex structures. Instances in nature abound, and include [[atoms]] binding by chemical bonds to form [[molecules]], and molecules forming [[crystals]] or [[macromolecules]]. Examples of self-assembly research topics include self-assembled DNA nanostructures<ref name="Seeman07">Seeman, N. [http://www.scientificamerican.com/article.cfm?id=nanotechnology-and-the-do Nanotechnology and the double helix]. Scientific American Reports, 17. 3 (2007), 30-39</ref> such as [[Sierpinski triangle]]s<ref name="RPW04">Rothemund, P., Papadakis, N., Winfree, E. [http://www.plosbiology.org/article/info:doi/10.1371/journal.pbio.0020424 Algorithmic self-assembly of DNA Sierpinski triangles]. PLoS Biology 2, 12 (Dec. 2004)</ref> or arbitrary nanoshapes obtained using the [[DNA origami]]<ref name="Rothemund06">Rothemund, P. [http://www.nature.com/nature/journal/v440/n7082/abs/nature04586.html Folding DNA to create nanoscale shapes and patterns]. Nature 440 (2006) 297-302.</ref> technique, and DNA nanomachines<ref name="">Bath, J., Turberfield, A. [http://www.nature.com/nnano/journal/v2/n5/full/nnano.2007.104.html DNA nanomachines]. Nature Nanotechnology 2 (May 2007), 275-284</ref> such as DNA-based circuits ([[binary counter]], [[bit-wise cumulative XOR]]), ribozymes for logic operations, molecular switches ([[DNA tweezers]]), and autonomous molecular motors ([[DNA walkers]]). Theoretical research in molecular computing has yielded several novel 