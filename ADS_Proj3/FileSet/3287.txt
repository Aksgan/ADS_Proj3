10.1145/248603.248616 | accessdate=2008-03-20 }}</ref> The most important mechanism in OLAP which allows it to achieve such performance is the use of ''aggregations''. Aggregations are built from the fact table by changing the granularity on specific dimensions and aggregating up data along these dimensions. The number of possible aggregations is determined by every possible combination of dimension granularities. The combination of all possible aggregations and the base data contains the answers to every query which can be answered from the data <ref>{{cite journal | last1 = Gray | first1 = Jim | author1-link = Jim Gray | last2 = Chaudhuri | first2 = Surajit | last3 = Layman | first3 = Andrew | last4 = Reichart | first4 = Don | last5 = Venkatrao | first4 = Murali | last6 = Pellow | first4 = Frank | last7 = Pirahesh | first4 = Hamid | title = Data Cube: {A} Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals | journal = J. Data Mining and Knowledge Discovery | volume = 1 | issue = 1 | pages = 29–53 | year = 1997 | url = http://citeseer.ist.psu.edu/gray97data.html | accessdate=2008-03-20 }}</ref>. Because usually there are many aggregations that can be calculated, often only a predetermined number are fully calculated; the remainder are solved on demand. The problem of deciding which aggregations (views) to calculate is known as the [[view selection]] problem. View selection can be constrained by the total size of the selected set of aggregations, the time to update them from changes in the base data, or both. The objective of view selection is typically to minimize the average time to answer OLAP queries, although some studies also minimize the update time. View selection is [[NP-Complete]]. Many approaches to the problem have been explored, including [[greedy algorithm]]s, [[randomized search]], [[genetic algorithm]]s and [[A* search algorithm]]. ==Types== OLAP systems have been traditionally categorized using the following taxonomy.<ref name=Pendse2006>{{cite web |url=http://www.olapreport.com/Architectures.htm |title=OLAP architectures |publisher=OLAP Report |author=Nigel Pendse |date=2006-06-27 |accessdate=2008-03-17 }}</ref> ===Multidimensional=== {{Main|MOLAP}} '''MOLAP''' is the 'classic' form of OLAP and is sometimes referred to as just OLAP. MOLAP stores this data in an optimized multi-dimensional array storage, rather than in a relational database. Therefore it requires the pre-computation and storage of information in the cube - the operation known as processing. ===Relational=== {{Main|ROLAP}} '''ROLAP''' works directly with relational databases. The base data and the dimension tables are stored as relational tables and new tables are created to hold the aggregated information. Depends on a specialized schema design.This methodology relies on manipulating the data stored in the relational database to give the appearance of traditional OLAP's slicing and dicing functionality. In essence, each action of slicing and dicing is equivalent to adding a "WHERE" clause in the SQL statement. ===Hybrid=== {{Main|HOLAP}} There is no clear agreement across the industry as to what constitutes "Hybrid OLAP", except that a database will divide data between relational and specialized storage. For example, for some vendors, a HOLAP database will use relational tables to hold the larger quantities of detailed data, and use specialized storage for at least some aspects of the smaller quantities of more-aggregate or less-detailed data. ===Comparison=== Each type has certain benefits, although there is disagreement about the specifics of the benefits between providers. * Some MOLAP implementations are prone to [[database explosion]], a phenomenon causing vast amounts of storage space to be used by MOLAP databases when certain common conditions are met: high number of dimensions, pre-calculated results and sparse multidimensional data. * MOLAP generally delivers better performance due to specialized indexing and storage optimizations. MOLAP also needs less storage space compared to ROLAP because the specialized storage typically includes [[Data compression|compression]] techniques.<ref name="ieee_cite">{{cite journal | last1 = Bach Pedersen | first1 = Torben | last2 = S. Jensen | title = Multidimensional Database Technology | journal = Distributed Systems Online | volume = | issue = | issn = 0018-9162 | pages = 40–46 | publisher = [[IEEE]] | location = | month = December | year = 2001 | url = http://ieeexplore.ieee.org/iel5/2/20936/00970558.pdf |format=PDF| doi = | id = | accessdate =|first2 = Christian }} </ref> * ROLAP is generally more scalable.<ref name="ieee_cite"/> However, large volume pre-processing is difficult to implement efficiently so it is frequently skipped. ROLAP query performance can therefore suffer tremendously. * Since ROLAP relies more on the database to perform calculations, it has more limitations in the specialized functions it can use. * HOLAP encompasses a range of solutions that attempt to mix the best of ROLAP and MOLAP. It can generally pre-process swiftly, scale well, and offer good function support. ===Other types=== The following acronyms are also sometimes used, although they are not as widespread as the ones above: * '''WOLAP''' - Web-based OLAP * '''DOLAP''' - '''[[Desktop computer|Desktop]]''' OLAP * '''[[Rtolap|RTOLAP]]''' - Real-Time OLAP ==APIs and query languages== Unlike [[relational databases]], which had SQL as the standard query language, and widespread APIs such as [[ODBC]], [[JDBC]] and [[OLEDB]], there was no such unification in the OLAP world for a long time. The first real standard API was [[OLE DB for OLAP]] specification from [[Microsoft]] which appeared in 1997 and introduced the [[Multidimensional Expressions|MDX]] query language. Several OLAP vendors - both server and client - adopted it. In 2001 [[Microsoft]] and [[Hyperion Solutions Corporation|Hyperion]] announced the [[XML for Analysis]] specification, which was endorsed by most of the OLAP vendors. Since this also used MDX as a query language, MDX became the de-facto standard.<ref>{{cite web |url=http://www.olapreport.com/Comment_APIs.htm |title=Commentary: OLAP API wars |publisher=OLAP Report |author=Nigel Pendse |date=2007-08-23 |accessdate=2008-03-18 }}</ref> ==Products== ===History=== The first product that performed OLAP queries was ''Express,'' which was released in 1970 (and acquired by [[Oracle Corporation|Oracle]] in 1995 from Information Resources)<ref>{{cite web | title=The origins of today’s OLAP products | url=http://olapreport.com/origins.htm | publisher=OLAP Report | date=2007-08-23 | author=Nigel Pendse | accessdate=November 27, 2007 }}</ref>. However, the term did not appear until 1993 when it was coined by [[Edgar F. Codd]], who has been described as "the father of the relational database". Codd's paper<ref name=Codd1993/> resulted from a 