journal = [[Ariadne]] | date = 2006-07 | url = http://www.ariadne.ac.uk/issue48/chudnov-et-al/ }} * {{Cite journal | issn = 10417915 | volume = 27 | issue = 4 | pages = 21 | last = Chudnov | first = Daniel | title = unAPI | journal = [[Computers in Libraries]] | accessdate = 2008-03-11 | date = 2007-04 | url = http://search.ebscohost.com/login.aspx?direct=true&db=aph&AN=24590347&site=ehost-live }} ==External links== *[http://unapi.info/ unAPI] *[http://old.onebiglibrary.net/yale/cipolo/gcs-pcs-list/ Mailing list archives, fall 2004-summer 2006] *[http://groups.google.com/group/gcs-pcs-list/ Current listserv for unAPI and related discussions] ==References== <references/> [[Category:Library 2.0]] [[Category:Library and information science]] {{library-stub}} {{www-stub}} [[de:unAPI]]</text> </page> <page> <id>38727</id> <title>Unary language</title> <text>In [[computational complexity theory]], a '''unary language''' or '''tally language''' is a [[formal language]] (a set of [[string (computer science)|strings]]) where all strings have the form 1<sup>''k''</sup>, where "1" can be any fixed symbol. For example, the language {1, 111, 1111} is unary, as is the language {1<sup>''k''</sup> | ''k'' is [[prime number|prime]]}. The [[complexity class]] of all such languages is sometimes called '''TALLY'''. The name "unary" comes from the fact that a unary language is the encoding of a set of [[natural number]]s in the [[unary numeral system]]. Since the universe of strings over any finite alphabet is a [[countable set]], every language can be mapped to a unique set A of natural numbers; thus, every language has a ''unary version'' {1<sup>''k''</sup> | ''k'' in A}. Conversely, every unary language has a more compact binary version, the set of binary encodings of natural numbers ''k'' such that 1<sup>''k''</sup> is in the language. Since complexity is usually measured in terms of the length of the input string, the unary version of a language can be "easier" than the original language. For example, if a language can be recognized in O(2<sup>''n''</sup>) time, its unary version can be recognized in O(''n'') time, because replacing every symbol with a "1" has made the language size logarithmically smaller. More generally, if a language can be recognized in O(f(''n'')) time and O(g(''n'')) space, its unary version can be recognized in O(''n'' + f(log ''n'')) time and O(g(log ''n'')) space (we require O(''n'') time just to read the input string). However, if membership in a language is [[Recursive language|undecidable]], then membership in its unary version is also undecidable. == Relationships to other complexity classes == '''TALLY''' is contained in '''[[P/poly]]''', with a single-bit advice string for each input length ''k'' specifying whether 1<sup>''k''</sup> is in the language or not. A unary language is necessarily a [[sparse language]], since for each ''n'' it contains at most one value of length ''n'' and at most ''n'' values of length at most ''n'', but not all sparse languages are unary; thus '''TALLY''' is contained in '''SPARSE'''. Piotr Berman showed in 1978 that if any unary language is [[NP-complete]], then [[P = NP problem|P = NP]],<ref>Piotr Berman. Relationship between density and deterministic complexity of NP-complete languages. In ''Proceedings of the 5th Conference on Automata, Languages and Programming'', pp.63&ndash;71. Springer-Verlag. ''Lecture Notes in Computer Science #62''. 1978.</ref> which Mahaney generalized to sparse languages.<ref>S. R. Mahaney. Sparse complete sets for NP: Solution of a conjecture by Berman and Hartmanis. ''Journal of Computer and System Sciences'' 25:130-143. 1982.</ref> == References == <references /> * Lance Fortnow. Favorite Theorems: Small Sets. April 18, 2006. http://weblog.fortnow.com/2006/04/favorite-theorems-small-sets.html * {{CZoo|TALLY|T#tally}} [[Category:Formal languages]] [[Category:Computational complexity theory]] [[zh:一元語言]]</text> </page> <page> <id>38730</id> <title>Unate function</title> <text>{{Orphan|date=February 2009}} A '''unate function''' is a type of [[boolean function]] which has [[monotonic]] properties. They have been studied extensively in [[switching theory]]. A function <math>f(x_1,x_2,\ldots,x_n)</math> is said to be '''positive unate''' in <math>x_i</math> if :<math>f(x_1,x_2,\ldots,x_{i-1},1,x_{i+1},\ldots;x_n) >= f\bar(x_1,x_2,\ldots,x_{i-1},0,x_{i+1},\ldots,x_n).\,</math> Likewise, it is '''negative unate''' in <math>x_i</math> if :<math>f\bar(x_1,x_2,\ldots,x_{i-1},0,x_{i+1},\ldots;x_n) >= f(x_1,x_2,\ldots,x_{i-1},1,x_{i+1},\ldots,x_n).\,</math> If for every <math>x_i</math> ''f'' is either positive or negative unate in the variable <math>x_i</math> then it is said to be '''unate'''. A function is '''binate''' if it is not unate. For example the [[Logical disjunction]] function ''or'' with boolean values are used for true (1) and false (0) is positive unate. [[Category:Logical syntax]] {{Compu-lang-stub}}</text> </page> <page> <id>38747</id> <title>Uncial script</title> <text>{{Unreferenced|date=September 2008}} [[File:KellsFol309r.jpg|thumb|right|280px|The [[Book of Kells]], c. AD 800, is lettered in a script known as "insular majuscule," a variety of uncial script that originated in Ireland.]] '''Uncial''' is a [[majuscule]] [[script (styles of handwriting)|script]] (written entirely in capital letters) commonly used from the 3rd to 8th centuries AD by [[Latin]] and [[Byzantine Empire|Greek]] [[scribe]]s. Uncial letters are written in either [[Greek language|Greek]], [[Latin]], or [[Gothic language|Gothic]]. ==Development== Early uncial script is likely to have developed from late [[Old Roman cursive]]. Early forms are characterized by broad single stroke [[Letter (alphabet)|letter]]s using simple round forms taking advantage of the new [[parchment]] and [[vellum parchment|vellum]] surfaces, as opposed to the angular, multiple stroke letters, which are more suited for rougher surfaces, such as [[papyrus]]. In the oldest examples of uncial, such as the ''[[De bellis macedonicis]]'' [[manuscript]] in the [[British Library]], all of the letters are disconnected from one another, and word separation is typically not used. Word separation, however, is characteristic of later uncial usage. As the script evolved over the centuries, the characters became more complex. Specifically, around AD 600, flourishes and exaggerations of the basic strokes began to appear in more manuscripts. [[Ascender (typography)|Ascenders]] and [[descender]]s were the first major alterations, followed by twists of the tool in the basic stroke and overlapping. By the time the more compact [[Lower case|minuscule]] scripts arose circa AD 800, some of the evolved uncial styles formed the basis for these simplified, smaller scripts. Uncial was still used, particularly for copies of the [[Bible]], tapering off until around the 10th century. There are over 500 surviving copies of uncial script, by far the largest number prior to the [[Carolingian Renaissance]]. ==Forms== [[File:Codex bezae latin.jpg|thumb|A sample of the Latin text from the [[Codex Bezae]]]] In general, there are some common features of uncial script: *m, n, and u are relatively broad; m is formed with curved strokes (although a straight first stroke may indicate an early script), and n is written as <small>N</small> to distinguish it from r and s. *f, i, p, 