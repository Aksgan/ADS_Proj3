looking at the total work flow. 1) CAD cleanup. This involves fixing the gaps and holes in the CAD data. Usually the forgotten task that can consume a lot of time and energy and not something any experienced analyst looks forward too. 2) Mesh generation: The two main choices are to use an automated non-structured mesh or build a full hexahedral mesh. <br /> a) Non-Structured: If one chooses to build a non-structured mesh then it is not as easy as first perceived. The process involves automatically building the mesh then manually fixing the regions of very poor cell quality. This process can take a considerable amount of time, another hidden time cost. <br /> b) All-Hexahedral: As of mid-2009 there are a few all-hexahedral mesh generating tools. Some of them are (in alphabetical order) * GridPro(1985)-a pure multiblock meshing tool ... with really good inter and intra block smoothing .For more details visit [[www.gridpro.com]] * Moceon(1995)-based on the STC ... just released .. and has generated good interest among the community. For more details [[www.moceon.com]] * IcemCFD [[www.ansys.com/products/icemcfd.asp]] * Pointwise ( primarily a multiblock meshing tool .. but can also produce tetrahedrons ) [[www.pointwise.com]] * TrueGrid ( multiblock meshing tool ) [[www.truegrid.com]] However there are ways of quickly building a hexahedral mesh such as using a 2D quad mesh and projecting into the z-direction. Another method is building a block structured mesh by using a CAD based program to create logically connected splines. After the blocks are built the cell factors are added to the blocks and the mesh created. One significant advantage of using a block based hexahedral mesh is the mesh can be smoothed very quickly. For large complex geometric models the process of building a hexahedral mesh can take days, weeks and even months depending on the skill level and tool sets available to the analyst. 3) Set up the model and assign the boundary conditions: This is a rather trivial step and it is usually taken care of by GUI assisted menus. 4) Running the Simulation: This is where the nightmares for the non-structured mesh begin. Since it takes six tetrahedrals to represent one hexahedral the tet mesh size will be considerably larger and will require a lot more computing power and RAM to solve an equivalent hexahedral mesh. The tetrahedral mesh will also require more relaxation factors to solve the simulation by effectively dampening the amplitude of the gradients. This increases the number of sub-cycle steps and drives the courant number up. If you built a hexahedral mesh this is where the tortoise passes the hare. 5) Post processing the results: The time required in this step is highly dependent on the size of the mesh (number of cells). 6) Making design changes: If you build a non-structured mesh this is where you go back to the beginning and start all over again. If you build a hexahedral mesh then you make the geometric change, re-smooth the mesh and restart the simulation. 7) Accuracy: This is the major difference between a non-structured mesh and a hexahedral mesh, and the main reason why it is preferred. The "spatial twist continuum" addresses the issue of complex mesh model creation by elevating the structure of the mesh to a higher level of abstraction that assists in the creation of the all-hexahedral mesh. ==References== Murdoch P.; Benzley S.1; Blacker T.; Mitchell S.A. "The spatial twist continuum: A connectivity based method for representing all-hexahedral finite element meshes." ''Finite Elements in Analysis and Design'', Volume 28, Number 2, 15 December 1997, Elsevier, pp. 137–149(13) Murdoch, Peter and Steven E. Benzley. "The Spatial Twist Continuum." ''Proceedings, 4th International Meshing Roundtable'', Sandia National Laboratories, pp. 243–251, October 1995 [[Category:1995 introductions]] [[Category:Computational fluid dynamics]] [[Category:Finite element method]]</text> </page> <page> <id>35253</id> <title>Spatiotemporal database</title> <text>A '''spatiotemporal database''' is a system that manages both space and time information, such as biological Databases, wireless communication networks, and processing of objects with uncertainty. Basically, spatiotemporal databases are a generalization of [[spatial database]]s, which include features of variating coordinates in space, as e.g. with [[plate tectonics]], or of otherwise temporal variation of spatial data, e.g. of moving objects, residing temporally in spatially defined locations. A spatiotemporal database embodies spatial, temporal, and spatiotemporal database concepts, and captures spatial and temporal aspects of data and deals with * geometry changing over time.<ref>[http://wis.cs.ucla.edu/~cchen/thesis.ps Data Models and Query Languages of Spatio-Temporal Information <!-- Bot generated title -->]</ref> or * location of objects moving over invariant geometry. <ref>[[RTLS]]</ref> Topics of research are the Analysis & Retrieval of spatial and spatiotemporal data. ==Organizations== *http://vldb.org (Very Large Databases) *http://www.dexa.org (Database and Expert Systems Applications) Relevant terms that may be incorporated in the Analysis & Retrieval of spatial and spatiotemporal data: * [[Data warehouse]] * [[Data mining]], [[Database mining]], [[Data farming]] * [[Locating engine]] ==References== {{reflist}} [[Category:Database management systems]] [[Category:Geolocation]] [[Category:Wireless locating]] {{database-stub}}</text> </page> <page> <id>35259</id> <title>Speaker diarisation</title> <text>Speaker Diarization is the process of partitioning an input audio stream into homogeneous segments according to the speaker identity. It can enhance the readability of an [[Speech_recognition|automatic speech transcription]] by structuring the audio stream into speaker turns and, when used together with [[Speaker recognition]] systems, by providing the speaker’s true identity <ref>http://www.limsi.fr/Rapports/RS2005/chm/tlp/tlp1/index.html Improved speaker diarization using speaker identification.</ref> . It is used to answer the question "who spoke when?". <ref>http://poseidon.csd.auth.gr/papers/PUBLISHED/JOURNAL/pdf/Kotti08a.pdf Speaker Segmentation and Clustering.</ref>. Speaker Diarization is a combination of Speaker Segmentation and Speaker Clustering. The first aims at finding speaker change points in an audio stream. The second aims at grouping together speech segments on the basis of speaker characteristics. With the increasing number of broadcasts, meeting recordings and voice mail collected every year, Speaker Diarization has received much attention in recent times by the speech community, as is manifested by the specific evaluations devoted to it under the auspices of the [[National Institute of Standards and Technology]] for telephone speech, broadcast news and meetings <ref>http://www.itl.nist.gov/iad/mig/tests/rt/ Rich Transcription Evaluation Project.</ref>. == Open Source Speaker Diarization Software == There are some open source initiatives for Speaker Diarization: *[[LIUM_SpkDiarization]]: LIUM_SpkDiarization 