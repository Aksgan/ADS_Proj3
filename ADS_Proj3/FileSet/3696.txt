follows that <math>c\equiv m^2\pmod{p}</math>. Thus ''c'' is a [[quadratic residue]] modulo ''p''. Hence <math>\left({c\over p}\right)=1</math> and therefore :<math>m_p^2 \equiv c \pmod{p}.</math> The relation <math>p \equiv 3\pmod{4}</math> is not a requirement because square roots modulo other primes can be computed too. E.g. Rabin proposes to find the square roots modulo primes by using a special case of [[Berlekamp's algorithm]]. ==Evaluation of the algorithm== ===Effectiveness=== Decoding produces three false results in addition to the correct one, so that the correct result must be guessed. This is the major disadvantage of the Rabin cryptosystem and one of the factors which have prevented it from finding widespread practical use. If the plaintext is intended to represent a text message, guessing is not difficult; however, if the plaintext is intended to represent a numerical value, this issue becomes a problem that must be resolved by some kind of disambiguation scheme. It is possible to choose plaintexts with special structures, or to add [[padding (cryptography)|padding]], to eliminate this problem. A way of removing the ambiguity of inversion was suggested by Blum and Williams: the two primes used are restricted to primes congruent to 3 modulo 4 and the domain of the squaring is restricted to the set of quadratic residues. These restrictions make the squaring function into a [[Trapdoor function|trapdoor]] [[permutation]], eliminating the ambiguity.<ref>[[Shafi Goldwasser]] and [[Mihir Bellare]] [http://cseweb.ucsd.edu/~mihir/papers/gb.html "Lecture Notes on Cryptography"]. Summer course on cryptography, MIT, 1996-2001</ref> ===Efficiency=== For encryption, a square modulo ''n'' must be calculated. This is more efficient than [[RSA]], which requires the calculation of at least a cube. For decryption, the [[Chinese remainder theorem]] is applied, along with two [[modular exponentiation]]s. Here the efficiency is comparable to RSA. Disambiguation introduces additional computational costs, and is what has prevented the Rabin cryptosystem from finding widespread practical use. ===Security=== The great advantage of the Rabin cryptosystem is that a random plaintext can be recovered entirely from the ciphertext only if the codebreaker is capable of efficiently factoring the public key ''n''. Note that this is a very weak level of security. Extensions of the Rabin cryptosystem achieve stronger notions of security. It has been proven that decoding the Rabin cryptosystem is equivalent to the integer factorization problem, which is rather different than for RSA. Thus the Rabin system is 'more secure' in this sense than is RSA, and will remain so until a general solution for the factorization problem is discovered, or until the RSA problem is discovered to be equivalent to factorization. (This assumes that the plaintext was not created with a specific structure to ease decoding.) Since the solution to the factorization problem is being sought on many different fronts, any solution (outside classified research organizations such as [[NSA]]) would rapidly become available to the whole scientific community. However, a solution has been long in coming, and the factorization problem has been, thus, practically insoluble. Without such an advance, an attacker would have no chance today of breaking the code. This cryptosystem is provably secure (in a strong sense) against [[chosen plaintext]] attacks. However, an active attacker can break the system using a [[chosen ciphertext attack]], as has been mathematically proven. By adding redundancies, for example, the repetition of the last 64 bits, the system can be made to produce a single root. This thwarts the chosen-ciphertext attack, since the decoding algorithm then only produces the root that the attacker already knows. If this technique is applied, the proof of the equivalence with the factorization problem fails, so it is uncertain as of 2004 if this variant is secure. The [http://www.cacr.math.uwaterloo.ca/hac/ Handbook of Applied Cryptography] by Menezes, Oorschot and Vanstone considers this equivalence probable, however, as long as the finding of the roots remains a two-part process (1. roots <math>\mod p</math> and <math>\mod q</math> and 2. application of the Chinese remainder theorem). Since in the encoding process, only the modulo remainders of perfect squares are used (in our example with <math>n = 77</math>, this is only 23 of the 76 possible values), other attacks on the process are possible. ==See also== * [[Topics in cryptography]] * [[Blum Blum Shub]] * [[Shanks–Tonelli algorithm]] * [[Schmidt–Samoa cryptosystem]] ==Notes== {{reflist}} ==References== * Buchmann, Johannes. ''Einführung in die Kryptographie''. Second Edition. Berlin: Springer, 2001. ISBN 3-540-41283-2 * Menezes, Alfred; van Oorschot, Paul C.; and Vanstone, Scott A. ''Handbook of Applied Cryptography''. CRC Press, October 1996. ISBN 0-8493-8523-7 * Rabin, Michael. ''[http://www.lcs.mit.edu/publications/pubs/pdf/MIT-LCS-TR-212.pdf Digitalized Signatures and Public-Key Functions as Intractable as Factorization]'' (in PDF). MIT Laboratory for Computer Science, January 1979. * Scott Lindhurst, An analysis of Shank's algorithm for computing square roots in finite fields. in R Gupta and K S Williams, Proc 5th Conf Can Nr Theo Assoc, 1999, vol 19 CRM Proc & Lec Notes, AMS, Aug 1999. * R Kumanduri and C Romero, Number Theory w/ Computer Applications, Alg 9.2.9, Prentice Hall, 1997. A probabilistic for square root of a quadratic residue modulo a prime. ==External links== * [http://www.cacr.math.uwaterloo.ca/hac/ Menezes, Oorschot, Vanstone, Scott: ''Handbook of Applied Cryptography'' (free PDF downloads), see Chapter 8] {{Crypto navbox | public-key}} [[Category:Public-key cryptography]] [[Category: Asymmetric-key cryptosystems]] [[de:Rabin-Kryptosystem]] [[es:Criptosistema Rabin]] [[fr:Cryptosystème de Rabin]] [[it:Crittosistema di Rabin]] [[he:הצפנת רבין]] [[ja:Rabin暗号]] [[pl:Algorytm Rabina]] [[ru:Криптосистема Рабина]]</text> </page> <page> <id>31098</id> <title>Race condition</title> <text>[[Image:Race condition.svg|frame|Race condition in a logic circuit. Here, ∆''t''<sub>1</sub> and ∆''t''<sub>2</sub> represent the [[propagation delay]]s of the logic elements. When the input value (''A'') changes, the circuit outputs a short spike of duration ∆''t''<sub>1</sub>.]] {{Refimprove|date=July 2010}} A '''race condition''' or '''race [[hazard (logic)|hazard]]''' is a flaw in an electronic [[system]] or process whereby the output and/or result of the process is unexpectedly and critically dependent on the sequence or [[timing]] of other events. The term originates with the idea of two [[Signal (information theory)|signals]] racing each other to influence the [[output]] first. Race conditions can occur in [[electronics]] systems, especially [[Logic gate|logic circuits]], and in [[computer]] [[software]], especially [[Thread (computer science)|multithreaded]] or [[distributed systems|distributed]] programs. ==Electronics== A typical example of a race condition may occur in a system of [[logic gate]]s, where inputs vary. If a particular output depends 