the field of [[steganography]] evolved, in part, to develop methods like [[mimic function]]s that allow one piece of data to adopt the statistical profile of another. Nonetheless poor cipher usage or reliance on home-grown proprietary algorithms that have not been subject to thorough scrutiny has resulted in many computer-age encryption systems that are still subject to ciphertext-only attack. Examples include: *Early versions of [[Microsoft]]'s [[Point-to-point tunneling protocol|PPTP]] [[virtual private network]] software used the same [[RC4]] key for the sender and the receiver (later versions had other problems). In any case where a stream cipher like RC4 is used twice with the same key it is open to ciphertext-only attack. ''See:'' [[stream cipher attack]] * [[Wired Equivalent Privacy]] (WEP), the first security protocol for [[Wi-Fi]], proved vulnerable to several attacks, most of them ciphertext-only. * Some modern cipher designs have later been shown to be vulnerable to ciphertext-only attacks. For example, [[Akelarre (cipher)|Akelarre]]. * A cipher whose key space is too small is subject to [[brute force attack]] with access to nothing but ciphertext by simply trying all possible keys. All that is needed is some way to distinguish valid plaintext from random noise, which is easily done for natural languages when the ciphertext is longer than the [[unicity distance]]. One example is [[Data Encryption Standard|DES]], which only has 56-bit keys. All too common current examples are commercial security products that derive keys for otherwise impregnable ciphers like [[Advanced Encryption Standard|AES]] from a user-selected [[password]]. Since users rarely employ passwords with anything close to the [[Information entropy | entropy]] of the cipher's key space, such systems are often quite easy to break in practice using only ciphertext. ==References== * [[Alex Biryukov]] and Eyal Kushilevitz, From Differential Cryptanalysis to Ciphertext-Only Attacks, [[CRYPTO]] 1998, pp72&ndash;88; ==See also== * [[Known-plaintext attack]] * [[Chosen plaintext attack]] * [[Chosen-ciphertext attack]] [[Category:Cryptographic attacks]] [[it:Attacco con solo testo cifrato]] [[pl:Atak z szyfrogramem]] [[simple:Ciphertext-only attack]] [[zh:唯密文攻击]]</text> </page> <page> <id>6275</id> <title>CircuitLogix</title> <text>{{Infobox Software |name = CircuitLogix |caption = Version 2008 interface |developer = Logic Design Inc. |latest_release_version = V7.1 |latest_release_date = January 2009 |operating_system = [[Microsoft Windows|Windows]] (2000, XP, Vista, or Windows 7) |genre = Electronic circuit simulation |license = [[Proprietary software|Proprietary]] |website = [http://www.CircuitLogix.com www.CircuitLogix.com] }} '''CircuitLogix''' is an [[electronic circuit simulation|electronic circuit simulator]] which uses [[PSpice]] to allow for the simulation of thousands of [[electronic devices]], models, and circuits. A student version of CircuitLogix is available free of charge after [[Registered user|registration]].<ref>[http://www.circuitlogix.com/student_version.php Web page for the student version of CircuitLogix]</ref> CircuitLogix supports [[Analog signal|analog]], [[digital]], and mixed-signal circuits, and its [[SPICE]] simulation gives accurate real-world results. The [[graphic user interface]] allows students to quickly and easily draw, modify and combine analog and digital circuit diagrams. CircuitLogix was developed by Dr. [[Colin Simpson (electronics professor)|Colin Simpson]], an electronics professor at [[George Brown College]], in [[Toronto]], [[Canada]], and John (Bud) Skinner, a [[computer programmer]]. The electronics program has won awards including the Award of Excellence from the [[Association of Canadian Community Colleges]] (ACCC).<ref>[http://www.accc.ca/ftp/pubs/CollegeCanada/CollegeCanada-v3-2.pdf ACCC document with article about the Electronics Technician distance Education program]</ref> CircuitLogix is used exclusively as the electronic circuit simulation tool for the George Brown College [[Electronics Technician distance education program]], which is the largest electronics program in the world with over 10,000 students in 37 countries. The professional version of CircuitLogix (CircuitLogix Pro) includes over 10,000 device models, as well as 8 virtual instruments. It also includes 3DLab, which is a software product that combines an interactive 3-dimensional learning environment and electronic devices and tools to enhance the user's comprehension of electronics. 3DLab virtual components include [[Battery (electricity)|batteries]], [[switches]], [[Electric motor|motors]], [[Lamp (fixture)|lamp]]s, [[resistors]], [[inductors]], [[capacitors]] and instruments including [[oscilloscopes]], [[Signal generator]]s, and [[frequency counter]]s. ==Overview== [[Image:CircuitLogix3.jpg|CircuitLogix simulating a circuit with an [[Alternating current|AC]] power source.|thumb|right]] Fast, accurate simulation of electronic circuits is essential because it provides the information needed to perform accurate analysis of circuit behavior. [[SPICE]] simulators are used to verify that analog and mixed-signal circuits will yield the expected outputs. A schematic netlist file and circuit input values are fed to the SPICE software, which simulates the circuit's behavior for a specified length of time. CircuitLogix allows for the observation of voltage and current levels at any circuit node as they change with frequency and time. It allows for obtaining accurate results even when simulating complex circuits where hierarchical blocks are reused. The CircuitLogix simulation engine is based on Berkeley SPICE, and contains a [[GUI]] to make circuit design easier and more efficient. Instead of operating in a batch mode, the CircuitLogix 32-bit SPICE engine allows for direct interaction with the circuit during the simulation process to immediately determine the effects of any changes. For example, you can change the [[frequency]] of sources, adjust [[potentiometer]]s, and flick [[switches]] during simulation. This provides the ability to simulate the behavior of numerous design configurations, performing what-if scenarios quickly and easily. In addition, the CircuitLogix SPICE engine is fully integrated with the schematic capture and [[waveform]] tools. This integration speeds setup and management time since CircuitLogix passes schematic edits to the simulator automatically, even when it's running. Similarly, components such as [[fuses]], [[LED]]s and controlled switches are automatically updated in the schematic as the simulation runs. CircuitLogix simulates [[Analog signal|analog]], [[digital]], and mixed analog-digital circuits. Consequently, there's no extra work involved in simulating a mixed-signal design—the simulator handles all aspects. It first divides the circuit into analog and digital portions. The analog circuitry is simulated with the time-step driven SPICE engine, while the digital parts are simulated separately with an event-driven simulation engine. For greater speed, the CircuitLogix digital engine is native mode, meaning it was developed directly in [[.NET Framework|.NET]] rather than through slow SPICE [[macros]]. Because the simulator will automatically perform the signal conversion, it is possible to connect any analog or digital part to any other. In addition, the system’s model library contains hybrid parts for analog-to-digital and digital-to-analog conversion. == Mixed-Mode Simulation == [[Image:3DLab.jpg|The "3DLab" feature in CircuitLogix Pro.|thumb|left]] CircuitLogix is a ''mixed-mode'' [[schematic editor]] and includes both analog and event-driven simulation 