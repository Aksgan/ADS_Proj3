path between two vertices in an [[undirected graph]], otherwise described as the problem of determining whether two vertices are in the same [[Connected component (graph theory)|connected component]]. This problem is also called the '''undirected reachability problem'''. It does not matter whether [[many-one reduction|many-one reducibility]] or [[Turing reduction|Turing reducibility]] is used. Although originally described in terms of [[symmetric Turing machine]]s, that equivalent formulation is very complex, and the reducibility definition is what is used in practice. USTCON is a special case of [[STCON]] (''directed reachability''), the problem of determining whether a directed path between two vertices in a [[directed graph]] exists, which is complete for [[NL (complexity)|NL]]. Because USTCON is '''SL'''-complete, most advances that impact USTCON have also impacted '''SL'''. Thus we will discuss them together. In October 2004 [[Omer Reingold]] showed that '''SL''' = '''[[L (complexity)|L]]'''. == Origin == SL was first defined in 1982 by Lewis and Papadimitriou<ref>[[Harry R. Lewis|Lewis, H. R.]] and [[Christos H. Papadimitriou|Papadimitriou, C. H.]] 1980. [http://www.springerlink.com/content/f50061vx3k145jk0/ Symmetric Space-Bounded Computation (Extended Abstract)]. In Proceedings of the 7th Colloquium on Automata, Languages and Programming (July 14 - 18, 1980). J. W. Bakker and J. v. Leeuwen, Eds. Lecture Notes In Computer Science, vol. 85. Springer-Verlag, London, 374-384. </ref>, who were looking for a class in which to place USTCON, which until this time could, at best, be placed only in [[NL (complexity)|NL]], despite seeming not to require nondeterminism. They defined the [[symmetric Turing machine]], used it to define SL, showed that USTCON was complete for SL, and proved that : <math>\mathrm{L} \subseteq \mathrm{SL} \subseteq \mathrm{NL}</math> where [[L (complexity)|L]] is the more well-known class of problems solvable by an ordinary [[deterministic Turing machine]] in logarithmic space, and [[NL (complexity)|NL]] is the class of problems solvable by [[nondeterministic Turing machines]] in logarithmic space. The result of Reingold, discussed later, shows that in fact, when limited to log space, the symmetric Turing machine is equivalent in power to the deterministic Turing machine. == Complete problems == Using our definition, USTCON is trivially complete for SL (all problems in SL reduce to it, including itself). Many more interesting complete problems were found, most by reducing directly or indirectly from USTCON, and a compendium of them was made by Àlvarez and Greenlaw.<ref>Àlvarez, C. and Greenlaw, R. 2000. [http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.22.2351 A compendium of problems complete for symmetric logarithmic space]. Comput. Complex. 9, 2 (Apr. 2000), 123-145.</ref> Many of the problems are [[graph theory]] problems. Some of the simplest and most important SL-complete problems they describe include: * USTCON * Simulation of symmetric Turing machines: does an STM accept a given input in a certain space, given in unary? * Vertex-disjoint paths: are there ''k'' paths between two vertices, sharing vertices only at the endpoints? (a generalization of USTCON, equivalent to asking whether a graph is ''k''-edge-connected) * Is a given graph a [[bipartite graph]], or equivalently, does it have a [[graph coloring]] using 2 colors? * Do two undirected graphs have the same number of [[Connected component (graph theory)|connected components]]? * Does a graph have an even number of connected components? * Given a graph, is there a cycle containing a given edge? * Do the [[spanning forest]]s of two graphs have the same number of edges? * Given a graph where all its edges have distinct weights, is a given edge in the [[minimum weight spanning forest]]? * [[Exclusive or]] 2-[[Boolean satisfiability problem|satisfiability]]: given a formula requiring that ''x''<sub>''i''</sub> xor ''x''<sub>''j''</sub> hold for a number of pairs of variables (''x''<sub>''i''</sub>,''x''<sub>''j''</sub>), is there an assignment to the variables that makes it true? The [[complement (complexity)|complement]]s of all these problems are in SL as well, since, as we will see, SL is closed under complement. Now that we know '''L''' = '''SL''', we know of a great deal more SL-complete problems with respect to log-space reductions: every problem in '''L''' or in '''SL''' is '''SL'''-complete; moreover, even if the reductions are in some smaller class than '''L''', '''L'''-completeness is equivalent to '''SL'''-completeness. In this sense this class has become somewhat trivial. == Important results == There are well-known classical algorithms such as [[depth-first search]] and [[breadth-first search]] which solve USTCON in linear time and space. Their existence, shown long before '''SL''' was defined, proves that '''SL''' is contained in '''P'''. It's also not difficult to show that USTCON, and so '''SL''', is in '''NL''', since we can just nondeterministically guess at each vertex which vertex to visit next in order to discover a path if one exists. The first nontrivial result for '''SL''', however, was [[Savitch's theorem]], proved in 1970, which provided an algorithm that solves USTCON in log<sup>2</sup> ''n'' space. Unlike depth-first search, however, this algorithm is impractical for most applications because of its potentially superpolynomial running time. One consequence of this is that USTCON, and so '''SL''', is in DSPACE(log<sup>2</sup>''n'').<ref>W.J.Savitch, "Relationship between nondeterministic and deterministic tape classes", J.CSS, 4, pp 177-192, 1970</ref> (Actually, Savitch's theorem gives the stronger result that '''NL''' is in DSPACE(log<sup>2</sup>''n'').) Although there were no ''deterministic'' space improvements on Savitch's algorithm for 22 years, a highly practical probabilistic log-space algorithm was found in 1979 by Aleliunas et al.: simply start at one vertex and perform a random walk until you find the other one (then accept) or until ''|V|''<sup>3</sup> time has passed (then reject).<ref>Aleliunas, R., Karp, R. M., Lipton, R. J., Lovasz, L., and Rackoff, C. 1979. [http://portal.acm.org/citation.cfm?id=1382621 Random walks, universal traversal sequences, and the complexity of maze problems]. In Proceedings of the 20th Annual Symposium on Foundations of Computer Science (October 29 - 31, 1979). SFCS. IEEE Computer Society, Washington, DC, 218-223.</ref> False rejections are made with a small bounded probability that shrinks exponentially the longer the random walk is continued. This also showed that '''SL''' is contained in [[RL_(complexity)|RLP]], the class of problems solvable in polynomial time and logarithmic space with probabilistic machines that reject incorrectly less than 1/3 of the time. In 1989, Borodin et al. strengthened this result by showing that the [[complement (complexity)|complement]] of USTCON, determining whether two vertices are in different connected components, is 