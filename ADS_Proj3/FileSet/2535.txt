limited. Similarly, in an environment such as a [[video game console]] taking a small number of high-order bits of an LCG may well suffice. The low-order bits of LCGs when m is a power of 2 should never be relied on for any degree of randomness whatsoever. Indeed, simply substituting 2<sup>n</sup> for the modulus term reveals that the low order bits go through very short cycles. In particular, any full-cycle LCG when m is a power of 2 will produce alternately odd and even results. ==Comparison with other PRNGs== If higher quality random numbers are needed, and sufficient memory is available (~ 2 [[kilobyte]]s), then the [[Mersenne twister]] algorithm provides a vastly longer period (2<sup>19937</sup>-1) and variate uniformity<ref>Matsumoto, Makoto, and Takuji Nishimura (1998) ACM Transactions on Modeling and Computer Simulation 8</ref> The Mersenne twister generates higher-quality deviates than almost any LCG.{{Citation needed|date=December 2009}} A common Mersenne twister implementation, interestingly enough, uses an LCG to generate seed data. A [[Linear feedback shift register|Linear Feedback Shift Register]] PRNG can be implemented with essentially the same amount of memory and produces a stream of pseudorandom numbers with better randomness qualities{{Citation needed|date=April 2010}} when considering streams of bits, albeit with a bit more computation. ==See also== * [[Full cycle]] * [[Inversive congruential generator]] * [[Multiply-with-carry]] * [[Lehmer RNG]] (sometimes called the [[Park-Miller RNG]]) ==Notes== {{Reflist|2}} ==References== <references/> * {{cite journal | author = S.K. Park and K.W. Miller |title=Random Number Generators: Good Ones Are Hard To Find |journal=[[Communications of the ACM]] |year=1988 |volume=31 |issue=10 |pages=1192–1201 |url=http://portal.acm.org/citation.cfm?id=63042 |doi=10.1145/63039.63042}} * [[Donald Knuth|D. E. Knuth]]. ''The Art of Computer Programming'', Volume 2: ''Seminumerical Algorithms'', Third Edition. Addison-Wesley, 1997. ISBN 0-201-89684-2. Section 3.2.1: The Linear Congruential Method, pp. 10&ndash;26. * {{cite journal |author=P. L'Ecuyer |title=Tables of Linear Congruential Generators of Different Sizes and Good Lattice Structure |journal=[[Mathematics of Computation]] |volume=68 |issue=225 |pages=249&ndash;260 |year=1999 |url=http://citeseer.ist.psu.edu/132363.html |doi=10.1090/S0025-5718-99-00996-5}} * Press, William H., ''et al.'' (1992). ''[[Numerical Recipes]] in Fortran 77: The Art of Scientific Computing'', 2nd edition. ISBN 0-521-43064-X. *Gentle, James E., (2003). ''Random Number Generation and Monte Carlo Methods'', 2nd edition , Springer, ISBN 0-387-00178-6. * {{cite journal |author=Joan Boyar |title=Inferring sequences produced by pseudo-random number generators |journal=[[Journal of the ACM]] |year=1989 |volume=36 |issue=1 |pages=129–141 |url=http://portal.acm.org/citation.cfm?id=59305&dl=ACM&coll=portal |doi=10.1145/58562.59305}} (in this paper, efficient algorithms are given for inferring sequences produced by certain pseudo-random number generators). ==External links== * The simulation [http://www.vias.org/simulations/simusoft_lincong.html Linear Congruential Generator] visualizes the correlations between the pseudo-random numbers when manipulating the parameters. * [http://www.cs.virginia.edu/~rjg7v/annotated.html Security of Random Number Generation: An Annotated Bibliography] * [http://www.math.niu.edu/~rusin/known-math/99/LCG Linear Congruential Generators post to sci.math] * [http://www.goldsteintech.com/art/deathofart.html The "Death of Art" computer art project at Goldstein Technologies LLC, uses an LCG to generate 33,554,432 images] * [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/testu01.pdf P. L'Ecuyer and R. Simard, ``TestU01: A C Library for Empirical Testing of Random Number Generators'', May 2006, Revised November 2006, ACM Transactions on Mathematical Software, 33, 4, Article 22, August 2007.] * [http://www.paragarora.com/2010/03/additive-congruential-method-maths-and-logic-behind-its-spread/ Additive Congruential Method : maths and logic behind its spread ] [[Category:Pseudorandom number generators]] [[Category:Modular arithmetic]] [[cs:Lineární kongruentní generátor]] [[de:Kongruenzgenerator]] [[fr:Générateur congruentiel linéaire]] [[ko:선형 합동 생성기]] [[it:Generatore lineare congruenziale]] [[nl:Lineaire congruentiegenerator]] [[ja:線形合同法]] [[ru:Линейный конгруэнтный метод]] [[sv:Linjär kongruensgenerator]] [[zh:線性同餘方法]]</text> </page> <page> <id>21732</id> <title>Linear functional</title> <text>:''This article deals with [[linear map]]s from a [[vector space]] to its field of [[scalar (mathematics)|scalar]]s. These maps '''may''' be [[functional (mathematics)|functionals]] in the traditional sense of functions of functions, but this is not necessarily the case.'' In [[linear algebra]], a branch of [[mathematics]], a '''linear functional''' or '''linear form''' (also called a '''[[one-form]]''' or '''covector''') is a [[linear map]] from a [[vector space]] to its field of [[scalar (mathematics)|scalar]]s. In [[Euclidean space|'''R'''<sup>n</sup>]], if [[euclidean vector|vectors]] are represented as [[column vector]]s, then linear functionals are represented as [[row vector]]s, and their action on vectors is given by the [[dot product]], or the [[matrix product]] with the [[row vector]] on the left and the [[column vector]] on the right. In general, if ''V'' is a [[vector space]] over a [[field (mathematics)|field]] ''k'', then a linear functional &fnof; is a function from ''V'' to ''k'', which is linear: :<math>f(\vec{v}+\vec{w}) = f(\vec{v})+f(\vec{w})</math> for all <math>\vec{v}, \vec{w}\in V</math> :<math>f(a\vec{v}) = af(\vec{v})</math> for all <math>\vec{v}\in V, a\in k.</math> The set of all linear functionals from ''V'' to ''k'', Hom<sub>''k''</sub>(''V'',''k''), is itself a vector space over ''k''. This space is called the [[dual space]] of ''V'', or sometimes the '''algebraic dual space''', to distinguish it from the [[continuous dual space]]. It is often written ''V''<sup>*</sup> or <math>\textstyle{V'}</math> when the field ''k'' is understood. == Continuous linear functionals == {{see also|Continuous linear operator}} If V is a [[topological vector space]], the space of [[continuous function|continuous]] linear functionals &mdash; the ''[[continuous dual space|continuous dual]]'' &mdash; is often simply called the dual space. If ''V'' is a [[Banach space]], then so is its (continuous) dual. To distinguish the ordinary dual space from the continuous dual space, the former is sometimes called the ''algebraic dual''. In finite dimensions, every linear functional is continuous, so the continuous dual is the same as the algebraic dual, although this is not true in infinite dimensions. == Examples and applications == === Linear functionals in '''R'''<sup>''n''</sup> === Suppose that vectors in the real coordinate space '''R'''<sup>''n''</sup> are represented as column vectors :<math>\vec{x} = \begin{bmatrix}x_1\\ \vdots\\ x_n\end{bmatrix}.</math> Then any linear functional can be written in these coordinates as a sum of the form: :<math>f(\vec{x}) = a_1x_1 + \cdots + a_n x_n.</math> This is just the matrix product of the row vector [''a''<sub>1</sub> ... ''a''<sub>''n''</sub>] and the column vector <math>\vec{x}</math>: :<math>f(\vec{x}) = [a_1 \dots a_n] \begin{bmatrix}x_1\\ \vdots\\ x_n\end{bmatrix}.</math> === Integration === Linear functionals first appeared in [[functional analysis]], the study of [[function space|vector spaces of functions]]. A typical example of a linear functional is [[integral|integration]]: the linear transformation defined by the [[Riemann integral]] :<math>I(f) = \int_a^b f(x)\, dx</math> is a linear functional from the vector space C[''a'',''b''] of continuous functions on the interval [''a'', ''b''] to the real numbers. The linearity of ''I''(&fnof;) follows from the standard facts about the integral: :<math>I(f+g) = \int_a^b(f(x)+g(x))\, dx</math> ::<math>= \int_a^b f(x)\, dx + \int_a^b g(x)\, dx = I(f)+I(g)</math> :<math>I(\alpha 