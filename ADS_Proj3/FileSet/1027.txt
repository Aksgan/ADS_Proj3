[[CLISP]], [[Scheme (programming language)|Scheme]], [[Objective Caml]], [[Prolog]] * Development tools: [[make (software)|make]], [[autotools]], [[flex lexical analyser|flex]], [[GNU bison|bison]], [[doxygen]] * Version control systems: [[cvs]], [[subversion]], [[git]], [[mercurial]] * Servers: [[Apache HTTP Server|Apache]], [[BIND]], [[PostgreSQL]], [[Pure-FTPd]], [[OpenSSH]], [[telnetd]], [[exim]], [[UW IMAP]] * Clients: [[Mutt (e-mail client)|Mutt]] (email), [[Lynx (web browser)|Lynx]] (web), [[Irssi]] (IRC), [[tin (newsreader)|tin]] (newsgroups) The [[Cygwin/X]] project contributes an implementation of the [[X Window System]] that allows graphical Unix programs to display their user interfaces on the Windows desktop. This can be used both with local and remote programs. Cygwin ships with a fairly small number of X applications, for example: * Terminals: [[rxvt-unicode]], [[xterm]] * Editors: emacs-X11, gvim * Text processors/viewers: [[LyX]], [[xpdf]], [[Device independent file format|xdvi]] In addition to the low-level [[Xlib]] library for developing X applications, Cygwin also ships with various higher-level and cross-platform [[GUI]] frameworks, including [[Gtk+]] and [[Qt (framework)|Qt]]. The [[Cygwin Ports]] project provides many additional packages that are not available in the Cygwin distribution itself. Examples include the [[GNOME]] and [[KDE]] desktop environments as well as the [[MySQL]] database and the [[PHP]] scripting language. ==Alternatives== Several open-source and proprietary alternatives are available for simultaneous access to both Windows and UNIX environments on the same hardware. Toolsets like [[Microsoft Windows Services for UNIX| Microsoft Windows Services for UNIX (SFU)]], [[UWIN]], [[MKS Toolkit]] for Enterprise Developers and Hamilton C shell also aim to provide a Unix-like user and development environment. They implement at least a shell and a set of the most popular utilities. Most include the familiar GNU and/or Unix development tools, including [[make (software)|make]], [[yacc]], [[lex (software)|lex]] and a [[cc (software)|cc]] command which acts a wrapper around a supported [[C (programming language)|C]] compiler. SFU also includes the [[GNU Compiler Collection|GCC]] compiler. [[MinGW]] is a native [[porting|software port]] of the [[GNU Compiler Collection]] (GCC) to Microsoft Windows, along with a set of freely distributable import libraries and [[header files]] for the [[Windows API]]. MinGW allows developers to create native Microsoft Windows applications. In addition, a component of MinGW known as '''MSYS''' (''Minimal SYStem''), which was derived from Cygwin version 1.3.3, provides a minimal Unix-like [[shell (computer science)|shell]] environment including [[Bash (Unix shell)|bash]] and a selection of [[POSIX]] tools sufficient to enable [[autoconf]] scripts to run.<ref>[http://mingw.org/wiki/MSYS MSYS]</ref> In addition, there are numerous virtualization solutions that provide [[x86]] [[platform virtualization]] to run Windows and Unix-like operating systems simultaneously on the same hardware, but without the integration of the environments that Cygwin provides. Some, like [[VirtualBox]] and [[VMware Player]] run on Windows and Linux hosts and can run many other operating systems. [[Cooperative Linux]] (in short coLinux) runs a full, but modified Linux kernel like a driver under Windows, effectively making Windows and Linux two [[coroutines]], using [[cooperative multitasking]] to switch between them. [[Wine (software)|Winelib]], a part of the Wine project, is the inverse of Cygwin - it is a [[free and open source software|free and open source]] [[compatibility layer]] for [[Unix-like]] [[operating system]]s on the [[x86 architecture|x86]] or [[x86-64]] architecture that can allow programs written for [[Microsoft Windows]] to run on Unix-like operating systems. Unlike Cygwin which requires "You rebuild your application from source if you want it to run on Windows",<ref>{{cite web|title=Cygwin homepage section "What Isn't Cygwin?"|url=http://www.cygwin.com/|publisher=Cygwin}}</ref> the full Wine product supports executing unmodified Windows binaries. ==See also== * [[Cygwin/X]] ([[X11]] for Cygwin) * [[mintty]] (Cygwin terminal) * [[MinGW]] (Minimalist [[GNU]] for Windows) * [[Cooperative Linux]] * [[Interix]] ==References== {{Reflist}} ==External links== {{wikibooks}} * {{official website|http://www.cygwin.com}} * {{Freshmeat|cygwin|Cygwin}} * [http://developer.berlios.de/projects/cygnix/ Cygnix project] * [http://www.okisoft.co.jp/esc/utf8-cygwin/ cygwin.dll with Unicode support] {{FLOSS}} [[Category:Compilers]] [[Category:Free compilers and interpreters]] [[Category:Free emulation software]] [[Category:Free software programmed in C]] [[Category:Free software programmed in C++]] [[Category:Computer programming tools]] [[Category:Compatibility layers]] [[Category:Unix emulators]] [[Category:Red Hat]] [[Category:System administration]] [[Category:Windows-only free software]] [[af:Cygwin]] [[ar:سيج وين]] [[ca:Cygwin]] [[cs:Cygwin]] [[da:Cygwin]] [[de:Cygwin]] [[es:Cygwin]] [[eo:Cigvino]] [[fa:سیگوین]] [[fr:Cygwin]] [[ko:시그윈]] [[it:Cygwin]] [[he:Cygwin]] [[lv:Cygwin]] [[nl:Cygwin]] [[ja:Cygwin]] [[no:Cygwin]] [[pl:Cygwin]] [[pt:Cygwin]] [[ru:Cygwin]] [[sk:Cygwin]] [[sl:Cygwin]] [[fi:Cygwin]] [[sv:Cygwin]] [[ta:சிக்வின்]] [[th:ซิกวิน]] [[tr:Cygwin]] [[uk:Cygwin]] [[vi:Cygwin]] [[zh:Cygwin]]</text> </page> <page> <id>8851</id> <title>Cylinder-head-sector</title> <text>{{Unreferenced|date=March 2010}} [[Image:Cylinder Head Sector.svg|right|Cylinder, head, and sector of a hard drive.]] '''Cylinder-head-sector''', also known as '''CHS''', was an early method for giving addresses to each physical block of data on a [[hard disk drive]]. In the case of ''floppy'' drives, for which the same exact ''diskette'' medium can be truly ''[[disk formatting|low-level formatted]]'' to different capacities, this is still true. Though CHS values no longer have a direct physical relationship to the data stored on disks, ''pseudo'' CHS values (which can be ''translated'' by disk electronics or software) are still being used by many utility programs. ==Definitions== ===Heads=== Data is written to and read from the surface of a platter by a device called a [[disk read-and-write head|head]]. Naturally, a platter has 2 sides and thus 2 surfaces on which data could be manipulated; usually there are 2 heads per platter—one on each side, but not always. (Sometimes the term ''side'' is substituted for ''head,'' since platters might be separated from their head assemblies; as is definitely the case with the removable media of a ''floppy'' drive.) ===Tracks=== The [[track (disk drive)|track]]s are the thin [[concentric]] circular strips on a floppy disk or platter surface which comprise the magnetic medium to which data is written by the drive heads. These magnetic strips form a circle and are (therefore) two-dimensional. At least one head is required to read a single track. All information stored on the hard disk is recorded in tracks. ===Cylinders=== A [[cylinder (disk drive)|cylinder]] comprises the same track number on each platter, spanning all such tracks across each platter surface that is able to store data (without regard to whether or not the track is "bad"). Thus, it is a three-dimensional structure. Any track comprising part of a specific cylinder can be written to and read from while the actuator assembly remains stationary, and one way in which hard drive manufacturers have increased drive access speed has been by increasing the number of platters which can be read at the same time. As larger hard disks have come into use, a cylinder has become also a 