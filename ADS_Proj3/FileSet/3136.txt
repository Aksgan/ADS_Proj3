disputed reasons, one of the founders, Theo de Raadt, left the project. He later founded a new project, [[OpenBSD]], from a forked version of NetBSD 1.0 near the end of 1995.<ref>{{cite web |url=http://www.theos.com/deraadt/coremail.html |first=Theo |last=de Raadt |authorlink=Theo de Raadt |title=Archive of the mail conversation leading to Theo de Raadt's departure |date=March 29, 2009 |accessdate=January 15, 2010}}</ref> In 1998, NetBSD 1.3 introduced the [[pkgsrc]] packages collection.<ref>{{cite web|url=http://www.netbsd.org/docs/pkgsrc/introduction.html#supported-platforms|title=Platforms supported by pkgsrc|work=www.netbsd.org|publisher=The NetBSD Foundation|accessdate=10 January 2010}}</ref> Until 2004, NetBSD 1.x releases were made at roughly annual intervals, with minor "patch" releases in between. From release 2.0 onwards, each major NetBSD release corresponds to an incremented major version number, i.e. the major releases following 2.0 are 3.0, 4.0 and so on. The previous minor releases are now divided into two categories: ''x.y'' "stable" maintenance releases and ''x.y.z'' releases containing only security and critical fixes.<ref>{{cite web |url=http://www.netbsd.org/releases/release-map.html |title=NetBSD release glossary and graphs |date=January 13, 2010 |publisher=[[The NetBSD Project]] |accessdate=January 15, 2010}}</ref> ==Features== ===Portability=== As the project's motto (''"Of course it runs NetBSD"'' <ref name="netbsd-about"/>) suggests, NetBSD has been ported to a large number of [[32-bit|32-]] and [[64-bit]] [[computer architecture|architectures]]. These range from [[VAX]] [[minicomputers]] to [[Pocket PC]] [[Personal Digital Assistant|PDAs]]. As of 2009, NetBSD supports 57 hardware platforms (across 15 different processor architectures). Although the Linux 2.6 ''kernel'' includes support for more processor architectures,<ref>{{cite web|url=http://www.kroah.com/log/linux/ols_2006_keynote.html|title=Myths, Lies, and Truths about the Linux kernel|last=Kroah-Hartman|first=Greg|date=July 23, 2006|accessdate=June 11, 2007}}</ref> the NetBSD distribution supports more platforms than any single [[Linux distribution]].{{fact|date=January 2011}} The kernel and [[Userland (computing)|userland]] for these platforms are all built from a central unified source-code tree managed by [[Concurrent Versions System|CVS]]. Currently, unlike other kernels such as [[μClinux]], the NetBSD kernel requires the presence of an [[Memory management unit|MMU]] in any given target architecture. NetBSD's portability is aided by the use of [[hardware abstraction layer]] interfaces for low-level hardware access such as [[bus (computing)|bus]] input/output or [[direct memory access|DMA]]. Using this portability layer, [[device driver]]s can be split into "machine-independent" and "machine-dependent" components. This allows a single driver to be easily used on several platforms by hiding details of exactly how the driver accesses the hardware, and reduces the amount of work needed to port it to a new architecture.<ref name="netbsd-port">{{cite web|url=http://netbsd.org/about/portability.html|title=Portability and supported hardware platforms|work=www.netbsd.org|publisher=The NetBSD Foundation|accessdate=29 November 2009}}</ref> This enables, for instance, a driver for a specific [[Peripheral Component Interconnect|PCI]] card to work whether that card is in a PCI slot on an [[IA-32]], [[DEC Alpha|Alpha]], [[PowerPC]], [[SPARC]], or other architecture with a PCI bus. Also, a single driver for a specific device can operate via several different buses, for example [[industry standard architecture|ISA]], PCI, [[PC card]], etcetera. In comparison, [[Linux]] device driver code often needs to be reworked for every new architecture. As a consequence, in recent porting efforts by NetBSD and Linux developers, NetBSD has taken much less time to port to new hardware.<ref name="LINUX_OR_BSD"/> This [[platform independence]] aids the development of [[embedded systems]], particularly since NetBSD 1.6, when the entire toolchain of [[compiler]]s, [[Assembly language#Assembler|assemblers]], [[Linker (computing)|linkers]], and other tools fully supported [[cross compiler|cross-compiling]]. In 2005, as a demonstration of NetBSD's portability and suitability for embedded applications, Technologic Systems, a vendor of embedded systems hardware, designed and demonstrated a NetBSD-powered kitchen [[toaster]].<ref>{{cite press release|url=http://www.embeddedarm.com/software/arm-netbsd-toaster.php|title=Technologic Systems Designs NetBSD Controlled Toaster|date=August 2005|accessdate=June 11, 2007}}</ref> Commercial ports to embedded platforms, including the [[AMD Geode]] LX800, [[Freescale]] [[PowerQUICC]] processors, Marvell Orion, [[Applied Micro Circuits Corporation|AMCC]] [[PowerPC 400|405]] family of PowerPC processors, [[Intel]] [[XScale]] IOP and IXP series, were available from and supported by Wasabi Systems (defunct as of March, 2009<ref>{{cite web |url=http://blog.nifelheim.info/tech/2009/04/02/whats-up-with-wasabi-systems-inc/ |title=What’s up with Wasabi Systems Inc.? |work=Nifelheim Tech-Blog |first=Volkmar |last=Seifert |date=April 2, 2009 |accessdate=January 15, 2010}}</ref>). ===Portable build framework=== The NetBSD cross-compiling framework (also known as "build.sh" <ref>{{cite web |url=http://www.netbsd.org/docs/guide/en/chap-build.html |title=Chapter 31. Crosscompiling NetBSD with build.sh |work=The NetBSD Guide |author=The NetBSD Foundation |date=January 10, 2010 |accessdate=January 15, 2010}}</ref>) allows a complete NetBSD system for an architecture to be built from another system of different architecture (usually faster or with more hardware resources), even on a different operating system, since the framework supports most [[POSIX]]-compliant systems. Several embedded systems using NetBSD have required no additional software development other than toolchain and target rehost.<ref name="LINUX_OR_BSD">{{cite web |url=http://wasabisystems.com/pdfs/Linux_or_BSD.pdf |title=BSD or Linux: Which Unix is better for embedded applications? |year=2003 |publisher=Wasabi Systems Inc. |format=PDF |accessdate=June 11, 2007 |archivedate=December 30, 2006 |archiveurl=http://web.archive.org/web/20061230075423/http://www.wasabisystems.com/pdfs/Linux_or_BSD.pdf}}</ref> ===The pkgsrc packages collection=== NetBSD features ''[[pkgsrc]]'' (short for "package source"), a framework for building and managing third-party [[application software]] packages. The pkgsrc collection consists of more than 8100 packages as of {{As of|2009|alt=January 2009}}.<ref>{{cite web|url=http://mail-index.netbsd.org/netbsd-announce/2009/01/12/msg000052.html|title=The pkgsrc-2008Q4 Release}}</ref> Building and installing packages such as [[KDE]], [[GNOME]], the [[Apache HTTP server]] or [[Perl]] is performed through the use of a system of [[makefile]]s. This can automatically fetch the source code, unpack, patch, configure, build and install the package such that it can be removed again later. An alternative to compiling from source is to use a precompiled binary package. In either case, any prerequisites/dependencies will be installed automatically by the package system, without need for manual intervention. pkgsrc supports not only the hardware platforms that run NetBSD, but also — with the help of an [[autoconf]]-based bootstrap system — several other [[Unix-like]] operating systems, such as [[Linux]], other BSD variants like [[FreeBSD]], [[Solaris Operating System|Solaris]], [[Darwin (operating system)|Darwin]]/[[Mac OS X]], [[IRIX]], [[Interix]] and others. [[pkgsrc]] has also been adopted as the official package system for [[DragonFly BSD]].<ref>{{cite mailing list |url=http://leaf.dragonflybsd.org/mailarchive/users/2005-08/msg00347.html |title=PKGSRC will be officially supported as of the next release |first=Matthew |last=Dillon |mailinglist=DragonFly users List |date=August 31, 2005 |accessdate=January 15, 2010}}</ref> ===Symmetric multiprocessing=== NetBSD has had support for [[Symmetric multiprocessing|SMP]] since the NetBSD 2.0 release in 2004,<ref>{{cite web|url=http://www.netbsd.org/changes/2004.html#netbsd-2.0|title=NetBSD 2.0 release notes}}</ref> which was initially implemented using the [[giant lock]] approach. During the development cycle of the NetBSD 5 release, major work was done to improve SMP support; most of the kernel subsystems were modified to be [[MP safe]] and use the [[fine-grained locking]] approach. New [[Synchronization (computer science)|synchronization primitives]] were implemented and [[scheduler activations]] was replaced with a [[Thread_(computer_science)#1:1|1:1 threading model]] in February 2007.<ref>{{cite web |url=http://www.netbsd.org/changes/changes-5.0.html |title=Significant 