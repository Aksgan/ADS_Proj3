cracking strategies, with brute force and dictionary attacks proving to be the most productive. ==References== {{reflist|2}} == External links == * [http://lasecwww.epfl.ch/pub/lasec/doc/Oech03.pdf Philippe Oechslin: Making a Faster Cryptanalytic Time-Memory Trade-Off.] CRYPTO 2003: pp617&ndash;630 * [http://csrc.nist.gov/publications/nistpubs/800-63/SP800-63V1_0_2.pdf NIST Special Publication 800-63: Electronic Authentication Guideline] {{Password_Cracking_Software}} [[Category:Cryptographic attacks]] [[Category:Password authentication]] [[Category:Password cracking software|*]] [[Category:Computer security exploits]] [[Category:System administration]] [[Category:Crimes]] [[Category:Computer law]] [[ca:Password cracking]] [[es:Password cracking]] [[eu:Password crack]] [[fr:Cassage de mot de passe]] [[nl:Wachtwoordkraker]] [[ja:パスワードクラック]]</text> </page> <page> <id>28589</id> <title>Password psychology</title> <text>{{Merge|Password_policy#Usability_considerations|date=August 2009}} {{Unreferenced|date=February 2008}} Living on the intersection of [[cryptography]] and [[psychology]], password psychology is the study of what makes [[password]]s or [[Key (cryptography)|cryptographic keys]] easy to remember or guess. == See also == *[[Password strength]] *[[Password policy]] *[[Password cracking]] *[[Passphrase]] ''' ---- ''' {{DEFAULTSORT:Password Psychology}} [[Category:Cryptography]] {{comp-sci-stub}}</text> </page> <page> <id>28591</id> <title>Password synchronization</title> <text>'''Password synchronization''' is defined as any process or technology that helps users to maintain a single password that is subject to a single security policy, and changes on a single schedule across multiple systems. It's a type of [[Identity management]] software and it's considered as easier to implement than [[Single_signon | enterprise single sign-on (SSO)]], as there is no client software deployment, and user enrollment can be automated. ==Uses== Password synchronization is an effective mechanism for addressing '''password management problems''' on an enterprise network: * Users with synchronized passwords tend to remember their passwords. * Simpler password management means that users make significantly fewer password-related calls to the help desk. * Users with just one or two passwords are much less likely to write down their passwords. ==Security== Some (in particular those who sell single signon systems) claim that password synchronization is less secure than single signon, since compromise of one password means compromise of all. The counter-argument is that, with single signon, compromise of the primary password (from which an encryption key is derived and used to protect all other, stored passwords) also compromises all, so the security of password synchronization and single signon is similar -- i.e., both systems depend strongly on the security of a single password, and that password must be well defended, regardless of such academic arguments. ==Types== Two types of password synchronization processes are commonly available in commercial software: * Transparent password synchronization, triggered by a password change on an existing system. The new password is automatically forwarded to other user objects that belong to the same user, on other systems (of the same or different types). * Web-based password synchronization, initiated by the user with a web browser, in place of the existing native password change process. The web-based process allows the user to set multiple passwords at once. The best form of password synchronization is one that securely synchronizes only the [[Password#Form_of_stored_passwords|stored representations]] of the original passwords -- not by sharing the clear text password itself. For this, however, both parties must share the same password storage and verification scheme. Therefore, this feature is typically only found in proprietary forms where the password scheme is controlled by a single vendor on both ends. As standards for password storage evolve, password synchronization between vendors may begin to utilize this third and more secure synchronization type. ==External links== [http://password-manager.hitachi-id.com/docs/password-management-project-roadmap.html Password Management Project Roadmap] vendor-neutral white paper about how to run a project to deploy this type of software [[Category:Identity management systems]] [[Category:Password authentication]]</text> </page> <page> <id>28596</id> <title>Patch Tuesday</title> <text>'''Patch Tuesday''' is the second Tuesday of each month, on which [[Microsoft]] releases security patches.<ref>{{cite web |title=Security updates |publisher=Microsoft |date=2007-10-09 |accessdate=2007-11-02 |url=http://www.microsoft.com/athome/security/update/bulletins/default.mspx}}</ref> Starting with [[Windows 98]], Microsoft included a "[[Windows Update]]" system that would check for [[patch (computing)|patches]] to [[Microsoft Windows|Windows]] and its components, which Microsoft would release intermittently. With the release of [[Microsoft Update]], this system also checks for updates to other [[List of Microsoft software applications|Microsoft products]], such as [[Microsoft Office|Office]], [[Microsoft Visual Studio|Visual Studio]], [[Microsoft SQL Server|SQL Server]], and others. == Patch-Deployment Costs == Earlier versions of the Windows Update system suffered from two problems. The first was that less-experienced users were often unaware of Windows Update and did not install it; Microsoft's solution was the "Automatic Update," which notified each user that an update was available for their system. The second problem was that customers, such as corporate users, with many copies of Windows not only had to update every Windows deployment in the company but also uninstall patches issued by Microsoft that broke existing functionality. In order to reduce the costs related to the deployment of patches, Microsoft introduced "Patch Tuesday," in October 2003<ref>http://news.cnet.com/Microsoft-details-new-security-plan/2100-1002_3-5088846.html</ref>. In this system, security patches are accumulated over a period of one month and then dispatched all at once on the second Tuesday of the month, an event for which system administrators may prepare. Some speculate that Tuesday was selected so that post-patch problems could be troubleshot and resolved before the weekend, but, certainly, not every patch-induced injury may be cured in that time. The non-Microsoft terms for the following day are "Exploit Wednesday" and "[[Zero-day attack|Day Zero]]," when attacks may be launched against the newly announced vulnerabilities. == Security Implications == The most obvious security implication is that security problems that have a solution are withheld from the public for a period of up to a month. This policy is adequate when the vulnerability is not widely known or extremely obscure, but that is not always the case. There have been cases where either vulnerability information or actual worms were released to the public a day or two before patch Tuesday.{{Citation needed|date=January 2010}} This did not leave Microsoft enough time to incorporate a fix for said vulnerabilities, and thus, theoretically, left a one month window for attackers to exploit the hole, before a patch is available to formally fix it. Microsoft issues critical patches as they become ready, however, so this is not generally a problem. == Exploit Wednesday == Many exploitation events are seen shortly after the release of a patch.<ref>[http://blog.metasploit.com/2010/08/better-faster-stronger.html HD Moore: Better, Faster, Stronger: DLLHijackAuditKit v2]</ref> By analyzing the patch, exploitation developers can more easily figure out how to exploit the underlying vulnerability,<ref>{{cite web|last=Kurtz 