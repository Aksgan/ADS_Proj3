duration of the thought experiment. That isolation delays [[decoherence]] in such a way that the subjective experience of the superposition is illustrated. It's only within the confines of such an abstract quantum scenario that an observer finds they defy all odds.<ref name="mit_edu">{{cite web |last=Tegmark |first=Max |title=Quantum immortality |url=http://space.mit.edu/home/tegmark/quantum.html#immortality |month=November |year=1998 |lastaccessdate=25 October 2010}}</ref> ==In fiction== {{Main|Quantum suicide and quantum immortality in fiction}} Authors of [[science fiction]] have used themes involving both quantum suicide and quantum immortality. The idea that authors exploit is that a person who dies in one world may survive in another world or parallel universe. ==See also== <!--Please do not add links already in the article--> * [[Multiverse]] * [[Quantum mysticism]] ==References== {{Reflist}} ==External links== * [http://www.higgo.com/quantum/qti.htm "Does the 'many-worlds' interpretation of quantum mechanics imply immortality?"] by [[James Higgo]] * [http://www.weidai.com/everything.html The 'Everything' mailing list (and archives), A "discussion of the idea that all possible universes exist".] * [http://space.mit.edu/home/tegmark/quantum.html Dying to know] {{Use dmy dates|date=November 2010}} {{DEFAULTSORT:Quantum Suicide And Immortality}} [[Category:Consciousness studies]] [[Category:Quantum measurement]] [[Category:Suicide]] [[Category:Thought experiments]] [[ca:Suïcidi quàntic]] [[et:Kvantsurematus]] [[es:Suicidio cuántico]] [[it:Suicidio quantistico]] [[hu:Kvantumöngyilkosság]] [[pt:Imortalidade quântica]] [[ru:Квантовое бессмертие]] [[simple:Quantum immortality]] [[uk:Квантове безсмертя]] [[zh:量子自杀]]</text> </page> <page> <id>30862</id> <title>Quasiperiodic motion</title> <text>{{Unreferenced|date=December 2009}} In [[mathematics]] and [[theoretical physics]], '''quasiperiodic motion''' is in rough terms the type of motion executed by a [[dynamical system]] containing a finite number (two or more) of [[commensurability (mathematics)|incommensurable]] frequencies. That is, if we imagine that the [[phase space]] is modelled by a [[torus]] ''T'', the trajectory of the system is modelled by a [[curve]] on ''T'' that wraps around without ever exactly coming back on itself. A '''quasiperiodic function''' on the [[real line]] is the type of function (continuous, say) obtained from a function on ''T'', by means of a curve :''R'' &rarr; ''T'' which is linear (when lifted from ''T'' to its covering [[Euclidean space]]), by composition. It is therefore oscillating, with a finite number of underlying frequencies. (NB the sense in which [[theta function]]s and the [[Weierstrass zeta function]] in [[complex analysis]] are said to have [[quasi-period]]s with respect to a [[period lattice]] is something distinct from this.) The theory of [[almost periodic function]]s is, roughly speaking, for the same situation but allowing ''T'' to be a torus with an infinite number of dimensions. ==See also== * [[Quasiperiodicity]] {{DEFAULTSORT:Quasiperiodic Motion}} [[Category:Dynamical systems]] [[pt:Movimento quasi-periódico]]</text> </page> <page> <id>30879</id> <title>Query optimization</title> <text>{{Mergeto|Query optimizer|date=January 2009}} '''Query optimization''' is a function of many [[relational database management system]]s in which multiple [[query plan]]s for satisfying a query are examined and a good [[query plan]] is identified. This may or not be the absolute best strategy because there are many ways of doing plans. There is a trade-off between the amount of time spent figuring out the best plan and the amount running the plan. Different qualities of database management systems have different ways of balancing these two. Cost based [[query optimizer]]s evaluate the resource footprint of various query plans and use this as the basis for plan selection. Typically the resources which are costed are CPU path length, amount of disk buffer space, disk storage service time, and interconnect usage between units of parallelism. The set of query plans examined is formed by examining possible access paths (e.g., primary index access, secondary index access, full file scan) and various relational table join techniques (e.g., merge join, hash join, product join). The search space can become quite large depending on the complexity of the [[SQL]] query. There are two types of optimization. These consist of logical optimization which generates a sequence of [[relational algebra]] to solve the query. In addition there is physical optimization which is used to determine the means of carrying out each operation. [[Category:Database algorithms]] [[Category:Database management systems]] [[Category:SQL]] [[he:מיטוב שאילתות]] [[ru:Оптимизация запросов СУБД]]</text> </page> <page> <id>30882</id> <title>Query throughput</title> <text>{{unsourced|date=December 2007}} In [[Computer Science]], '''Query Throughput (QthD)''' is a measurement used to determine the performance of a [[database system]]. The throughput metric is a classical throughput measure characterizing the ability of the system to support a multi-user workload in a balanced way. ==Background== A number of [[query language|query]] users (S) is chosen, each of which execute the full set of 17 queries in a different order{{Fact|date=February 2007}}. In the background there is an update stream that runs a series of insert/delete operations (one pair for each query user). The choice of the number of users is at the discretion of the test sponsor. The throughput metric is computed as the total amount of work (S&times;17), converted to hours from seconds (3600 seconds per hour), scaled by the database volume (SF) and divided by the total elapsed time (T<sub>s</sub>) required between the first query starting and the last query or update function completing. Therefore the complete formulation is: : <math>\mathit{QthD} = \frac{S \times 17 \times 3600}{T_s} \times \mathit{SF}</math> Note that if the test sponsor chooses S=1 for the throughput test, for ease of benchmarking it is permissible to omit the throughput test and compute the throughput metric using timings obtained during the power test. Similarly, it is permissible to schedule the insert/delete activity for the throughput test after all the queries complete.{{Fact|date=February 2007}} ==See also== See [[Transaction Processing Performance Council]] (TPC). {{database-stub}} [[Category:Computer performance]]</text> </page> <page> <id>30886</id> <title>Question answering</title> <text>In [[information retrieval]] and [[natural language processing]] (NLP), '''question answering''' ('''QA''') is the task of automatically answering a question posed in [[natural language]]. To find the answer to a question, a QA computer program may use either a pre-structured [[database]] or a collection of natural language documents (a [[text corpus]] such as the [[World Wide Web]] or some local collection). QA research attempts to deal with a wide range of question types including: fact, list, definition, ''How'', ''Why'', hypothetical, semantically constrained, and cross-lingual questions. Search collections vary from small local document collections, to internal organization documents, to compiled [[newswire]] reports, to the World Wide Web. * ''Closed-domain'' question answering deals with questions under a specific domain (for example, medicine or automotive maintenance), and can be seen as an easier task because NLP systems can exploit domain-specific knowledge 