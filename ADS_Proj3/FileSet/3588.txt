approaches. At the same time, the accuracy improves. The underlying notion is that multiple information sources can help to improve performance of an estimator. This principle has been successfully applied within the context of classifier fusion where the output of multiple classifiers is used to arrive at a better result than any classifier alone. Within the context of prognostics, fusion can be accomplished by employing quality assessments that are assigned to the individual estimators based on a variety of inputs, for example heuristics, a priori known performance, prediction horizon, or robustness of the prediction. == Prognostic Performance Evaluation == Prognostic performance evaluation is of key importance for a successful PHM system deployment. The early lack of standardized methods for performance evaluation and benchmark data-sets resulted in reliance on conventional performance metrics borrowed from statistics. Those metrics were primarily accuracy and precision based where performance is evaluated against actual End of Life (EoL) typically known a priori in an offline setting. More recently, efforts towards maturing prognostics technology has put a significant focus on standardizing prognostic methods, including those of performance assessment. A key aspect, missing from the conventional metrics, is the capability to track performance with time. This is important because prognostics is a dynamic process where predictions get updated with an appropriate frequency as more observation data become available from an operational system. Similarly, the performance of prediction changes with time that must be tracked and quantified. Another aspect that makes this process different in a PHM context is the time value of a RUL prediction. As a system approaches failure, the time window to take a corrective action gets shorter and consequentially the accuracy of predictions becomes more critical for decision making. Finally, randomness and noise in the process, measurements, and prediction models are unavoidable and hence prognostics inevitably involves uncertainty in its estimates. A robust prognostics performance evaluation must incorporate the effects of this uncertainty. Several [https://www.phmsociety.org/ijphm/2010/metrics-for-offline-evaluation-of-prognostic-performance prognostics performance metrics] have evolved with consideration of these issues: *Prognostic Horizon (PH) quantifies how much in advance an algorithm can predict with a desired accuracy before a failure occurs. A longer PH is preferred as more time is then available for a corrective action. *''α-λ'' accuracy further tightens the desired accuracy levels using a shrinking cone of desired accuracy as EoL approaches. In order to comply with desired ''α-λ'' specifications at all times an algorithm must improve with time to stay within the cone. *Relative Accuracy (RA) quantifies the accuracy relative to the actual time remaining before failure. *Convergence quantifies how fast the performance converges for an algorithm as EoL approaches. A visual representation of these metrics can be used to depict prognostic performance over a long time horizon. == See also == * [[Preventive maintenance]] == References == === Notes === <references/> == External links == *[http://www.phmsociety.org The Prognostics and Health Management Society (PHM Society)] is a non-profit professional organization dedicated to the advancement of PHM as an engineering discipline. *[http://www.phmconference.org The Annual Conference of the PHM Society] is an annual international conference focusing exclusively on PHM. *The [[Joint Strike Fighter]] Program made substantial investments in PHM and related technologies [http://www.dtic.mil/ndia/2001systems/hess.pdf]. *[http://www.prognostics.umd.edu The Center for Advanced Life Cycle Engineering (CALCE)] at the [[University of Maryland, College Park]] has a group dedicated to providing a research and knowledge base to support the advancement of health management with a focus on electronics. *[http://www.aeroconf.org IEEE Aerospace Conference] features one of the oldest tracks on prognostics and health management. *[http://www.mfpt.org The Society for Machinery Failure Prevention Technology] has an annual meeting focusing on latest development in practical applications in the field of PHM. *[http://prognostics.nasa.gov The Prognostics Center of Excellence (PCoE)] at the [[NASA Ames Research Center]] provides an umbrella for prognostic technology development applied to aerospace applications. *[http://www.femto-st.fr/en/Research-departments/AS2M/Research-groups/COSMI/SyMI/index.php The PHM Research Group] of the French [http://www.femto-st.fr/en/The-institute/Presentation/ FEMTO-ST Institute] develops methods and experiments for the prognostics of industrial systems. *[http://www.imscenter.net NSF Industrial University Collaborative Research Center for Intelligent Maintenance Systems (IMS)] at the [[University of Cincinnati]] is a leading research institute in PHM area and has won [http://www.phmsociety.org PHM Society]Data Challenge in 2008 and 2009. [[Category:Prediction]] [[Category:Maintenance]] [[Category:Survival analysis]] [[fr:Pronostic de défaillance]] [[sk:Prognostika]]</text> </page> <page> <id>30189</id> <title>Program comprehension</title> <text> '''Program comprehension''' is a domain of computing science dealing with the processes (cognitive or others) used by [[software engineer]]s and [[code analysis]] to understand programs (during their evaluation, before their modification). Program comprehension is also known as program understanding. == Theories of program comprehension == Precursor work on program comprehension includes: * Ruven Brooks' theory [http://portal.acm.org/citation.cfm?id=803210]. * Ted J. Biggerstaff's concept assignment problem [http://portal.acm.org/citation.cfm?id=257679]. * Anneliese von Mayrhauser's theory [http://ieeexplore.ieee.org/search/wrapper.jsp?arnumber=402076]. == Conferences on program comprehension == Although major conferences in computing science welcome work on program comprehension, the International Conference on Program Comprehension [http://www.program-comprehension.org/] (formerly known as International ''Workshop'' on Program Comprehension until 2005 inclusive) is dedicated to research on program comprehension. == See also == *[[Program analysis (computer science)]] *[[Program slicing]] {{compu-sci-stub}} [[Category:Computer programming]]</text> </page> <page> <id>30202</id> <title>Programmable Interrupt Controller</title> <text>In [[computing]], a '''programmable interrupt controller''' ('''PIC''') is a device that is used to combine several sources of [[interrupt]] onto one or more [[CPU]] lines, while allowing priority levels to be assigned to its interrupt outputs. When the device has multiple interrupt outputs to assert, it will assert them in the order of their relative priority. Common modes of a PIC include hard priorities, rotating priorities, and cascading priorities. PICs often allow the cascading of their outputs to inputs between each other. ==Common features== PICs typically have a common set of registers: Interrupt Request Register (IRR), In-Service Register (ISR), Interrupt Mask Register (IMR). The IRR specifies which interrupts are pending acknowledgement, and is typically a symbolic register which can not be directly accessed. The ISR register specifies which interrupts have been acknowledged, but are still waiting for an [[End of interrupt|End Of Interrupt]] (EOI). The IMR specifies which interrupts are to be ignored and not acknowledged. A simple register schema such as this allows up to two distinct interrupt requests to be outstanding 