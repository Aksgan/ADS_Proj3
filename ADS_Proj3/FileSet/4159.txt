the know-how required for the maintenance of the software.<ref name="Heusler 181" /> * They also provide for the ''fees'' due to the escrow agent for his services.<ref name="Heusler 181">Heusler/Mathys, p. 181.</ref> Whether a source code escrow agreement is entered into at all, and who bears its costs, is subject to agreement between the licensor and the licensee. [[Software license agreement]]s often provide for a right of the licensee to demand that the source code be put into escrow, or to join an existing escrow agreement.<ref name="Heusler 180" /> [[Bankruptcy]] laws may interfere with the execution of a source code escrow agreement, if the bankrupt licensor's creditors are legally entitled to seize the licensor's assets – including the code in escrow – upon bankruptcy, preventing the release of the code to the licensee.<ref name="Heusler 182">Heusler/Mathys, p. 182.</ref> ==Free software== The escrow agreements described above are most applicable to custom-developed software which is not available to the general public. In some cases, source code for [[commercial off-the-shelf]] software may be deposited into escrow to be released under a [[free software]] or [[open source]] license when the original developer ceases development and/or when certain fundraising conditions are met. This model is also called [[ransomware]]. The [[Blender (software)|Blender]] graphics suite was released in this way following the bankruptcy of Not a Number Technologies; the widely used [[Qt (toolkit)|Qt toolkit]] is covered by a source code escrow agreement secured by the "KDE Free Qt Foundation". ==References== {{reflist}} [[Category:Source code|Escrow]] [[Category:Computer law]] [[sv:Källkodsdeponering]]</text> </page> <page> <id>35160</id> <title>Source transformation</title> <text>Finding a solution to a circuit can be somewhat difficult without using tricks or methods that make the circuit appear simpler. Circuit solutions are often simplified, especially with mixed sources, by transforming a voltage into a [[Electric current|current]] source, and vice versa.<ref name="Oppenheimer">Oppenheimer, Samuel L. (1984). ''Fundamentals of Electric Circuits''. New Jersey: Prentice Hall.</ref> This process is known as a '''source transformation''', and is an application of [[Thevenin's theorem]] and [[Norton's theorem]]. == Process == Performing a source transformation is the process of using [[Ohms Law]] to take an existing [[voltage source]] in [[series circuit|series]] with a [[resistor|resistance]], and replace it with a [[current source]] in [[parallel circuit|parallel]] with the same resistance. Remember that Ohms law states that a voltage in a material is equal to the material's resistance times the amount of current through it. Since source transformations are bilateral, one can be derived from the other. <ref name="Nilsson">Nilsson, James W., & Riedel, Susan A. (2002). ''Introductory Circuits for Electrical and Computer Engineering''. New Jersey: Prentice Hall.</ref> Source transformations are not limited to resistive circuits however. They can be performed on a circuit involving [[capacitors]] and [[inductors]], as long as the circuit is first put into the [[frequency domain]]. In general, the concept of source transformation is an application of [[Thevenin's theorem]] to a [[current source]], or [[Norton's theorem]] to a [[voltage source]]. Specifically, source transformations are used to exploit the equivalence of a real current source and a real voltage source, such as a [[battery (electricity)|battery]]. Application of Thevenin's theorem and Norton's theorem gives the quantities associated with the equivalence. Specifically, suppose we have a real current source I, which is an ideal current source in [[Series and parallel circuits|parallel]] with an [[Electrical impedance|impedance]]. If the ideal current source is rated at I amperes, and the parallel resistor has an impedance Z, then applying a source transformation gives an equivalent real voltage source, which is ideal, and in [[Series and parallel circuits|series]] with the impedance. This new voltage source V, has a value equal to the ideal current source's value times the resistance contained in the real current source <math>V=I\cdot Z</math>. The impedance component of the real voltage source retains its real current source value. In general, source transformations can be summarized by keeping two things in mind: * [[Ohm's Law]] * Impedances remain the same == Example calculation == Source transformations are easy to perform as long as there is a familiarity with [[Ohms Law]]. Basically, if there is a voltage source in [[series circuit|series]] with an [[Electrical impedance|impedance]], It is possible to find the value of the equivalent [[current source]] in [[parallel circuit|parallel]] with the impedance by dividing the value of the voltage source by the value of the impedance. The converse also applies here. Initially, if a current source in parallel with an impedance is present, multiplying the value of the current source with the value of the impedance will result in the equivalent voltage source in series with the impedance. A visual example of what is being done during a source transformation can be seen in Figure 1. <br style="clear:both;"/> <br style="clear:both;"/> '''Remember:''' <br style="clear:both;"/> <br style="clear:both;"/> <math>V=I\cdot Z</math> <br style="clear:both;"/> <br style="clear:both;"/> <math>I=\cfrac {V}{Z} </math> [[Image:Sourcetrans.jpg||frame|left|Figure 1. An example of a DC source transformation. Notice that the impedance Z is the same in both configurations.]] <br style="clear:both;"/> == See also == * [[Ohms Law]] * [[Thévenin's theorem]] * [[current source]] * [[voltage source]] * [[electrical impedance]] ==References== <references/> [[Category:Electrical engineering]] [[Category:Electronic engineering]] [[Category:Electrical circuits]] [[Category:Electronic circuits]] [[Category:Electronic design]] [[fi:Lähdemuunnos]]</text> </page> <page> <id>35164</id> <title>Sourceware Archive Group</title> <text>{{Orphan|date=February 2009}} '''Sourceware Archive Group''' (SWAG) is a free collection of classified source code and sample programs written in [[Pascal programming language|Pascal]].<ref name="htmswag">{{cite web |first=Jim |last=McKeeth |title=Main SWAG HTML Index |url=http://www.bsdg.org/SWAG/ |accessdate=2008-04-12}}</ref> On 29 November 1997 the last version of SWAG was released,<ref name="htmswag" /> an HTML edition of which is now hosted by [[Jim McKeeth]]. Although most contents in the SWAG seem out-of-date, they are believed to be still useful today, since many things are implemented nearly the same way as in the past.<ref name="htmswag" /> == Modern forms == Though SWAG itself has stopped updating, a number of its equivalents are still available and made good use of today. There are many websites offering source code, sample programs written in pure Pascal, [[Object Pascal]] or [[Delphi programming language|Delphi]], many of whom provide huge libraries of [[Visual Component Library|VCL]] components [[Software license|licensed]] in many forms, since [[Borland Delphi|Delphi]] is the most widely used development tool 