contains over 220 separate programs in the package, most of which have "pbm", "pgm", "ppm", "pam", or "pnm" in their names. For example, you might use <tt>pamscale</tt> to shrink an image by 10%, <tt>pamcomp</tt> to overlay one image on top of another, <tt>pbmtext</tt> to create an image of text or reduce the number of colors in an image with <tt>pnmquant</tt>. The Netpbm package can, for example, use two successive conversion programs to turn a picture in the PBM format into a [[BMP file format|.bmp]] file: pgmtoppm "#FFFFFF" somepic.pbm > somepic.ppm ppmtobmp somepic.ppm > somepic.bmp This is more commonly done as a [[Pipeline (Unix)|pipeline]], to save execution time and to avoid leaving a temporary ''somepic.ppm'' file around: pgmtoppm "#FFFFFF" somepic.pbm | ppmtobmp > somepic.bmp The Netpbm programs are frequently used as intermediates to convert between obscure formats. For instance, there may be no tool to convert an X11 window dump ([[XWD]] format) directly to a Macintosh [[PICT]] file, but one can do this by running <tt>xwdtopnm</tt>, then <tt>ppmtopict</tt>. (Tools which say that they output PNM may output PPM, PGM or PBM. Tools importing PNM will read any of the three formats.) ==History== The PBM (black and white) format was invented by [[Jef Poskanzer]] in the mid-1980s. At the time, there was no standard, reliable way to send binary files in email, and attempting to send anything other than 7-bit [[ASCII]] in email often resulted in [[data corruption]]. PBM was designed to allow images to be sent via email without being corrupted. Poskanzer released the forerunner of Netpbm, called '''Pbmplus''' in 1988. By the end of 1988, Poskanzer had developed the PGM (greyscale) and PPM (color) formats and released them with Pbmplus. The last release of Pbmplus was on December 10, 1991. Poskanzer never released any further updates, and in 1993 Netpbm was developed to replace it. At first it was nothing more than a renamed release of Pbmplus, but updates continued to occur until 1995 when the package again became abandoned. In 1999 the Netpbm package was picked up by its present maintainer, [[Bryan Henderson]]. In 2000 PAM was added to the file formats of the NetPBM library allowing an alpha channel.<ref>http://netpbm.sourceforge.net/doc/pam.html</ref> The name Netpbm came from the program developers collaborating over the [[Internet]], which was notable at the time. (The [[NetBSD]] operating system and [[Nethack]] game got their names similarly.) ==See also== * [[GraphicsMagick]] * [[ImageMagick]] * [[GD Graphics Library]] * [[List of Unix programs]] ==References== <references/> ==External links== *[http://netpbm.sourceforge.net Netpbm homepage] *[http://sourceforge.net/projects/netpbm/ SourceForge project page] **[http://netpbm.sourceforge.net/doc/directory.html List of Netpbm programs] [[Category:Free graphics software]] [[Category:Free software programmed in C]] [[Category:Free software programmed in Perl]] [[Category:Graphics libraries]] [[Category:Unix programming tools]] [[Category:Image_processing]] [[it:Netpbm]] [[ja:Netpbm]] [[pt:PBM (Inform√°tica)]] [[ru:Netpbm]]</text> </page> <page> <id>26134</id> <title>Netscape Portable Runtime</title> <text>{{unreferenced|date=July 2010}} {{Infobox software | name = Netscape Portable Runtime | screenshot = | caption = | programming language = [[C (programming language)|C]] | developer = [[Mozilla Foundation]] / [[Mozilla Corporation]] | latest release version = 4.8.2 | latest release date = {{release date|2009|10|31}} | operating system = [[Cross-platform]] | genre = [[Library (computer science)|Software Library]] | license = [[Mozilla Public License|MPL]]/[[GPL]]/[[LGPL]] tri-license | website = http://www.mozilla.org/projects/nspr }} In [[computing]], the '''Netscape Portable Runtime''', or '''NSPR''', a [[platform abstraction library]], makes all [[operating system]]s it supports appear the same to (for example) [[Mozilla]]-style [[web-browser]]s. NSPR provides [[platform independence]] for [[non-GUI]] [[operating system]] facilities. These facilities include: * [[Thread (computer science)|thread]]s * [[thread synchronization]] * [[normal file]] and [[network I/O]] * [[interval timing]] and [[calendar time]] * basic [[memory management]] ([[malloc]] and free) * [[Shared library|shared library linking]]. Much of the library, and perhaps the overall thrust of it in the [[Netscape 5|Gromit environment]], provides the underpinnings of the [[Java VM|Java virtual machine]], more or less mapping the [[sys layer]] that [[Sun Microsystems|Sun]] defines for the [[porting]] of the Java VM to various [[Computing platform|platform]]s. NSPR does go beyond that requirement in some areas, as it also functions as the platform-independent layer for most of the servers produced by [[Netscape]]. Some manufacturers{{Who|date=January 2009}} expect and prefer that programmers restructure and perhaps even rewrite existing code in order to use the NSPR [[Application programming interface|API]]. NSPR does not have as a goal the provision of a platform for the porting into Netscape of externally developed code.{{Citation needed|date=September 2007}} <!-- Note to Reader: I am not a lawyer,so this content below available under a Creative Commons license and can be found at http://www.mozilla.org/projects/nspr/about-nspr.html Wikipedia is under GNU Free Documentation License --> == History == The first generation of NSPR originally aimed just to satisfy the requirements of porting [[Java (programming language)|Java]] to various host environments. NSPR20, an effort started in 1996, built on that original idea, though very little remains of the original code. (The "20" in "NSPR20" does not mean "version 2.0" but rather "second generation".) Many of the concepts show reform, expansion, and maturation. {{As of | 2009 }} NSPR may still function appropriately as the platform-dependent layer under Java, but it primarily{{Citation needed|date=January 2009}} serves in supporting [[Client (computing)|client]]s written entirely in [[C (programming language)|C]] or in [[C++]]. == How it works == NSPR has the goal of providing uniform service over a wide range of operating-system environments. It strives to not export the lowest common denominator, but to exploit the best features of each operating system on which it runs, while still providing a uniform service across a wide range of host offerings. === Threads === [[Thread (computer science)|Thread]]s feature prominently in NSPR. The [[software industry]]'s offering of threads lacks consistency. NSPR, while far from perfect, does provide a single API to which clients may program and expect reasonably consistent behavior. The operating systems provide everything from no concept of threading at all up to and including sophisticated, scalable and efficient implementations. NSPR makes as much use of what the systems offer as it can. NSPR aims to impose as little [[Computational overhead|overhead]] as possible in accessing those appropriate system features. === Thread synchronization === Thread synchronization loosely depends on [[monitor (synchronization)|monitor]]s as described by [[C. A. R. 