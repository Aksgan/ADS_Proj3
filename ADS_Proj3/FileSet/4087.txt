mesh-free [[Lagrangian Mechanics|Lagrangian method]] (where the co-ordinates move with the fluid), and the resolution of the method can easily be adjusted with respect to variables such as the [[density]]. ==Method== The smoothed-particle hydrodynamics (SPH) method works by dividing the fluid into a set of discrete elements, referred to as particles. These particles have a spatial distance (known as the "smoothing length", typically represented in equations by <math> h </math>), over which their properties are "smoothed" by a ''[[Kernel (mathematics)|kernel function]]''. This means that the physical quantity of any particle can be obtained by summing the relevant properties of all the particles which lie within the range of the kernel. For example, using Monaghan's popular cubic spline kernel the [[temperature]] at position <math> \mathbf{r} </math> depends on the temperatures of all the particles within a radial distance <math>2h</math> of <math> \mathbf{r}</math>. The contributions of each particle to a property are weighted according to their distance from the particle of interest, and their density. Mathematically, this is governed by the kernel function (symbol <math> W </math>). Kernel functions commonly used include the [[Gaussian function]] and the [[cubic spline]]. The latter function is exactly zero for particles further away than two smoothing lengths (unlike the Gaussian, where there is a small contribution at any finite distance away). This has the advantage of saving computational effort by not including the relatively minor contributions from distant particles. The equation for any quantity <math>A</math> at any point <math>\mathbf{r}</math> is given by the equation :<math> A(\mathbf{r}) = \sum_j m_j \frac{A_j}{\rho_j} W(| \mathbf{r}-\mathbf{r}_{j} |,h), </math> where <math> m_j </math> is the [[mass]] of particle <math> j </math>, <math> A_j </math> is the value of the quantity <math> A </math> for particle <math> j </math>, <math> \rho_j </math> is the [[density]] associated with particle <math> j </math>, <math>\mathbf{r}</math> denotes position and <math> W </math> is the kernel function mentioned above. For example, the density of particle <math> i </math> (<math> \rho_i </math>) can be expressed as: :<math> \rho_i = \rho(\mathbf{r}_i) = \sum_j m_j \frac{\rho_j}{\rho_j} W(| \mathbf{r}_i-\mathbf{r}_j |,h) = \sum_j m_j W(\mathbf{r}_i-\mathbf{r}_j,h), </math> where the summation over <math> j </math> includes all particles in the simulation. Similarly, the spatial derivative of a quantity can be obtained by using [[integration by parts]] to shift the [[del]] (<math> \nabla </math>) operator from the physical quantity to the kernel function, :<math> \nabla A(\mathbf{r}) = \sum_j m_j \frac{A_j}{\rho_j} \nabla W(| \mathbf{r}-\mathbf{r}_j |,h). </math> Although the size of the smoothing length can be fixed in both [[space]] and [[time]], this does not take advantage of the full power of SPH. By assigning each particle its own smoothing length and allowing it to vary with time, the resolution of a simulation can be made to automatically adapt itself depending on local conditions. For example, in a very dense region where many particles are close together the smoothing length can be made relatively short, yielding high spatial resolution. Conversely, in low-density regions where individual particles are far apart and the resolution is low, the smoothing length can be increased, optimising the computation for the regions of interest. Combined with an [[equation of state]] and an [[integrator]], SPH can simulate hydrodynamic flows efficiently. However, the traditional artificial viscosity formulation used in SPH tends to smear out [[shock wave|shocks]] and [[contact discontinuity|contact discontinuities]] to a much greater extent than state-of-the-art grid-based schemes. The Lagrangian-based adaptivity of SPH is analogous to the adaptivity present in grid-based [[adaptive mesh refinement]] codes, though in the latter case one can refine the mesh spacing according to any criterion selected by the user. Because it is Lagrangian in nature, SPH is limited to refining based on density alone. Often in astrophysics, one wishes to model self-gravity in addition to pure hydrodynamics. The particle-based nature of SPH makes it ideal to combine with a particle-based gravity solver, for instance [[tree gravity]]<ref> [http://hpcc.astro.washington.edu/faculty/marios/papers/perform/node2.html "The Parallel k-D Tree Gravity Code"]; [http://www-hpcc.astro.washington.edu/faculty/trq/brandon/pkdgrav.html "PKDGRAV (Parallel K-D tree GRAVity code"] use a [[kd-tree]] gravity simulation. </ref>, [[Particle Mesh|particle mesh]], or [[P3M|particle-particle particle-mesh]]. ==Uses in astrophysics== The adaptive resolution of smoothed-particle hydrodynamics, combined with its ability to simulate phenomena covering many [[order of magnitude|orders of magnitude]], make it ideal for computations in [[theoretical astrophysics]]. Simulations of [[galaxy formation]], [[star formation]], stellar collisions, [[supernovae]] and [[meteor]] impacts are some of the wide variety of astrophysical and cosmological uses of this method. Generally speaking, SPH is used to model hydrodynamic flows, including possible effects of [[gravity]]. Incorporating other astrophysical processes which may be important, such as [[radiative transfer]] and [[Magnetohydrodynamics|magnetic fields]] is an active area of research in the astronomical community, and has had some limited success.{{Citation needed|date=October 2010}} ==Uses in fluid simulation== [[Image:fluids sim.jpg|thumb|200px|right|Fig. SPH simulation of ocean waves using FLUIDS v.1]] Smoothed-particle hydrodynamics is being increasingly used to model fluid motion as well. This is due to several benefits over traditional grid-based techniques. First, SPH guarantees conservation of mass without extra computation since the particles themselves represent mass. Second, SPH computes pressure from weighted contributions of neighboring particles rather than by solving linear systems of equations. Finally, unlike grid-base technique which must track fluid boundaries, SPH creates a free surface for two-phase interacting fluids directly since the particles represent the denser fluid (usually water) and empty space represents the lighter fluid (usually air). For these reasons it is possible to simulate fluid motion using SPH in real time. However, both grid-based and SPH techniques still require the generation of renderable free surface geometry using a polygonization technique such as [[metaballs]] and [[marching cubes]], [[point splatting]], or "carpet" visualization. For gas dynamics it is more appropriate to use the kernel function itself to produce a rendering of gas column density (e.g. as done in the SPLASH visualisation package). One drawback over grid-based techniques is the need for large numbers of particles to produce simulations of equivalent resolution. In the typical implementation of both uniform grids and SPH particle techniques, many voxels or particles will be used to fill water volumes which are never rendered. However, accuracy can be significantly higher with sophisticated 