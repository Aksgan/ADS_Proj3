3 |- | [[#Machine Check interrupt|Machine Check]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|pages=82-83}} || 30 48 || 70 112 || align=right | 1 |} ====Input/Output interrupt==== An I/O interrupt<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|pages=78-79}} occurs at the completion of a channel program, after fetching a CCW with the PCI bit set and also for [[asynchrony|asynchronous]] events detected by the device, control unit or channel, e.g., completion of a mechanical movement. The system stores the device address into the interrupt code and stores channel status into the [[#Channel Status Word|CSW]] at location 64 ('40'X). ====Program interrupt==== A Program interrupt<ref name=A22-6821-7/>{{rp|pages=16,79-80.1}} occurs when an instruction encounters one{{#tag:ref|On the 360/91<ref name=A22-6907/>{{rp|page=15}}, 360/95 and 360/195<ref name=A22-6943/>{{rp|page=14}} a Program interrupt may occur for multiple imprecise exceptions. The ILC in the Program Old PSW is 0, bits 26-31 are 0 and bits 16-27 are a mask indicating which exceptions occurred; there is no provision for reporting multiple occurrences of the same exception. Reporting of multiple imprecise exceptions is not part of the S/360 architecture.|group=NB|name=multimpr}} of 15{{#tag:ref|There are 17 possible exceptions on the 360/67<ref name=GA27-2719/>{{rp|page=17}}, but page exception and segment exception are not part of the S/360 architecture; similarly, the interrupt code 18 ('0012'X) on a 360/65 multiprocessor<ref group=NB name=M65MP/> is not part of the S/360 architecture.|group=NB|name=NotArchExc}} exceptions; however, if the [[#Program Mask|Program Mask]] bit corresponding to an exception is 0 then there is no interrupt for that exception. The Interrupt code may be any of {| class="wikitable collapsible" |+Interrupt codes for Program interrupts<br>old PSW bits 26-31 |- !style="text-align:right;width:6em"|hex<br>bits 26-31 !Dec !style="wisth:20m"|Exception |- | align=right valign=top | 0 | align=right valign=top | 0 | Imprecise interrupt<ref group=NB name=multimpr/> on 360/91<ref name=A22-6907/>{{rp|page=15}}, 360/95 or 360/195<ref name=A22-6943/>{{rp|page=14}} {| class="wikitable collapsible collapsed" |+Old PSW bits for multiple imprecise interrupt codes |- !style="text-align:right;width:6em"|bit !Exception |- |16 |Protection |- |17 |Addressing |- |18 |Specification<ref group=NB>The Specification bit is not used for imprecise interrupts on the 360/195</ref> |- |19 |Data |- |20 |Fixed-Point Overflow |- |21 |Fixed-Point Divide |- |22 |Exponent Overflow |- |23 |Exponent Underflow |- |24 |Significance |- |25 |Floating-Point Divide |- |26 |Decimal Overflow<ref group=NB name=NoDec>Not Used on 360/91</ref> |- |27 |Decimal Divide<ref group=NB name=NoDec/> |} |- | align=right | 1 | align=right | 1 | [[#Operation exception|Operation]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} |- | align=right | 2 | align=right | 2 | [[#Privileged operation exception|Privileged operation]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} |- | align=right | 3 | align=right | 3 | [[#Execute exception|Execute]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} |- | align=right | 4 | align=right | 4 | [[#Protection exception|Protection]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} |- | align=right | 5 | align=right | 5 | [[#Addressing exception|Addressing exception]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|pages=79-80}} |- | align=right | 6 | align=right | 6 | [[#Specification exception|Specification]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | 7 | align=right | 7 | [[#Data exception|Data]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | 8 | align=right | 8 | [[#Fixed-point overflow exception|Fixed-point overflow]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | 9 | align=right | 9 | [[#Fixed-point divide exception|Fixed-point divide]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | A | align=right | 10 | [[#Decimal overflow exception|Decimal overflow]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | B | align=right | 11 | [[#Decimal divide exception|Decimal divide]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | C | align=right | 12 | [[#Exponent overflow exception|Exponent overflow]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | D | align=right | 13 | [[#Exponent underflow exception|Exponent underflow]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | E | align=right | 14 | [[#Significance exception|Significance]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} |- | align=right | F | align=right | 15 | [[#Floating-point divide exception|Floating-point divide]]<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80.1}} |- | align=right | 10 | align=right | 16 | Segment Translation<ref name=GA27-2719/>{{rp|page=17}}<ref group=NB name=NotArchExc/> |- | align=right | 11 | align=right | 17 | Page Translation<ref name=GA27-2719/>{{rp|page=17}}<ref group=NB name=NotArchExc/> |- | align=right | 12 | align=right | 18 | SSM Exception<ref name=A22-6884/><ref group=NB name=M65MP/><ref group=NB name=NotArchExc/> |} =====Operation exception===== An operation exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} is recognized when a program attempts to execute an instruction with an opcode that the computer does not implement. In particular, an operation exception is recognized when a program is written for an optional feature, e.g., floating point, that is not installed. =====Privileged operation exception===== A privileged operation exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} is recognized when a program attempts to execute a privileged instruction when the problem state bit in the PSW is 1. =====Execute exception===== An execute exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} is recognized when the operand of an EXECUTE instruction is another EXECUTE instruction. =====Protection exception===== A protection exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=79}} is recognized when a program attempts to store into a location whose storage protect key does not match<ref group=NB>A PSW key of 0 matches any storage key.</ref> the PSW key, or to fetch from a fetch protected location whose storage protect key does not match the PSW key. =====Addressing exception===== An addressing exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|pages=79-80}} is recognized when a program attempts to access a storage location that is not currently available. This normally occurs with an address beyond the capacity of the machine, but it may also occur on machines that allow blocks of storage to be taken offline. =====Specification exception===== A specification exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when an instruction has a length or register field with values not permitted by the operation, or when it has an operand address that does not satisfy the alignment requirements of the opcode, e.g., a LH instruction with an odd operand address on a machine without the byte alignment feature. =====Data exception===== A data exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when a decimal instruction specifies invalid operands, e.g., invalid data, invalid overlap. =====Fixed-point overflow exception===== A fixed-point overflow exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when significant bits are lost in a fixed point arithmetic or shift instruction, other than divide. =====Fixed-point divide exception===== A fixed-point divide exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when significant bits are lost in a fixed point divide or Convert to Binary instruction. =====Decimal overflow exception===== A decimal overflow exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when significant digits are lost in a decimal arithmetic instruction, other than divide =====Decimal divide exception===== A decimal divide exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when significant bits are lost in a decimal divide instruction. The destination is not altered. =====Exponent overflow exception===== An exponent overflow exception<sup class=reference>[[#PoOps|PoOps]]</sup>{{rp|page=80}} is recognized when the characteristic in a floating-point 