of adding additional staff ** Understanding how the opening a new location would impact existing nearby locations * [[Subway (restaurant)|Subway]] ran a promotion that lowered the price of its foot-long sandwiches to $5. Before deciding to launch the promotion nationally, Subway ran a test that compared locations offering the $5 foot-long sandwiches to a group of similar [[Scientific control|control]] restaurants that were not offering the promotion.<ref name="hbr" /> * [[Kraft Foods]], a manufacturer and distributor of packaged foods, uses testing to optimize the placement of its products on grocery store shelves:<ref>{{cite web | last = Angrisani | first = Carol | url = http://subscribers.supermarketnews.com/Grocery_Center_Store_Brands/coffee_aisle_revamp_1222/ | title = Coffee Aisle Revamp Lifts Sales | publisher = Supermarket News | date = December 22, 2008 | accessdate = September 22, 2009 }}</ref> ** Determining the effect of a coffee aisle re-design on sales of premium coffees ** Measuring the impact on product sales of a change to in-store sales representatives' responsibilities * [[Pier 1 Imports]], a retail chain specializing in home decor and furnishings, uses testing to measure the effectiveness of [[search advertising]] campaigns.<ref>{{cite web | last = Wong | first = Elaine | url = http://www.brandweek.com/bw/content_display/news-and-features/direct/e3i048f01beefa084a38c84fb0602a1b651 | title = Case Study: How Search Ads Helped Pier 1 Stay Afloat | publisher = [[Brandweek]] | date = June 24, 2009 | accessdate = September 22, 2009 }}</ref> * Test and Learn is also methodically used online to test impact of various web page layouts on user behavior. Tools such as [[Google]] Website Analyzer provide every site with the ability to test various elements and their effect on user engagement. ==Test and learn software== There are a variety of [[Computer software|software]] tools available today to support systematic testing within an organization. However, there is currently no one software package that covers all types of tests, and in some cases significant knowledge of statistics is still required for effective analysis<ref name="hbr" />. Many companies, including [[Capital One]] and [[eBay]], have developed experiment management software within the company. Alternatives to internal solutions include broad [[statistical analysis]] software tools such as [[SAS Institute|SAS]] or test and learn focused software from [[Applied Predictive Technologies]]. There are also a variety of more narrowly tailored products, focused on particular problems or fields. In [[web analytics]], for example, firms such as [[Omniture]], [[WebTrends]], and [[Google]] have created specialized software<ref name="hbr" />. == Criticism == Companies wanting to conduct Test and Learn must mobilize, track and analyze site and customer data at very granular levels. This can often be a massive and expensive undertaking. Increasingly however, exponential increase in computing power, and decrease in its cost, have made testing more accessible. In the [[Harvard Business Review]] February 2009 article [http://hbr.harvardbusiness.org/2009/02/how-to-design-smart-business-experiments/ar/1 "How to Design Smart Business Experiments"], Thomas Davenport discusses the Test and Learn Process, and describes how several companies have overcome these and other barriers to testing. == See also == * [[Clinical trials]] * [[Scientific method]] * [[Design of experiments]] * [[Evidence-based management]] * [[Business process reengineering]] ==References== {{reflist}} == External links == * [http://norvig.com/experiment-design.html Experimental Design] {{DEFAULTSORT:Test And Learn}} [[Category:Business terms]] [[Category:Quality]] [[Category:Finance]] [[Category:Tests]]</text> </page> <page> <id>37108</id> <title>Test automation framework</title> <text>{{Merge|Test harness|date=February 2010}} {{Cleanup|date=December 2007}} A '''test automation framework''' is a set of assumptions, concepts and tools that provide support for [[test automation|automated software testing]]. The main advantage of such a framework is the low cost for maintenance. If there is change to any test case then only the test case file needs to be updated and the [[Driver Script]] and [[Startup script]] will remain the same. Ideall, there is no need to update the scripts in case of changes to the application. Choosing the right framework/scripting technique helps in maintaining lower costs. The costs associated with test scripting are due to development and maintenance efforts. The approach of scripting used during test automation has effect on costs. Various framework/scripting techniques are generally used: # Linear (procedural code, possibly generated by tools like those that use record and playback) # Structured (uses control structures - typically ‘if-else’, ‘switch’, ‘for’, ‘while’ conditions/ statements) # [[Data-driven_testing|Data-driven]] (data is persisted outside of tests in a database, spreadsheet, or other mechanism) # [[Keyword-driven_testing|Keyword-driven]] # Hybrid (two or more of the patterns above are used) The Testing framework is responsible for:<ref>{{cite web | url = http://www.youtube.com/watch?v=qf2i-xQ3LoY | title = Selenium Meet-Up 4/20/2010 Elisabeth Hendrickson on Robot Framework 1of2 | accessdate = 2010-09-26 }}</ref> # defining the format in which to express expectations # creating a mechanism to hook into or drive the application under test # executing the tests # reporting results '''Another view''' Automation Framework is not a tool to perform some specific task, but is an infrastructure that provides a complete solution where different tools work together in an unified manner hence providing a common platform to the automation engineer using them. Ref: http://code.google.com/p/vauto/ {{Portal|Software Testing}} ==References== {{Reflist|3}} [[Category:Automation]] [[Category:Software_testing]] [[da:TAF]]</text> </page> <page> <id>37113</id> <title>Test design</title> <text>{{Unreferenced|date=July 2010}} In software engineering, '''test design''' is the act of creating and writing [[test suite]]s for testing a [[software]]. == Definition == Test design could require all or one of: * knowledge of the software, and the business area it operates on, * knowledge of the functionality being tested, * knowledge of testing techniques and [[heuristic]]s. * planning skills to schedule in which order the [[test case]]s should be designed, given the effort, time and cost needed or the consequences for the most important and/or risky features.<ref>''[http://www.amazon.com/Practitioners-Guide-Software-Test-Design/dp/158053791X A Practitioner's Guide to Software Test Design]'', by Lee Copeland, January 2004</ref> Well designed test suites will provide for an efficient testing. The test suite will have just enough test cases to test the system, but no more. This way, there is no time lost in writing redundant test cases that would unnecessarily consume time each time they are executed. In addition, the test suite will not contain brittle or ambiguous test cases. == Automatic test design == Entire test suites or test cases exposing real bugs can be automatically generated by software using [[model checking]] or [[symbolic 