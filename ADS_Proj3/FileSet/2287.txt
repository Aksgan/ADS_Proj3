Pricing Analysis ::JEL: R33 - Nonagricultural and Nonresidential Real Estate Markets ::JEL: R34 - Input Demand Analysis ::JEL: R38 - Government Policies; Regulatory Policies ::JEL: R39 - Other [[:Category:Transport economics|JEL: R4]] - [[Transport economics|Transportation Systems]] ::JEL: R40 - General ::JEL: R41 - Transportation: Demand; Supply; Congestion; Safety and Accidents ::JEL: R42 - Government and Private Investment Analysis ::JEL: R48 - Government Pricing; Regulatory Policies ::JEL: R49 - Other JEL: R5 - Regional Government Analysis ::JEL: R50 - General ::JEL: R51 - Finance in Urban and Rural Economies ::JEL: R52 - Land Use and Other Regulations ::JEL: R53 - Public Facility Location Analysis; Public Investment and Capital Stock ::JEL: R58 - Regional Development Policy ::JEL: R59 - Other == Miscellaneous categories (economics) JEL: Y Subcategories == [[:Category:Miscellaneous categories (economics)]] JEL: Y1 - Data: Tables and Charts ::JEL: Y10 - Data: Tables and Charts JEL: Y2 - Introductory Material ::JEL: Y20 - Introductory Material JEL: Y3 - Book Reviews (unclassified) ::JEL: Y30 - Book Reviews (unclassified) JEL: Y4 - Dissertations (unclassified) ::JEL: Y40 - Dissertations (unclassified) JEL: Y5 - Further Reading (unclassified) ::JEL: Y50 - Further Reading (unclassified) JEL: Y6 - Excerpts ::JEL: Y60 - Excerpts JEL: Y8 - JEL: Related Disciplines ::JEL: Y80 - Related Disciplines JEL: Y9 - Other ::JEL: Y90 - Other ==Other special topics (economics) JEL: Z Subcategories== <!-- This section is linked from [[Economics]] --> [[:Category:Other special topics (economics)]] JEL: Z - Other special topics JEL: Z0 - General ::JEL: Z00 - General JEL: Z1 - [[Cultural economics|Cultural Economics]]; [[:Category:Economic sociology|Economic Sociology]]; [[:Category:Economic anthropology|Economic Anthropology]] ::JEL: Z10 - General ::JEL: Z11 - [[Economics of the arts and literature|Economics of the Arts and Literature]] ::JEL: Z12 - [[Economics of religion|Religion]] ::JEL: Z13 - [[Economic sociology|Economic Sociology]]; [[Economic anthropology|Economic Anthropology]]; [[Social stratification|Social]] and [[Economic stratification|Economic Stratification]] ::JEL: Z19 - Other ==Notes== <!-- See the user page User:Dmoss/Wikicite for an excellent citation tool! --> {{Reflist|1}} ==External links== *[http://www.aeaweb.org/journal/jel_class_system.html Full list of JEL classifications] *[http://www.aeaweb.org/jel/guide/jel.php JEL Classification Codes Guide], which provides a more detailed explanation of the classification system [[Category:Economic classification systems|*]] [[Category:Economics journals]] [[Category:Journal of Economic Literature]] [[de:Journal of Economic Literature]] [[es:Códigos de clasificación JEL]] [[fr:Classification JEL]] [[it:Classificazione JEL]] [[ja:JEL分類コード]] [[pt:Códigos de classificação JEL]] [[zh:JEL分类系统]]</text> </page> <page> <id>19520</id> <title>JFFS2</title> <text>{{Infobox filesystem| | name = JFFS2 | developer = David Woodhouse | full_name = Journalling Flash File System version 2 | introduction_date = | introduction_os = [[Linux kernel|Linux]] 2.4.10 | partition_id = | directory_struct = | file_struct = | bad_blocks_struct = | max_file_size = | max_files_no = | max_filename_size = | max_volume_size = | dates_recorded = | date_range = | date_resolution = | forks_streams = | attributes = | file_system_permissions = | compression = [[zlib]], rubin and rtime | encryption = | OS = [[Linux]] }} '''Journalling Flash File System version 2''' or '''JFFS2''' is a [[log-structured file system]] for use in [[flash memory]] devices.<ref>[http://www.linux-mtd.infradead.org/faq/jffs2.html#L_hdd_jffs2 JFFS2, mainly designed for raw flash, not for block devices like hard drives, USB sticks, CF cards etc. (block2mtd)]</ref> It is the successor to [[JFFS]]. JFFS2 has been included in the [[Linux kernel]] since the 2.4.10 release. JFFS2 is also available for [[Open Firmware]], the [[eCos]] RTOS and the [[RedBoot]] bootloader. The new [[LogFS]] filesystem is aimed to replace JFFS2 for most uses, but focuses more on large devices (> 64 MB - 512 MB), see also [[UBIFS]] and [[YAFFS]]. == Features == JFFS2 introduced: * Support for [[NAND flash#NAND flash|NAND flash]] devices. This involved a considerable amount of work as NAND devices have a sequential I/O interface and cannot be memory-mapped for reading. * Hard links. This was not possible in JFFS because of limitations in the on-disk format. * Compression. Three algorithms are available: [[zlib]], rubin and rtime. * Better performance. JFFS treated the disk as a purely circular log. This generated a great deal of unnecessary I/O. The [[garbage collection (computer science)|garbage collection]] [[algorithm]] in JFFS2 makes this mostly unnecessary. == Design == As with JFFS, changes to files and directories are "logged" to flash in ''nodes'', of which there are two types: * ''[[inode]]s'': a header with file metadata, followed by a payload of file data (if any). Compressed payloads are limited to one page. * ''dirent'' nodes: directory entries each holding a name and an inode number. Hard links are represented as different names with the same inode number. The special inode number 0 represents an unlink. As with JFFS, nodes start out as ''valid'' when they are created, and become ''obsolete'' when a newer version has been created elsewhere. Unlike JFFS, however, there is no circular log. Instead, JFFS2 deals in ''blocks'', a unit the same size as the erase segment of the flash medium. Blocks are filled, one at a time, with nodes from bottom up. A ''clean'' block is one that contains only ''valid'' nodes. A ''dirty'' block contains at least one ''obsolete'' node. A ''free'' block contains no nodes. The [[garbage collection (computer science)|garbage collector]] runs in the background, turning ''dirty'' blocks into ''free'' blocks. It does this by copying ''valid'' nodes to a new block and skipping ''obsolete'' ones. That done, it erases the ''dirty'' block and tags it with a special marker designating it as a ''free'' block (to prevent confusion if power is lost during an erase operation). To make [[wear levelling|wear-levelling]] more even and prevent erasures from being too concentrated on mostly-static file systems, the garbage collector will occasionally also consume ''clean'' blocks. == Disadvantages == * All nodes must still be scanned at [[Mount (computing)|mount]] time. This is slow and is becoming an increasingly serious problem as flash devices scale upward into the [[Gigabyte]] range. * Writing many small blocks of data can even lead to negative compression rates, so it is essential for applications to use large write buffers. * There is no practical way to tell how much usable free space is left on a device since this depends both on how well additional data can be compressed, and the writing sequence. == See also == * [[List of file 