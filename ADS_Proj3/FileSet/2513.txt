if the remaining integer is still composite, then it has only large factors and is factored using general purpose techniques. The largest factor found using ECM so far has 73 digits and was discovered on 6 March 2010 by [[Joppe Bos]], [[Thorsten Kleinjung]], [[Arjen Lenstra]] and [[Peter Montgomery]].<ref>[http://www.loria.fr/~zimmerma/records/top50.html 50 largest factors found by ECM]</ref> Increasing the number of curves tested improves the chances of finding a factor, but they are not [[linear]] with the increase in the number of digits. ==Lenstra's elliptic curve factorization== The Lenstra elliptic curve factorization method to find a factor of the given number ''n'' works as follows: <ol> <li> Pick a random [[elliptic curve]] over <math>\mathbf{Z}/n\mathbf{Z}</math>, given by an equation of the form ''y''<sup>2</sup> = ''x''<sup>3</sup> + ''ax'' + ''b'' (mod ''n''), and a non-trivial [[Point (geometry)|point]] ''P'' on it. Say, pick first a point ''P''=(''x'',''y'') with random non-zero coordinates ''x'',''y'' (mod ''n''), then pick a random non-zero ''a'' (mod ''n''), then take ''b'' = ''y''<sup>2</sup> - ''x''<sup>3</sup> - ''ax'' (mod ''n''). <li> We will compute certain multiples <math>kP=P\boxplus\dots\boxplus P</math> (''k'' times) of the point ''P'' using the standard addition rule <math>\boxplus</math> on our elliptic curve: given two points ''P,Q'' on the curve, their sum <math>P\boxplus Q</math> can be computed using the formulas given in the [[elliptic curve#The group law|group law section]] of the article on elliptic curves. These formulas contain the "slope" of the line connecting ''P'' and ''Q'', hence involve divisions between residue classes modulo ''n'', which can be performed using the [[extended Euclidean algorithm]]. In particular, division by some ''v'' (mod ''n'') includes the calculation of the [[greatest common divisor]] gcd(''v'',''n''). <br> : If the slope is of the form ''u''/''v'' with gcd(''u'',''n'')=1, then ''v''=0 (mod ''n'') means that the result of the <math>\boxplus</math>-addition will be <math>\infty</math>, the point at infinity on the curve. However, if gcd(''v'',''n'') is neither 1 nor ''n'', then the <math>\boxplus</math>-addition will not produce a meaningful point on the curve, which shows that our elliptic curve is not a group (mod ''n''), but, more importantly for now, gcd(''v'',''n'') is a non-trivial factor of ''n''. <li> Compute ''eP'' on the elliptic curve (mod ''n''), where ''e'' is product of many small numbers: say, a product of small primes raised to small powers, as in the [[Pollard's p &minus; 1 algorithm|''p'' &minus; 1 algorithm]], or the [[factorial]] ''B''! for some not too large ''B''. This can be done efficiently, one small factor at a time. Say, to get ''B''!''P'', first compute 2''P'', then 3(2''P''), then 4(3!''P''), and so on. Of course, ''B'' should be small enough so that ''B''-wise <math>\boxplus</math>-addition can be performed in reasonable time. <li> *If we were able to finish all the calculations above without encountering non-invertible elements (mod ''n''), then we need to try again with some other curve and starting point. *If we found <math>kP=\infty</math> at some stage (the point at infinity on the elliptic curve), then again we should start over with a new curve and starting point, since <math>\infty</math> is the zero element for <math>\boxplus</math>, so after this point we would be just repeating <math>\infty\boxplus\dots\boxplus\infty=\infty</math>. *If we encountered a gcd(''v'',''n'') at some stage that was neither 1 nor ''n'', then we are done: it is a non-trivial factor of ''n''. </ol> The time complexity depends on the size of the factor and can be represented by [[big O notation|O]]([[e (mathematical constant)|e]]<sup>(√2 + o(1)) &radic;([[natural logarithm|ln]] ''p'' ln ln ''p'')</sup>), where ''p'' is the smallest factor of ''n''. ==Why does the algorithm work?== If ''p'' and ''q'' are two prime divisors of ''n'', then ''y''<sup>2</sup> = ''x''<sup>3</sup> + ''ax'' + ''b'' (mod ''n'') implies the same equation also (mod ''p'') and (mod ''q''). These two smaller elliptic curves with the <math>\boxplus</math>-addition are now genuine [[group (mathematics)|groups]]. If these groups have ''N<sub>p</sub>'' and ''N<sub>q</sub>'' elements, respectively, then for any point ''P'' on the original curve, by [[Lagrange's theorem (group theory)|Lagrange's theorem]], <math>kP=\infty</math> on the curve (mod ''p'') implies that ''k'' divides ''N<sub>p</sub>''; moreover, <math>N_p P=\infty</math>. The analogous statement holds for ''q''. When the elliptic curve is chosen randomly, then ''N<sub>p</sub>'' and ''N<sub>q</sub>'' are random numbers close to ''p''+1 and ''q''+1, respectively (see below). Hence it is unlikely that most of the prime factors of ''N<sub>p</sub>'' and ''N<sub>q</sub>'' are the same, and it is quite likely that while computing ''eP'', we will encounter some ''kP'' that is <math>\infty</math> (mod ''p'') but not (mod ''q''), or vice versa. When this is the case, ''kP'' does not exist on the original curve, and in the computations we found some ''v'' with either gcd(''v'',''p'')=''p'' or gcd(''v'',''q'')=''q'', but not both. That is, gcd(''v'',''n'') gave a non-trivial factor of ''n''. ECM is at its core an improvement of the older [[Pollard's p &minus; 1 algorithm|''p'' &minus; 1 algorithm]]. The ''p'' &minus; 1 algorithm finds prime factors ''p'' such that ''p'' &minus; 1 is [[smooth number|b-powersmooth]] for small values of ''b''. For any ''e'', a multiple of ''p'' &minus; 1, and any ''a'' [[relatively prime]] to ''p'', by [[Fermat's little theorem]] we have ''a''<sup>''e''</sup> &equiv; ''1'' ([[modular arithmetic|mod]] ''p''). Then [[greatest common divisor|gcd]](''a''<sup>''e''</sup> &minus; 1, ''n'') is likely to produce a factor of ''n''. However, the algorithm fails when ''p''-1 has large prime factors, as is the case for numbers containing [[strong prime]]s, for example. ECM gets around this obstacle by considering the [[group (mathematics)|group]] of a random [[elliptic curve]] over the [[finite field]] '''Z'''<sub>''p''</sub>, rather than considering the [[multiplicative group]] of '''Z'''<sub>''p''</sub> which always has order ''p'' &minus; 1. The order of the group of an elliptic curve over '''Z'''<sub>''p''</sub> varies (quite randomly) between ''p'' + 1 &minus; 2&radic;''p'' and ''p'' + 1 + 2&radic;''p'' by [[Hasse's theorem on elliptic curves|Hasse's theorem]], and is likely to be smooth for some elliptic curves. Although there is no proof that a smooth group order will be found in the Hasse-interval, by using [[heuristic]] probabilistic methods, the [[Canfield-Erdős-Pomerance theorem]] with suitably optimized parameter choices, and the [[L-notation]], we can expect to try [[L-notation|'''L''']]<nowiki>[</nowiki>&radic;2 / 2, &radic;2<nowiki>]</nowiki> curves before getting a smooth group order. This 