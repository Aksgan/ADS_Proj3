a batch job for statistical packages like SAS, BUGS or [[Just another Gibbs sampler]] when an interactive session is unwanted due to the potentially lengthy time required for the task to complete. With Emacs Speaks Statistics, one can conveniently edit statistical language commands in one emacs buffer, and execute the code in a second. There are a number of advantages of doing data analysis using Emacs/ESS in this way, rather than interacting with R, S-PLUS or other software directly. First, as indicated above, ESS provides a convenient way of writing and executing code without frequently switching between programs. This also encourages the good practice of keeping a record of one's data analysis, equivalent to working from do-files in [[Stata]]. Third, since emacs is also an able editor of [[LaTeX]] files, it facilitates the integration of data analysis and written text with [[Sweave]]. == External links == ESS is freely available for download from [http://ess.r-project.org/ the ESS website], which also contains documentation and links to a mailing list. {{EmacsNavbox}} [[Category:Emacs]] [[Category:R (programming language)]] [[Category:Free statistical software]] {{science-software-stub}}</text> </page> <page> <id>12019</id> <title>Embedded SQL</title> <text>'''Embedded SQL''' is a method of combining the [[computing]] power of a [[programming language]] and the [[database]] [[Data Manipulation Language|manipulation]] capabilities of [[SQL]]. Embedded SQL [[statement (programming)|statements]] are SQL statements written inline with the program [[source code]] of the host language. The embedded SQL statements are [[parsing|parsed]] by an embedded SQL [[preprocessor]] and replaced by host-language [[call site|calls]] to a code [[library (computing)|library]]. The output from the preprocessor is then compiled by the host [[compiler]]. This allows programmers to embed SQL statements in programs written in any number of languages such as: [[:Category:C programming language family|C/C++]], [[COBOL]] and [[Fortran]]. The [[ANSI]] SQL standards committee defined the embedded SQL standard in two steps: a formalism called '''Module Language''' was defined, then the embedded SQL standard was derived from Module Language.<ref name="modulelang"> {{cite web |url=http://download.oracle.com/docs/cd/B10501_01/appdev.920/a58231/ch1.htm#2889 |title=The Module Language Concept |work=SQL*Module for Ada Programmer's Guide, Release 8.0, Chapter 1. Introduction to SQL*Module |publisher=[[Oracle Corporation]] |accessdate=2008-07-14}} </ref> The SQL standard defines embedding of SQL as ''embedded SQL'' and the language in which SQL queries are embedded is referred to as the ''host language''. A popular host language is C. The mixed C and embedded SQL is called [[Pro*C]] in [[Oracle Database|Oracle]] and [[Sybase]] database management systems. In the [[PostgreSQL]] database management system this precompiler is called [[ECPG]]. Other embedded SQL precompilers are Pro*[[Ada (programming language)|Ada]], Pro*COBOL, Pro*FORTRAN, Pro*[[Pascal (programming language)|Pascal]], and Pro*[[PL/I]]. == Systems that do not support Embedded SQL == === Microsoft SQL Server === Embedded SQL for C has been deprecated as of [[Microsoft SQL Server]] 2008 although earlier versions of the product support it.<ref>{{cite web |url=http://msdn.microsoft.com/en-us/library/ms143729.aspx |title=Deprecated Database Engine Features in SQL Server 2008 |work=SQL Server 2008 Books Online (March 2009) |publisher=[[Microsoft]] |accessdate=2009-04-10 }}</ref> === MySQL === [[MySQL]] does not support Embedded SQL.<ref>{{cite web |url=http://dev.mysql.com/tech-resources/articles/precompiler-for-embedded-sql.html |title=An Open Pre-Compiler for Embedded SQL |work=MySQL DevZone Articles |publisher=[[Mysql]] |accessdate=2009-04-10 }}</ref> === Sybase === Embedded SQL support has been discontinued by [[Sybase]].<ref>{{cite web |url=http://www.sybase.com/products/archivedproducts/embeddedsql |title=EmbeddedSQL |work=Sybase Products |publisher=Sybase |accessdate=2009-04-10 }}</ref> == See also == * [[Pro*C/C++]] == References == <references/> == External links == * [http://infolab.stanford.edu/%7Eullman/fcdb/oracle/or-proc.html Introduction to Pro*C Embedded SQL] * [http://www.oreillynet.com/pub/a/databases/2006/12/07/embedded-sql-with-pro-c.html Embedded SQL with Pro*C] * [http://tahiti.oracle.com/pls/db92/db92.show_toc?partno=a58231 SQL*Module for Ada Programmer's Guide, Release 8.0] * [http://www.postgresql.org/docs/8.3/interactive/ecpg.html ECPG, PostgreSQL 8.3 Documentation] [[Category:SQL]] [[Category:Declarative programming languages]] [[Category:Query languages]] [[Category:Data modeling languages]] [[de:Embedded SQL]] [[ja:埋め込みSQL]] [[ru:Embedded SQL]] [[fi:Embedded SQL]] [[zh:嵌入式SQL]]</text> </page> <page> <id>12023</id> <title>Embedded middleware</title> <text>Analogous to [[middleware]] , embedded '''middleware''' is a software layer that sits "in the middle" between the embedded application and the real time operating system (RTOS). Examples include protocol stack software, [[Operating System Abstraction Layer]] and possibly memory management modules. Like operating system and middleware, the distinction between real time operating system and embedded middleware functionality is also to some extent, arbitrary. While core kernel functionality can only be provided by the real time operating system itself, some functionality previously provided by separately sold middleware is now integrated in operating systems. Conversely some functionality provided by RTOS may be advantageous to place into the middleware layer to provide consistency across different real time operating system platforms. ==Requirements== *Limited resources: Smaller footprint (requires less code-bloat) *Real-time support (available in Real-Time CORBA specification) *Full CORBA implementation: 150 Kbytes – 5 Mbytes ==Options== *Minimal CORBA: Throw out some of the heavyweight CORBA mechanisms (~ 30-60 Kbytes) *IIOP Engine: Use a library that keeps only the IIOP protocol part (~ 15 Kbytes) *CORBA Gateways: TCP bridge from the embedded processors to a CORBA gateway that talks to the rest of the world ==Implementations== ===ClarinoxSoftframe=== Clarinox Technologies provides wireless protocol middleware that supports Windows, WindowsCE, Linux, uClinux, Cygwin, uITRON, VelOSity, eCos, QNX, TI DSP-BIOS. Functionality includes Threading, Timer, Semaphore, Mutex, IPC message passing, Event handling, Finite state machine, memory management, Plug-in based dynamic debug, trace and profiling functions<ref> {{cite web |url=http://www.clarinox.com/docs/Brochures/ClarinoxSoftFrame.pdf |title= ClarinoxSoftFrame |publisher=clarinox |accessdate=2010-8-9 }}</ref>. ==See also== *[[middleware]] *[[embedded system]] ==References== <references/> {{DEFAULTSORT:embedded middleware}} [[Category:middleware]]</text> </page> <page> <id>12030</id> <title>Ember (company)</title> <text>{{Infobox Company | company_name = Ember | foundation = 2001 | location_city = {{flagicon|USA}} [[Boston, Massachusetts]] | key_people = [[Bob Metcalfe]], Chairman<br>Bob LeFort, CEO | industry = [[Wireless|Wireless Networking]] | products = [[Zigbee]] [[Integrated circuit|Chips]], [[Software]] | homepage = [http://www.ember.com/ www.ember.com] }} '''Ember''' is an [[United States|American]] company based in [[Boston, Massachusetts]], [[United States|USA]]. Ember has a radio development center in [[Cambridge, England]], and distributors worldwide. It develops [[ZigBee]] wireless networking technology that enables companies involved in energy technologies to help make buildings and homes smarter, consume less energy, and operate more efficiently. The low-power [[wireless technology]] can be embedded into a wide variety of devices to be part of a self-organizing [[mesh networking|mesh network]].<ref>http://www.ember.com</ref> All Ember products conform to [[IEEE 802.15.4-2003]] [[standardization|standards]]. ==History== Ember was founded in 2001 by Andrew Wheeler and Robert Poor.<ref name="ember.com">http://www.ember.com/company_chron.html</ref> Both were students at [[MIT]] when they founded Ember with $3 million in seed funding led by Polaris Venture Partners with DFJ New England, Stata Venture Partners, and [[Bob Metcalfe]].<ref name="ember.com"/> The company began by making [[mesh networking]] 