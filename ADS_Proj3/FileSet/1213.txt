under a wide variety of forces.) *[http://www.simpartik.com SimPARTIK] DEM and SPH simulation package from Fraunhofer IWM *[http://www.itascacg.com/udec UDEC] and [http://www.itascacg.com/3dec 3DEC] Two- and three-dimensional simulation of the response of discontinuous media (such as jointed rock) that is subject to either static or dynamic loading. *[http://www.biomolecular-modeling.com/Products.html Ascalaph] [[Molecular dynamics]] with fourth order [[symplectic integrator]]. == See also == *[[Movable Cellular Automata]] *[[Finite element method]] {{DEFAULTSORT:Discrete Element Method}} [[Category:Numerical differential equations]] [[de:Discrete Element Method]] [[ja:個別要素法]] [[pl:Metoda elementów dyskretnych]] [[ru:Метод дискретного элемента]]</text> </page> <page> <id>10671</id> <title>Discrete wavelet transform</title> <text>[[Image:Jpeg2000 2-level wavelet transform-lichtenstein.png|thumb|300px|An example of the 2D discrete wavelet transform that is used in [[JPEG2000]]. The original image is high-pass filtered, yielding the three large images, each describing local changes in brightness (details) in the original image. It is then low-pass filtered and downscaled, yielding an approximation image; this image is high-pass filtered to produce the three smaller detail images, and low-pass filtered to produce the final approximation image in the upper-left.]] In [[numerical analysis]] and [[functional analysis]], a '''discrete wavelet transform''' (DWT) is any [[wavelet transform]] for which the [[wavelet]]s are discretely sampled. As with other wavelet transforms, a key advantage it has over [[Fourier transform]]s is temporal resolution: it captures both frequency ''and'' location information (location in time). == Examples == === Haar wavelets === {{main|Haar wavelet}} The first DWT was invented by the Hungarian mathematician [[Alfréd Haar]]. For an input represented by a list of <math>2^n</math> numbers, the [[Haar wavelet]] transform may be considered to simply pair up input values, storing the difference and passing the sum. This process is repeated recursively, pairing up the sums to provide the next scale: finally resulting in <math>2^n-1</math> differences and one final sum. === Daubechies wavelets === {{main|Daubechies wavelet}} The most commonly used set of discrete wavelet transforms was formulated by the Belgian mathematician [[Ingrid Daubechies]] in 1988. This formulation is based on the use of [[recurrence relation]]s to generate progressively finer discrete samplings of an implicit mother wavelet function; each resolution is twice that of the previous scale. In her seminal paper, Daubechies derives a family of [[Daubechies wavelet|wavelets]], the first of which is the Haar wavelet. Interest in this field has exploded since then, and many variations of Daubechies' original wavelets were developed. === Others === Other forms of discrete wavelet transform include the [[Stationary wavelet transform|non- or undecimated wavelet transform]] (where downsampling is omitted), the [[Newland transform]] (where an [[orthonormal]] basis of wavelets is formed from appropriately constructed [[top-hat filter]]s in [[frequency space]]). [[Wavelet packet decomposition|Wavelet packet transform]]s are also related to the discrete wavelet transform. [[Complex wavelet transform]] is another form. == Properties == The Haar DWT illustrates the desirable properties of wavelets in general. First, it can be performed in <math>O(n)</math> operations; second, it captures not only a notion of the frequency content of the input, by examining it at different scales, but also temporal content, i.e. the times at which these frequencies occur. Combined, these two properties make the [[Fast wavelet transform]] (FWT) an alternative to the conventional [[Fast Fourier Transform]] (FFT). == Applications == The discrete wavelet transform has a huge number of applications in science, engineering, mathematics and computer science. Most notably, it is used for [[signal coding]], to represent a discrete signal in a more redundant form, often as a preconditioning for [[data compression]]. == Comparison with Fourier transform == {{see also|Discrete Fourier transform}} To illustrate the differences and similarities between the discrete wavelet transform with the [[discrete Fourier transform]], consider the DWT and DFT of the following sequence: (1,0,0,0), a [[unit impulse]]. The DFT has orthogonal basis ([[DFT matrix]]): <pre> 1 1 1 1 1 0 –1 0 0 1 0 –1 1 –1 1 –1 </pre> while the DWT with Haar wavelets for length 4 data has orthogonal basis in the rows of: <pre> 1 1 1 1 1 1 -1 -1 1 –1 0 0 0 0 1 –1 </pre> (To simplify notation, whole numbers are used, so the bases are [[orthogonal]] but not [[orthonormal]].) Preliminary observations include: * Wavelets have ''location'' – the (1,1,–1,–1) wavelet corresponds to “left side” versus “right side”, while the last two wavelets have support on the left side or the right side, and one is a translation of the other. * Sinusoidal waves do not have location – they spread across the whole space – but do have ''phase'' – the second and third waves are translations of each other, corresponding to being 90° out of phase, like cosine and sine, of which these are discrete versions. Decomposing the sequence with respect to these bases yields: :<math>\begin{align} (1,0,0,0) &= \frac{1}{4}(1,1,1,1)+\frac{1}{4}(1,1,-1,-1) + \frac{1}{2}(1,-1,0,0) \qquad\text{Haar DWT}\\ (1,0,0,0) &= \frac{1}{4}(1,1,1,1) + \frac{1}{2}(1,0,-1,0) + \frac{1}{4}(1,-1,1,-1) \qquad\text{DFT} \end{align}</math> The DWT demonstrates the localization: the (1,1,1,1) term gives the average signal value, the (1,1,–1,–1) places the signal in the left side of the domain, and the (1,–1,0,0) places it at the left side of the left side, and truncating at any stage yields a downsampled version of the signal: :<math>\begin{align} &\left(\frac{1}{4},\frac{1}{4},\frac{1}{4},\frac{1}{4}\right)\\ &\left(\frac{1}{2},\frac{1}{2},0,0\right)\qquad\text{2-term truncation}\\ &\left(1,0,0,0\right) \end{align}</math> [[File:Sinc function (normalized).svg|thumb|The [[sinc function]], showing the time domain artifacts ([[undershoot (signal)|undershoot]] and [[ringing (signal)|ringing]]) of truncating a Fourier series.]] The DFT, by contrast, expresses the sequence by the interference of waves of various frequencies – thus truncating the series yields a [[low-pass filter]]ed version of the series: :<math>\begin{align} &\left(\frac{1}{4},\frac{1}{4},\frac{1}{4},\frac{1}{4}\right)\\ &\left(\frac{3}{4},\frac{1}{4},-\frac{1}{4},\frac{1}{4}\right)\qquad\text{2-term truncation}\\ &\left(1,0,0,0\right) \end{align}</math> Notably, the middle approximation (2-term) differs. From the frequency domain perspective, this is a better approximation, but from the time domain perspective it has drawbacks – it exhibits [[undershoot (signal)|undershoot]] – one of the values is negative, though the original series is non-negative everywhere – and [[ringing (signal)|ringing]], where the right side is non-zero, unlike in the wavelet transform. On the other hand, the Fourier approximation correctly shows a peak, and all points are within <math>1/4</math> of their correct value, though all points have error. The wavelet approximation, by contrast, places a peak on the left half, but has no peak at the first point, and while it is exactly correct for half 