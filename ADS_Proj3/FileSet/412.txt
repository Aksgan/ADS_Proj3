on a real chip die using what was already an older fab. Traditional designs simply could not do this; with so much of the chip surface dedicated to decoder logic, a true 32-bit design like the [[Motorola 68020]] required newer fabs before becoming practical. Using the same fabs, RISC I could have largely outperformed the competition. ==RISC II== While the RISC I design ran into delays, work at Berkeley had already turned to the new '''Blue''' design. Work on Blue progressed slower than Gold, due both to the lack of a pressing need now that Gold was going to fab, as well as changeovers in the classes and students staffing the effort. This pace also allowed them to add in several new features that would end up improving the design considerably. The key difference was a simpler cache circuitry that eliminated one line per bit (from three to two), dramatically shrinking the register file size. The change also required much tighter bus timing, but this was a small price to pay and in order to meet the needs several other parts of the design were sped up as well. The savings due to the new design were tremendous. Whereas Gold contained a total of 78 registers in 6 windows, Blue contained 138 registers broken into 8 windows of 16 registers each, with another 10 globals. This expansion of the register file increases the chance that a given procedure can fit all of its local storage in registers, as well as increasing the nesting depth. Nevertheless the larger register file used up less transistors, and the final Blue design, fabed as '''RISC II''', implemented all of the RISC instruction set with only 39,000 transistors. The other major change was to include an "instruction-format expander", which invisibly "up-converted" 16-bit instructions into a 32-bit format. This allowed smaller instructions, typically things with one or no operands, like <code>NOP</code>, to be stored in memory in a smaller 16-bit format and stuff two such instructions into a single machine word. The instructions would be invisibly expanded back to 32-bit versions before they reached the [[Arithmetic logic unit|ALU]], meaning that no changes were needed in the core logic. This simple technique yielded a surprising 30% improvement in code density, making an otherwise identical program on Blue run faster than on Gold due to the decreased number of memory accesses. RISC II proved to be much more successful in silicon, and entered testing, outperforming almost all minicomputers on almost all tasks. For instance, performance ranged from 85% of VAX speed to 256% on a variety of loads, that is, the RISC II often outperformed the VAX by ''two times''. RISC II was also benched against the famous [[Motorola 68000]], then considered to be the best commercial chip implementation, and outperformed it by 140% to 420% ==Follow-ons== Work on the original RISC designs ended with RISC II, but the concept itself lived on at Berkeley. The basic core was re-used in '''SOAR''' in 1984, basically a RISC converted to run [[Smalltalk]] (in the same way that it could be claimed RISC ran C), and later in the similar '''VLSI-BAM''' that ran [[PROLOG]] instead of Smalltalk. Another effort was '''SPUR''', which was a full set of chips needed to build a complete 32-bit [[workstation]]. RISC is less famous, but more influential, for being the basis of the commercial [[SPARC]] processor design from [[Sun Microsystems]]. It was the SPARC that first clearly demonstrated the power of the RISC concept; when they shipped in the first [[SPARCstation]]s they outperformed anything on the market. This led to virtually every [[Unix]] vendor hurrying for a RISC design of their own, leading to designs like the [[DEC Alpha]] and [[PA-RISC family|PA-RISC]], while [[Silicon Graphics|SGI]] purchased [[MIPS Computer Systems]]. By 1986 most large chip vendors followed, working on efforts like the [[Motorola 88000]], [[Fairchild Clipper]], [[AMD 29000]] and the [[PowerPC]]. Techniques developed for and alongside the idea of the reduced instruction set have also been adopted in successively more powerful implementations and extensions of the traditional "complex" [[x86 architecture]]. Much of a modern microprocessor's transistor count is devoted to large caches, many [[instruction pipeline|pipeline]] stages, [[superscalar]] instruction dispatch, [[branch predictor|branch prediction]] and other modern techniques which are applicable regardless of instruction architecture. The amount of silicon dedicated to instruction decoding on a modern x86 implementation is proportionately quite small, so the distinction between "complex" and RISC processor implementations has become blurred. ==References== * [http://www.eecs.berkeley.edu/Pubs/TechRpts/1982/CSD-82-106.pdf 'Design and Implementation of RISC I'] - original journal article by [[Carlo Sequin |C.E. Sequin]] and [[David A. Patterson (scientist)|D.A.Patterson]] * [http://cs.swan.ac.uk/~csandy/cs-323/notes/0607.cs-323005.html Berkeley RISC II] [[Category:Computing acronyms]] [[Category:Central processing unit]] [[Category:Instruction processing]] [[it:Berkeley RISC]]</text> </page> <page> <id>3636</id> <title>Berlin key</title> <text>{{Orphan|date=May 2009}} [[File:Doppelschluessel.jpg|thumb|''Berlin key'']] The '''Berlin key''' (also known as "Schließzwangschlüssel" (German) or "forced locking key" (English)) is a type of key lock. It was designed to force people to close and lock their doors (usually a front door or gate). Its particularity comes from the fact that it has two key tips (the part which activates the bolt), one at each end of the key, rather than the usual single tip. After unlocking the lock, the key must be retrieved on the other side of the door after it has been closed again. The mechanism makes the retrieval of the key impossible until the door has been locked again from the other side. With this type of locking system, locking the bolt while the door is open is normally not possible. Invented by the Berliner locksmith [[Johann Schweiger]], the Berlin key was massively produced by the Albert Kerfin & Co company starting in 1912. With the advent of more recent locking technologies, this kind of lock and key is becoming less common. However, it continues to be a distinctive feature of the city of [[Berlin]], [[Germany]]. The key is subject of a book ''La Clé de Berlin'' by Science and Technology studies professor [[Bruno Latour]]. ==External links== * An on-line article on the subject, in English, is available at: http://www.bruno-latour.fr/poparticles/poparticle/p036.html {{DEFAULTSORT:Berlin 