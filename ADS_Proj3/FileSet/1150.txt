as [[Linspire]], [[Linux Mint|Mint]], [[Xandros]], [[OpenSUSE]] and [[gOS (operating system)|gOS]], Ubuntu (and its siblings [[Kubuntu]], [[Edubuntu]] and [[Xubuntu]]) has smoothed most of Linux’s geeky edges while polishing it for the desktop...It’s now simpler to set up and configure than Windows.<ref name="Economist">{{cite news|url = http://www.economist.com/science/displaystory.cfm?story_id=10410912|title = Technology in 2008|accessdate = 2008-05-06|last = Economist.com|authorlink = |year = 2007|month = December|work=The Economist}}</ref></blockquote> == Measuring adoption == {{Main|Linux adoption}} Measuring the adoption of Linux on the desktop is a difficult proposition and this has caused controversy as to how many users there actually are.<ref name="Schestowitz">{{cite web|url = http://itmanagement.earthweb.com/osrc/article.php/12068_3687616_1|title = Can Linux Adoption Ever be Accurately Gauged?|accessdate = 2008-05-23|last = Schestowitz|first = Roy|authorlink = |year = 2007|month = July}}</ref> As Linux systems are typically downloaded, copied and distributed for free, the usual methods of tracking sales numbers do not apply in gauging numbers of Linux desktop users. This use of website counters to identify operating systems also does not produce reliable numbers, due to such factors as:<ref name="Schestowitz"/> *individual websites do not attract a representative sample, due to their content.<ref name="Schestowitz"/> *spoofing of addresses.<ref name="Schestowitz"/> *problems tagging identification strings as to Linux or even distribution results in high numbers of "unknown operating system".<ref name="Schestowitz"/> *identifying computers that operate from behind proxies.<ref name="Schestowitz"/> *the multiplying effects of [[botnet]]s which tend to create the illusion of more insecure PCs, running Windows systems.<ref name="Schestowitz"/> *the fact that not all PCs are connected to the internet and used for web browsing.<ref name="Schestowitz"/> == See also == {{Portal|Free software}} {{Wikipedia-Books|Desktop Linux}} * [[Desktop Linux Summit]] * [[Desktop wars]] * [[KDE]] * [[GNOME]] * [[Xfce]] * [[LXDE]] ==References== {{Reflist|2}} ==External links== * [http://www.desktoplinux.com/ DesktopLinux.com] * [http://www.psychocats.net/ubuntucat/the-linux-desktop-myth/ ''The Linux Desktop Myth''] {{Linux}} [[Category:Linux]] [[bn:ডেক্সটপ লিনাক্স]] [[es:Escritorio Linux]] [[fa:میزکار لینوکس]] [[hu:Asztali Linux]] [[tr:Linux masaüstü]]</text> </page> <page> <id>10076</id> <title>Desktop Outsourcing</title> <text>{{Orphan|date=February 2009}} '''Desktop outsourcing''' is the process where a [[Company|firm]], U.S. [[Government agency|Government Agency]], or [[Non-profit organization|non-profit]] contracts a third party to maintain and manage one or more of its [[computing]] equipment components and [[software maintenance]]. Justification for desktop outsourcing could include shifting focus and energy to areas of core competency, reducing [[staffing]] costs, and the [[Planned maintenance|routine maintenance]], upgrades, and repairs associated with managing multitudes of [[Computer system|PC systems]] and [[Server (computing)|servers]]: or a combination of both (Applegate et al. 2007). == References == {{reflist}} * Corporate Information Strategy and Management. Applegate, Lynda, Austin, Robert, McFarlan, Warren F. (2007). New York: McGraw Hill Companies, Inc. ISBN 0-07-063584-6 * Littman, Dan. "Outsourcing the desktop: Outsourcing desktop management can shave costs while bringing relief to an assortment of infrastructure management headaches". IDG Publishing Network, Inc. 6 February 2006. 18 April 2008.<[http://www.infoworld.com/article/06/02/06/74669_06FEoutdesk_3.html]>. == External links == *[http://www.accessmylibrary.com/coms2/summary_0286-14027181_ITM Outsourcing the desktop - Outsourcing desktop management can shave costs while bringing relief to an assortment of infrastructure management headaches.(case studies on outsourcing)] [[Category:Business process|Outsourcing]] [[Category:Business terms]] [[Category:Information technology management]] {{Business-term-stub}}</text> </page> <page> <id>10079</id> <title>Desktop customization</title> <text><!-- Deleted image removed: [[Image:Customization-linux.jpg|thumb|right|300px|Desktop Customization on the Linux operating system]] --> {{Unreferenced|date=October 2007}} '''Desktop customization''' is a term that describes the customization of a personal [[computer]] [[desktop environment]]. Customization can be carried out on different desktop environment in different ways. Popular desktop environments are [[Windows XP]], [[GTK]], [[Gnome]] and [[KDE]]. GTK, Gnome and KDE are environments found on the [[Linux|Linux Operating system]]. Customization can include wallpapers, window styles, [[Widget engine|widgets]], [[gadgets]], icons and skinned [[application software|applications]]. {{tech-stub}} [[Category:Personal computers]] [[Category:Desktop environments]]</text> </page> <page> <id>10101</id> <title>Deterministic context-free grammar</title> <text>In [[formal grammar]] theory, the '''deterministic context-free grammars''' ('''DCFGs''') are a [[proper subset]] of the [[context-free grammars]]. The deterministic context-free grammars are those a [[deterministic pushdown automaton]] can recognize. A DCFG is the finite set of rules defining the set of well-formed expressions in some [[deterministic context-free language]]. ==History== In the 1960s, theoretic research in computer science on [[regular expressions]] and [[finite automata]] led to the discovery that [[context-free grammars]] are equivalent to [[pushdown automata]]. These grammars were thought to capture the syntax of computer programming languages. The first computer programming languages were under development at the time (see [[History of programming languages]]) and writing [[compilers]] was difficult. But using [[context-free grammars]] to help automate the parsing part of the compiler simplified the task. Deterministic context-free grammars were particularly useful because they could be parsed sequentially, which was a requirement due to computer memory constraints.<ref>{{cite book | editors = [[A Salomaa]] & [[D Wood]] & [[S Yu]] | title = [[A Half-Century of Automata Theory]] | year = 2001 | publisher = World Scientific Publishing Co. Pte. Ltd | pages =38–39 }}</ref> ==Uses== [[LALR]] parsers, which use a subset of DCFGs, have practical value as program code validators. Given the formal rules of a DCFG, these parsers efficiently ensure a program can be generated from those rules. In fact, this syntax validation is one of the operations a [[compiler]] performs. <!-- need to state the two restrictions for determinism, can't figure out how to express it simply--> ==Limitations== Since DCFGs are a proper subset of CFGs, they are of less descriptive power than some CFGs. ==See also== *[[Deterministic parsing]] *[[LR parser]] *[[LL parser]] ==References== <references/> {{Formal languages and grammars}} [[Category:Formal languages]] [[hr:Deterministička kontekstno neovisna gramatika]] [[sr:Детерминистичка контекстно слободна граматика]] [[zh:确定上下文无关文法]]</text> </page> <page> <id>10102</id> <title>Deterministic context-free language</title> <text>A '''deterministic context-free language''' is a [[formal language]] which is defined by a [[deterministic context-free grammar]].<ref>{{cite book | last = [[John Hopcroft|Hopcroft]] | first = John | coauthors = [[Jeffrey Ullman]] | title = [[Introduction to automata theory, languages, and computation]] | year = 1979 | publisher = Addison-Wesley | page = 233 }}</ref> The set of deterministic context-free languages is called '''DCFL'''<ref>{{CZoo|Class DCFL|D#dcfl}}</ref> and is identical to the set of languages accepted by a [[deterministic pushdown automaton]]. The set of deterministic context-free languages are a proper subset of the set of [[context-free language]]s that possess an unambiguous [[context free grammar]]. For example, the language of even-length [[palindrome]]s on the alphabet of 0 and 1 has the simple, unambiguous grammar S → 0S0 | 1S1 | ε, but it cannot be [[parser|parsed]] by a deterministic push down automaton.<ref>{{cite book 