XnView at http://pagesperso-orange.fr/pierre.g/xnview/enxnview.html are able only to convert the preview thumbnails and open them for viewing. The quality of the preview image, however, is very poor. == BMF file header == This block of bytes is added and serves for identification. A typical application will read this block first to ensure that the file is actually a BMF file. [http://filext.com/ FILExt] reports that the file header is [http://filext.com/file-extension/BMF Hex: 81 8A]. == Color palette == The color palette of the BMF format is known. Likely it is 8-bit color based on the known clipart examples. == Vector data == The BMF format is proprietary and has not been (to our knowledge) released publicly. == Usage of BMF format == Usage of the BMF format was fairly limited. Only the Corel Clipart Gallery and Corel Flow products were known to have used this format. Neither product nor the format was supported after Windows 95 was released making the format an orphan. == Related formats == None that we are aware of. == See also == * [[Comparison of graphics file formats]] == References == {{reflist}} == External links == * [http://www.file-extensions.org/search/?searchstring=bmf BMF bitmap entries at File-extensons.org] * [http://filext.com/file-extension/BMF BMF bitmap and other BMF extensions] {{Graphics file formats}} {{Compression Formats}} [[Category:Graphics file formats]] {{software-type-stub}}</text> </page> <page> <id>3152</id> <title>BMS-203</title> <text>{{Unreferenced stub|auto=yes|date=December 2009}} {{Orphan|date=December 2009}} [[Image:CER-203.jpg|right|thumb|150px|CER-203: CPU testing]] '''BMS-203''' is a central unit of early digital computer [[CER-203]] developed by [[Mihajlo Pupin Institute]] ([[Serbia]]) in [[1971]]. It contained both [[central processing unit]] and [[primary memory]]. ==Specifications== '''Central Processing Unit''': * Number of instructions: 32 * Performance: ** one 16-cycle instruction: 20 [[1 E-6 s|μs]] ** one single cycle instruction: 5 [[1 E-6 s|μs]] ** addition and/or subtraction of two 15-digit numbers: 20 [[1 E-6 s|μs]] '''Primary memory''': * Capacity: 8 kilowords * Speed (cycle time): 1 [[1 E-6 s|μs]] * Complete, autonomous memory error checking * Parity control ==See also== * [[CER-203]] computer * [[CER Computers]] * [[Mihajlo Pupin Institute]] * [[History of computer hardware in the SFRY]] {{DEFAULTSORT:Bms-203}} [[Category:CER computers]] {{Compu-hardware-stub}}</text> </page> <page> <id>3159</id> <title>BOS/360</title> <text>{{Cleanup|date=January 2007}} {{Unreferenced|date=January 2007}} {{History of IBM mainframe operating systems}} '''BOS/360''' (Basic Operating System/360) was an early [[IBM]] [[operating system]]. It came in 2 versions, 4K BOS and 8K BOS. The latter evolved into [[DOS/360]], which some{{Who|date=October 2009}} suggest was really version 6 of BOS. BOS in turn was preceded by BPS, Basic Programming Support. The first 360s to be shipped were the models 30 and 40. BOS was the first disk based operating system{{Citation needed|date=June 2008}} and was released in early 1965. 4K BOS was for machines with 8 or 16K of core storage and as its name implies, assembled a Supervisor of about 4K. With very few exceptions, all of the early 360s (but not the model 20) shipped with 2, 3 or more [[IBM 2311|2311]] disk drives.{{Citation needed|date=June 2008}} Thus BOS was the only disk based operating system available at launch for a machine that was marketed as disk based. The Supervisor was [[Initial Program Load|IPL]]'d and the date and time were entered by the operator on the console typewriter. The operating system disk contained a source language library, a macro library and a core image library. The macro library included all the options for the supervisor, which was assembled by the 360 assembly language compiler, the only language available at the time, although [[RPG programming language|RPG]] came a little later. The other crucial component was the Job Controller, which was fed by punched cards using [[Job Control Language|JCL]] (Job Control Language). Most BOS users upgraded to DOS and added more core, typically to 32K or even a gargantuan (for the time) 64K. DOS was the first System/360 operating system to introduce multi-programming. It could be configured with 2 foreground partitions, typically used for spooling while the main [[JOB Stream]] ran in the background. ==References== IBM System/360 Basic Programming Support and Basic Operating System/360 Programming Systems Summary. C24-3420-0. 1965.<br /> http://www.bitsavers.org/pdf/ibm/360/bos_bps/C24-3420-0_BPS_BOS_Programming_Systems_Summary_Aug65.pdf {{IBM operating systems}} {{FOLDOC}} [[Category:IBM Mainframe computer operating systems]] {{operating-system-stub}} {{mainframe-compu-stub}}</text> </page> <page> <id>3164</id> <title>BQP</title> <text>[[Image:BQP complexity class diagram.svg|thumb|The suspected relationship of BQP to other problem spaces<ref>Michael Nielsen and Isaac Chuang (2000). ''Quantum Computation and Quantum Information''. Cambridge: Cambridge University Press. ISBN 0-521-63503-9.</ref>]] In [[computational complexity theory]] '''BQP''' (bounded error quantum polynomial time) is the class of [[decision problems]] solvable by a [[quantum computer]] in [[polynomial time]], with an error probability of at most 1/3 for all instances. It is the quantum analogue of the complexity class [[BPP]]. In other words, there is an [[algorithm]] for a quantum computer (a [[quantum algorithm]]) that solves the decision problem with ''high'' probability and is guaranteed to run in polynomial time. On any given run of the algorithm, it has a probability of at most 1/3 that it will give the wrong answer. Similarly to other "bounded error" probabilistic classes the choice of 1/3 in the definition is arbitrary. We can run the algorithm a constant number of times and take a majority vote to achieve any desired probability of correctness less than 1, using the [[Chernoff bound]]. Detailed analysis shows that the complexity class is unchanged by allowing error as high as 1/2 − ''n''<sup>−''c''</sup> on the one hand, or requiring error as small as 2<sup>−''n<sup>c</sup>''</sup> on the other hand, where ''c'' is any positive constant, and ''n'' is the length of input. ==Definition== '''BQP''' can also be viewed as a bounded-error uniform family of [[quantum circuit]]s. A language ''L'' is in '''BQP''' if and only if there exists a [[Circuit_complexity#Polynomial-time_uniform|polynomial-time uniform]] family of quantum circuits <math>\{Q_n:n \in \mathbb{N}\}</math>, such that * For all <math>n \in \mathbb{N}</math>, <math>Q_n</math> takes ''n'' qubits as input and outputs 1 bit * For all ''x'' in ''L'', <math>\mathrm{Pr}(Q_{|x|}(x)=1)\geq 2/3</math> * For all ''x'' not in ''L'', <math>\mathrm{Pr}(Q_{|x|}(x)=0)\geq 2/3</math> == Quantum computation == The number of [[qubit]]s in the computer is allowed to be a [[polynomial function]] of the instance size. For example, algorithms are known for factoring an ''n''-bit integer using just over 2''n'' qubits ([[Shor's algorithm]]). Usually, computation on 