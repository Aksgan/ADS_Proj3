isn't likely to help the advanced optimizations common in large machines. Further, the single pass aspect slowed or prevented getting the compiler bootstrapped out of Z80 assembly language and onto Pascal itself. Since the compiler was monolithic, the conversion to Pascal could not be done one section at a time, but had to proceed as a wholesale replacement. When replacement was started, the project lasted longer than the machine did. The biggest help that two pass compiling gave the I80386 implementation was the maintenance of a standard book of intermediate instructions which communicated between front and back ends of the compiler. This well understood "stage" of compilation reduced overall complexity. Intuitively, when two programs of equal size are mated intimately, the complexity is not additive, but multiplicative, because the connections between the program halves multiply out of control. Another lesson from the Z80 days, which was corrected on the 80386 compiler was to write as much of the code as possible into Pascal itself, even the support library. Having the 80386 support code all written in Pascal has made it so modular and portable that most of it was moved out of the operating system specific area and into the "common code" library section, a section reserved for code that never changes for each machine and operating system. Even the "system specific" code needs modification only slightly from implementation to implementation. The result is great amounts of implementation work saved while porting the system. Finally, it was an error to enter into a second round of optimization before bootstrapping the compiler. Although the enhancement of the output code was considerable, the resulting increase in complexity of the compiler caused problems with the limited address space. At the time, better optimized code was seen to be an enabler to bootstrapping the code in Pascal. In retrospect, the remaining assembly written sections WERE the problem, and needed to be eliminated, the sooner the better. Another way to say this is that the space problems could be transient, but having significant program sections written in assembly are a serious and lasting problem. == Further reading == * Kathleen Jansen and [[Niklaus Wirth]]: ''PASCAL - User Manual and Report.'' Springer-Verlag, 1974, 1985, 1991, ISBN 0-387-97649-3, ISBN 0-387-90144-2, and ISBN 3-540-90144-2 <ref>http://www.cs.inf.ethz.ch/~wirth/books/Pascal/</ref> * Niklaus Wirth: ''The Programming Language Pascal.'' Acta Informatica, 1, (Jun 1971) 35-63 * ISO/IEC 7185: ''Programming Languages - PASCAL.'' <ref>http://www.moorecad.com/standardpascal/</ref> == External links == * [http://www.moorecad.com/ippas/ IP Pascal web site] * [http://www.standardpascal.org/ The standard, ISO 7185 Pascal web site] == References == <references /> {{Pascal programming language family}} {{Widget toolkits}} [[Category:Pascal programming language family]] [[Category:Pascal compilers]]</text> </page> <page> <id>17627</id> <title>IP access controller</title> <text>{{Infobox media | name = IP Access Control | image = [[Image:V2000 IP Controller.jpg|200px]] | caption = V2000 VertX IP access controller | type = [[Internet Protocol]] | use = access control | owner = [[HID Global]] | extended from = | extended to = }} '''IP access controller''' is an electronic security device designed to identify users and control entry to or exit from protected areas. A typical IP access controller supports 2 or 4 [[Access control#Types of readers|basic access control readers]]. It may have an internal web server and support configuration via a browser or via software installed on a host PC. The main features that distinguish IP controllers from older generation of serial controllers are: 1. IP controllers connect directly to LAN/WAN and have all the inputs and outputs necessary for controlling readers, monitoring door inputs and controlling locks. 2. IP controllers have an on-board network interface and does not require the use of a [[terminal server]]. Examples of IP access controllers are GC01n by Simac/SimacQuadCore, PAC-512-IP by PAC/Stanley Security Products, DirectDoor by GE Security Products and VertX V2000 by HID Global. ==Advantages and Disadvantages of IP Controllers== '''Advantages:''' * An existing network infrastructure is fully utilized; there is no need to install new communication lines. * There are no limitations regarding the number of IP controllers in a system (the limit of 32 controllers per line is typical for systems using [[EIA-485|RS-485]] communication interface). * Special knowledge of installation, termination, grounding and troubleshooting of RS-485 communication lines is not required. * Communication with IP controllers may be done at the full network speed, which is important if transferring a lot of data (databases with thousands of users, possibly including biometric records). * In case of an alarm IP controllers may initiate connection to the host PC. This ability is important in large systems as it allows reducing network traffic generated by frequent polling. * Simplifies installation of systems consisting of multiple locations separated by large distances. Basic Internet link is sufficient to establish connections to remote locations. * Wide selection of standard network equipment is available to provide connectivity in different situations (fiber, wireless, VPN, dual path, PoE) * No special hardware is required for building fail-over systems: in case the primary host PC fails, the secondary host PC may start polling IP controllers. '''Disadvantages:''' * The system becomes susceptible to network related problems, such as delays in case of heavy traffic and network equipment failures. * IP controllers and workstations may become accessible to hackers if the network of an organization is not well protected. This threat may be eliminated by physically separating the access control network from the network of the organization. Also most IP controllers utilize either Linux platform or proprietary operating systems, which makes them more difficult to hack. Industry standard data encryption is also used. * Maximum distance from a hub or a switch to the controller is 100 meters (330 feet). * Operation of the system is dependent on the host PC. In case the host PC fails, events from IP controllers are not retrieved and functions that required interaction between readers (i.e. anti-passback) stop working. Some controllers, however, have peer-to-peer communication option in order to reduce dependency on the host PC. * Unlike IP readers, most IP controllers do not support PoE. This, however, may change if the PoE 