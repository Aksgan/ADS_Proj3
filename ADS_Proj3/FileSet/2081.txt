12 ! 96 |} ; ''Next Header'' (8 bits) : Specifies the [[List of IP protocol numbers|type]] of the next header. ; ''Hdr Ext Len'' (8 bits) : Length of this header in 8-octet units, not including the first 8 octets. ; ''Options'' (variable) : Contains one or more options, and optional padding fields to align options and to make the total header length a multiple of 8 octets. Options are [[Type-length-value|TLV]]-coded. ===Routing=== The ''Routing'' extension header is used to direct a packet to one or more intermediate nodes before being sent to its destination. The header is at least 8 octets in size; if more ''Type-specific Data'' is needed than will fit in 4 octets, blocks of 8 octets are added to the header repeatedly, until all ''Type-specific Data'' is placed.<ref name=rfc2460/> :{| class="wikitable" style="text-align: center" |+''Routing'' extension header format |- ! style="border-bottom:none; border-right:none;"| ''Offsets'' ! style="border-left:none;"| Octet ! colspan="8" | 0 ! colspan="8" | 1 ! colspan="8" | 2 ! colspan="8" | 3 |- ! style="border-top: none" | Octet ! Bit ! style="width:2.6%;"| 0 ! style="width:2.6%;"| 1 ! style="width:2.6%;"| 2 ! style="width:2.6%;"| 3 ! style="width:2.6%;"| 4 ! style="width:2.6%;"| 5 ! style="width:2.6%;"| 6 ! style="width:2.6%;"| 7 ! style="width:2.6%;"| 8 ! style="width:2.6%;"| 9 ! style="width:2.6%;"| 10 ! style="width:2.6%;"| 11 ! style="width:2.6%;"| 12 ! style="width:2.6%;"| 13 ! style="width:2.6%;"| 14 ! style="width:2.6%;"| 15 ! style="width:2.6%;"| 16 ! style="width:2.6%;"| 17 ! style="width:2.6%;"| 18 ! style="width:2.6%;"| 19 ! style="width:2.6%;"| 20 ! style="width:2.6%;"| 21 ! style="width:2.6%;"| 22 ! style="width:2.6%;"| 23 ! style="width:2.6%;"| 24 ! style="width:2.6%;"| 25 ! style="width:2.6%;"| 26 ! style="width:2.6%;"| 27 ! style="width:2.6%;"| 28 ! style="width:2.6%;"| 29 ! style="width:2.6%;"| 30 ! style="width:2.6%;"| 31 |- ! 0 ! 0 | colspan="8"|''Next Header'' | colspan="8"|''Hdr Ext Len'' | colspan="8"|''Routing Type'' | colspan="8"|''Segments Left'' |- ! 4 ! 32 | colspan="32"|''Type-specific Data'' |- ! 8 ! 64 | colspan="32" rowspan="2"|Optional: more ''Type-specific Data'' ... |- ! 12 ! 96 |} ; ''Next Header'' (8 bits) : Indicates the type of the next header. ; ''Hdr Ext Len'' (8 bits) : The length of this header, in multiples of 8 octets, not including the first 8 octets. ; ''Routing Type'' (8 bits) : <tt>0</tt>, <tt>1</tt>, or <tt>2</tt>. ; ''Segments Left'' (8 bits) : Number of nodes this packet still has to visit before reaching its final destination. ; ''Type-specific Data'' (variable) : Data that belongs to this type of routing header. ====Routing types==== Due to the fact that with Routing Header type 0 a simple but effective<ref>{{cite web |url=http://www.secdev.org/conf/IPv6_RH_security-csw07.pdf |title=IPv6 Routing Header Security |author=Philippe Biondi, Arnoud Ebalard |month=April |year=2007 |publisher=[[EADS]] |format=pdf |quote=Type 0: the evil mechanism... |accessdate=3 December 2010}}</ref> [[denial-of-service attack]] could be launched, this header is deprecated<ref name=rfc5095>Abley, J.; Savola, P.; Neville-Neil, G. (December 2007). ''[http://tools.ietf.org/html/rfc5095 Deprecation of Type 0 Routing Headers in IPv6]''. [[Internet Engineering Task Force|IETF]]. RFC{{nbsp}}5095.</ref> and host and routers are required to ignore these headers. Routing Header type 1 is used for the Nimrod<ref name=rfc1992>Castineyra, I.; Chiappa, N.; Steenstrup, M. (Augustus 1996) ''[http://tools.ietf.org/html/rfc1992 The Nimrod Routing Architecture]', [[Internet Engineering Task Force|IETF]]. RFC{{nbsp}}1992.</ref> project funded by [[DARPA]]. Routing Header type 2 is a limited version of type 0 and is used for [[Mobile IPv6]], where it can hold the Home Address of the Mobile Node. ===Fragment=== In order to send a packet that is larger than the path [[Maximum transmission unit|MTU]], the sending node splits the packet into fragments. The ''Fragment'' extension header carries the information necessary to reassemble the original (unfragmented) packet.<ref name=rfc2460/> :{| class="wikitable" style="text-align: center" |+''Fragment'' extension header format |- ! style="border-bottom:none; border-right:none;"| ''Offsets'' ! style="border-left:none;"| Octet ! colspan="8" | 0 ! colspan="8" | 1 ! colspan="8" | 2 ! colspan="8" | 3 |- ! style="border-top: none" | Octet ! Bit ! style="width:2.6%;"| 0 ! style="width:2.6%;"| 1 ! style="width:2.6%;"| 2 ! style="width:2.6%;"| 3 ! style="width:2.6%;"| 4 ! style="width:2.6%;"| 5 ! style="width:2.6%;"| 6 ! style="width:2.6%;"| 7 ! style="width:2.6%;"| 8 ! style="width:2.6%;"| 9 ! style="width:2.6%;"| 10 ! style="width:2.6%;"| 11 ! style="width:2.6%;"| 12 ! style="width:2.6%;"| 13 ! style="width:2.6%;"| 14 ! style="width:2.6%;"| 15 ! style="width:2.6%;"| 16 ! style="width:2.6%;"| 17 ! style="width:2.6%;"| 18 ! style="width:2.6%;"| 19 ! style="width:2.6%;"| 20 ! style="width:2.6%;"| 21 ! style="width:2.6%;"| 22 ! style="width:2.6%;"| 23 ! style="width:2.6%;"| 24 ! style="width:2.6%;"| 25 ! style="width:2.6%;"| 26 ! style="width:2.6%;"| 27 ! style="width:2.6%;"| 28 ! style="width:2.6%;"| 29 ! style="width:2.6%;"| 30 ! style="width:2.6%;"| 31 |- ! 0 ! 0 | colspan="8"|''Next Header'' | colspan="8"|''Reserved'' | colspan="13"|''Fragment Offset'' | colspan="2"|''Res'' | colspan="1"|''M'' |- ! 4 ! 32 | colspan="32"|''Identification'' |} ; ''Next Header'' (8 bits) : Identifies the type of the next header. ; ''Reserved'' (8 bits) : Initialized to all zeroes. ; ''Fragment Offset'' (13 bits) : Offset, in 8-octet units, relative to the start of the fragmentable part of the original packet. ; ''Res'' (2 bits) : Reserved; initialized to zeroes. ; ''M Flag'' (1 bit) : 1 means more fragments follow; 0 means last fragment. ; ''Identification'' (32 bits) : Packet identification value, generated by the source node. Needed for reassembly of the original packet. ===Authentication Header (AH) and Encapsulating Security Payload (ESP)=== The ''[[IPsec#Authentication Header|Authentication Header]]'' and the ''[[IPsec#Encapsulating Security Payload|Encapsulating Security Payload]]'' are part of [[IPsec]] and are used identically in IPv6 and in IPv4.<ref name=rfc4302>Kent, S. (December 2005) ''[http://tools.ietf.org/html/rfc4302.html IP Authentication Header]'' [[Internet Engineering Task Force|IETF]]. RFC{{nbsp}}4202.</ref><ref name=rfc4303>Kent, S. (December 2005) ''[http://tools.ietf.org/html/rfc4303.html IP Encapsulating Security Payload]'' [[Internet Engineering Task Force|IETF]]. RFC{{nbsp}}4203.</ref> ==Payload== The fixed and optional IPv6 headers are followed with the ''upper-layer payload'', the data provided by the transport layer, for example a [[Transmission Control Protocol|TCP]] segment or a [[User Datagram Protocol|UDP]] datagram. The ''Next Header'' field of the last IPv6 header indicates what type of payload is contained in this packet. ===Standard payload length=== The [[#Fixed header|payload length field of IPv6]] (and [[IPv4#Header|IPv4]]) has a size of 16 bits, capable of specifying a maximum size of [[65535 (number)|{{gaps|65|535}}]] octets for the payload. Most [[Link Layer]] protocols cannot process packets larger than {{gaps|65|535}} octets.{{Citation needed|date=July 2010}} ===Jumbogram=== An optional feature of IPv6, the ''jumbo payload'' option in a ''Hop-By-Hop Options'' extension header<ref name=rfc2675/>, allows the exchange of packets with payloads of up 