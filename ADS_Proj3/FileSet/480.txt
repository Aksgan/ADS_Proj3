instruction register but before it is executed. This is followed by the execution of a program that is not in memory except that its instructions are read (from specially-prepared input) into memory just before they are executed, then that simple program is executed, that (due to carefully-prepared input) places a program somewhere in memory, that finally is executed. == Software bootstrapping ==<!-- This section is linked from [[Kermit (protocol)]] --> Bootstrapping can also refer to the development of successively more complex, faster programming environments. The simplest environment will be, perhaps, a very basic text editor (e.g., [[ed (UNIX)|ed]]) and an [[Assembly language#Assembler|assembler]] program. Using these tools, one can write a more complex text editor, and a simple compiler for a higher-level language and so on, until one can have a [[graphical user interface|graphical]] [[integrated development environment|IDE]] and an extremely [[high-level programming language]]. Historically, bootstrapping also refers to early computer program development which has been obviated by [[emulator|emulation]] software now executed in pre-existing computers. Bootstrapping in program development began during the 1950s when each program was constructed on paper in decimal code or in binary code, bit by bit (1s and 0s), because there was no high-level computer language, no [[compiler]], no assembler, and no [[Linker (computing)|linker]]. A tiny assembler program was hand-coded for a new computer (for example the [[IBM 650]]) which converted a few instructions into binary or decimal code: A1. This simple assembler program was then rewritten in its just-defined [[assembly language]] but with extensions that would enable the use of some additional mnemonics for more complex operation codes. The enhanced assembler's source program was then assembled by its predecessor's executable (A1) into binary or decimal code to give A2, and the cycle repeated (now with those enhancements available), until the entire instruction set was coded, branch addresses were automatically calculated, and other conveniences (such as conditional assembly, macros, optimisations, etc.) established. This was how the early assembly program SOAP (Symbolic Optimal Assembly Program) was developed. Compilers, linkers, loaders, and utilities were then coded in assembly language, further continuing the bootstrapping process of developing complex software systems by using simpler software. == Compiler bootstrapping == {{main|Bootstrapping (compilers)}} In [[compiler]] design, a bootstrap or bootstrapping compiler is a compiler that is written in the source language, or a subset of the language, that it compiles. Examples include [[GNU Compiler Collection|gcc]], [[Glasgow Haskell Compiler|GHC]], [[OCaml]], [[BASIC]], [[PL/I]] and more recently the [[Mono (software)|Mono C# compiler]]. == References == <references/> [[Category:Software architecture]] {{Operating System}} [[cs:Bootstrapping]] [[de:Bootstrapping (Informatik)]] [[es:Bootstrapping (informática)]] [[et:Alglaadur]] [[he:Bootstrapping]] [[nl:Bootstrap]] [[sk:Münchhausenova metóda]] [[sr:Бутстраповање (рачунарство)]]</text> </page> <page> <id>4323</id> <title>Border Gateway Protocol</title> <text>{{Redirect|BGP|the Formula One Team|Brawn GP}} The '''Border Gateway Protocol''' ('''BGP''') is the protocol backing the core routing decisions on the [[Internet]]. It maintains a table of IP networks or 'prefixes' which designate network reachability among [[Autonomous system (Internet)|autonomous systems]] (AS). It is described as a [[path vector protocol]]. BGP does not use traditional [[Interior Gateway Protocol]] ('''IGP''') metrics, but makes routing decisions based on path, network policies and/or rulesets. For this reason, it is more appropriately termed a reachability protocol rather than [[routing protocol]]. BGP was created to replace the [[Exterior Gateway Protocol]] ('''EGP''') routing protocol to allow fully decentralized routing in order to allow the removal of the [[NSFNet]] [[Internet backbone]] network. This allowed the Internet to become a truly decentralized system. Since 1994, version four of the BGP has been in use on the Internet. All previous versions are now obsolete. The major enhancement in version 4 was support of [[Classless Inter-Domain Routing]] and use of [[Supernet|route aggregation]] to decrease the size of [[routing table]]s. Since January 2006, version 4 is codified in RFC 4271, which went through more than 20 drafts based on the earlier RFC 1771 version 4. RFC 4271 version corrected a number of errors, clarified ambiguities and brought the RFC much closer to industry practices. Most Internet users do not use BGP directly. Since most [[Internet service provider]]s must use BGP to establish routing between one another (especially if they are [[multihoming|multihomed]]), it is one of the most important protocols of the Internet. Compare this with [[Signaling System 7]] (SS7), which is the inter-provider core call setup protocol on the [[PSTN]]. Very large private [[Internet Protocol|IP]] networks use BGP internally. An example would be the joining of a number of large [[Open Shortest Path First]] ([[OSPF]]) networks where OSPF by itself would not scale to size. Another reason to use BGP is [[multihoming]] a network for better redundancy either to multiple access points of a single ISP (RFC 1998) or to multiple ISPs. {{IPstack}} ==Operation== BGP neighbors, peers are established by manual configuration between [[router]]s to create a [[Transmission Control Protocol|TCP]] session on [[TCP and UDP port|port]] 179. A BGP speaker will periodically send 19-byte keep-alive messages to maintain the connection (every 60 seconds by default). Among routing protocols, BGP is unique in using TCP as its transport protocol. When BGP is running inside an [[autonomous system (Internet)|autonomous system]] (AS), it is referred to as ''Internal BGP'' (''IBGP'' or ''Interior Border Gateway Protocol''). When it runs between autonomous systems, it is called ''External BGP'' (''EBGP'' or ''Exterior Border Gateway Protocol''). Routers on the boundary of one AS exchanging information with another AS are called border or edge routers. In the Cisco operating system, IBGP routes have an [[administrative distance]] of 200, which is less preferred than either external BGP or any interior routing protocol. Other router implementations also prefer EBGP to [[Interior Gateway Protocol|IGP]]s, and IGPs to IBGP. It uses 20 bytes per header. ===Extensions Negotiation=== During the OPEN BGP speakers can negotiate<ref>[http://www.ietf.org/rfc/rfc2842.txt Capabilities Advertisement with BGP-4], RFC 2842, R. Chandra & J. Scudder,May 2000</ref> optional capabilities of the session, including [[Multiprotocol BGP|multiprotocol extensions]] and various recovery modes. If the multiprotocol extensions to BGP<ref>[http://www.ietf.org/rfc/rfc2858.txt Multiprotocol Extensions for BGP-4], RFC 2858, T. Bates ''et al.'',June 2000</ref> are negotiated at the time of creation, the BGP speaker can prefix the Network Layer Reachability Information (NLRI) it advertises with an address family prefix. These families include 