process for their creation, rather than a failure to recognize their utility once obtained. Buckland also states that Bush's idea should be viewed from the historical perspective of [[microfilm]] technology developed ''prior'' to 1945 rather than based on the power and versatility of digital computer technology developed ''after'' 1945. Buckland summarizes the very advanced pre-World War II development of microfilm-based rapid retrieval devices, specifically the microfilm-based workstation proposed by [[Leonard Townsend]] in 1938 and the microfilm and [[photoelectronic]] based selector, patented by [[Emanuel Goldberg]] during 1931. Buckland states: "The literature on documentation in the 1930s was as preoccupied with microfilm technology as it is now with computer technology and for the same reason, each being the most promising information retrieval technology of the time." Buckland notes that Bush directed creation of a photoelectronic microfilm 'rapid selector' at MIT during 1938-1940 using [[stroboscope]] technology pioneered by his colleague [[Harold Edgerton]]. Buckland suggests that Bush and his team may not have been aware of Goldberg's earlier work when they built their 1938-1940 prototype, but that [[IBM]] researchers and Bush's [[Eastman Kodak Research Laboratory]] sponsor certainly were. Buckland concludes: "We speculate that Bush did not independently originate the notion of an electronic microfilm selector, although that was possible. It is not surprising that the same invention sometimes occurs independently and more or less simultaneously when a need is present and the technology becomes ripe." == Legacy == This idea directly influenced computer pioneers [[J.C.R. Licklider]] (see his 1960 paper ''[[Man-Computer Symbiosis]]''), [[Douglas Engelbart]] (see his 1962 report ''[[Augmenting Human Intellect]]''), and also led to [[Ted Nelson]]'s groundbreaking work in concepts of [[hypermedia]] and [[hypertext]].<ref>[[Engines of Creation]] (1986) by [[K. Eric Drexler]].</ref> ''As We May Think'' also predicted many kinds of technology invented after its publication in addition to [[hypertext]] such as [[personal computers]], the [[Internet]], the [[World Wide Web]], [[speech recognition]], and [[online encyclopedia]]s such as [[Wikipedia]]: "Wholly new forms of encyclopedias will appear, ready-made with a mesh of associative trails running through them, ready to be dropped into the memex and there amplified." Bush's influence is still evident in research laboratories of today in both [[Gordon Bell]]'s project, [[MyLifeBits]] (from [[Microsoft Research]]) as well as [[Richard Furuta]] and [[Frank Shipman]]'s [http://www.csdl.tamu.edu/walden/ Walden's Paths] project (from [[Texas A&M University]]). Both projects have implemented [[Path (graph theory)|path]]-based systems reminiscent of the Memex. A Memex is featured in [[Charles Stross]]' cross-genre novel ''[[The Atrocity Archives]]'' and sequels. == See also == {{colbegin}} ;People * [[Andries van Dam]] * [[Douglas Engelbart]] * [[J.C.R. Licklider]] * [[Paul Otlet]], considered one of the fathers of [[information science]] * [[Ted Nelson]] * [[Tim Berners-Lee]], creator of the [[World Wide Web]] * [[Vannevar Bush]] ;Ideas * [[As We May Think]] * [[Intelligence amplification]] * [[Mundaneum]], the organization created in 1910 that aimed to classify all knowledge * [[Office of the future]] * [[Victorian Internet]], term to describe 19th century telecommunications technologies * [[World Wide Web]] {{colend}} == References == {{Reflist}} == External links == * [http://www.theatlantic.com/doc/194507/bush "As We May Think"] - The original article from the ''[[Atlantic Monthly]]'' archives * [http://graphics.cs.brown.edu/html/info/vannevar_bush.html "As We May Think - A Celebration of Vannevar Bush's 1945 Vision"], at Brown University * [http://www.livinginternet.com/i/ii_bush.htm Vannevar Bush and Memex] &ndash; Living Internet * [http://www.youtube.com/watch?v=c539cK58ees YouTube video demonstrating the ideas behind the Memex system] [[Category:Classification systems]] [[Category:History of computing]] [[Category:History of human-computer interaction]] [[Category:Multimodal interaction]] [[Category:Human–computer interaction]] [[Category:History of the Internet]] [[Category:Hypertext]] [[Category:Science studies]] [[Category:Scientific revolution]] <!-- interwiki links to this article in other languages, below --> [[ca:Memex]] [[da:Memex]] [[de:Memex]] [[es:Memex]] [[fr:Memex]] [[ko:메멕스]] [[id:Memex]] [[it:Memex]] [[la:Memex]] [[hu:Memex]] [[nl:Memex]] [[ja:Memex]] [[no:Memex]] [[pl:Memex]] [[pt:Memex]] [[fi:Memex]]</text> </page> <page> <id>24015</id> <title>Memory ProteXion</title> <text>{{Orphan|date=February 2009}} {{Context|date=October 2009}} '''Memory ProteXion''', found in [[IBM]] xSeries servers, is a form of "[[bit steering|redundant bit steering]]". This technology uses redundant bits in a [[data packet]] to recover from a DIMM failure. Memory ProteXion is different from normal ECC [[Error detection and correction|error correction]] in that it uses only 6 bits for ECC, leaving 2 bits behind. These 2 bits can be used to re-route data from failed memory, much like [[hot spare]] on a raid. The ECC is used to reconstruct the data, and the extra bits to store it. Memory ProteXion, also known as “redundant bit steering”, is the technology behind using redundant bits in a data packet to provide backup in the event of a DIMM failure. One failure does not cause a [[predictive failure analysis]] to be issued on the DIMM, but 2 failures and moves will issue a PFA to inform the system administrator that a replacement is needed. ==See also== * [[Chipkill]] ==External links== * [http://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0259.html?Open Memory ProteXion] {{One source|date=January 2008}} [[Category:Computer memory]] [[Category:Error detection and correction]] {{computer-stub}}</text> </page> <page> <id>24028</id> <title>Memory dependence prediction</title> <text>{{Unreferenced|date=December 2009}} '''Memory dependence prediction''' is a technique, employed by high-performance [[out-of-order execution]] [[microprocessor]]s that execute [[primary storage|memory]] access operations (loads and stores) out of program order, to predict true dependences between loads and stores at [[instruction (computer science)|instruction]] [[execution (computers)|execution]] time. With the predicted dependence information, the processor can then decide to [[speculative execution|speculatively execute]] certain loads and stores out of order, while preventing other loads and stores from executing out-of-order (keeping them in-order). Later in the [[pipeline (computing)|pipeline]], [[memory disambiguation]] techniques are used to determine if the loads and stores were correctly executed and, if not, to recover. By using the memory dependence predictor to keep most dependent loads and stores in order, the processor gains the benefits of aggressive out-of-order load/store execution but avoids many of the memory dependence violations that occur when loads and stores were incorrectly executed. This increases performance because it reduces the number of pipeline flushes that are required to recover from these memory dependence violations. See the [[memory disambiguation]] article for more information on memory dependences, memory dependence violations, and recovery. In general memory dependence prediction predicts whether two memory operations are dependent, that is, if they interact by accessing the same memory location. Besides using store to load (RAW or true) memory dependence prediction for the out-of-order scheduling of 