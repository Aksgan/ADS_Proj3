of abstraction, and it allows the use of a separate local scheduling component. == See also == * [[Automated planning and scheduling]] * [[Multi-agent planning]] * [[Multi-agent systems]] * [[Software agent]] * [[Distributed artificial intelligence]] * [[Cooperative distributed problem solving]] * [[STRIPS]] * [[Hierarchical task network]] == References == <references/> [[Category:Multi-agent systems]] [[Category:Automated planning and scheduling]]</text> </page> <page> <id>36871</id> <title>Task computing</title> <text>{{Wikify|date=April 2010}} {{Orphan|date=November 2006}} '''Task computing''' is a computation to fill the gap between tasks (what user wants to be done), and services (functionalities that are available to the user). Task computing seeks to redefine how users interact with and use computing environments. It is built on [[pervasive computing]]. == Task Computing Framework (TCF) and Task Computing Environment (TCE) == A Task Computing Framework (TCF) is a framework that supports Task Computing, by providing support for: * The workflows of Task Computing, i.e., at a minimum, Discovery, followed by Composition and Execution * Semantic description of tasks and services * Specification, Execution and Re-Usability of tasks by end-users * Manipulation including creation and disposal of services by the end-users This definition of a Task Computing Framework does not make reference to computational components. Here an embodiment of a Task Computing Framework will be referred to as a Task Computing Environment (TCE). A TCE is a computational system that includes, at a minimum, the following components: * One or more Task Computing Clients (TCCs), * One or more Semantically Described Services (SDSs), * One or more Semantic Service Discovery Mechanisms (SSDMs), and * Optionally one or more Service Controls (SCs) == Applications == Using Task Execution EditoR (STEER) <ref>[http://www.flacp.fujitsulabs.com/~rmasuoka/papers/Task-Computing-ISWC2003-202-color-final.pdf Microsoft Word - Task-Computing-ISCW2003-202-final.doc<!-- Bot generated title -->]</ref>, embodiments of multiple Semantically Described Services and Service Controls the following applications are possible * Exchanging Business Cards * Showing and Sharing the Presentation * Scheduling a Future Presentation * Checking and Printing Directions to the Airport ==Notes== <references/> == References == * {{Cite journal | ref=harv | first = Seng W. | last = Loke | authorlink = | coauthors = | title = Building Taskable Spaces over Ubiquitous Services | journal = IEEE Pervasive Computing | volume = 8 | number = 4 | pages = 72â€“78 | year = 2009 }} == Related work == *[http://csdl2.computer.org/persagen/DLAbsToc.jsp?resourcePath=/dl/mags/ex/&toc=comp/mags/ex/2003/05/x5toc.xml&DOI=10.1109/MIS.2003.1234773 White Hole] *[http://doi.ieeecomputersociety.org/10.1109/SAINT.2005.2 PIPE (Pervasive Instance Provision Environment)] [[Category:Software architecture]]</text> </page> <page> <id>36874</id> <title>TassDB</title> <text>{{Orphan|date=January 2011}} {{infobox biodatabase |title = TassDB |logo =[[File:Database.png]] |description = alternative tandem [[Splice site|splice sites]]. |scope = |organism = |center = |laboratory = |author = |pmid = Hiller & al. (2007)<ref name="pmid17142241"/> |released = 2006 |standard = |format = |url = http://helios.informatik.uni-freiburg.de/TassDB/ |download = |webservice = |sql = |sparql = |webapp = |standalone = |license = |versioning = |frequency = |curation = |bookmark = |version= }}'''TassDB''' ('''TAndem Splice Site DataBase''') is a database of tandem [[Splice site|splice sites]] of eight species<ref name="pmid17142241">{{cite journal | quotes = yes|last=Hiller|first=Michael|authorlink=|coauthors=Nikolajewa Swetlana, Huse Klaus, Szafranski Karol, Rosenstiel Philip, Schuster Stefan, Backofen Rolf, Platzer Matthias|year=2007|month=Jan|title=TassDB: a database of alternative tandem splice sites|journal = Nucleic Acids Res.|volume=35|issue=Database issue|pages=D188-92|publisher= |location = England| issn = | pmid = 17142241|doi = 10.1093/nar/gkl762| bibcode = | oclc =| id = | url = | pmc = PMC1669710 |language = eng| format = | accessdate = | laysummary = | laysource = | laydate = | quote = }}</ref> ==References== <references/> ==See also== * [[Alternative splicing]] ==External links== * http://helios.informatik.uni-freiburg.de/TassDB/. {{Biodatabase-stub}} [[Category:Biological databases]] [[Category:Gene expression]] [[Category:Spliceosome]] [[Category:RNA splicing]]</text> </page> <page> <id>36879</id> <title>Tax-benefit model</title> <text>{{Unreferenced|date=January 2007}} {{Orphan|date=July 2008}} A '''tax-benefit model''' is a form of static [[microsimulation]] model. It is usually based on a representative or administrative [[data set]] and certain policy rules. These models are used to ''cost'' certain policy [[reform]]s and to determine the winners and losers of [[reform]]. One example is [[Euromod]] which models taxes and benefits for fifteen [[EU]] states. {{DEFAULTSORT:Tax-Benefit Model}} [[Category:Economics models]] {{Econ-policy-stub}}</text> </page> <page> <id>36898</id> <title>Tcptrace</title> <text>{{nn|date=September 2010}} '''tcptrace''' is a tool written by [[Shawn Ostermann]] at [[Ohio University]], for analysis of [[Transmission Control Protocol|TCP]] [[dump file]]s. It can take as input the files produced by several popular [[Packet sniffer|packet-capture program]]s, including [[tcpdump]]/[[WinDump]]/[[Wireshark]], [[snoop (software)|snoop]], [http://www.wildpackets.com/products/etherpeek/ EtherPeek], and [[Agilent NetMetrix]]. tcptrace can produce several different types of output containing information on each [[Telecommunication circuit|connection]] seen, such as elapsed time, [[byte]]s and segments sent and received, retransmissions, [[Round-trip delay time|round trip times]], [[window advertisement]]s, [[throughput]], and more. It can also produce a number of [[Computer graphics|graphs]] for further analysis. As of version five, minimal [[User Datagram Protocol|UDP]] processing has been implemented in addition to the TCP capabilities. ==References== *[http://www.tcptrace.org/ tcptrace website] [[Category:Network analyzers]] [[Category:Open source network management software]] {{unix-stub}}</text> </page> <page> <id>36900</id> <title>Tdbengine</title> <text>'''Tdbengine''' is a [[relational database management system]] with an integrated programming language. It is designed to handle [[database]]s on the web. It connects to the webserver using the standard [[Common Gateway Interface|cgi]] interface. The tdbengine is very small (about 400 KB), extremely quick and easy to administer. Currently versions for [[Linux]] (x86), [[FreeBSD]] (x86) and [[Microsoft Windows|Windows]] NT/2000 are available. The tdbengine is distributed as [[freeware]]. Apart from many [[GNU]]-projects the tdbengine is written in [[Pascal programming language|Pascal]]. It can be compiled with FreePascal without any additional libraries or packages. The data creation, modification and selection is done without any [[SQL]]. The integrated scripting language [[EASY (computer language)|EASY]] has a set of about 300 commands and directives which provide full and quick access. ==External links== * [http://www.tdbengine.org www.tdbengine.org] * [http://tdbengine.wikihost.org/ tdbengine Wiki] {{database-software-stub}} [[Category:Open source database management systems]] [[de:Tdbengine]]</text> </page> <page> <id>36908</id> <title>Teaching Writing in the United States</title> <text>'''Teaching Writing in the United States''' has progressed through several approaches during the history of education in the [[United States]]. == Background == At its most basic level, writing is how we keep track of the thoughts that are important to us. From the ancient [[Egyptians]], to the monks of the Middle Ages, to [[Thomas Jefferson]]'s [[Declaration of Independence]], writing has been used to capture thought, from the mundane to the profound.<ref>The Vermont Writing Collaborative: ''Writing for Understanding'', pp 4-5. Authentic Education, 2008.</ref> In 