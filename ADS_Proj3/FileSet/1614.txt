delimiter, or in the same column. As a general principle, [[GNU Emacs]] can be considered a reliable authority on the GNU code formatting style. As such, it is desirable that any piece of code that looks ugly when indented by Emacs is changed into a more Emacs-friendly formâ€”for example, by inserting additional parentheses. ==Comments== The standards greatly emphasise the importance of English-language comments: <blockquote>Please write the comments in a GNU program in English, because English is the one language that nearly all programmers in all countries can read. If you do not write English well, please write comments in English as well as you can, then ask other people to help rewrite them. If you can't write comments in English, please find someone to work with you and translate your comments into English.</blockquote> Comments should consist of complete, capitalized sentences, each followed by two spaces (so that Emacs can tell where one sentence ends and the next begins). For long or complex preprocessor conditionals, every <code>#else</code> and <code>#endif</code> should have a comment explaining the condition for the code below (for <code>#else</code>) or above (for <code>#endif</code>). ==Files== The standards require that all programs be able to operate when <code>/usr</code> and <code>/etc</code> are [[mount (computing)|mounted]] read-only. Therefore, files that are modified for internal purposes (log files, lock files, temporary files, etc.) should not be stored in either <code>/usr</code> or <code>/etc</code>. An exception is made for programs whose job it is to update system configuration files in <code>/etc</code>. Another exception is made for storing files in a directory when the user has explicitly asked to modify a file in the same directory. ==Portability== The GNU Coding Standards define the issue of portability in this way: portability in the [[Unix]] world means 'between Unixes'; in a GNU program this kind of portability is desirable, but not vitally important. According to the standard, portability problems are very limited as GNU programs are designed to be compiled with one compiler, the [[GNU Compiler Collection|GNU C Compiler]], and only run on one system, which is the GNU system. There is one form of portability problem though, and that is the fact that the standard makes it clear that a program should run on different [[Central processing unit|CPU]] types. The standard says that GNU doesn't and won't support 16-bit systems, but handling all the different 32- and 64-bit systems is absolutely necessary. ==See also== {{Portal|Free software}} *[[Gnits Standards]] ==External links== * [http://www.gnu.org/prep/standards The GNU Coding Standards] on the GNU website * [http://www.ronancrowley.com/Eclipse_GNU_Style.xml Eclipse Code Style Formatter for GNU Coding Standards] {{DEFAULTSORT:Gnu Coding Standards}} <!-- Categories --> [[Category:Free software culture and documents]] [[Category:GNU Project|Coding Standards]] [[Category:Source code]] [[Category:Articles with example C code]] [[pl:GNU Coding Standards]]</text> </page> <page> <id>14587</id> <title>GNU Compiler Collection</title> <text>{{Redirect|Cc1|other uses of CC1 or CC-1|CC1 (disambiguation)}} {{Infobox Software | name = GNU Compiler Collection | logo = [[File:Gccegg.svg|100px]] | developer = [[GNU Project]] | released = {{start date|1987|05|23}}<ref name="release-history">{{cite web | url = http://www.gnu.org/software/gcc/releases.html | title = GCC Releases | accessdate = 2006-12-27 | publisher = GNU Project }}</ref> | latest release version = 4.5.2 <!-- sync this with [[GNU Compiler for Java]] --> | latest release date = {{release date|2010|12|16}} <!-- sync this with [[GNU Compiler for Java]] --> | programming language = [[C (programming language)|C]], [[C++]] | operating system = [[Cross-platform]] | platform = [[GNU]] | genre = [[Compiler]] | license = [[GNU General Public License]] (version 3 or later) | website = http://gcc.gnu.org }} The '''GNU Compiler Collection''' (usually shortened to '''GCC''') is a [[compiler]] system produced by the [[GNU Project]] supporting various [[programming language]]s. GCC is a key component of the [[GNU toolchain]]. As well as being the official compiler of the unfinished [[GNU]] operating system, GCC has been adopted as the standard compiler by most other modern [[Unix-like]] computer [[operating system]]s, including [[GNU]]/[[Linux]], the [[Berkeley Software Distribution|BSD]] family and [[Mac OS X]].{{Citation needed|date=August 2010}} GCC has been [[porting|ported]] to a wide variety of [[processor architecture]]s, and is widely deployed as a tool in commercial, [[proprietary software|proprietary]] and [[closed source software]] development environments. GCC is also available for most embedded platforms, for example [[Symbian]],<ref>{{cite web|url=http://www.inf.u-szeged.hu/symbian-gcc/|title=Symbian GCC Improvement Project|accessdate=2007-11-08}}</ref> [[AMCC]] and [[Freescale]] [[Power Architecture]]-based chips.<ref>{{cite web|url=http://www.freescale.com/webapp/sps/site/overview.jsp?code=CW_BSP&fsrch=1|title=Linux Board Support Packages|accessdate=2008-08-07}}</ref> The compiler can target a wide variety of platforms, including [[videogame consoles]] such as the [[PlayStation 2]]<ref>{{cite web |url=http://ps2stuff.playstation2-linux.com/gcc_build.html |title=setting up gcc as a cross-compiler |work=ps2stuff |date=2002-06-08 |accessdate=2008-12-12}} {{Dead link|date=September 2010|bot=H3llBot}}</ref> and [[Dreamcast]].<ref>{{cite web |url=http://www.ngine.de/gccguide.html |title=sh4 g++ guide |archiveurl=http://web.archive.org/web/20021220025554/http://www.ngine.de/gccguide.html |archivedate=2002-12-20 |accessdate=2008-12-12 |quote=This guide is intended for people who want to compile C++ code for their Dreamcast systems }}</ref> Several companies<ref>{{cite web|url=http://www.fsf.org/resources/service|title=FSF Service Directory}}</ref> make a business out of supplying and supporting GCC ports to various platforms, and chip manufacturers today consider a GCC port almost essential to the success of an architecture. Originally named the '''GNU C Compiler''', because it only handled the [[C (programming language)|C programming language]], GCC 1.0 was released in 1987, and the compiler was extended to compile [[C++]] in December of that year.<ref name="release-history"/> [[Compiler#Front_end|Front ends]] were later developed for [[Fortran]], [[Pascal (programming language)|Pascal]], [[Objective-C]], [[Java (programming language)|Java]], and [[Ada (programming language)|Ada]], among others.<ref>{{cite web|url=http://gcc.gnu.org/onlinedocs/gcc-4.4.0/gcc/G_002b_002b-and-GCC.html#G_002b_002b-and-GCC|title=Programming Languages Supported by GCC|accessdate=2009-05-03|publisher=GNU Project}}</ref> The [[Free Software Foundation]] (FSF) distributes GCC under the [[GNU General Public License]] (GNU GPL). GCC has played an important role in the growth of [[free software]], as both a tool and an example. ==History== [[Richard Stallman]] started GCC in 1985. He extended an existing compiler to compile C. The compiler originally compiled [[Pastel (programming language)|Pastel]], an extended, nonportable dialect of [[Pascal (programming language)|Pascal]], and was written in Pastel. It was rewritten in C by [[Leonard H. Tower Jr.|Len Tower]] and Stallman,<ref>{{cite journal | last = Stallman | first = Richard M. | title = GNU Status| journal = GNU's Bulletin | volume = 1 | issue = 1 | publisher = Free Software Foundation |date=February 1986 | url = http://web.cecs.pdx.edu/~trent/gnu/bull/01/bull01.txt | accessdate = 2006-09-26 }}</ref> and released in 1987<ref>Tower, Leonard (1987) "[http://groups.google.com/group/comp.lang.misc/msg/32eda22392c20f98 GNU C compiler beta test release,]" ''comp.lang.misc'' USENET newsgroup; see also http://gcc.gnu.org/releases.html#timeline</ref> as the compiler for the GNU 