[[NetCrunch]] ==References== {{reflist}} ==External links== * [http://www.splunk.com/ Splunk Corporate Site ] * [http://www.splunk.com/base Splunk Knowledgebase ] * [http://www.innovato.com/splunk Splunk in an Hour] [[Category:System administration]] [[Category:Data security]] [[Category:Computer security companies]] [[Category:Information technology companies]] [[Category:Privately held companies of the United States]] [[de:Splunk]]</text> </page> <page> <id>35423</id> <title>Sprinter (computer)</title> <text>The '''Sprinter''' (also called ZX-Sprinter) is a [[microcomputer]] made by Russian [[Peters Plus, Ltd.]]; it is the last model of [[ZX Spectrum]] being produced in a factory. It's built using what the company calls a "Flex architecture". This uses an [[Altera]] [[Programmable logic device | PLD]] as part of the core logic, allowing the machine's hardware to be reconfigured on the fly for several ZX-Spectrum models' compatibility or its own enhanced native mode (hardly used). This is comparable to the design of [[Jeri Ellsworth]]'s [[C-One]] reprogrammable computer. The Sprinter in one of its modes runs the Estex [[operating system]] but mainly it works in many modes of the [[Sinclair Research|Sinclair]] [[ZX Spectrum]] [[home computer]] of the 1980s (with TR-DOS Spectrum system on-board). == See also == [[Home computer remakes]] ==External links== *[http://sprinter.winglion.ru/ Ivan Mak's website] {{ru icon}} *[http://www.nedopc.org/nedopc/sprinter/index.shtml Sprinter unofficial site] {{Sinclair computers and clones}} [[Category:Home computer remakes]] [[Category:ZX Spectrum clones]] [[Category:Microcomputers]] [[Category:Retrocomputing]] {{microcompu-stub}} [[cs:Sprinter (počítač)]] [[es:Sprinter (computadora)]] [[sv:Sprinter (dator)]]</text> </page> <page> <id>35430</id> <title>Spry framework</title> <text>The '''Spry Framework''' is an [[open source]] [[Ajax framework]] developed by [[Adobe Systems]] which is used in the construction of [[Rich Internet Applications]].<ref>{{cite news |title=Adobe Adds Spry Framework for AJAX |author=Darryl K. Taft |publisher=''[[eWeek]]'' |date=2006-05-11 |url=http://www.eweek.com/c/a/Application-Development/Adobe-Adds-Spry-Framework-for-AJAX/ |accessdate=2008-04-05}}</ref> Unlike other pure [[JavaScript]] frameworks such as the [[Dojo Toolkit]] and [[Prototype Javascript Framework| Prototype]], Spry is geared towards [[web designers]], not [[web developer]]s. ==Components== The Spry framework broadly consists of * Spry Effects - animation effects like blind, fade, grow, highlight, shake, slide and squish. * Spry Data - data binding to HTML markup using minimal code or proprietary markup. Spry uses [[Google|Google's]] [[Xpath]] JavaScript library to convert [[XML]] into JavaScript objects. It can handle [[XML]], [[HTML]] and [[JSON]] data. * Spry [[Widget (computing)|Widgets]] - framework for development of widgets, and included widgets such as the [[Accordion (GUI)|accordion]]. CRC == Versions == Spry is currently in beta. The current version is 1.6.1. Adobe has not specified a target release date for the Spry framework, nor has it posted any sort of roadmap. Spry prerelease 1.5 was released on May 17, 2007 == Usage == The Spry framework is directly integrated into [[Adobe Systems]]'s Dreamweaver CS3.<ref>{{cite news |title=Dreamweaver CS3 integrates Spry framework for Ajax |author=Jim Dalrymple |publisher=''[[Macworld]]'' |date=2007-03-27 |url=http://www.macworld.com/article/56994/2007/03/cs3dweaver.html |accessdate=2008-04-05}}</ref><ref>[http://www.adobe.com/products/dreamweaver/?xNav=MCDW Dreamweaver product page - reasons to upgrade]</ref> There is further speculation as to how Adobe will utilize the Spry codebase. Possible uses are: * Ajax development within an [[Integrated Development Environment|IDE]] such as [[Eclipse (software)]]. * Ajax generation from server code using [[ColdFusion]]. [[Ruby on Rails]] offers similar functionality. * Ajax application generation from [[Adobe Flex]] code. [[OpenLaszlo]] will offer similar functionality with their "Legals" release (version 4). == Competitors == Spry competes with a number of other Ajax frameworks and toolkits: * [[Atlas Framework]] from [[Microsoft]] * [[Ext (javascript library)|Ext]] * [[Dojo Toolkit]] * [[Echo (framework)|Echo]] * [[Google Web Toolkit]] * [[jQuery]] * [[Mootools]] * [[Prototype Javascript Framework|Prototype]] and [[Script.aculo.us]] * [[Yahoo! UI Library]] ==See also== *[[Ajax framework| Ajax Framework]] ==References== {{reflist}} ==External links== *[http://labs.adobe.com/technologies/spry/ Official website]. {{ECMAScript}} {{Application frameworks}} [[Category:JavaScript libraries]] [[ca:Spry framework]] [[nl:Spry framework]] [[ru:Spry framework]]</text> </page> <page> <id>35432</id> <title>Spurious-free dynamic range</title> <text>'''Spurious-Free Dynamic Range''' ('''SFDR''') is the strength ratio of the fundamental signal to the strongest spurious signal in the output. It is also defined as a measure used to specify [[Analog-to-digital converter|analog-to-digital]] and [[digital-to-analog converter]]s (ADCs and DACs, respectively) and radio receivers. SFDR is defined as the ratio of the [[Root Mean Square|RMS]] value of the [[Carrier wave|carrier]] frequency (maximum signal component) at the input of the ADC or DAC to the RMS value of the next largest [[Electronic noise|noise]] or [[harmonic distortion]] component (which is referred to as a “'''spurious'''” or a “'''spur'''”) at its output. SFDR is usually measured in [[dBc]] (i.e. with respect to the carrier frequency amplitude) or in [[dBFS]] (i.e. with respect to the ADC's [[Full scale|full-scale range]]). Depending on the test condition, SFDR is observed within a pre-defined frequency window or from [[Direct current|DC]] up to [[Nyquist frequency]] of the converter (ADC or DAC). In case of a radio receiver application, the definition is slightly different. The reference is the [[minimum detectable signal]] level at the input of a receiver, which can be calculated through a knowledge of the [[noise figure]] and the input signal [[Bandwidth (signal processing)|bandwidth]] of the receiver or the system. The difference between this value and the input level which will produce distortion products equal to the minimum detectable signal referred to the input of the system is the SFDR of the system. == See also == * [[Analog-to-digital converter]] * [[Digital-to-analog converter]] * [[Total harmonic distortion|THD]] (Total Harmonic Distortion) * [[SINAD]] (SIgnal-to-Noise-And-Distortion) [[Category:Digital signal processing]] {{electronics-stub}} [[de:Spurious Free Dynamic Range]] [[it:Spurious-Free Dynamic Range]] [[ru:SFDR]]</text> </page> <page> <id>35433</id> <title>Spurious trip level</title> <text>'''Spurious Trip Level''' (STL) is defined as a discrete level for specifying the spurious trip requirements of safety functions to be allocated to safety systems. An STL of 1 means that this safety function has the highest level of spurious trips. The higher the STL level the lower the number of spurious trips caused by the safety system. There is no limit the number of spurious trip levels.. Safety functions and systems are installed to protect people, the environment and for asset protection. A safety function should only activate when a dangerous situation occurs. A safety function that activates without the presence of a dangerous situation (e.g., due to an internal failure) causes economic loss. The spurious trip level concept represents the probability that safety function causes a spurious (unscheduled) trip. The STL is a metric that is used to specify the performance level of a safety function in terms of the spurious trips it potentially causes. Typical safety systems that benefit from an STL level are 