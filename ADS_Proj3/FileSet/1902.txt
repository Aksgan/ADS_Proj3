[[plug-in (computing)|plug-ins]]. Many web browser exploits that use heap spraying consist only of a heap spray that is [[Cut, copy, and paste|copy-pasted]] from a previous exploit combined with a small piece of script or [[HTML]] that triggers the vulnerability. == Implementation == === JavaScript === Heap sprays for web browsers are commonly implemented in [[JavaScript]] and spray the heap by creating large [[Unicode]] [[String (computer science)|strings]] with the same character repeated many times by starting with a string of one character and [[Concatenation|concatenating]] it with itself over and over. This way, the length of the string can [[exponential growth|grow exponentially]] up to the maximum length allowed by the [[scripting engine]]. When the desired string length is reached [[shellcode]] is put at the end of the string. The heap spraying code makes copies of the long string with shellcode and stores these in an array, up to the point where enough memory has been sprayed to cover the area that the exploit targets. Occasionally, [[VBScript]] is used in Internet Explorer to create strings by using the ''String'' function. ==== ActionScript ==== In July 2009, exploits were found to be using [[ActionScript]] to spray the heap in [[Adobe Flash]].<ref>[http://roeehay.blogspot.com/2009/08/exploitation-of-cve-2009-1869.html Roee Hay: Exploitation of CVE-2009-1869]</ref><ref>[http://blog.fireeye.com/research/2009/07/actionscript_heap_spray.html FireEye Malware Intelligence Lab: Heap Spraying with Actionscript]</ref> === Images === Though it has been proven that heap-spraying can be done through other means, for instance by loading image files into the process,<ref>[http://www.blackhat.com/html/bh-usa-06/bh-usa-06-speakers.html#Sutton Michael Sutton & Greg MacManus: Punk Ode—Hiding Shellcode in Plain Sight]</ref> this has not seen widespread use (as of August 2008). == Detection and prevention == * The Nozzle project from Microsoft Research aims to detect and prevent heap spraying.<ref>[http://research.microsoft.com/en-us/projects/nozzle/ Nozzle project from Microsoft Research aims to detect and prevent heap spraying]</ref> * BuBBle is another countermeasure which could be considered to detect and prevent an attack triggered after spraying the heap <ref>[https://lirias.kuleuven.be/bitstream/123456789/265421/1/fulltext.pdf BuBBle: A Javascript Engine Level Countermeasure against Heap-Spraying Attacks]</ref> == See also == * [[NOP slide]], a technique which is complementary to heap spraying * [[Heap feng shui]], a technique for manipulating heap layout * [[JIT spraying]] == References == {{reflist}} == External links == * [http://skypher.com/SkyLined/heap_spray/small_heap_spray_generator.html Small heap spray generator] - a webpage that can be used to generate JavaScript heap sprays. {{DEFAULTSORT:Heap Spraying}} [[Category:Computer security exploits]]</text> </page> <page> <id>16449</id> <title>Heartbeat private network</title> <text>{{Orphan|date=February 2009}} {{Unreferenced|date=June 2008}} In [[computer clusters]], '''heartbeat network''' is a [[private network]] which is shared only by the cluster nodes, and is not accessible from outside the cluster. It is used by cluster nodes in order to monitor each node's status and communicate with each other. ==See also== * [[Computer cluster]] * [[High-availability cluster]] [[Category:Cluster computing]] {{computer-stub}} {{hardware-stub}}</text> </page> <page> <id>16464</id> <title>Heckman correction</title> <text>The '''Heckman correction''' (the two-stage method, Heckman's [[lambda]] or the Heckit method<ref>Heckit: 'Heck-' from Heckman and '-it' as in [[probit]], [[Tobit model|tobit]], and [[logit]].</ref>) is any of a number of related statistical methods developed by [[James Heckman]] in 1976 through 1979 which allow the researcher to correct for [[selection bias]].<ref>{{cite journal | doi = 10.2307/1912352 | last1 = Heckman | first1 = J. | year = 1979 | title = Sample selection bias as a specification error | url = http://jstor.org/stable/1912352| journal = Econometrica | volume = 47 | issue = 1| pages = 153–61 }}</ref> Selection bias problems are endemic to applied [[econometrics|econometric]] problems, which make Heckman’s original technique, and subsequent refinements by both himself and others, indispensable to applied [[econometrician]]s. In 2000 Heckman received the [[Nobel Memorial Prize in Economic Sciences|Economics Nobel Prize]] for this achievement while working at the [[University of Chicago]]. == The Method == Statistical analyses based on those non-randomly selected samples can lead to erroneous conclusions and poor policy. The Heckman correction, a two-step statistical approach, offers a means of correcting for non-randomly selected samples. Heckman discussed bias from using nonrandom selected samples to estimate behavioral relationships as a specification error. He suggests a two-stage estimation method to correct the bias. The correction is easy to implement and has a firm basis in statistical theory. Heckman’s correction involves a [[normal distribution|normality]] assumption, provides a test for sample selection bias and formula for bias corrected model. Suppose that a researcher wants to estimate the determinants of wage offers, but has access to wage observations for only those who work. Since people who work are selected non-randomly from the population, estimating the determinants of wages from the subpopulation who work may introduce bias. The Heckman correction takes place in two stages. First, the researcher formulates a model, based on [[economic theory]], for the probability of working. The canonical specification for this relationship is a [[probit]] regression of the form : <math> \operatorname{Prob}( D = 1 | Z ) = \Phi(Z\gamma),\, </math> where ''D'' indicates employment (''D'' = 1 if the respondent is employed and ''D'' = 0 otherwise), ''Z'' is a vector of explanatory variables, <math>\gamma</math> is a vector of unknown parameters, and Φ is the [[cumulative distribution function]] of the standard [[normal distribution]]. Estimation of the model yields results that can be used to predict this probability for each individual. In the second stage, the researcher corrects for self-selection by incorporating a transformation of these predicted individual probabilities as an additional explanatory variable. The wage equation may be specified, : <math> w^* = X\beta + u\, </math> where <math>w^*</math> denotes an underlying wage offer, which is not observed if the respondent does not work. The conditional expectation of wages given the person works is then : <math> E [ w | X, D=1 ] = X\beta + E [ u | X, D=1 ].\, </math> Under the assumption that the [[errors and residuals in statistics|error terms]] are [[multivariate normal distribution|jointly normal]], we have : <math> E [ w | X, D=1 ] = X\beta + \rho\sigma_u \lambda(Z\gamma),\, </math> where ''ρ'' is the correlation between unobserved determinants of propensity to work <math>\varepsilon</math> and unobserved determinants of wage offers ''u'', ''σ''<sub> ''u''</sub> is the standard deviation of <math> u </math>, and <math>\lambda</math> is the [[inverse Mills ratio]] evaluated at <math> Z\gamma 