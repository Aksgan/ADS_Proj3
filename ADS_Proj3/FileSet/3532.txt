.c4d associated with [[Cinema 4D]] * .[[dxf]], .dwg, .dwf, associated with [[AutoCAD]] * [[.md2]], [[.md3]], associated with the [[Quake (series)|Quake]] series of games * .fbx (Alias) * .rwx (Renderware) * .wrl (VRML 2.0) * .blend, which is associated with [[Blender (software)|Blender]] * [[JT (visualization format)|.jt]] ([[UGS Corp.|UGS]]) * [[STL (file format)|.stl]] used in [[rapid prototyping]] * [[PLY (file format)|.ply]] used to store data from [[3D scanner]]s * .dae ([[COLLADA]]) == See also == * [[Finite element method]] * [[Polygon mesh]] * [[Vector graphics]] * [[Geometry processing]] == References == # OpenGL SuperBible (3rd ed.), by Richard S Wright and Benjamin Lipchak ISBN 0-672-32601-9 # OpenGL Programming Guide: The Official Guide to Learning OpenGL, Version 1.4, Fourth Edition by OpenGL Architecture Review Board ISBN 0-321-17348-1 # OpenGL(R) Reference Manual : The Official Reference Document to OpenGL, Version 1.4 (4th Edition) by OpenGL Architecture Review Board ISBN 0-321-17383-X # Blender documentation: http://www.blender.org/cms/Documentation.628.0.html # Maya documentation: packaged with Alias Maya, http://www.alias.com/eng/index.shtml {{DEFAULTSORT:Polygonal Modeling}} [[Category:3D computer graphics]] [[bs:Poligon rendering]] [[ru:Полигональное моделирование]] [[zh:多边形造型]]</text> </page> <page> <id>29559</id> <title>Polygonizer</title> <text>{{Unreferenced|date=December 2009}} {{Orphan|date=November 2006}} A '''Polygonizer''' is a tool, used in [[user interface]]s, for creating or editing [[polygon]]s by selecting or manipulating other polygons. For example, by selecting two polygons that touch (topologically) the polygonizer can create a new polygon that is the [[union (set theory)|union]] of the two input polygons. "Polygonizer" may also refer to the [[Namco System 21]] arcade board. [[Category:Geometric algorithms]]</text> </page> <page> <id>29564</id> <title>Polylogarithmic</title> <text>{{Distinguish|Polylogarithm}} A '''polylogarithmic''' function in ''n'' is a [[polynomial]] in the [[logarithm]] of ''n'', <math>a_k \log^k(n) + \cdots + a_1 \log(n) + a_0.</math> In [[computer science]], polylogarithmic functions occur as the [[Big O notation|order]] of [[space complexity|memory used]] by some [[algorithm]]s (e.g., "it has polylogarithmic order"). All polylogarithmic functions are : <math> P_l(x) = o(x^\epsilon)\,</math> for every exponent &epsilon; > 0 (for the meaning of this symbol, see [[small o notation]]), that is, a polylogarithmic function grows slower than any positive exponent. This observation is the basis for the [[soft O notation]]. == References == * {{cite web|url=http://www.itl.nist.gov/div897/sqg/dads/HTML/polylogarith.html|title=polylogarithmic|last=E. Black|first=Paul|date=2004-12-17|work=Dictionary of Algorithms and Data Structures|publisher=U.S. National Institute of Standards and Technology|accessdate=2010-01-10}} [[Category:Mathematical analysis]] [[Category:Polynomials]] [[Category:Analysis of algorithms]] {{math-stub}} [[eo:Polinomo de logaritmo]] [[fr:Polylogarithmique]]</text> </page> <page> <id>29574</id> <title>Polynomial-time algorithm for approximating the volume of convex bodies</title> <text>{{orphan|date=February 2010}} The paper <ref name=JACM91> {{cite journal |doi= 10.1145/102782.102783 |author= M.Dyer, A.Frieze and R.Kannan |title=A random polynomial-time algorithm for approximating the volume of convex bodies |journal= Journal of the ACM |volume = 38 |issue =1 |pages =1&ndash;17 |year= 1991 |url=http://portal.acm.org/citation.cfm?id=102783}} </ref> is a joint work by [[Martin Dyer]], [[Alan M. Frieze]] and [[Ravindran Kannan]]. The main result of the paper is a randomized algorithm for finding an <math>\epsilon</math> approximation to the volume of a convex body <math>K</math> in <math>n</math>-dimensional Euclidean space by assume the existence of a membership oracle. The algorithm takes time bounded by a polynomial in <math>n</math>, the dimension of <math>K</math> and <math>1/\epsilon</math>. The algorithm is a sophisticated usage of the so-called [[Markov chain Monte Carlo]] (MCMC) method. The basic scheme of the algorithm is a nearly uniform sampling from within <math>K</math> by placing a grid consisting <math>n</math>-dimensional cubes and doing a random walk over these cubes. By using the theory of [[Markov chain mixing time|rapidly mixing Markov chains]], they show that it takes a polynomial time for the random walk to settle down to being a nearly uniform distribution. ==References== <references/> [[Category:Geometry]] [[Category:Approximation algorithms]]</text> </page> <page> <id>29579</id> <title>Polynomial arithmetic</title> <text>'''Polynomial arithmetic''' includes basic mathematical operations such as [[addition]], [[subtraction]], and [[multiplication]]. These operations are defined naturally as if the [[Variable (mathematics)|variable]] <math>x</math> was an [[element (mathematics)|element]] of <math>S</math>. [[Division (mathematics)|Division]] is defined similarly, but requires that <math>S</math> be a [[Field (mathematics)|field]]. Examples of fields include [[rational numbers]], <math>Z_p</math> for <math>p</math> [[prime number|prime]], and [[real numbers]]. The set of all [[integers]] is not a field and does not support polynomial division. ==Addition and subtraction== Addition and subtraction are performed by adding or subtracting corresponding [[coefficients]]. If : <math>f(x) = \sum_{i=0}^n a_ix^i; g(x) = \sum_{i=0}^m b_ix^i</math> then addition is defined as : <math>f(x)+g(x)= \sum_{i=0}^m (a_i+b_i)x^i </math> where m > n ==Multiplication== Multiplication is performed much the same way as addition and subtraction, but instead by multiplying the corresponding coefficients. If <math>f(x) = \sum_{i=0}^n a_ix^i; g(x) = \sum_{i=0}^m b_ix^i</math> then multiplication is defined as <math>f(x)\times g(x)=\sum_{i=0}^{n+m} c_ix^i</math> where <math>c_k=a_0b_k+a_1b_{k-1}+\cdots+a_{k-1}b_1+a_kb_0</math>. Note that we treat <math>a_i</math> as zero for <math>i>m</math> and that the degree of the product is equal to the [[sum]] of the degrees to the two polynomials. ==References== * Stallings, William; : "Cryptography And Network Security: Principles and Practice", pages 121-126. Prentice Hall, 1999. {{Refimprove|date=March 2008}} {{Math-stub}} [[Category:Polynomials]] [[Category:Algebra]]</text> </page> <page> <id>29608</id> <title>Pop-up ad</title> <text>{{No footnotes|date=August 2010}} {{Refimprove|date=December 2008}} [[Image:Pop-up ads.jpg|thumb|325px|Dozens of pop-up ads covering a desktop.]] '''Pop-up ads''' or '''pop-ups''' are a form of online advertising on the [[World Wide Web]] intended to attract [[web traffic]] or capture email addresses. Pop-ups are generally new [[web browser]] windows to display [[advertising|advertisement]]s. The pop-up window containing an advertisement is usually generated by [[JavaScript]], but can be generated by other means as well. A variation on the pop-up window is the '''pop-under''' advertisement, which opens a new browser window hidden under the [[active window]]. Pop-unders do not interrupt the user immediately and are not seen until the covering window is closed, making it more difficult to determine which web site opened them. ==Pop-up blocking== [[Opera (web browser)|Opera]] was the first major [[Web browser|browser]] to incorporate tools to block pop-up ads; the [[Mozilla Application Suite|Mozilla]] browser later improved on this by blocking only pop-ups generated as the page loads. In the early 2000s, all major web browsers except [[Internet Explorer]] allowed the user to block unwanted pop-ups almost completely. In 2004, Microsoft released [[Windows XP]] SP2, which added pop-up blocking to Internet Explorer. All major advertisers support the Network Advertising Iniatiative which allows users to opt out of pop-under advertising. To utilize this site you may visit the NAI at [http://www.networkadvertising.org/managing/opt_out.asp] Most modern browsers come with pop-up blocking tools; third-party tools tend to include other features such as [[ad 