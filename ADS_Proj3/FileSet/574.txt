significantly to overall system power usage. When the CPU uses power management features to reduce energy use, other components, such as the motherboard and chipset take up a larger proportion of the computers energy. In applications where the computer is often heavily loaded, such as scientific computing, [[performance per watt]] - how much computing the CPU does per unit of energy becomes more significant. ==See also== * [[List of CPU power dissipation]] * [[Power management]] * [[Advanced Configuration and Power Interface]] (ACPI) * [[Low-power electronics]] * [[Voltage and frequency scaling]] * [[Overvolting]] * [[Undervolting]] * [[Overclocking]] * [[Underclocking]] * [[Performance per watt]] * [[IT energy management]] * [[Green computing]] == References == {{reflist|2}} === References not cited === <div class="references-small"> # {{cite paper | author=Weik, Martin H. | title=A Survey of Domestic Electronic Digital Computing Systems | publisher=United States Department of Commerce Office of Technical Services | url=http://www.computerhistory.org/collections/DocumentArchive/Documents/Books/Ballistic%20Research%20Lab%20surveys%20of%20computers/BRL%20Weik%20Report%201955/BRL.html | date=1955}} # http://developer.intel.com/design/itanium2/documentation.htm#datasheets # http://www.intel.com/pressroom/kits/quickreffam.htm # http://www.intel.com/design/mobile/datashts/24297301.pdf # http://www.intel.com/design/intarch/prodbref/27331106.pdf # http://www.via.com.tw/en/products/processors/c7-d/ # http://mbsg.intel.com/mbsg/glossary.aspx # http://download.intel.com/design/Xeon/datashts/25213506.pdf # http://www.intel.com/Assets/en_US/PDF/datasheet/313079.pdf, page 12 # http://support.amd.com/us/Processor_TechDocs/43374.pdf, pages 10 and 80. </div> == External links == * [http://www.techarp.com/showarticle.aspx?artno=337 CPU Reference for all vendors. Process node, die size, speed, power, instruction set, etc.] * [http://users.erols.com/chare/elec.htm Processor Electrical Specifications] * [http://www.sizinglounge.com SizingLounge] – Online calculation tool for server energy costs. * [http://processorfinder.intel.com/ For specification on Intel processors.] [[Category:Central processing unit]] [[Category:Electric power]] [[de:CPU-Leistungsaufnahme]] [[fi:Suorittimen tehonkulutus]]</text> </page> <page> <id>5208</id> <title>CS-Script</title> <text>{{notability|Products|date=June 2009}} '''CS-Script''' ([http://www.csscript.net www.csscript.net]) is a CLR ([[Common Language Runtime]]) based scripting system which uses ECMA-compliant C# as a programming language. CS-Script currently targets Microsoft implementation of CLR (.NET 2.0/3.0/3.5) with limited support on Mono. CS-Script as well as a few other .NET languages (e.g. Boo) is a [[Type system|statically typed]] language and it allows unlimited access to .NET/CLR functionality with ''plain vanilla'' C# syntax. CS-Script as a scripting environment offers stand alone script execution as well as hosting the script engine from CLR application. Because of statically typed nature of the script execution CS-Script demonstrates no performance degradation comparing to the compiled managed binaries. CS-Script relies heavily on existing .NET development tools (e.g. MS [[Microsoft Visual Studio|Visual Studio]], Sharp Develop) allowing editing and debugging scripts within traditional .NET [[Integrated development environment|Development environment]]. CS-Script has been used in a number of open-source and proprietary products of different scale and complexity (e.g. FlashDevelop, MediaPortal). ==References== *[http://flashdevelop.googlecode.com/svn/License.txt CS-Script as part of FlashDevelop] *[http://code.google.com/p/wuji/ CS-Script as part of Wuji] *[http://ef-honda.com/ben/bre/breapi/index.html CS-Script as part of BRE API] *[http://www.gvgdevelopers.com/K2DevGuide/K2DevGuide.html CS-Script as part of K2 API] *[http://api.ayanova.com/AyaScript/index.htm CS-Script as part of AyaNova ] ''(Official Website: [http://www.ayanova.com AyaNova service management software])'' [[Category:Scripting languages]]</text> </page> <page> <id>5212</id> <title>CSHALS</title> <text>{{notable|date=September 2010}} The '''Conference on Semantics in Healthcare and Life Sciences''' ('''CSHALS''') is a scientific meeting on the practical applications of [[semantic technology]] to pharmaceutical R&D, healthcare, and life sciences. It has been held annually since 2008, and is the premier meeting in this domain. CSHALS has been held in [[Cambridge, Massachusetts]] each year since its inception. == Organization == CSHALS is organized by [[ISCB (International Society for Computational Biology)]]. == External links == * [http://www.iscb.org/cshals2011 CSHALS 2011, Cambridge, Mass., USA] * [http://friendfeed.com/cshals-2011 CHALS 2011 FriendFeed Group] * [http://www.iscb.org/cshals2010-home CSHALS 2010, Cambridge, Mass., USA] * [http://friendfeed.com/cshals-2010 CSHALS 2010 FriendFeed Group] * [http://www.iscb.org/cms_addon/conferences/cshals2009/ CSHALS 2009, Cambridge, Mass., USA] * [http://friendfeed.com/cshals-2009 CSHALS 2009 FriendFeed Group] * [http://www.iscb.org/cms_addon/conferences/cshals2008/index.php CSHALS 2008, Cambridge, Mass., USA] ==Notes== {{biology-stub}} [[Category:Artificial intelligence]] [[Category:Bioinformatics]] [[Category:Computational science]] [[Category:Knowledge engineering]] [[Category:Knowledge management]] [[Category:Semantic Web]]</text> </page> <page> <id>5232</id> <title>CTPP</title> <text>{{ Infobox Software | name = CTPP | logo = | screenshot = | caption = | collapsible = | author = | developer = | released = | latest release version = 2.6.7 | latest release date = {{release date|2010|11|11}} | latest preview version = | latest preview date = | frequently updated = | programming language = [[C++]] | operating system = | platform = | size = | language = | status = | genre = [[library (computing)|library]] or [[Software framework|framework]] | license = [[BSD License]] | website = http://ctpp.havoc.ru/en }} '''CTPP''' (or '''CT++''') is a [[template engine]] completely written in [[C++]]. It has bindings for [[Perl]], [[PHP]] and [[Python (programming language)|Python]] languages. == CTPP Features == * Very high performance :The CTPP library is very fast since it’s written entirely in C++. Unlike templatizers written in interpreted languages, like PERL or PHP, CTPP doesn’t spend time on interpreting the original code or on loading the execution environment. At the same time, CTPP library is faster than the well-known projects like Xalan-C or libxslt because it doesn’t carry additional often superfluous functionality that costs in performance. * Flexible syntax of templates :If you are accustomed to the syntax of Smarty, HTML::Template or Text::Template, you can re-configure CTPP to “understand” your old templates. Certainly there will be little adjustments, but typically there will be no problems converting to the new engine. * Robustness :Since the areas of control of the programmer and the HTML designer are completely isolated there is no risk of breaking the logic by a wrong layout. Regardless of the HTML design the project will function exactly as developed by the programmer according to the functional specifications. * Portability :CTPP library supports equally well [[Linux]], [[FreeBSD]] and [[Solaris (operating system)|Solaris]] on [[i386]], [[x86-64]] and [[UltraSparc]] platforms. * Support for implementations in the language of your choice :CTPP has C, C++, Perl5, PHP4, and PHP5 interfaces. It means that you can attach this library to any project written in popular programming languages. * Unlimited levels of nested cycles and conditions * User functions :New functions can be added as needed in order to customize formatting data for the [[User interface]]. * Open-source software :CTPP is [[open-source software]] licensed under the [[BSD License]]. == Architecture of CTPP == [[Image:Ctpp2-sheme-en.png‎|thumb|250px]] The [[MVC]] paradigm divides an application into three basic entities: a set of Models, a Controller, and the View. A classic implementation completely isolates these entities from each other. It is assumed that a View doesn’t process any data and only renders a corresponding object model according to the template, 