of the [[closed world assumption]], which holds that any statement that is not known to be true is false. The open world assumption (OWA) is used in [[knowledge representation]] to codify the informal notion that in general no single agent or observer has complete knowledge, and therefore cannot make the closed world assumption. The OWA limits the kinds of inference and deductions an agent can make to those that follow from statements that are known to the agent to be true. In contrast, the closed world assumption allows an agent to infer, from its lack of knowledge of a statement being true, anything that follows from that statement being false. Heuristically, the open world assumption applies when we represent knowledge within a system as we discover it, and where we cannot guarantee that we have discovered or will discover complete information. In the OWA, statements about knowledge that are not included in or inferred from the knowledge explicitly recorded in the system may be considered unknown, rather than wrong or false. [[Semantic Web]] languages such as [[Web Ontology Language|OWL]] make the open world assumption. The absence of a particular statement within the web means, in principle, that the statement has not been made explicitly yet, irrespectively of whether it would be true or not, and irrespectively of whether we believe (or would believe) that it is (or would be) true or not. In essence, from the absence of a statement alone, a deductive reasoner cannot (and must not) infer that the statement is false. Many [[procedural programming language]]s and [[database]]s make the closed world assumption. For example, if a typical airline database does not contain a seat assignment for a traveler, it means the traveler has not checked in. The closed world assumption typically applies when a system has complete control over information; this is the case with many database applications where the [[database transaction]] system acts as a central broker and arbiter of concurrent requests by multiple independent clients (e.g., airline booking agents). There are however many databases with incomplete information: one cannot assume that because there is no mention on a patient's history of a particular allergy, that the patient does not suffer from that allergy. '''Example''' Statement: "Mary" "is a citizen of" "France" Question: Is Paul a citizen of France? "Closed world" (for example SQL) answer: No. "Open world" answer: unknown. Under OWA, failure to derive a fact does not imply the opposite. For example, assume we only know that Mary is a citizen of France. From this information we can neither conclude that Paul is not a citizen of France, nor that he is. Therefore, we admit the fact that our knowledge of the world is incomplete. The open world assumption is closely related to the [[Monotonicity of entailment|monotonic]] nature of [[first-order logic]]: adding new information never falsifies a previous conclusion. Namely, if we subsequently learn that Paul is also a citizen of France, this does not change any earlier positive or negative conclusions. The language of logic programs with [[Stable_model_semantics#Strong_negation|strong negation]] allows us to postulate the closed world assumption for some predicates and leave the other predicates in the realm of the open world assumption. ==See also== *[[Closed World Assumption]] {{DEFAULTSORT:Open World Assumption}} [[Category:Logic programming]] [[Category:Knowledge representation]] [[ru:Предположение об открытости мира]] [[zh:开放世界假定]]</text> </page> <page> <id>27587</id> <title>Openwares.org</title> <text>{{Orphan|date=October 2007}} '''Openwares.org''' is a public [[Open Source]] and [[Freeware]] software development web site, providing free [[publishing]], [[packaging]], [[Internet hosting service|hosting]], and [[marketing]] services to individual developers. The mission of Openwares.org is to enrich the global internet community by providing [[software developers]] who lack the time, money or knowledge a centralized place to publish, control and market their creations at no cost. To fulfill this mission goal, Openwares.org offer a variety of services to hosted projects and only request that all projects are provided freely and without any attachments to the general public. '''Malware Issues''' Openwares.org is known for hosting software that are bundled with malware, viruses, spyware and adware and the website has been added to the restricted zones on IE-spyad and also added to several block host files. One of the most noted malware is the "NSIS Media Extension Trojan" which is related to the [[Foxie|Foxie Browser]]. The site's most popular download (according to their own statistics) has two different forms of adware bundled in it. Yet the site clearly states: "We do not accept software that installs third party advertising or tracking components of any kind, regardless of disclosure or not!". * [http://kichik.net/2006/12/15/nsis-media-remover/ NSIS Media Removal Tool] * [http://www.schrockinnovations.com/removensismedia.php NSIS Malware & Trojan Removal Guide] * [http://www.siteadvisor.com/sites/openwares.org McAfee Site Advisor] ==See also== *[[Software]] *[[Open Source]] ==External links== * [http://www.openwares.org www.openwares.org] [[Category:Computing websites]] [[Category:Software that bundles malware]]</text> </page> <page> <id>27594</id> <title>Operant conditioning</title> <text>{{Redirect|Operant|the definition of the word "operant"|Wiktionary:operant}} {{Merge from|Mutual operant conditioning|date=May 2008}} '''Operant conditioning''' is the use of a behavior's antecedent and/or its consequence to influence the occurrence and form of behavior. Operant conditioning is distinguished from [[classical conditioning]] (also called respondent conditioning) in that operant conditioning deals with the [[behavior modification|modification of "voluntary behavior"]] or operant behavior. Operant behavior "operates" on the environment and is maintained by its consequences, while classical conditioning deals with the conditioning of reflexive ([[reflex]]) behaviors which are elicited by [[antecedent]] conditions. Behaviors conditioned via a classical conditioning procedure are not maintained by consequences.<ref>Domjan, Michael, Ed., The Principles of Learning and Behavior, Fifth Edition, Belmont, CA: Thomson/Wadsworth, 2003</ref> {{TOC limit|limit=2}} ==Reinforcement, punishment, and extinction== [[Reinforcement]] and [[punishment]], the core tools of operant conditioning, are either positive (delivered following a response), or negative (withdrawn following a response). This creates a total of four basic consequences, with the addition of a fifth procedure known as [[extinction (psychology)|extinction]] (i.e. no change in consequences following a response). It's important to note that actors are not spoken of as being reinforced, punished, or extinguished; it is the actions that are reinforced, punished, or extinguished. Additionally, reinforcement, punishment, and extinction are not terms whose use is restricted to the laboratory. Naturally occurring consequences can also be said 