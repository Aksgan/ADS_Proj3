of [[Fitness approximation|approximate models]] may be one of the most promising approaches, especially in the following cases: * Fitness computation time of a single solution is extremely high, * Precise model for fitness computation is missing, * The fitness function is uncertain or noisy. Two main classes of fitness functions exist: one where the fitness function does not change, as in optimizing a fixed function or testing with a fixed set of test cases; and one where the fitness function is mutable, as in [[niche differentiation]] or [[co-evolution|co-evolving]] the set of test cases. Another way of looking at fitness functions is in terms of a [[fitness landscape]], which shows the fitness for each possible chromosome. Definition of the fitness function is not straightforward in many cases and often is performed iteratively if the fittest solutions produced by GA are not what is desired. In some cases, it is very hard or impossible to come up even with a guess of what fitness function definition might be. [[Interactive genetic algorithms]] address this difficulty by outsourcing evaluation to external agents (normally humans). == References == {{Reflist}} *[http://profsite.um.ac.ir/~davarynej/Resources/CEC'07-Draft.pdf An Nice Introduction to Adaptive Fuzzy Fitness Granulation (AFFG)] ([[PDF]]), A promising approach to accelerate the convergence rate of EAs. Available as a free PDF. *[http://www.davarynejad.com/Mohsen/index.php?n=Main.AFFG The cyber shack of Adaptive Fuzzy Fitness Granulation (AFFG)] That is designed to accelerate the convergence rate of EAs. *[http://www.nelsonrobotics.org/paper_archive_nelson/nelson-jras-2009.pdf Fitness functions in evolutionary robotics: A survey and analysis (AFFG)] ([[PDF]]), A review of fitness functions used in [[evolutionary robotics]]. [[Category:Evolutionary algorithms]] [[Category:Genetic algorithms]] [[ca:Funció d'aptitud (algorisme genètic)]] [[de:Fitnessfunktion]] [[nl:Fitnessfunctie]] [[ja:適応度関数]] [[uk:Фітнес-функція]]</text> </page> <page> <id>13688</id> <title>Fitness landscape</title> <text>{{Mergefrom|evolutionary landscape|date=December 2008}} In [[evolutionary biology]], '''fitness landscapes''' or '''adaptive landscapes''' are used to visualize the relationship between [[genotype]]s (or [[phenotype]]s) and [[reproductive success]]. It is assumed that every genotype has a well-defined replication rate (often referred to as [[fitness (biology)|fitness]]). This fitness is the "height" of the landscape. Genotypes which are very similar are said to be "close" to each other, while those that are very different are "far" from each other. The two concepts of height and distance are sufficient to form the concept of a "landscape". The set of all possible genotypes, their degree of similarity, and their related fitness values is then called a fitness landscape. In [[evolutionary algorithm|evolutionary optimization]] problems, fitness landscapes are evaluations of a [[fitness function]] for all candidate solutions (see below). The idea of studying evolution by visualizing the distribution of fitness values as a kind of landscape was first introduced by [[Sewall Wright]] in 1932<ref name=Wright>Wright, S. 1932 "[http://www.blackwellpublishing.com/ridley/classictexts/wright.pdf The roles of mutation, inbreeding, crossbreeding, and selection in evolution]". In ''Proceedings of the Sixth International Congress on Genetics'', pp. 355–366.</ref>. ==Fitness landscapes in biology== Fitness landscapes are often conceived of as ranges of mountains. There exist local peaks (points from which all paths are downhill, i.e. to lower fitness) and valleys (regions from which most paths lead uphill). A fitness landscape with many local peaks surrounded by deep valleys is called rugged. If all genotypes have the same replication rate, on the other hand, a fitness landscape is said to be flat. The shapes of fitness landscapes are also closely related to [[epistasis]], as demonstrated by [[Stuart Kauffman]]'s NK-Landscape model. An evolving [[population]] typically climbs uphill in the fitness landscape, by a series of small genetic changes, until a local optimum is reached (Fig. 1). There it remains, unless a rare [[mutation]] opens a path to a new, higher fitness peak. Note, however, that at high mutation rates this picture is somewhat simplistic. A population may not be able to climb a very sharp peak if the mutation rate is too high, or it may drift away from a peak it had already found; consequently, reducing the fitness of the system. The process of drifting away from a peak is often referred to as [[Muller's ratchet]]. The apparent lack of [[rotation in living systems|wheeled animals]] is an example of a fitness peak which is presently inaccessible due to a surrounding valley. In general, the higher the [[Connectivity (graph theory)|connectivity]] the more rugged the system becomes. Thus, a simply connected [[system]] only has one peak and if part of the system is changed then there will be little, if any, effect on any other part of the system. A high connectivity implies that the variables or sub-systems interact far more and the system may have to settle for a level of ‘fitness’ lower than it might be able to attain. The system would then have to change its approach to overcoming whatever problems that confront it, thus, changing the ‘terrain’ and enabling it to continue. ==Fitness landscapes in evolutionary optimization== Apart from the field of evolutionary biology, the concept of a fitness landscape has also gained importance in [[evolutionary algorithm|evolutionary optimization]] methods such as [[genetic algorithm]]s or evolutionary strategies. In evolutionary optimization, one tries to solve real-world problems (e.g., [[engineering]] or [[logistics]] problems) by imitating the dynamics of biological evolution. For example, a delivery truck with a number of destination addresses can take a large variety of different routes, but only very few will result in a short driving time. In order to use evolutionary optimization, one has to define for every possible [[solution point|solution]] ''s'' to the problem of interest (i.e., every possible route in the case of the delivery truck) how 'good' it is. This is done by introducing a [[scalar (mathematics)|scalar]]-valued [[function (mathematics)|function]] ''f(s)'' (scalar valued means that ''f(s)'' is a simple number, such as 0.3, while ''s'' can be a more complicated object, for example a list of destination addresses in the case of the delivery truck), which is called the [[fitness function]] or '''fitness landscape'''. A high ''f(s)'' implies that ''s'' is a good solution. In the case of the delivery truck, ''f(s)'' could be the number of deliveries per hour on route ''s''. The best, or at least a very good, solution is then found in the following way: initially, a population of random solutions is created. Then, 