redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version. ==Platform Availability== The C source code is provided and can be compiled on any machine disposing of a C compiler. The [[GNU Scientific Library]] needs to be also available on the target platform. ==References== Bois F., Maszle D., 1997, MCSim: A simulation program, Journal of Statistical Software, 2(9):http://www.stat.ucla.edu/journals/jss/v02/i09. Jonsson F., Johanson G., 2003, The Bayesian population approach to physiological toxicokinetic-toxicodynamic models - An example using the MCSim software, Toxicology Letters 138:143-150. ==See also== * [[Comparison of numerical analysis software]] * [[List of numerical analysis software]] ==External links== * [http://www.gnu.org/software/mcsim/ GNU MCSim home page] * [http://savannah.gnu.org/projects/mcsim/ source code repository] {{GNU}} [[Category:Free software programmed in C]] [[Category:Free statistical software]] [[Category:Numerical software]] [[Category:GNU Project software]] [[Category:Mathematical optimization software]] [[Category:Mathematical software]] [[bs:MCSim]]</text> </page> <page> <id>22886</id> <title>MCU 8051 IDE</title> <text>{{Infobox Software | name = MCU 8051 IDE | logo = [[Image:MCU 8051 IDE Icon.png]] |screenshot = [[Image:MCU 8051 IDE Snapshot0.png|250px]] | developer = Martin Ošmera | released = 0.8 (2007) | frequently updated = yes | programming language = [[Tcl/Tk]] and [[C++]] | operating system = [[Unix-like]] | language = English | genre = [[Integrated development environment]] | license = [[GNU General Public License]] | website = http://mcu8051ide.sf.net/ }} '''MCU 8051 IDE''' is a [[free software]] [[integrated development environment]] for microcontrollers based on [[8051]]. MCU 8051 IDE has its own simulator and assembler (support for some external assemblers is also available). This [[Integrated development environment|IDE]] supports 2 programming languages: [[C (programming language)|C]] and [[Assembly language]]. For [[C (programming language)|C language]] it uses [[Small Device C Compiler|SDCC]]. == Supported MCUs == The current version 1.3 supports many microcontrollers including: 8051, 80C51, 8052, AT89C2051, AT89C4051, AT89C51, AT89C51RC, AT89C52, AT89C55WD,AT89LV51, AT89LV52 AT89LV55, AT89S52, AT89LS51, AT89LS52, AT89S8253, AT89S2051, AT89S4051, T87C5101, T83C5101, T83C5102, TS80C32X2, TS80C52X2, TS87C52X2, AT80C32X2, AT80C52X2, AT87C52X2, AT80C54X2, AT80C58X2, AT87C54X2, AT87C58X2, TS80C54X2, TS80C58X2, TS87C54X2, TS87C58X2, TS80C31X2, AT80C31X2, 8031, 8751, 8032, 8752, 80C31, 87C51, 80C52, 87C52, 80C32, 80C54, 87C54, 80C58, 87C58 == Key features == * [[Microcontroller|MCU]] [[Computer simulation|simulator]] with many debugging features: register status, step by step, interrupt viewer, external memory viewer, code memory viewer, etc. * Simulator for simple electronic peripherals: leds, displays, matrices, etc. * Support for [[C (programming language)|C language]] * Native macro-assembler * Support for [http://plit.de/asem-51/ ASEM-51] * Advanced text editor with syntax highlighting and validation * Support for [[vim]] and [[nano (text editor)|nano]] embedded in the [[Integrated development environment|IDE]] * Simple hardware programmer for certain AT89Sxx [[Microcontroller|MCU]]s * Scientific calculator: time delay calculation and code generation, base converter, etc. * Hexadecimal editor == Similar software == * [http://www.keil.com/c51/ Keil C51] * [http://www.opcube.com/home.html#MIDE51 MIDE-51 Studio] * [http://www.mikroe.com/en/compilers/mikroc/8051/ MikroElektronika] == See also == * [[8051|8051 information]] * [[Assembly language]] * [[C (programming language)|C language]] == Further reading == * [http://micro8051.com/ebooks/27238302.pdf The Intel MCS 51 Microcontroller Family User's Manual] == External links == * [http://mcu8051ide.sf.net/ MCU 8051 IDE homepage] * {{Freshmeat|mcu8051ide|MCU 8051 IDE}} * [http://www.pjrc.com/tech/8051/ Paul's 8051 Tools, Projects and Free Code] * [http://plit.de/asem-51/ ASEM-51] * [http://sdcc.sourceforge.net/ SDCC] [[Category:Computer programming]] [[Category:Embedded systems]] [[es:MCU 8051 IDE]] [[cs:MCU 8051 IDE]]</text> </page> <page> <id>22918</id> <title>MEROPS</title> <text>'''MEROPS''' is an on-line [[database]] for peptidases (also known as [[proteases]]) and their inhibitors.<ref name="pmid19892822">{{cite journal |author=Rawlings ND, Barrett AJ, Bateman A |title=MEROPS: the peptidase database |journal=Nucleic Acids Res. |volume=38 |issue=Database issue |pages=D227–33 |year=2010 |month=January |pmid=19892822 |pmc=2808883 |doi=10.1093/nar/gkp971 |url=}}</ref> The [[classification scheme]] for peptidases was published by Rawlings & Barrett in 1993,<ref>Rawlings, N.D. & Barrett, A.J. (1993) Evolutionary families of peptidases. Biochem J 290, 205-218.</ref> and that for protein inhibitors by Rawlings ''et al.'' in 2004.<ref>Rawlings, N.D., Tolle, D.P. & Barrett, A.J. (2004) Evolutionary families of peptidase inhibitors. Biochem J 378, 705-716.</ref> ==Overview== The classification is based on similarities at the tertiary and primary structural levels. Comparisons are restricted to that part of the sequence directly involved in the reaction, which in the case of a peptidase must include the [[active site]], and for a protein inhibitor the reactive site. The classification is hierarchical: sequences are assembled into families, and families are assembled into clans. A family is assembled around a ''type example'', the sequence of a well-characterized peptidase or inhibitor. All other sequences in the family must be related to the family type example, either directly or through a transitive relationship involving one or more sequences already shown to be family members. Typically, [[FASTA|FastA]] or BlastP are used to establish sequence relationships, with an expect value of 0.001 or lower taken to be [[Statistical significance|statistically significant]]. A clan is also assembled around a type example, this being the structure of a well-characterized peptidase or inhibitor. A family is included in a clan if the [[tertiary structure]] of a family member can be shown to be related to that of the clan type example. Typically, [[Families of structurally similar proteins|DALI]] is used to establish clan membership, with a [[Standard score|z score]] of 6.00 [[standard deviation]] units or above considered to be statistically significant. For peptidases, other evidence to indicate that families are related when a tertiary structure is absent includes the same order of catalytic residues in the sequences. == References == {{reflist}} ==See also== * [[The Proteolysis Map]] ==External links== *[http://merops.sanger.ac.uk MEROPS database] [[Category:Molecular biology]] [[Category:Biological databases]] [[Category:Wellcome Trust]] [[Category:Peptidase]] {{bioinformatics-stub}}</text> </page> <page> <id>22920</id> <title>MESIF protocol</title> <text>The '''MESIF protocol''' is a [[cache coherency]] and [[memory coherence]] protocol developed by [[Intel]] for [[Non-Uniform_Memory_Access#Cache_coherent_NUMA_.28ccNUMA.29|cache coherent non-uniform memory architectures]]<ref>http://www.realworldtech.com/page.cfm?ArticleID=RWT082807020032&p=5</ref>. The protocol consists of five states, Modified (M), Exclusive (E), Shared (S), Invalid (I) and Forward (F). The M, E, S and I states are the same as in the [[MESI protocol]]. The F state indicates that a cache should act as a designated responder for any requests for the given line. In a system of caches employing the MESI protocol, a cache line request that is received by multiple caches holding a line in the S state will receive multiple responses. In a system of caches employing the MESIF protocol, a cache 