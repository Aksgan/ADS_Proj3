together with the physically realisable decoding structure. Turbo codes are affected by an [[error floor]]. ==Practical applications using turbo codes== Telecommunications: * Turbo codes are used extensively in [[3G]] and [[4G]] mobile telephony standards e.g. in [[High Speed Packet Access|HSPA]] and [[3GPP Long Term Evolution|LTE]]. * [[MediaFLO]], terrestrial mobile television system from [[Qualcomm]] * New [[NASA]] missions such as [[Mars Reconnaissance Orbiter]] now use turbo codes, as an alternative to RS-[[Viterbi decoder|Viterbi]] codes. * Turbo coding such as block turbo coding and convolutional turbo coding are used in [[IEEE 802.16]] ([[WiMAX]]), a wireless metropolitan network standard. ==Bayesian formulation== From an [[artificial intelligence]] viewpoint, turbo codes can be considered as an instance of loopy [[belief propagation]] in [[Bayesian network]]s.<ref>{{Citation | author1=McEliece, Robert J. | author1-link=Robert McEliece | author2=MacKay, David J. C. | author2-link=David McKay | author3=Cheng, Jung-Fu | title=Turbo decoding as an instance of Pearl's “belief propagation” algorithm | journal=IEEE Journal on Selected Areas in Communications | volume=16 | issue=2 | pages=140–152 | year=1998 | issn=0733-8716 | doi=10.1109/49.661103 | postscript=. }}</ref> ==See also== * [[Convolutional code]] * [[Viterbi algorithm]] * [[Soft-decision decoding]] * [[Interleaver]] * [[BCJR algorithm]] * [[Low-density parity-check code]] * [[Turbo equalizer]] ==References== <references /> ==External links== * [http://www.spectrum.ieee.org/computing/software/closing-in-on-the-perfect-code "Closing In On The Perfect Code"], IEEE Spectrum, March 2004 * [http://www.csee.wvu.edu/~mvalenti/documents/valenti01.pdf "The UMTS Turbo Code and an Efficient Decoder Implementation Suitable for Software-Defined Radios"] (''International Journal of Wireless Information Networks'') * {{Citation | author=Dana Mackenzie | title=Take it to the limit | journal=New Scientist | volume=187 | issue=2507 | year=2005 | pages=38&ndash;41 | id={{ISSN|0262-4079}} | postscript=. }} ([http://www.newscientist.com/article.ns?id=mg18725071.400 preview], [http://geilenkotten.homeunix.org/TC_NS_09072005.pdf copy]) * [http://www.sciencenews.org/articles/20051105/bob8.asp "Pushing the Limit"], a ''[[Science News]]'' feature about the development and genesis of turbo codes * [http://www-turbo.enst-bretagne.fr/ International Symposium On Turbo Codes] * [http://www.iterativesolutions.com/Matlab.htm Coded Modulation Library], an open source library for simulating turbo codes in [[MATLAB|matlab]] * [http://www.ifp.uiuc.edu/~singer/journalpapers/tuchler_2002a.pdf "Turbo Equalization: Principles and New Results"], an ''[[IEEE Transactions on Communications]]'' article about using convolutional codes jointly with channel equalization. * [http://www.kn-s.dlr.de/turbo/Turbo%20Sim.pdf "PDF Slideshow illustrating the decoding process"] A PDF Slideshow illustrating the decoding process * [http://itpp.sourceforge.net IT++ Home Page] The [[IT++]] is a powerful C++ library which in particular supports turbo codes * [http://www.inference.phy.cam.ac.uk/mackay/CodesTurbo.html Turbo codes publications by David MacKay] {{CCSDS|state=collapsed}} {{Use dmy dates|date=September 2010}} {{DEFAULTSORT:Turbo Code}} [[Category:Error detection and correction]] [[Category:Capacity-approaching codes]] {{Link GA|ru}} [[ca:Turbocodi]] [[de:Turbo-Code]] [[es:Turbo código]] [[fr:Turbo code]] [[it:Turbo codici]] [[nl:Turbocode]] [[ja:ターボ符号]] [[ru:Турбо-код]]</text> </page> <page> <id>38402</id> <title>Turbulence kinetic energy</title> <text>{{refimprove|date=March 2009}} {{expert-subject-multiple|Physics|Energy|date=March 2009}} In [[fluid dynamics]], '''turbulence kinetic energy''' ('''TKE''') is the mean [[kinetic energy]] per unit mass associated with [[Eddy (fluid dynamics)|eddies]] in [[turbulent flow]]. Physically, the turbulence kinetic energy is characterised by measured [[root-mean-square]] (RMS) velocity fluctuations. In Reynolds-averaged Navier Stokes equations, the turbulence kinetic energy can be calculated based on the closure method, i.e. a [[Turbulence modeling|turbulence model]]. Generally, the TKE can be quantified by the mean of the turbulence normal stresses: :<math> k = \frac12 \left( \overline{(u'_1)^2} + \overline{(u'_2)^2} + \overline{(u'_3)^2} \right). </math> TKE can be produced by fluid shear, friction or buoyancy, or through external forcing at low-frequency eddie scales(integral scale). Turbulence kinetic energy is then transferred down the turbulence energy cascade, and is dissipated by viscous forces at the Kolmogorov scale. This process of production, transport and dissipation can be expressed as: :<math> \frac{Dk}{Dt} + \nabla \cdot T' = P - \epsilon, </math> where: <ref>Pope, S. B., (2003) 'Turbulent Flows', Cambridge: Cambridge University Press</ref> * <math> Dk/Dt </math> is the mean-flow [[material derivative]] of TKE; * <math> \nabla \cdot T' </math> is the turbulence transport of TKE; * <math> P </math> is the production of TKE, and * <math> \epsilon </math> is the TKE dissipation. By examining these phenomena, the turbulence kinetic energy budget for a particular flow can be found <ref>Baldocchi, D. (2005), ''[http://nature.berkeley.edu/biometlab/espm129/pdf/Lecture%2018%20espm%20129.pdf Lecture 18, Wind and Turbulence, Part 1, Surface Boundary Layer: Theory and Principles ]'', Ecosystem Science Division, Department of Environmental Science, Policy and Management, University of California, Berkeley, CA: USA.</ref>. ==Computational fluid dynamics== In [[computational fluid dynamics]] (CFD), it is impossible to numerically simulate turbulence without discretising the flow-field as far as the [[Kolmogorov microscales]], which is called [[direct numerical simulation]] (DNS). Because DNS simulations are exorbitantly expensive due to memory, computational and storage overheads, turbulence models are used to simulate the effects of turbulence. A variety of models are used, but generally TKE is a fundamental flow property which must calculated in order for fluid turbulence to be modelled. ===Reynolds-averaged Navier–Stokes equations=== [[Reynolds-averaged Navier–Stokes equations|Reynolds-averaged Navier–Stokes]] (RANS) simulations use the Boussinesq [[eddy viscosity]] hypothesis <ref>Boussinesq, J. (1877) ‘Théorie de l’Écoulement Tourbillant.’ Mem. Présentés par Divers Savants Acad. Sci. Inst. Fr. 23, 46-50</ref>to calculate the Reynolds stresses that result from the averaging procedure: :<math> \overline{u'_i u'_j} = 2/3 k \delta_{ij} - \nu_t \left( \frac{\partial \overline{u_i}}{\partial x_j} + \frac{\partial \overline{u_j}}{\partial x_i} \right), </math> where :<math> \nu_t = c \cdot k^{1/2} l_m. </math> The exact method of resolving TKE depends upon the turbulence model used; ''k–ε'' (k–epsilon) models assume isotropy of turbulence whereby the normal stresses are equal: :<math> \overline{u'^2} = \overline{v'^2} = \overline{w'^2}. </math> This assumption makes modelling of turbulence quantities (''k'' and <math>\epsilon</math>) simpler, but will not be accurate in scenarios where anisotropic behaviour of turbulence stresses dominates, and the implications of this in the production of turbulence also leads to over-prediction since the production depends on the mean rate of strain, and not the difference between the normal stresses (as they are, by assumption, equal) <ref>Laurence, D. (2002) ‘Applications of Reynolds Averaged Navier Stokes Equations to Industrial Flows.’ In van Beeck, J. P. A. J., Benocci, C. (eds), Introduction to Turbulence Modelling, Held March 18-22 2002 at Von Karman Institute for Fluid Dynamics. Rhode St.Genese, Belgium: Von Karman Institute for Fluid Dynamics</ref>. [[Reynolds stresses|Reynolds-stress]] models (RSM) use a different method to close the Reynolds stresses, whereby the normal stresses are not assumed isotropic, so the issue with TKE production is avoided. ===Boundary conditions=== Accurate prescription of TKE as boundary conditions in CFD simulations are important to accurately predict flows, especially in high Reynolds-number simulations. Some possible examples are given below. :<math> 