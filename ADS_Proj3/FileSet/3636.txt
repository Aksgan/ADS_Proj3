& -58/175 \\ 3/7 & 158/175 & 6/175 \\ -2/7 & 6/35 & -33/35 \end{pmatrix}. </math> Thus, we have : <math> \begin{matrix} Q^{T} A = Q^{T}Q\,R = R; \end{matrix} </math> : <math> \begin{matrix} R = Q^{T}A = \end{matrix} \begin{pmatrix} 14 & 21 & -14 \\ 0 & 175 & -70 \\ 0 & 0 & 35 \end{pmatrix}. </math> ====Relation to RQ decomposition==== The RQ decomposition transforms a matrix ''A'' into the product of an upper triangular matrix ''R'' (also known as right-triangular) and an orthogonal matrix ''Q''. The only difference from QR decomposition is the order of these matrices. QR decomposition is Gram-Schmidt orthogonalization of columns of A, started from the first column. RQ decomposition is Gram-Schmidt orthogonalization of rows of A, started from the last row. === Using Householder reflections === A [[Householder reflection]] (or ''Householder transformation'') is a transformation that takes a vector and reflects it about some [[plane (mathematics)|plane]] or [[hyperplane]]. We can use this operation to calculate the QR factorization of an m-by-n matrix <math>A</math> with m ≥ n. ''Q'' can be used to reflect a vector in such a way that all coordinates but one disappear. Let <math>\mathbf{x}</math> be an arbitrary real ''m''-dimensional column vector of <math>A</math> such that ||<math>\mathbf{x}</math>|| = |α| for a scalar α. If the algorithm is implemented using [[floating-point arithmetic]], then α should get the opposite sign as the k-th coordinate of <math>\mathbf{x}</math>, where x<sub>k</sub> is to be the pivot coordinate after which all entries are 0 in matrix ''A'''s final upper triangular form, to avoid [[loss of significance]]. In the complex case, set :<math> \alpha = - \mathrm{e}^{\mathrm{i} \arg x_1} \|\mathbf{x}\|</math> {{harv|Stoer|Bulirsch|2002|p=225}} and substitute transposition by conjugate transposition in the construction of ''Q'' below. Then, where <math>\mathbf{e}_1</math> is the vector (1,0,...,0)<sup>T</sup>, ||·|| is the [[Euclidean space#Euclidean structure|Euclidean norm]] and <math>I</math> is an m-by-m identity matrix, set : <math>\mathbf{u} = \mathbf{x} - \alpha\mathbf{e}_1,</math> : <math>\mathbf{v} = {\mathbf{u}\over\|\mathbf{u}\|},</math> : <math>Q = I - 2 \mathbf{v}\mathbf{v}^T.</math> Or, if <math>A</math> is complex : <math>Q = I - (1+w)\mathbf{v}\mathbf{v}^H</math>, where <math>w = \mathbf{x}^H\mathbf{v}\mathbf{/}\mathbf{v}^H\mathbf{x} </math> : where <math>\mathbf{x}^H</math> is the [[conjugate transpose]] (transjugate) of <math>\mathbf{x}</math> <math>Q</math> is an m-by-m Householder matrix and : <math>Q\mathbf{x} = (\alpha, 0, \cdots, 0)^T.\,</math> This can be used to gradually transform an ''m''-by-''n'' matrix ''A'' to upper [[triangular]] form. First, we multiply ''A'' with the Householder matrix ''Q''<sub>1</sub> we obtain when we choose the first matrix column for '''x'''. This results in a matrix ''Q''<sub>1</sub>''A'' with zeros in the left column (except for the first row). :<math>Q_1A = \begin{bmatrix} \alpha_1&\star&\dots&\star\\ 0 & & & \\ \vdots & & A' & \\ 0 & & & \end{bmatrix}</math> This can be repeated for ''A''&prime; (obtained from ''Q''<sub>1</sub>''A'' by deleting the first row and first column), resulting in a Householder matrix ''Q''&prime;<sub>2</sub>. Note that ''Q''&prime;<sub>2</sub> is smaller than ''Q''<sub>1</sub>. Since we want it really to operate on ''Q''<sub>1</sub>''A'' instead of ''A''&prime; we need to expand it to the upper left, filling in a 1, or in general: :<math>Q_k = \begin{pmatrix} I_{k-1} & 0\\ 0 & Q_k'\end{pmatrix}.</math> After <math>t</math> iterations of this process, <math>t = \min(m-1, n)</math>, :<math> R = Q_t \cdots Q_2Q_1A</math> is a upper triangular matrix. So, with :<math> Q = Q_1^T Q_2^T \cdots Q_t^T, </math> <math>A = QR</math> is a QR decomposition of <math>A</math>. This method has greater [[numerical stability]] than the Gram-Schmidt method above. <!--See the below example, and compare above--> The following table gives the number of operations in the k-th step of the QR-Decomposition by the Householder transformation, assuming a square matrix with size ''n''. {| class="wikitable" |- ! Operation ! Number of operations in the k-th step |- | multiplications | <math>2(n-k+1)^2</math> |- | additions | <math> (n-k+1)^2+(n-k+1)(n-k)+2 </math> |- | division | <math>1</math> |- | square root | <math>1</math> |} Summing these numbers over the <math>(n-1)</math> steps (for a square matrix of size ''n''), the complexity of the algorithm (in terms of floating point multiplications) is given by :<math>\frac{2}{3}n^3+n^2+\frac{1}{3}n-2=O(n^3).</math> ==== Example ==== Let us calculate the decomposition of : <math>A = \begin{pmatrix} 12 & -51 & 4 \\ 6 & 167 & -68 \\ -4 & 24 & -41 \end{pmatrix}.</math> First, we need to find a reflection that transforms the first column of matrix ''A'', vector <math>\mathbf{a}_1 = (12, 6, -4)^T</math>, to <math>\|\mathbf{a}_1\| \;\mathrm{e}_1 = (14, 0, 0)^T.</math> Now, : <math>\mathbf{u} = \mathbf{x} - \alpha\mathbf{e}_1,</math> and : <math>\mathbf{v} = {\mathbf{u}\over\|\mathbf{u}\|}.</math> Here, : <math>\alpha = 14</math> and <math>\mathbf{x} = \mathbf{a}_1 = (12, 6, -4)^T</math> Therefore : <math>\mathbf{u} = (-2, 6, -4)^T=({2})(-1, 3, -2)^T</math> and <math>\mathbf{v} = {1 \over \sqrt{14}}(-1, 3, -2)^T</math>, and then :<math>Q_1 = I - {2 \over \sqrt{14} \sqrt{14}} \begin{pmatrix} -1 \\ 3 \\ -2 \end{pmatrix}\begin{pmatrix} -1 & 3 & -2 \end{pmatrix}</math> :<math> = I - {1 \over 7}\begin{pmatrix} 1 & -3 & 2 \\ -3 & 9 & -6 \\ 2 & -6 & 4 \end{pmatrix}</math> :<math> = \begin{pmatrix} 6/7 & 3/7 & -2/7 \\ 3/7 &-2/7 & 6/7 \\ -2/7 & 6/7 & 3/7 \\ \end{pmatrix}.</math> Now observe: :<math>Q_1A = \begin{pmatrix} 14 & 21 & -14 \\ 0 & -49 & -14 \\ 0 & 168 & -77 \end{pmatrix},</math> so we already have almost a triangular matrix. We only need to zero the (3, 2) entry. Take the (1, 1) [[minor (linear algebra)|minor]], and then apply the process again to :<math>A' = M_{11} = \begin{pmatrix} -49 & -14 \\ 168 & -77 \end{pmatrix}.</math> By the same method as above, we obtain the matrix of the Householder transformation :<math>Q_2 = \begin{pmatrix} 1 & 0 & 0 \\ 0 & -7/25 & 24/25 \\ 0 & 24/25 & 7/25 \end{pmatrix}</math> after performing a direct sum with 1 to make sure the next step in the process works properly. Now, we find :<math>Q=Q_1^T Q_2^T=\begin{pmatrix} 6/7 & -69/175 & 58/175\\ 3/7 & 158/175 & -6/175 \\ -2/7 & 6/35 & 33/35 \end{pmatrix} </math> :<math>R=Q_2Q_1A=Q^T A=\begin{pmatrix} 14 & 21 & -14 \\ 0 & 175 & -70 \\ 0 & 0 & 35 \end{pmatrix}.</math> The matrix ''Q'' is orthogonal and ''R'' is upper triangular, so ''A'' = ''QR'' is 