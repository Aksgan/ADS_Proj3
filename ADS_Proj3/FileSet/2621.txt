metaprogramming]]) ** [[Objective Caml]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[Logic programming|logic]] ** [[Leda (programming language)|Leda]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Logic programming|logic]], [[rule-based programming|rule-based]] ** [[ROOP (programming language)|ROOP]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Prototype-based programming|prototype-based]]), [[Functional programming|functional]], [[Concurrent programming language|concurrent]] ([[Actor model]]) ** [[Io (programming language)|Io]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Prototype-based programming|prototype-based]]), [[Functional programming|functional]], [[Dialecting|dialected]] ** [[REBOL]] ==Five paradigm-languages== * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Concurrent programming language|concurrent]] (rendezvous and monitor-like based), [[Generic programming|generic]], [[Distributed programming|distributed]] ** [[Ada (programming language)|Ada]]<ref>[http://www.adaic.org/standards/05rm/html/RM-TTL.html Ada Reference Manual, ISO/IEC 8652:2005(E) Ed. 3], [http://www.adaic.org/standards/05rm/html/RM-9.html Section 9: Tasks and Synchronization]</ref><ref>[http://www.adaic.org/standards/05rm/html/RM-TTL.html Ada Reference Manual, ISO/IEC 8652:2005(E) Ed. 3] [http://www.adaic.org/standards/05rm/html/RM-E.html Annex E: Distributed Systems]</ref><ref>[http://www.adaic.org/standards/05rm/html/RM-TTL.html Ada Reference Manual, ISO/IEC 8652:2005(E) Ed. 3], [http://www.adaic.org/standards/05rm/html/RM-12.html Section 12: Generic Units]</ref><ref>[http://www.adaic.org/standards/05rm/html/RM-TTL.html Ada Reference Manual, ISO/IEC 8652:2005(E) Ed. 3], [http://www.adaic.org/standards/05rm/html/RM-6.html Section 6: Subprograms]</ref><ref>[http://www.adaic.org/standards/05rm/html/RM-TTL.html Ada Reference Manual, ISO/IEC 8652:2005(E) Ed. 3], [http://www.adaic.org/standards/05rm/html/RM-3-9.html 3.9 Tagged Types and Type Extensions]</ref> * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[reflective programming|reflective]], [[Pipeline programming|pipeline]] ** [[Windows PowerShell]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]] (only [[Lambda calculus|lambda]] support), [[Reflection (computer science)#|reflective]], [[Generic programming|generic]] ** [[C Sharp (programming language)|C#]] ** [[Visual Basic .NET]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[reflective programming|reflective]], [[Generic programming|generic]] ([[template metaprogramming]]) ** [[Curl (programming language)|Curl]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[reflective programming|reflective]], [[metaprogramming]] ** [[Common Lisp]] {{Citation needed|date=March 2007}} (although there are other paradigms implemented as libraries) ** [[Falcon (programming language)|Falcon]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[Generic programming|generic]], [[metaprogramming]] ** [[Nemerle]] * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[Generic programming|generic]], [[Concurrent programming language|concurrent]] ([[Actor model]]) **[[Scala (programming language)|Scala]]<ref>[http://www.scala-lang.org/sites/default/files/linuxsoft_archives/docu/files/ScalaOverview.pdf An Overview of the Scala Programming Language]</ref><ref>[http://www.scala-lang.org/sites/default/files/linuxsoft_archives/docu/files/ScalaReference.pdf Scala Language Specification]</ref> * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[Generic programming|generic]] ([[template metaprogramming]]), [[Concurrent programming language|concurrent]] ([[Actor model]]) ** [[D (programming language)|D]] (version 2.0) <ref>[http://www.digitalmars.com/d/2.0/comparison.html D Language Feature Table]</ref><ref>[http://www.digitalmars.com/d/2.0/phobos/std_algorithm.html Phobos std.algorithm]</ref> ==Nine paradigm-languages== * [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class-based]]), [[Functional programming|functional]], [[reflective programming|reflective]], [[metaprogramming]], [[Distributed programming|distributed]], [[Logic programming|logic]], [[rule-based programming|rule-based]], [[Concurrent programming language|concurrent]] ** [[LispWorks]] 6.0 with support for symmetric multi-processing, rules, logic (Prolog) and CORBA ==See also== *[[Programming paradigm]] *[[Categorical list of programming languages]] *[[Domain-specific programming language]] *[[Domain-specific multimodeling]] ==References== {{Reflist|2}} {{Refbegin}} *''Multiparadigm Design for C++'', by Jim Coplien, 1998. {{Refend}} {{Programming language}} {{DEFAULTSORT:List Of Multi-Paradigm Programming Languages}} [[Category:Programming paradigms]] [[cs:Multiparadigmatický programovací jazyk]] [[es:Lenguaje de programación multiparadigma]] [[ko:다중 패러다임 프로그래밍 언어]] [[hu:Többelvű programozási nyelvek]] [[nl:Multi-paradigmaprogrammeertaal]] [[ja:マルチパラダイムプログラミング言語]] [[ro:Limbaj de programare multi-paradigmă]] [[ru:Мультипарадигмальный язык программирования]] [[zh:多重编程范式]]</text> </page> <page> <id>22216</id> <title>List of network theory topics</title> <text>[[Network theory]] is an area of [[applied mathematics]]. This page is a '''list of [[network theory]] topics'''. See also [[List of graph theory topics]]. ==Network theorems== *[[Max flow min cut theorem]] *[[Menger's theorem]] *[[Metcalfe's law]] ==Network properties== *[[Betweenness]] *[[Centrality]] *[[Closeness (graph theory)|Closeness]] ==Network theory applications== *[[Bose-Einstein condensation: a network theory approach]] ==Networks with certain properties== *[[Complex network]] *[[Scale-free network]] *[[Small-world network]] *[[Small world phenomenon]] ==Other terms== *[[Bottleneck]] *[[Liquid schedule]] *[[Network automaton]] *[[Network effect]] *[[Network flow]] *[[Pathfinder network]] *[[Scalability]] *[[Sorting network]] *[[Space syntax]] *[[Spanning tree protocol]] *[[Strategyproof]] *[[Structural cohesion]] *[[Vickrey&ndash;Clarke&ndash;Groves]] *[[Tree and hypertree networks]] ==Examples of networks== *[[Social network]] *[[Value network]] *[[Telecommunications network]] *[[Electrical network]] *[[Computer network]] *[[Project network]] *[[Workflow]] *[[Bayesian network]] *[[Petri net]] *[[Semantic network]] *[[Ecological network]] *[[Chemical Reaction]] Networks *[[Gene regulatory network]] *[[Spin network]] *[[Neural network]] [[Category:Network theory]]</text> </page> <page> <id>22220</id> <title>List of number theory topics</title> <text>This is a '''list of [[number theory]] topics''', by Wikipedia page. See also *[[List of recreational number theory topics]] *[[Topics in cryptography]] ==Factors== *[[Composite number]] **[[Highly composite number]] *[[Even and odd numbers]] **[[Parity (mathematics)|Parity]] *[[Divisor]], [[aliquot part]] **[[Greatest common divisor]] **[[Least common multiple]] **[[Euclidean algorithm]] **[[Coprime]] **[[Euclid's lemma]] **[[Bézout's identity]], [[Bézout's lemma]] **[[Extended Euclidean algorithm]] **[[Table of divisors]] *[[Prime number]], [[prime power]] **[[Bonse's inequality]] *[[Prime factor]] **[[Table of prime factors]] *[[Formula for primes]] *[[Factorization]] **[[RSA number]] *[[Fundamental theorem of arithmetic]] *[[Square-free]] **[[Square-free integer]] **[[Square-free polynomial]] *[[Square number]] *[[Power of two]] *[[Integer-valued polynomial]] ==[[Fraction (mathematics)|Fraction]]s== *[[Rational number]] *[[Unit fraction]] *[[Irreducible fraction]] = [[in lowest terms]] *[[Dyadic fraction]] *[[Recurring decimal]] *[[Cyclic number]] *[[Farey sequence]] **[[Ford circle]] **[[Stern-Brocot tree]] *[[Dedekind sum]] *[[Egyptian fraction]] ==[[Modular arithmetic]]== *[[Montgomery reduction]] *[[Modular exponentiation]] *[[Linear congruence theorem]] *[[Method of successive substitution]] *[[Chinese remainder theorem]] *[[Fermat's little theorem]] **[[Proofs of Fermat's little theorem]] *[[Fermat quotient]] *[[Euler's totient function]] **[[Noncototient]] **[[Nontotient]] *[[Euler's theorem]] *[[Wilson's theorem]] *[[Primitive root modulo n]] **[[Multiplicative order]] **[[Discrete logarithm]] *[[Quadratic residue]] **[[Euler's criterion]] **[[Legendre symbol]] **[[Gauss's lemma (number theory)]] *[[Congruence of squares]] *[[Luhn formula]] *[[Mod n cryptanalysis]] ==[[Arithmetic function]]s== *[[Multiplicative function]] *[[Additive function]] *[[Dirichlet convolution]] *[[Erdős-Kac theorem]] *[[Möbius function]] **[[Möbius inversion formula]] *[[Divisor function]] *[[Liouville function]] *[[Partition function (number theory)]] **[[Integer partition]] **[[Bell numbers]] **[[Landau's function]] **[[Pentagonal number theorem]] *[[Bell series]] *[[Lambert series]] ==[[Analytic number theory]]: additive problems== *[[Twin prime]] **[[Brun's constant]] *[[Cousin prime]] *[[Prime quadruplet]] *[[Sexy prime]] *[[Sophie Germain prime]] *[[Cunningham chain]] *[[Goldbach's conjecture]] **[[Goldbach's weak conjecture]] *[[Second Hardy–Littlewood conjecture]] *[[Hardy–Littlewood circle method]] *[[Schinzel's hypothesis H]] *[[Bateman-Horn conjecture]] *[[Waring's problem]] **[[Brahmagupta-Fibonacci identity]] **[[Euler's four-square identity]] **[[Lagrange's four-square theorem]] **[[Taxicab number]] **[[Generalized taxicab number]] *[[Cabtaxi number]] *[[Schnirelmann density]] *[[Sumset]] *[[Landau-Ramanujan constant]] *[[Sierpinski number]] **[[Seventeen or Bust]] *[[Niven's constant]] ==[[Algebraic number theory]]== ''See [[list of algebraic number theory topics]]'' ==[[Quadratic form]]s== *[[Unimodular lattice]] *[[Fermat's theorem on sums of two squares]] **[[Proofs of Fermat's theorem on sums of two squares]] ==[[L-function]]s== *[[Riemann zeta function]] **[[Basel problem]] on ζ(2) **[[Hurwitz zeta function]] **[[Bernoulli number]] ***[[Agoh–Giuga conjecture]] ***[[Von Staudt–Clausen theorem]] *[[Dirichlet series]] *[[Euler product]] *[[Prime number theorem]] **[[Prime-counting function]] **[[Offset logarithmic integral]] **[[Legendre's constant]] **[[Skewes' number]] **[[Bertrand's postulate]] ***[[Proof of Bertrand's postulate]] ***[[Proof that the sum of the reciprocals of the primes diverges]] **[[Cramér's conjecture]] *[[Riemann hypothesis]] **[[Critical line theorem]] **[[Hilbert–Pólya conjecture]] **[[Generalized Riemann hypothesis]] **[[Mertens function]], [[Mertens conjecture]], [[Meissel–Mertens constant]] **[[De Bruijn–Newman constant]] *[[Dirichlet character]] *[[Dirichlet L-series]] **[[Siegel zero]] *[[Dirichlet's theorem on arithmetic progressions]] **[[Linnik's theorem]] **[[Elliott–Halberstam conjecture]] *[[Functional equation (L-function)]] *[[Chebotarev's density theorem]] *[[Local zeta function]] **[[Weil conjectures]] *[[Modular form]] **[[Modular group Gamma|modular group]] **[[Congruence subgroup]] **[[Hecke operator]] **[[Cusp form]] **[[Eisenstein series]] **[[Modular curve]] **[[Ramanujan–Petersson conjecture]] *[[Birch and Swinnerton-Dyer conjecture]] *[[Automorphic 