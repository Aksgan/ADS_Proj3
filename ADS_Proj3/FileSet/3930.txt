'''product backlog''' is a high-level list that is maintained throughout the entire project. It aggregates backlog items: broad descriptions of all potential features, prioritized as an absolute ordering by business value. It is therefore the “What” that will be built, sorted by importance. It is open and editable by anyone and contains rough estimates of both business value and development effort. Those estimates help the Product Owner to gauge the timeline and, to a limited extent prioritize. For example, if the “add spellcheck” and “add table support” features have the same business value, the one with the smallest development effort will probably have higher priority, because the [[return on investment|ROI]] (Return on Investment) is higher. The Product Backlog, and business value of each listed item is the property of the product owner. The associated development effort is however set by the Team. === Sprint backlog === The '''sprint backlog''' is the list of work the team must address during the next sprint. Features are broken down into tasks, which, as a best practice, should normally be between four and sixteen hours of work. With this level of detail the whole team understands exactly what to do, and potentially, anyone can pick a task from the list. Tasks on the sprint backlog are never assigned; rather, tasks are signed up for by the team members as needed, according to the set priority and the team member skills. This promotes self-organization of the team, and developer buy-in. The sprint backlog is the property of the team, and all included estimates are provided by the Team. Often an accompanying '''task board''' is used to see and change the state of the tasks of the current sprint, like “to do”, “in progress” and “done”. === Burn down === {{main|burn down chart}} The sprint [[burn down chart]] is a publicly displayed chart showing remaining work in the sprint backlog. Updated every day, it gives a simple view of the sprint progress. It also provides quick visualizations for reference. There are also other types of burndown, for example the '''release burndown chart''' that shows the amount of work left to complete the target commitment for a Product Release (normally spanning through multiple iterations) and the '''alternative release burndown chart''',<ref>[http://www.mountaingoatsoftware.com/pages/19-an-alternative-release-burndown-chart Invented by Mike Cohn, more info can be found here]</ref> which basically does the same, but clearly shows scope changes to Release Content, by resetting the baseline. It should not be confused with an [[earned value management|earned value chart]]. == Adaptive project management == The following are some general practices of Scrum: * "Working more hours" does not necessarily mean "producing more output" * "A happy team makes a tough task look simple" == Terminology == The following terminology is used in Scrum:<ref name="schwaberp141-143">Schwaber, pp. 141–143</ref> === Roles === ; Scrum Team: Product Owner, ScrumMaster and Team ; Product Owner: The person responsible for maintaining the Product Backlog by representing the interests of the stakeholders. ; ScrumMaster: The person responsible for the Scrum process, making sure it is used correctly and maximizing its benefits. ; Team: A cross-functional group of people responsible for managing itself to develop the product. === Artifacts === ; Sprint burn down chart: Daily progress for a Sprint over the sprint’s length. ; Product backlog: A prioritized list of high level requirements. ; Sprint backlog: A prioritized list of tasks to be completed during the sprint. === Others === ; Impediment: Anything that prevents a team member from performing work as efficiently as possible. ; Sprint: A time period (typically 2–4 weeks) in which development occurs on a set of backlog items that the Team has committed to. ; Sashimi: A report that something is "done". The definition of "done" may vary from one Scrum Team to another, but must be consistent within one team. ; Abnormal Termination: The Product Owner can cancel a Sprint if necessary.<ref>{{cite web | url = http://www.scrum.org/storage/scrumguides/Scrum%20Guide.pdf | title = Scrum: Developed and Sustained | coauthors = Ken Schwaber, Jeff Sutherland | date = | month = | year = | work = | publisher = | location = | page = | pages = 11 | at = | language = | trans_title = | format = | doi = | archiveurl = | archivedate = | accessdate = | quote = | ref = | separator = | postscript = }}</ref> The Product Owner may do so with input from the team, scrum master or management. For instance, management may wish to cancel a sprint if external circumstances negate the value of the sprint goal. If a sprint is abnormally terminated, the next step is to conduct a new Sprint planning meeting, where the reason for the termination is reviewed. ; Planning Poker: In the Sprint Planning Meeting, the team sits down to estimate its effort for the stories in the backlog. The Product Owner needs these estimates, so that he or she is empowered to effectively prioritize items in the backlog and, as a result, forecast releases based on the team’s velocity.<ref name="scrummethodology.com">{{cite web | url = http://scrummethodology.com/scrum-effort-estimation-and-story-points |title = Scrum Effort Estimation and Story Points}}</ref> ; Point Scale: Relates to an abstract point system, used to discuss the difficulty of the task, without assigning actual hours. Common systems of scale are linear (1,2,3,4...), [[Fibonacci number|Fibonacci]] (1,2,3,5,8...), Powers-of-2 (1,2,4,8...), and Clothes size (XS, S, M, L, XL).<ref name="scrummethodology.com"/> ; Definition of Done (DoD): The [[exit-criteria]] to determine whether a product backlog item is complete. In many cases the DoD requires that all [[regression testing|regression tests]] should be successful. ==Scrum modifications== ===Scrum-ban=== Scrum-ban is a software production model based on Scrum and [[Kanban (development)|Kanban]]. Scrum-ban is especially suited for maintenance projects or (system) projects with frequent and unexpected user stories or programming errors. In such cases the time-limited sprints of the Scrum model are of no appreciable use, but Scrum’s daily meetings and other practices can be applied, depending on the team and the situation at hand. Visualization of the work stages and limitations for simultaneous 