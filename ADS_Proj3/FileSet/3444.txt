by using asterisks (*) or bullets (•). *Allowing passwords of adequate length. (Some [[legacy system|legacy]] operating systems, including early versions{{Which?|date=September 2010}} of Unix and Windows, limited passwords to an 8 character maximum,<ref> [http://www.nasi.com/docs/pdfs/hp-ux_security_whitepaper.pdf HP-UX security whitepaper] "Passwords are limited to a maximum of eight significant characters" </ref><ref> [http://www.pcmag.com/article2/0,2817,2358985,00.asp "American Express: Strong Credit, Weak Passwords"] </ref><ref name="password_myths"> [http://www.symantec.com/connect/articles/ten-windows-password-myths "Ten Windows Password Myths"]: "NT dialog boxes ... limited passwords to a maximum of 14 characters" </ref><ref> [http://jira.codehaus.org/browse/REDBACK-87 "You must provide a password between 1 and 8 characters in length"] </ref> reducing security.) *Requiring users to re-enter their password after a period of inactivity (a semi log-off policy). *Enforcing a [[password policy]] to increase [[password strength]] and security. **Requiring periodic password changes. **Assigning randomly chosen passwords. **Requiring minimum password lengths. **Some systems require characters from various character classes in a password—for example, "must have at least one uppercase and at least one lowercase letter". However, all-lowercase passwords are more secure per keystroke than mixed capitalization passwords.<ref>[http://world.std.com/~reinhold/dicewarefaq.html#capitalize "To Capitalize or Not to Capitalize?"]</ref> **Providing an alternative to keyboard entry (e.g., spoken passwords, or [[biometrics|biometric]] passwords). *Using encrypted tunnels or [[password-authenticated key agreement]] to prevent access to transmitted passwords via network attacks *Limiting the number of allowed failures within a given time period (to prevent repeated password guessing). After the limit is reached, further attempts will fail (including correct password attempts) until the beginning of the next time period. However, this is vulnerable to a form of [[denial-of-service attack|denial of service attack]]. *Introducing a delay between password submission attempts to slow down automated password guessing programs. Some of the more stringent policy enforcement measures can pose a risk of alienating users, possibly decreasing security as a result. === Write down passwords on paper === Historically, many security experts asked people to memorize their passwords and "Never write down a password". More recently, many security experts such as [[Bruce Schneier]] recommend that people use passwords that are too complicated to memorize, write them down on paper, and keep them in a wallet.<ref> [http://www.schneier.com/crypto-gram-0105.html#8 Bruce Schneier : Crypto-Gram Newsletter] May 15, 2001 </ref><ref name="password_myth"> [http://www.symantec.com/connect/articles/ten-windows-password-myths "Ten Windows Password Myths"]: Myth #7. You Should Never Write Down Your Password </ref><ref> [http://news.cnet.com/Microsoft-security-guru-Jot-down-your-passwords/2100-7355_3-5716590.html?tag=nefd.ac "Microsoft security guru: Jot down your passwords"] </ref><ref> [http://www.cryptosmith.com/sanity/pwdilemma.html "The Strong Password Dilemma"] by Richard E. Smith: "we can summarize classical password selection rules as follows: The password must be impossible to remember and never written down." </ref><ref> [http://www.burtleburtle.net/bob/crypto/password.html "Choosing Random Passwords"] by Bob Jenkins </ref><ref> [http://www.cl.cam.ac.uk/TechReports/UCAM-CL-TR-500.pdf "The Memorability and Security of Passwords -- Some Empirical Results"] : "your password ... in a secure place, such as the back of your wallet or purse." </ref><ref> [http://world.std.com/~reinhold/dicewarefaq.html#writeitdown "Should I write down my passphrase?"] </ref> ==Password cracking== {{Main|Password cracking}} Attempting to crack passwords by trying as many possibilities as time and money permit is a [[brute force attack]]. A related method, rather more efficient in most cases, is a [[dictionary attack]]. In a dictionary attack, all words in one or more dictionaries are tested. Lists of common passwords are also typically tested. [[Password strength]] is the likelihood that a password cannot be guessed or discovered, and varies with the attack algorithm used. Passwords easily discovered are termed ''weak'' or ''vulnerable''; passwords very difficult or impossible to discover are considered ''strong''. There are several programs available for password attack (or even auditing and recovery by systems personnel) such as [[L0phtCrack]], [[John the Ripper]], and [[Cain (software)|Cain]]; some of which use password design vulnerabilities (as found in the Microsoft LANManager system) to increase efficiency. These programs are sometimes used by system administrators to detect weak passwords proposed by users. Studies of production computer systems have consistently shown that a large fraction of all user-chosen passwords are readily guessed automatically. For example, Columbia University found 22% of user passwords could be recovered with little effort.<ref>[http://www1.cs.columbia.edu/~crf/howto/password-howto.html Password<!-- Bot generated title -->]</ref> According to [[Bruce Schneier]], examining data from a 2006 [[phishing]] attack, 55% of MySpace passwords would be crackable in 8 hours using a commercially available Password Recovery Toolkit capable of testing 200,000 passwords per second in 2006.<ref>[http://www.schneier.com/blog/archives/2006/12/realworld_passw.html Schneier, Real-World Passwords]</ref> He also reported that the single most common password was ''password1'', confirming yet again the general lack of informed care in choosing passwords among users. (He nevertheless maintained, based on these data, that the general quality of passwords has improved over the years—for example, average length was up to eight characters from under seven in previous surveys, and less than 4% were dictionary words.<ref>[http://www.wired.com/politics/security/commentary/securitymatters/2006/12/72300 MySpace Passwords Aren't So Dumb]</ref>) ====1998 incident==== {{Expand section|date=December 2010}} On July 16, 1998, [[CERT Coordination Center|CERT]] reported an incident.<ref name="CERT IN-98.03">{{Cite web | url=http://www.cert.org/incident_notes/IN-98.03.html | title=CERT IN-98.03 | accessdate=2009-09-09}}</ref> ==Alternatives to passwords for access control== The numerous ways in which permanent or semi-permanent passwords can be compromised has prompted the development of other techniques. Unfortunately, some are inadequate in practice, and in any case few have become universally available for users seeking a more secure alternative.{{Citation needed|date=January 2010}} *[[One-time password|Single-use passwords]]. Having passwords which are only valid once makes many potential attacks ineffective. Most users find single use passwords extremely inconvenient. They have, however, been widely implemented in personal [[online banking]], where they are known as [[TAN (banking)|Transaction Authentication Numbers]] (TANs). As most home users only perform a small number of transactions each week, the single use issue has not led to intolerable customer dissatisfaction in this case. *[[Time-synchronized one-time passwords]] are similar in some ways to single-use passwords, but the value to be entered is displayed on a small (generally pocketable) item and changes every minute or so. *[[PassWindow]] one-time passwords are used as single-use passwords, but the dynamic characters to be entered are visible only when a user superimposes a unique printed visual key over a server generated challenge image shown on the user's screen. *Access controls based on [[public key cryptography]] e.g. [[Secure Shell|ssh]]. The necessary keys are usually too large to memorize (but see proposal [http://eprint.iacr.org/2005/434 Passmaze]) and must be stored on a local computer, [[security token]] or portable memory device, such as 