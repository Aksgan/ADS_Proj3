sent back to the server. As data integrity is a major concern for all distributed computing projects, all work units are validated through the use of a 2048 bit [[digital signature]]. Contributors to Folding@home may have [[user name]]s used to keep track of their contributions. Each user may be running the client on one or more CPUs; for example, a user with two computers could run the client on both of them. Users may also contribute under one or more team names; many different users may join together to form a team. Contributors are assigned a score indicating the number and difficulty of completed work units. Rankings and other statistics are posted to the Folding@home website http://folding.stanford.edu/. == Software == The Folding@home client consists of three separate components. *The client software acts as a download and file manager for work units and scientific cores, controls the cores, and is the software with which the user interacts. Separating the client from the core enables the scientific methods to be updated automatically (or new methods to be added) without a client update. *The Work Unit is the actual data that the client is being asked to process. *The Core performs the calculations on the work unit. Folding@home's cores are based on modified versions of seven [[Molecular dynamics|molecular simulation]] programs for calculation: [[TINKER]], [[GROMACS]], [[AMBER]], [[CPMD]], [[SHARPEN]], [[ProtoMol]] and [[Desmond (software)|Desmond]].<ref>{{cite web | url = http://folding.stanford.edu/QMD.html | title = Folding@home with QMD core FAQ | accessdate = 2006-12-03 | author = Vijay Pande | date= 2005-10-16 | format = FAQ| publisher = Stanford University }} ''The site indicates that Folding@home uses a modification of CPMD allowing it to run on the supercluster environment.''</ref><ref name="fahdev">{{cite web | url = http://folding.typepad.com/news/2009/06/how-does-fah-code-development-and-sysadmin-get-done.html | title = Folding@home: How does FAH code development and sysadmin get done? | accessdate = 2009-06-25 | author = Vijay Pande | date = 2009-06-17}}</ref> Where possible, [[Compiler optimization|optimizations]] are used to speed the process of calculation. There are many variations on these base simulation programs, each of which is given an [[Arbitrariness|arbitrary]] identifier (Core xx):<ref name="cores">{{cite web | url = http://fahwiki.net/index.php/Cores | title = Cores - FaHWiki | accessdate = 2007-11-06 | format = FAQ }}</ref> : ===Active Cores=== Cores listed in this section may not necessarily be being used by the project at any given time, but are included here as their use may be resumed at any time without notice. Deprecated and forthcoming cores are in the next section. * [[GROMACS]] (all variants of this core use [[SIMD]] optimizations including [[Streaming SIMD Extensions|SSE]], [[3dnow|3DNow+]] or [[AltiVec]], where available, unless otherwise specified) ** Gromacs (Core 78) *** Available for all [[Uniprocessor system|Uniprocessor]] clients only. ** DGromacs (Core 79) *** [[Double precision]] Gromacs, uses [[SSE2]] only. *** Available for all Uniprocessor clients only. ** DGromacsB (Core 7b) *** Nominally an update of DGromacs, but is actually based on the [[Symmetric multiprocessing|SMP]]/[[Graphics processing unit|GPU]] codebases (and is therefore a completely new core). As a result, both are still in use. *** Double precision Gromacs, uses SSE2 only. *** Available for all Uniprocessor clients only. ** DGromacsC (Core 7c) *** Double precision Gromacs, uses SSE2 only. *** Available on [[Microsoft Windows|Windows]] and [[Linux]] Uniprocessor clients only. ** GBGromacs (Core 7a) *** Gromacs with the [[Generalized Born]] [[Implicit solvation|implicit solvent]] model. *** Available for all Uniprocessor clients only. ** Gromacs SREM (Core 80) *** Gromacs Serial [[Parallel tempering|Replica Exchange]] Method. *** The Gromacs Serial Replica Exchange Method core, also known as GroST (Gromacs Serial replica exchange with Temperatures), uses the Replica Exchange method (also known as REMD or Replica Exchange Molecular Dynamics) in its simulations. *** Available for Windows and Linux Uniprocessor clients only. ** GroSimT (Core 81) *** Gromacs with Simulated Tempering. *** Available for Windows and Linux Uniprocessor clients only. ** Gromacs 33 (Core a0) *** Uses the Gromacs 3.3 [[codebase]]. *** Available for all Uniprocessor clients only. [[Image:GPU - F@H.jpg|thumb|right| NVIDIA GPU v2.0 r1 client for Windows.]] ** Gro-A3 core (Core a3) *** SMP version of the Gromacs A4 core. *** Uses threads rather than MPI for multicore support. *** Available for SMP2 client only. *** In open beta testing before general release. *** Released January 24, 2010. ** Gro-A4 (Core a4) *** A single core version of the Gromacs SMP2 core. *** Available for Windows and Linux Uniprocessor clients only. ** GroGPU2 (Core 11) *** [[Graphics processing unit|Graphics Processing Unit]] variant for [[ATI Technologies|ATI]] [[Compute Abstraction Layer|CAL]]-enabled and [[Nvidia|nVidia]] [[CUDA]]-enabled GPUs. *** Comes in two separate versions, one each for ATI and nVidia, but both have the same Core ID. *** GPUs do not support SIMD optimizations by design, so none are used in this core. *** Available for GPU2 client only. ** ATI-DEV (Core 12) *** Graphics Processing Unit developmental core for ATI CAL-enabled GPUS. *** Does not support SIMD optimizations. *** Available for GPU2 client only. ** NVIDIA-DEV (Core 13) *** Graphics Processing Unit developmental core for nVidia CUDA-enabled GPUs. *** Does not support SIMD optimizations. *** Available for GPU2 client only. ** GroGPU2-MT (Core 14)<ref>{{cite web | url = http://foldingforum.org/viewtopic.php?f=52&t=8734&start=0 | title = Folding Forum: Announcing project 5900 and Core_14 on advmethods | accessdate = 2009-03-02 | author = | year = 2009 | publisher = }}</ref> *** Graphics Processing Unit variant for nVidia CUDA-enabled GPUs. *** Contains additional debugging code compared to the standard Core 11. *** Does not support SIMD optimizations. *** Released March 2, 2009. *** Available for GPU2 client only. ** Gro-PS3 (Does not have a known ID number, but also called SCEARD core) *** [[PlayStation 3]] variant. *** No SIMD optimizations, uses [[Cell (microprocessor)#Synergistic Processing Elements (SPE)|SPE]] cores for optimization. *** Available for PS3 client only. * [[AMBER]] ** PMD (Core 82)<ref name="cores"/> *** No optimizations. *** Available for Windows and Linux Uniprocessor clients only. * [[ProtoMol]] <ref name="about"/> ** Protomol Core (Core b4) ***In open beta testing before general release. ***Released to open testing on February 11, 2010. * [[OpenMM]] ** Gromacs-OpenMM Core (Core 15) ***In open beta testing before general release. 