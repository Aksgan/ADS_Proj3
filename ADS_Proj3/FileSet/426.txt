February 18, 2010. * [http://www.bigdatasummit.com/2010/dallas/ Big Data Summit 2010] - Dallas, April 27, 2010. * [http://www.bigdatasummit.com/2010/dc/ Big Data Summit 2010] - Washington DC, May 6, 2010. * [http://www.bigdatacamp.org/sv/ BigDataCamp Silicon Valley 2010] - @HadoopSummit, June 28, 2010. * [http://www.bigdatacamp.org/sv/ BigDataCamp Silicon Valley 2011] - @Strata Conf, January 31, 2011. {{Database models}} {{Databases}} {{Software Engineering}} {{DEFAULTSORT:Big Data}} [[Category:Database management systems]] [[Category:Data mining]] [[Category:Data modeling]] [[Category:Database theory]] [[Category:Distributed computing problems]] [[Category:Emerging technology]] [[Category:Formal sciences]] [[Category:Project management]] [[Category:System administration]] [[Category:Technology development]] [[Category:Technology forecasting]] [[Category:Technology in society]] [[Category:Transaction processing]] {{comp-sci-stub}} [[bs:Velika količina podataka]] [[fr:Big data]]</text> </page> <page> <id>3759</id> <title>Bigraph</title> <text>__NOTOC__ {{about|the formalism for [[ubiquitous computing]]|graphs on two kinds of vertices, where all edges connect different kinds of vertices|Bipartite graph}} A '''bigraph''' (often used in the plural '''bigraphs''') can be modelled as the superposition of a [[Graph (mathematics)|graph]] (the ''link graph'') and a set of [[Tree (mathematics)|trees]] (the ''place graph'').<ref name="intro">''[http://www.itu.dk/research/pls/wiki/index.php/A_Brief_Introduction_To_Bigraphs A Brief Introduction To Bigraphs]'', [[IT University of Copenhagen]], Denmark.</ref><ref name="milner">[[Robin Milner]], ''[http://www.cl.cam.ac.uk/archive/rm135/uam-theme.html The Bigraphical Model]'', [[University of Cambridge Computer Laboratory]], UK.</ref> Each [[Node (mathematics)|node]] of the bigraph is part of a graph and also part of some tree that describes how the nodes are nested. Bigraphs can be conveniently and formally displayed as [[diagram]]s.<ref name="intro" /> They have applications in the modelling of distributed systems for [[ubiquitous computing]] and can be used to describe [[Mobile agent|mobile]] interactions. They have also been used by [[Robin Milner]] in an attempt to subsume [[Calculus of Communicating Systems]] (CCS) and [[Pi calculus|π-calculus]].<ref name="milner" /> They have been studied in the context of [[category theory]].<ref>Robin Milner, "Bigraphs and Their Algebra". ''[[Electronic Notes in Theoretical Computer Science]]'', Volume 209, pages 5–19, 2008. ''Proceedings of the LIX Colloquium on Emerging Trends in Concurrency Theory'' (LIX 2006). {{doi|10.1016/j.entcs.2008.04.002}}.</ref> ==See also== * [[Bisimulation]] * [[Combinatorial species]] ==Bibliography== * Søren Debois and Troels Christoffer Damgaard, ''[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.73.176&rep=rep1&type=pdf Bigraphs by Example]''. IT University Technical Report Series TR-2005-61, [[IT University of Copenhagen]], Denmark, 2005. ISBN 87-7949-090-5. ==References== {{reflist}} ==External links == * [http://www.itu.dk/~mikkelbu/research/bigraphsbib/ Bibliography on Bigraphs] {{Formalmethods-stub}} {{comp-sci-theory-stub}} [[Category:Ubiquitous computing]] [[Category:Formal methods terminology]] [[Category:Theoretical computer science]]</text> </page> <page> <id>3762</id> <title>Bijankhan Corpus</title> <text>[[Image:Bijankhan Corpus Logo.gif|thumb|left||Bijankhan Corpus Logo]] The '''Bijankhan corpus''' is a tagged [[Text corpus|corpus]] that is suitable for natural language processing research on the [[Persian language]]. This collection is gathered from daily news and common texts. In this collection all documents are categorized into different subjects such as political, cultural, etc; in about 4300 different subject categories. The corpus contains about 2.6 million manually tagged words with a tag set that contains 550 Persian [[Part-of-speech tagging|part-of-speech tags]]. The Bijankhan corpus was created by the [http://ece.ut.ac.ir/dbrg Database Research Group] at the [[University of Tehran]]. The corpus is non-[[free content|free]] in that it is not free for commercial use, although these restrictions [[Iran and copyright issues|vary by country]]. The Bijankhan corpus is named after [[Pr. M. Bijankhan]] from the faculty of Literature & Human Science at the University of Tehran due to his contributions in this area. ==See also== *[[Hamshahri Corpus]] *[[Persian Today Corpus]] ==External links== *[http://ece.ut.ac.ir/dbrg/Bijankhan Bijankhan corpus]. [[Category:Corpora]] [[Category:Persian language]]</text> </page> <page> <id>3777</id> <title>Bill Griswold</title> <text>'''William G. Griswold''' is a professor of Computer Science and Engineering at the [[University of California, San Diego]].<ref name="profile">[http://www-cse.ucsd.edu/faculty-research/faculty-research-profiles.html?selectname=GriswoldW Faculty research profile], Department of Computer Science and Engineering, UC San Diego, retrieved 2010-01-25.</ref> His research is in [[software engineering]]; he is best known for his works on [[aspect-oriented programming]] using [[AspectJ]]<ref>{{citation | last1 = Kiczales | first1 = Gregor | last2 = Hilsdale | first2 = Erik | last3 = Hugunin | first3 = Jim | last4 = Kersten | first4 = Mik | last5 = Palm | first5 = Jeffrey | last6 = Griswold | first6 = William G. | contribution = An overview of AspectJ | doi = 10.1007/3-540-45337-7_18 | pages = 327–354 | publisher = Springer-Verlag | series = Lecture Notes in Computer Science | title = ECOOP 2001 — Object-Oriented Programming | volume = 2072 | year = 2001}}.</ref> and on finding [[Invariant (computer science)|invariants of programs]] to support [[software evolution]].<ref>{{citation | last1 = Ernst | first1 = Michael D. | last2 = Cockrell | first2 = James | last3 = Griswold | first3 = William G. | last4 = Notkin | first4 = David | contribution = Dynamically discovering likely program invariants to support program evolution | doi = 10.1109/ICSE.1999.841011 | pages = 213–224 | title = 21st International Conference on Software Engineering (ICSE'99) | year = 1999}}.</ref> Griswold received his Ph.D. from the [[University of Washington]], and joined the UCSD faculty in 1991.<ref name="profile"/> He has been the chair of [[ACM SIGSOFT]],<ref name="profile"/><ref>[http://www.acm.org/sigs/sgb/fy06annrpt/SIGSOFT06.pdf SIGSOFT FY'06 Annual Report July 2005 - June 2006].</ref> co-program chair of the 2005 [[International Conference on Software Engineering]],<ref name="profile"/><ref>[http://ieeexplore.ieee.org/iel5/10409/33070/01553524.pdf ICSE 2005 organization].</ref> and program chair of the 2002 ACM SIGSOFT Symposium on the Foundations of Software Engineering.<ref name="profile"/><ref>[http://veryoldwww.cs.pitt.edu/FSE-10/OC.html SIGSOFT 2002 Organizing Committee], retrieved 2010-01-25.</ref> He is the son of [[Ralph Griswold]].<ref>As stated on [http://cseweb.ucsd.edu/~wgg/ Bill Griswold's home page] at UCSD, retrieved 2010-01-25.</ref> ==References== {{reflist}} ==External links== *[http://cseweb.ucsd.edu/~wgg/ Home page] at UCSD {{DEFAULTSORT:Griswold, Bill}} [[Category:Year of birth missing (living people)]] [[Category:Living people]] [[Category:American computer scientists]] [[Category:University of Washington alumni]] [[Category:University of California, San Diego faculty]] {{Compu-scientist-stub}}</text> </page> <page> <id>3793</id> <title>Billiard-ball computer</title> <text>[[File:Toffoli BilliardBall.gif|thumb|400px|[[Fredkin gate|Fredkin]] and [[Toffoli Gate]] Billiard Ball Model]] A '''billiard ball computer''', also known as a '''conservative logic circuit''', is an idealized model of a computing machine based on [[newtonian dynamics]]. Instead of using electronic signals like a conventional [[Von Neumann machine|computer]], it relies on the motion of spherical billiard balls in a friction-free environment made of buffers against which the balls bounce perfectly. It was devised to investigate the relation between computation and [[reversible process]]es in physics, and to provide context to the [[Halting problem]] and similar results in computability theory. A paradox seems to arise as a consequence of the existence of this ideal machine, since it shows that there exists no algorithm to predict whether the arbitrary billiard-ball system provides an "output" for any given "input". This leads to an unexpected{{ref|whew}} conclusion: the question whether a given 