the language standard had not evolved features such as variable scoping. It is generally recognized that this code is not very readable to many programmers today. Though it should be noted that the code is expert friendly, (i.e. to acculturated VistA programmers it is readable and appropriately structured) - this code is an example of code that has been used effectively for many years. The culture and style of long lived application code cannot and does not change overnight, and when code continues to work, such cultures focus on adding new functionality rather than updating code simply for stylistic reasons. Due to the terse nature of fully abbreviated MUMPS code, the size of similar code in other programming languages providing the same functionality would be considerably larger. <source lang="text"> %DTC %DTC ; SF/XAK - DATE/TIME OPERATIONS ;1/16/92 11:36 AM ;;19.0;VA FileMan;;Julxamples of Valid Dates:" D % S A1=" JAN 20 1957 or 20 JAN 57 or 1/20/57"_$S(%DT'["N":" or 012057",1:"") D % S A1=" T (for TODAY), T+1 (for TOMORROW), T+2, T+7, etc." D % S A1=" T-1 (for YESTERDAY), T-3W (for 3 WEEKS AGO), etc." D % S A1="If the year is omitted, the computer "_$S(%DT["P":"assumes a date in the PAST.",1:"uses the CURRENT YEAR.") D % I %DT'["X" S A1="You may omit the precise day, as: JAN, 1957" D % I %DT'["T",%DT'["R" G 0 S A1="If the date is omitted, the current date is assumed." D % S A1="Follow the date with a time, such as JAN 20@10, T@10AM, 10:30, etc." D % S A1="You may enter a time, such as NOON, MIDNIGHT or NOW." D % I %DT["S" S A1="Seconds may be entered as 10:30:30 or 103030AM." D % I %DT["R" S A1="Time is REQUIRED in this response." D % 0 Q:'$D(%DT(0)) S A1=" " D % S A1="Enter a date which is "_$S(%DT(0)["-":"less",1:"greater")_" than or equal to " D % S Y=$S(%DT(0)["-":$P(%DT(0),"-",2),1:%DT(0)) D DD^%DT:Y'["NOW" I '$D(DDS) W Y,"." K A1 Q S DDH(DDH,"T")=DDH(DDH,"T")_Y_"." K A1 Q ; % I '$D(DDS) W !," ",A1 Q S DDH=DDH+1,DDH(DDH,"T")=" "_A1 Q </source> <!-- [NOTE: this example is extracted from VA FileMan Version 19.0. There is no copyright notice in the text of the source code or any of the accompanying documents; FMANPROG.TXT and FMANUSER.TXT each explicitly contain the statement "VA FileMan is a public domain software package that is developed and maintained by the Department of Veterans Affairs." Thus, no copyright permission is required to reproduce this passage on Wikipedia. -- Daniel P. B. Smith] --> The following code is a complete implementation of [[ROT13]], a trivially breakable cipher used for various purposes on the Net, not high security. It illustrates the compact nature of MUMPS code and is rather less cryptic than the sample above. <source lang="text"> ST ; ROT13 ; Gunter Rensch ; 2000-01-03 ; Encrypt/Decrypt ROT13 Q ; no direct execution ; ; call from your program with ; S A="String" ; S A=$$ROT^ROT13(.A) ; ROT(R) ; S S1="ABCDEFGHIJKLMNOPQRSTUVWXYZ" S S2="NOPQRSTUVWXYZABCDEFGHIJKLM" S s1="abcdefghijklmnopqrstuvwxyz" S s2="nopqrstuvwxyzabcdefghijklm" S R=$TR(R,S1_s1,S2_s2) Q R </source> A second implementation is below, which illustrates the possibilities of concision in MUMPS. <source lang="text"> s A="String" F i=1:1:$L(A) W $c($S($A($E(A,i))<91:$A($E(A,i))-52#26+65,1:$A($E(A,i))-84#26+97)) </source> Finally, one of the shortest programs ever written in a high-level language {{Citation needed|date=November 2010}}, demonstrating the extreme concision of which MUMPS is capable. <source lang="text">s x="x x" x x</source> The same algorithm using expanded variable and command names <source lang="text">Set X="Xecute X" Xecute X</source> This program sets a value of "x x" to a variable named '''x''', and then launches an infinite recursive execution of '''x''', resulting in stack overflow. At 13 characters, including spaces and an end-of-line mark, the first variant demonstrates that it is also possible to write obscure and obfuscated code in M. ==See also== * [[Profile Scripting Language|PSL]] an extension to MUMPS * [[Caché ObjectScript]] an object oriented extension to MUMPS from a prominent MUMPS vendor * [[EsiObjects]] an Open Source Object Oriented extension to MUMPS ==References== {{No footnotes|article|date=March 2008}} {{Reflist|2}} ==Further reading== *Walters, Richard (1989). "ABCs of MUMPS. 1989: Butterworth-Heinemann, ISBN 1-55558-017-3. *Walters, Richard (1997). ''M Programming: A Comprehensive Guide.'' Digital Press. ISBN 1-55558-167-6. *Lewkowicz, John. ''The Complete MUMPS : An Introduction and Reference Manual for the MUMPS Programming Language.'' ISBN 0-13-162125-4 *Kirsten, Wolfgang, et al. (2003) ''Object-Oriented Application Development Using the Caché Postrelational Database'' ISBN 3-540-00960-4 *Martínez de Carvajal Hedrich, Ernesto (1993). "El Lenguaje MUMPS". Completa obra en castellano sobre el lenguaje Mumps. ISBN 84-477-0125-5. Distribuido exclusivamente por su author (ecarvajal@hedrich.es) *O'Kane, K.C.; ''A language for implementing information retrieval software,'' Online Review, Vol 16, No 3, pp 127–137 (1992). *O'Kane, K.C.; and 