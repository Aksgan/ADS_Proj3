hardware. Similarly, in the high-resolution graphics mode, color was determined by pixel position and could thus be implemented in software, saving Wozniak the chips needed to convert bit patterns to colors. This also allowed for sub-pixel [[font]] rendering since orange and blue pixels appeared half a pixel-width further to the right on the screen than green and purple pixels.<ref>{{cite web|last=Gibson |first=Steve|title=The origins of sub-pixel font rendering|url=http://www.grc.com/ctwho.htm|accessdate=2006-08-04}}</ref> Color on the Apple II series took advantage of a quirk of the [[National Television System Committee|NTSC]] television signal standard, which made color display relatively easy and inexpensive to implement. The original NTSC [[television]] signal specification was black-and-white. Color was tacked on later by adding a 3.58-MHz subcarrier signal that was partially ignored by B&W TV sets. Color is encoded based on the ''[[phase (waves)|phase]]'' of this signal in relation to a reference ''[[color burst]]'' signal. The result is that the position, size, and intensity of a series of pulses define color information. These pulses can translate into ''[[pixel]]s'' on the computer screen. The Apple II display provided two pixels per subcarrier cycle. When the color burst reference signal was turned on and the computer attached to a color display, it could display green by showing one alternating pattern of pixels, magenta with an opposite pattern of alternating pixels, and white by placing two pixels next to each other. Later, blue and orange became available by tweaking the offset of the pixels by half a pixel-width in relation to the colorburst signal. The high-resolution display offered more colors simply by compressing more, narrower pixels into each subcarrier cycle. The coarse, low-resolution graphics display mode worked differently, as it could output a short burst of high-frequency signal per pixel to offer more color options. The epitome of the Apple II design philosophy was the Apple II sound circuitry. Rather than having a dedicated sound-synthesis chip, the Apple II had a toggle circuit that could only emit a click through a built-in speaker or a line out jack; all other sounds (including two, three and, eventually, four-voice music and playback of audio samples and speech synthesis) were generated entirely by software that clicked the speaker at just the right times. Not for nearly a decade would an Apple II be released with a dedicated sound chip (though with six expansion slots, users could add sound functionality via a soundcard like the [[Mockingboard]]). Similar techniques were used for cassette storage: the cassette output worked the same as the speaker, and the input was a simple [[Zero crossing threshold detector|zero-crossing detector]] that served as a relatively crude (1-bit) audio digitizer. Routines in the ROM were used to encode and decode data in [[frequency-shift keying]] for the cassette. Wozniak's open design and the Apple II's multiple expansion slots permitted a wide variety of third-party devices, including [[Apple II peripheral cards]] such as [[Apple II serial cards|Serial controllers]], display controllers, memory boards, hard disks, and networking components. There were plug-in [[expansion card]]s — such as the ''Z80-card''<ref name=z80/> — that permitted the Apple to use the [[Zilog Z80|Z80]] processor and run a multitude of programs developed under the [[CP/M]] operating system,<ref name="z80"/> including the [[dBase|dBase II]] database and the [[WordStar]] word processor. There was also a third-party [[Motorola 6809|6809]] card that would allow [[OS-9]] Level One to be run. The [[Mockingboard]] sound card greatly improved audio capabilities, allowing simple music synthesis and text-to-speech functions. Eventually, [[Apple II accelerators|Apple II accelerator cards]] were created to double or quadruple the computer's speed. ===Apple II Plus=== {{Main|Apple II Plus}} [[File:Apple II Plus.jpg|thumb|right|Apple II Plus]] The '''Apple II Plus''', introduced in June 1979,<ref>{{cite web|url=http://apple2history.org/history/ah06.html|title=Apple II History Chap 6}}</ref><ref>{{cite web|url=http://lowendmac.com/orchard/05/0509.html|title=Macintosh Prehistory: The Apple I and Apple II Era}}</ref><ref>{{cite web|url=http://applemuseum.bott.org/sections/products.html|title=Apple Products}}</ref><ref>{{cite web|url=http://lrs.ed.uiuc.edu/students/madkins/timeline.html|title=EDTechTimeline}}</ref> included the [[Applesoft BASIC]] programming language in [[Read-only memory|ROM]]. This [[Microsoft]]-authored dialect of BASIC, which was previously available as an upgrade, supported floating-point arithmetic, and became the standard BASIC dialect on the Apple II series (though it ran at a noticeably slower speed than Steve Wozniak's Integer BASIC). The Apple II Plus was otherwise identical to the original Apple II. The smaller memory sizes were no longer available, so the II Plus always had a total of 48 kB of RAM, expandable to 64 kB by means of the "language card", a 16 kB RAM expansion card that could be installed in the computer's slot 0. The Apple's 6502 microprocessor could support up to 64 kB of memory, and a machine with 48 kB RAM reached this limit because of the additional 12 kB of read-only memory and 4 kB of I/O addresses. For this reason, the extra RAM in the language card was bank-switched over the machine's built-in ROM, allowing code loaded into the additional memory to be used as if it actually were ROM. Users could thus load Integer BASIC into the language card from disk and switch between the Integer and Applesoft dialects of BASIC with DOS 3.3's INT and FP commands just as if they had the BASIC ROM expansion card. The language card was also required to use the [[UCSD Pascal]] and [[FORTRAN|FORTRAN 77]] compilers, which were released by Apple at about the same time. These ran under the [[UCSD Pascal|UCSD p-System]] operating system, which had its own disk format and emitted code for a "virtual machine" rather than the actual 6502 processor. The UCSD P-system had a curious approach to [[memory management]], which became even more curious on the [[Apple III]]. A [[TEMPEST]] approved version of the Apple II Plus called the Microfix was developed in 1980 by the [[Georgia Tech Research Institute]] for [[U.S. Army]] [[FORSCOM]]. Fielded in 1982, the Microfix system was the first tactical system using video disk ([[Laserdisk]]) map technology providing zoom and scroll over map imagery coupled with a point database of intelligence data such as [[order of battle]], airfields, roadways, and bridges.<ref>{{cite web|url=http://training.esri.com/campus/library/Bibliography/RecordDetail.cfm?ID=16159|title=The development of small computer geographic analysis systems for military applications}}</ref><ref>{{cite web|url= http://www.falconview.org/trac/FalconView/raw-attachment/wiki/Presentations/Moving_Maps.pdf|title= Moving Maps: Evolution in GIS}}</ref><ref>{{cite web|url=http://www.fas.org/irp/doddir/army/fm34_3.pdf|title=U.S. Army Field Manual 34-3, Intelligence Analysis}}</ref> ===Apple II Europlus and J-Plus=== 