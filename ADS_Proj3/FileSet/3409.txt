paging is named <tt>pagefile.sys</tt>. The default location of the page file is in the root directory of the partition where Windows is installed. Windows can be configured to use free space on any available drives for pagefiles. It is required, however, for the boot partition (i.e. the drive containing the Windows directory) to have a pagefile on it if the system is configured to write either kernel or full memory dumps after a [[Blue Screen of Death|crash]]. Windows uses the paging file as temporary storage for the memory dump. When the system is rebooted, Windows copies the memory dump from the pagefile to a separate file and frees the space that was used in the pagefile.<ref>{{cite web | url=http://blogs.msdn.com/iliast/archive/2006/12/11/crash-dump-analysis.aspx | title=Crash Dump Analysis | last=Tsigkogiannis | first=Ilias | date=December 11, 2006 | accessdate=2008-07-22 | publisher=MSDN Blogs | work=Ilias Tsigkogiannis' Introduction to Windows Device Drivers }}</ref> ====Fragmentation==== In Windows's default configuration the pagefile is allowed to expand beyond its initial allocation when necessary. If this happens gradually, it can become heavily [[file system fragmentation|fragmented]] which can potentially cause performance problems.<ref>{{cite web | url=http://technet.microsoft.com/en-us/sysinternals/bb897426 | title=Windows Sysinternals PageDefrag | work=Sysinternals | publisher=Microsoft | date=November 1, 2006 | accessdate=2010-12-20 }}</ref> The common advice given to avoid this is to set a single "locked" pagefile size so that Windows will not expand it. However, the pagefile only expands when it has been filled, which, in its default configuration, is 150% the total amount of physical memory.<ref>{{cite web | url=http://support.microsoft.com/kb/889654 | title=How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP (MSKB889654_ | work=Knowledge Base | publisher=Microsoft | date=November 7, 2007 | accessdate=2007-12-26 }}</ref> Thus the total demand for pagefile-backed virtual memory must exceed 250% of the computer's physical memory before the pagefile will expand. The fragmentation of the pagefile that occurs when it expands is temporary. As soon as the expanded regions are no longer in use (at the next reboot, if not sooner) the additional disk space allocations are freed and the pagefile is back to its original state. Locking a page file's size can be problematic in the case that a Windows application requests more memory than the total size of physical memory and the page file. In this case, requests to allocate memory fail, which may cause applications and system processes to fail. Supporters of this view will note that the page file is rarely read or written in sequential order, so the performance advantage of having a completely sequential page file is minimal. However, it is generally agreed that a large page file will allow use of memory-heavy applications, and there is no penalty except that more disk space is used. [[Defragment]]ing the page file is also occasionally recommended to improve performance when a Windows system is chronically using much more memory than its total physical memory.{{citation needed|date=September 2010}} This view ignores the fact that, aside from the temporary results of expansion, the pagefile does not become fragmented over time. In general, performance concerns related to pagefile access are much more effectively dealt with by adding more physical memory. ===Unix and Unix-like systems=== [[Unix]] systems, and other [[Unix-like]] operating systems, use the term "swap" to describe both the act of moving memory pages between RAM and disk, and the region of a disk the pages are stored on. In some of those systems, it is common to use a separate whole partition of a hard disk for swapping. These partitions are called ''swap partitions''. Some of those systems only support swapping to a swap partition; others also support swapping to files. ====Linux==== With the 2.6 Linux kernel, swap files are just as fast<ref>{{cite web|url=http://lkml.org/lkml/2006/5/29/3 |title="Jesper Juhl": Re: How to send a break? - dump from frozen 64bit linux |publisher=LKML |date=2006-05-29 |accessdate=2010-10-28}}</ref><ref name="autogenerated2005">{{cite web|url=http://lkml.org/lkml/2005/7/7/326 |title=Andrew Morton: Re: Swap partition vs swap file |publisher=LKML |date= |accessdate=2010-10-28}}</ref> as swap partitions. The kernel keeps a map of where the swap file exists, and accesses the disk directly, bypassing caching and filesystem overhead.<ref name="autogenerated2005"/> [[Red Hat]] recommends using a swap partition.<ref name="autogenerated1">http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5/html/Deployment_Guide/ch-swapspace.html "Swap space can be a dedicated swap partition (recommended), a swap file, or a combination of swap partitions and swap files."</ref> The administrative flexibility{{Specify|date=August 2010}} of swap files can outweigh the other advantages{{Specify|date=February 2010}} of swap partitions.{{Citation needed|date=August 2010}} Linux supports using a virtually unlimited number of swapping devices, each of which can be assigned a priority. When the operating system needs to swap pages out of physical memory, it uses the highest-priority device with free space. If multiple devices are assigned the same priority, they are used in a fashion similar to level 0 [[Redundant array of independent disks|RAID]] arrangements. This provides improved performance as long as the devices can be accessed efficiently in parallel. Therefore, care should be taken assigning the priorities. For example, swaps located on the same physical disk should not be used in parallel, but in order ranging from the fastest to the slowest (i.e.: the fastest having the highest priority). ====Mac OS X==== [[Mac OS X]] supports both swap partitions and the use of swap files, but the default and recommended configuration is to use multiple swap files.<ref>{{cite web |url=http://arstechnica.com/reviews/os/macosx-10-1.ars/7 |title=Mac OS X 10.1 |author=[[John Siracusa]] |publisher=Ars Technica |date=October 15, 2001 |accessdate=2008-07-23 }}</ref> ====Solaris==== [[Solaris (operating system)|Solaris]] allows swapping to raw disk slices as well as files. The traditional method is to use slice 1 (ie. the second slice) on the OS disk to house swap. Swap setup is managed by the system boot process if there are entries in the "vfstab" file, but can also be managed manually through the use of the "swap" command. While it is possible to remove, at runtime, all swap from a lightly loaded system, Sun does not recommend it.{{citation needed|date=January 2011}} Recent additions to the [[ZFS]] file system allow creation of ZFS devices that can be used as swap partitions. Swapping to normal files on ZFS file systems is not supported.{{citation needed|date=January 2011}} ===AmigaOS 4=== [[AmigaOS 4.0]] "Final update" revision introduced a 