[[Library 2.0]] * [[Porn 2.0]] * [[Science 2.0]] ==References== {{Ibid|date=July 2010}} {{Reflist|colwidth=30em}} ==External links== *[[Deloitte & Touche LLP]] - Solution Canada (2008 study) - [http://www.deloitte.com/dtt/article/0,1002,cid=199524,00.html Change your world or the world will change you: The future of collaborative government and Web 2.0] *[[McKinsey & Company]] - Global Survey - [http://www.mckinseyquarterly.com/Information_Technology/Applications/How_businesses_are_using_Web_20_A_McKinsey_Global_Survey_1913?gp=1 McKinseyQuarterly.com], How businesses are using Web 2.0, June 2008 *[http://www.uic.edu/htbin/cgiwrap/bin/ojs/index.php/fm/issue/view/263/showToc UIC.edu ], "Critical Perspectives on Web 2.0", Special issue of ''[[First Monday (journal)|First Monday]]'', 13(3), 2008. * MacManus, Richard. Porter, Joshua. [http://www.digital-web.com/articles/web_2_for_designers/ Digital-Web.com], "Web 2.0 for Designers", ''[[Digital Web Magazine]]'', May 4, 2005. * Graham Vickery, Sacha Wunsch-Vincent: [http://www.oecd.org/document/40/0,3343,en_2649_201185_39428648_1_1_1_1,00.html OECD.org ], "Participative Web and User-Created Content: Web 2.0, Wikis and Social Networking; [[OECD]], 2007 <!-- Please DON'T ADD YOUR BLOG POST here. Wikipedia is not a mere collection of links. --> [[Category:Branding]] [[Category:Buzzwords]] [[Category:Neologisms]] [[Category:Cloud applications]] [[Category:Web services]] [[Category:Web 2.0| ]] [[Category:Internet memes]] [[Category:Social information processing]] [[Category:Internet ages]] [[Category:2000s]] [[ar:ويب 2.0]] [[bn:ওয়েব ২.০]] [[zh-min-nan:Web 2.0]] [[bg:Web 2.0]] [[ca:Web 2.0]] [[cs:Web 2.0]] [[da:Web 2.0]] [[de:Web 2.0]] [[et:Veeb 2.0]] [[el:Web 2.0]] [[es:Web 2.0]] [[eu:Web 2.0]] [[fa:وب ۲٫۰]] [[fr:Web 2.0]] [[gl:Web 2.0]] [[ko:웹 2.0]] [[hy:Web 2.0]] [[hi:Web 2.0]] [[hr:Web 2.0]] [[id:Web 2.0]] [[it:Web 2.0]] [[he:וב 2.0]] [[ku:Web 2.0]] [[lt:Antrosios kartos žiniatinklis]] [[hu:Web 2.0]] [[mk:Веб 2.0]] [[ml:വെബ് 2.0]] [[nl:Web 2.0]] [[ja:Web 2.0]] [[no:Web 2.0]] [[pl:Web 2.0]] [[pt:Web 2.0]] [[ro:Web 2.0]] [[ru:Веб 2.0]] [[scn:Web 2.0]] [[simple:Web 2.0]] [[sl:Splet 2.0]] [[sr:Veb 2.0]] [[sh:Veb 2.0]] [[fi:Web 2.0]] [[sv:Web 2.0]] [[ta:வலை 2.0]] [[te:వెబ్ 2.0]] [[th:เว็บ 2.0]] [[tg:Веб 2.0]] [[tr:Web 2.0]] [[uk:Веб 2.0]] [[vi:Web 2.0]] [[wuu:Web 2.0]] [[yi:וועב 2.0]] [[zh-yue:Web 2.0]] [[zh:Web 2.0]]</text> </page> <page> <id>39931</id> <title>Web Coverage Service</title> <text>The [[Open Geospatial Consortium]] '''Web Coverage Service''' Interface Standard ('''WCS''') provides an [[Interface (computer science)|interface]] allowing requests for [[Geography|geographical]] [[coverage data|coverages]] across the [[World Wide Web|web]] using platform-independent calls. The coverages are objects (or images) in a geographical area, whereas the [[Web Map Service | WMS]] interface or online mapping portals like [[Google Maps]] return only an image, which end-users cannot edit or [[Geographic information system#Spatial analysis with GIS | spatially analyze]]. The OGC membership defined and maintains the WCS specification. [[GeoServer]] serves as the [[Reference implementation (computing)|reference implementation]] of the standard. == Overview == The basic Web Coverage Service allows querying and retrieval of coverages. A WCS describes discovery, query, or data transformation operations. The client generates the request and posts it to a web feature server using HTTP. The web feature server then executes the request. The WCS specification uses HTTP as the distributed computing platform, although this is not a hard requirement. There are two encodings defined for WCS operations: *[[XML]] (amenable to HTTP POST/[[SOAP]]) *Keyword-Value pairs (amenable to HTTP GET/[[Remote procedure call]]) In the taxonomy of [[Web Services]], WCS is best categorized as a non-RESTful RPC type service. ===Data === Data may be available in several formats, such as [[DTED]], [[GeoTIFF]], [[HDF-EOS]], or [[National Imagery Transmission Format|NITF]]. Several types of data layers are supported: * series of points, such as locations of samples * regular grid of pixels or points, which might represent a photo * set of segmented curves, often used for road paths * set of [[Thiessen polygon]]s, used to analyse spatially distributed data such as rainfall measurements * triangulated irregular network (TIN), often used for terrain models Ranges of information may be attached to locations, such as average wind speed or yield by crop type. ===Software support for WCS === The [http://sourceforge.net/projects/teamengine Compliance and Interoperability Test Engine (CITE)] is used to test reference implementations for OGC specs, including WCS. List of software that supports WCS as a client and/or server: * [[GeoServer]] - reference implementation server (serve WCS) * [[ERDAS Apollo|APOLLO]] - server and client<ref>{{ cite web|url=http://www.erdas.com/tabid/84/currentid/1850/default.aspx|title=ERDAS APOLLO }}</ref> * [[GDAL]] - client (read)<ref>{{ cite web|url=http://gdal.org/frmt_wcs.html|title=WCS -- OGC Web Coverage Service }}</ref> * [[Geomatica Web Server Suite]] - client and server<ref>{{cite web|url=http://www.pcigeomatics.com/pressnews/2008_PCI_webtest.html|title=PCI Geomatics’ Web Coverage Server successfully passes compliancy testing }}</ref> * [[GeoMedia]] - client (read WCS) and server ([[GeoMedia WebMap]]) * [[gvSIG]] - client (read WCS) * [[MapServer]] - server<ref>{{ cite web|title=WCS Server|url=http://mapserver.org/ogc/wcs_server.html }}</ref> * [[ESRI ArcGIS Server|ArcGIS Server]] - server and client<ref>{{ cite web|url=http://www.esri.com/software/arcgis/arcgisserver/index.html|title=ESRI ArcGIS Server }}</ref> == See also == * [[Open Geospatial Consortium]] * [[GeoServer]] * [[gvSIG]] * [[GDAL]] * [[MapServer]] * [[Web Map Service]] (WMS) * [[Web Feature Service]] (WFS) * [[Catalog Service Web]] (CSW) == References == * [http://www.opengeospatial.org/standards/wcs OGC Web Coverage Service] * [https://portal.opengeospatial.org/files/?artifact_id=18153 ''OpenGIS Web Coverage Service (WCS) Implementation Specification''] == External links == * [http://www.opengeospatial.org/resource/products/byspec/?specid=89 WCS implementations] <references/> {{OGC}} [[Category:Geographic information systems]] [[Category:Open Geospatial Consortium]] [[de:Web Coverage Service]] [[fr:Web Coverage Service]] [[it:Web Coverage Service]] [[nl:Web Coverage Service]] [[pt:Web Coverage Service]]</text> </page> <page> <id>39940</id> <title>Web Server Gateway Interface</title> <text>The '''Web Server Gateway Interface (WSGI)''' defines a simple and universal [[interface (computer science)|interface]] between [[web server]]s and [[web application]]s or [[web application framework|framework]]s for the [[Python (programming language)|Python programming language]]. ==Idea== Historically Python web application frameworks have been a problem for new Python users because, generally speaking, the choice of web framework would limit the choice of usable [[web server]]s, and vice versa. Python applications were often designed for either [[Common Gateway Interface|CGI]], [[FastCGI]], [[mod_python]] or even custom API interfaces of specific web-servers. WSGI<ref>[http://www.python.org/dev/peps/pep-0333/ PEP 333], Python Web Server Gateway Interface v1.0</ref> (sometimes pronounced like 'whiskey' or 'wiz-gee') was created as a low-level [[interface (computer science)|interface]] between web servers and web applications or frameworks to promote common ground for portable web application development. WSGI is based on the existing [[Common Gateway Interface|CGI]] standard. ==Specification overview== The WSGI has two sides: the "[[server (computing)|server]]" or "gateway" side, and the "application" or "framework" side. The server side calls the application side, providing environment information plus a callback function (for the application to use to convey headers to the server side), and receiving web content in return. So-called ''WSGI [[middleware]]'' implements both sides of the API so that it can intermediate between a WSGI server and a WSGI application: the middleware acts as an application from some WSGI server's point of view and as a server from some WSGI application's point of view. A "middleware" component can perform such 