Goldwasser]] (two-time recipient), [[Silvio Micali]], [[Charles Rackoff]], [[Johan Håstad]], [[Peter Shor]], and [[Madhu Sudan]] *[[Grace Murray Hopper Award]] recipients [[Robert Metcalfe]], [[Shafi Goldwasser]], [[Guy L. Steele]], [[Richard Stallman]], and [[Danny Hillis|W. Daniel Hillis]] *Textbook authors [[Hal Abelson|Harold Abelson]] and [[Gerald Jay Sussman]], [[Richard Stallman]], [[Thomas H. Cormen]], [[Charles E. Leiserson]], [[Patrick Winston]], [[Ronald L. Rivest]] and [[Clifford Stein]] *[[David D. Clark]], former chief protocol architect for the Internet; co-author with [[Jerome H. Saltzer]] (also a CSAIL member) and [[David P. Reed]] of the influential paper "[[end-to-end principle|End-to-End]] Arguments in Systems Design" *[[Seymour Papert]], inventor of the [[Logo programming language]] *[[Joseph Weizenbaum]], creator of the [[ELIZA]] computer-simulated therapist *[[Bob Frankston]], co-developer of [[VisiCalc]], the first computer spreadsheet *[[Richard Stallman]], original inventor of [[Emacs]] and key agent in the [[free software]] movement and permanent resident at CSAIL ===Notable alumni=== Several Project MAC alumni went on to further revolutionize the computer industry. *[[Bob Metcalfe]], who later invented [[Ethernet]] at [[Xerox PARC]] and later founded [[3COM]] ==Directors== ;Directors of Project MAC *[[Robert Fano]], 1963–1968 *[[J.C.R. Licklider]], 1968–1971 *[[Edward Fredkin]], 1971–1974 *[[Michael Dertouzos]], 1974–1975 ;Directors of the AI Lab *[[Marvin Minsky]], 1970–1972 *[[Patrick Winston]], 1972–1997 *[[Rodney Brooks]], 1997–2003 ;Directors of the Laboratory for Computer Science *Michael Dertouzos, 1975–2001 *[[Victor Zue]], 2001–2003 ;Directors of CSAIL *Rodney Brooks, 2003–2007 *Victor Zue, 2007— == References == {{reflist}} ==Further reading== * [http://www.csail.mit.edu/ CSAIL's official Web page] * [http://mit.edu/6.933/www/Fall2001/AILab.pdf "A Marriage of Convenience: The Founding of the MIT Artificial Intelligence Laboratory"], Chious et al. - includes important information on the [[Incompatible Timesharing System]] * [http://www.ilmarefilm.org/W_E_1.htm Documentary film with and about Joseph Weizenbaum ( "Weizenbaum. Rebel at Work.")] * {{cite book | last = Garfinkel | first = Simson | authorlink = Simson Garfinkel | coauthors = [[Hal Abelson]], ed. | publisher = [[MIT Press]] | title = Architects of the Information Society: Thirty-Five Years of the Laboratory for Computer Science at MIT | location = [[Cambridge, Massachusetts]] | year = 1999 | isbn = 0-262-07196-7}} *Simson L. Garfinkel, ''Architects of the Information Society'', Harold Abelson, ed. (Cambridge: MIT Press, 2001). ISBN 0-262-07196-7. ==See also== *[[Stanford Artificial Intelligence Laboratory]] *[[History of operating systems]] *[[Knight keyboard]] *[[CERIAS]] *[[CyLab]] ==External links== * [http://www.csail.mit.edu/ The webpage for the successor of the AI Lab, CSAIL.] * [http://www.cbi.umn.edu/oh/display.phtml?id=99 Oral history interview with Robert M. Fano]. [[Charles Babbage Institute]], University of Minnesota, Minneapolis. * [http://www.cbi.umn.edu/oh/display.phtml?id=94 Oral history interview with Lawrence G. Roberts]. [[Charles Babbage Institute]], University of Minnesota, Minneapolis. * [http://www.cbi.umn.edu/oh/display.phtml?id=87 Oral history interview with J. C. R. Licklider]. [[Charles Babbage Institute]], University of Minnesota, Minneapolis. * [http://www.cbi.umn.edu/oh/display.phtml?id=107 Oral history interview with Marvin L. Minsky]. [[Charles Babbage Institute]], University of Minnesota, Minneapolis. * [http://www.cbi.umn.edu/oh/display.phtml?id=154 Oral history interview with Terry Allen Winograd]. [[Charles Babbage Institute]], University of Minnesota, Minneapolis. * [http://www.cbi.umn.edu/oh/display.phtml?id=122 Oral history interview with Wesley Clark]. [[Charles Babbage Institute]], University of Minnesota, Minneapolis. * [http://mit.edu/6.933/www/Fall2001/AILab.pdf "A Marriage of Convenience: The Founding of the MIT Artificial Intelligence Laboratory"], Chious et al. - includes important information on the [[Incompatible Timesharing System]]. * [http://www.cbi.umn.edu/oh/display.phtml?sub=530 Oral history interviews with Project MAC participants], [[Charles Babbage Institute]] University of Minnesota, Minneapolis. Participants include Robert M. Fano and Fernando J. Corbató. {{MITtemplate}} [[Category:2003 establishments]] [[Category:Massachusetts Institute of Technology|Computer Science and Artificial Intelligence Laboratory]] [[Category:Artificial intelligence laboratories]] [[Category:History of artificial intelligence]] [[Category:Research institutes in the United States]] [[Category:Robotics organizations]] [[ja:MITコンピュータ科学・人工知能研究所]]</text> </page> <page> <id>22985</id> <title>ML (programming language)</title> <text>{{Infobox programming language | name = ML | logo = | paradigm = [[multi-paradigm programming language|multi-paradigm]]: [[imperative programming|imperative]], [[functional programming|functional]] | year = 1973 | designer = [[Robin Milner]] & others at the [[University of Edinburgh]] | developer = | latest release version = | latest release date = | typing = [[static typing|static]], [[strong typing|strong]], [[type inference|inferred]] | implementations = | dialects = [[Standard ML]], [[OCaml]], [[F Sharp programming language|F#]] | influenced by = [[ISWIM]] | influenced = [[Miranda (programming language)|Miranda]], [[Haskell (programming language)|Haskell]], [[Cyclone programming language|Cyclone]], [[Nemerle]], [[C++]], [[Clojure]], [[Felix (programming language)|Felix]], [[Mythryl]] | operating system = | license = | website = }} '''ML''' is a general-purpose [[functional programming language]] developed by [[Robin Milner]] and others in the early 1970s at the [[University of Edinburgh]],<ref name="Gordon1996">{{cite web | last = Gordon | first = Michael J. C. | authorlink = Michael J. C. Gordon | year=1996 | title = From LCF to HOL: a short history | url = http://www.cl.cam.ac.uk/~mjcg/papers/HolHistory.html | accessdate = 2007-10-11}}</ref> whose syntax is inspired by [[ISWIM]]. Historically, ML stands for ''[[metalanguage]]'': it was conceived to develop proof tactics in the [[LCF theorem prover]] (whose language, ''pplambda'', a combination of the [[first-order predicate calculus]] and the simply typed [[Polymorphism (computer science)|polymorphic]] [[lambda-calculus]], had ML as its metalanguage). It is known for its use of the [[Hindley–Milner type inference algorithm]], which can automatically infer the [[data type|types]] of most [[Expression (programming)|expressions]] without requiring explicit type annotations. ==Overview== ML is often referred to as an '''impure''' functional language, because it encapsulate [[side-effect (computer science)|side-effects]], unlike [[purely functional]] programming languages such as [[Haskell (programming language)|Haskell]]. Features of ML include a call-by-value [[evaluation strategy]], [[first-class function]]s, automatic memory management through [[garbage collection (computer science)|garbage collection]], parametric [[polymorphism (computer science)|polymorphism]], [[Type_system#Static_typing|static typing]], [[type inference]], [[algebraic data types]], [[pattern matching]], and [[exception handling]]. Unlike Haskell, ML uses [[eager evaluation]], which means that all subexpressions are always evaluated. However, lazy evaluation can be achieved through the use of [[Closure (computer science)|closures]]. Thus one can create and use infinite streams as in Haskell, but their expression is comparatively indirect. Today there are several languages in the ML family; the two major dialects are [[Standard ML]] (SML) and [[Caml]], but others exist, including [[F Sharp (programming language)|F#]] — a language that Microsoft supports for their .NET platform. Ideas from ML have influenced numerous other languages, like [[Haskell (programming language)|Haskell]], [[Cyclone programming language|Cyclone]] {{Citation needed|date=August 2010}}, and [[Nemerle]]. ML's strengths are mostly applied in language design and manipulation (compilers, analyzers, theorem provers), but it is a general-purpose language also used in bioinformatics, financial systems, and applications including a genealogical database, a peer-to-peer client/server program, etc. ML uses static scoping rules. ==Examples== The following 