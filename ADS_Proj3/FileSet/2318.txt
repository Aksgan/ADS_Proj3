|| align="center" | 30 || || arrayref, index &rarr; value || loads a float from an array |- | fastore || align="center" | 51 || || arrayref, index, value &rarr; || stores a float in an array |- | fcmpg || align="center" | 96 || || value1, value2 &rarr; result || compares two floats |- | fcmpl || align="center" | 95 || || value1, value2 &rarr; result || compares two floats |- | fconst_0 || align="center" | 0b || || &rarr; 0.0f || pushes ''0.0f'' on the stack |- | fconst_1 || align="center" | 0c || || &rarr; 1.0f || pushes ''1.0f'' on the stack |- | fconst_2 || align="center" | 0d || || &rarr; 2.0f || pushes ''2.0f'' on the stack |- | fdiv || align="center" | 6e || || value1, value2 &rarr; result || divides two floats |- | fload || align="center" | 17 || index || &rarr; value || loads a float ''value'' from a local variable ''#index'' |- | fload_0 || align="center" | 22 || || &rarr; value || loads a float ''value'' from local variable 0 |- | fload_1 || align="center" | 23 || || &rarr; value || loads a float ''value'' from local variable 1 |- | fload_2 || align="center" | 24 || || &rarr; value || loads a float ''value'' from local variable 2 |- | fload_3 || align="center" | 25 || || &rarr; value || loads a float ''value'' from local variable 3 |- | fmul || align="center" | 6a || || value1, value2 &rarr; result || multiplies two floats |- | fneg || align="center" | 76 || || value &rarr; result || negates a float |- | frem || align="center" | 72 || || value1, value2 &rarr; result || gets the remainder from a division between two floats |- | freturn || align="center" | ae || || value &rarr; [empty] || returns a float |- | fstore || align="center" | 38 || index || value &rarr; || stores a float ''value'' into a local variable ''#index'' |- | fstore_0 || align="center" | 43 || || value &rarr; || stores a float ''value'' into local variable 0 |- | fstore_1 || align="center" | 44 || || value &rarr; || stores a float ''value'' into local variable 1 |- | fstore_2 || align="center" | 45 || || value &rarr; || stores a float ''value'' into local variable 2 |- | fstore_3 || align="center" | 46 || || value &rarr; || stores a float ''value'' into local variable 3 |- | fsub || align="center" | 66 || || value1, value2 &rarr; result || subtracts two floats |- ! colspan="5" | G |- | getfield || align="center" | b4 || index1, index2 || objectref &rarr; value || gets a field ''value'' of an object ''objectref'', where the field is identified by field reference in the constant pool ''index'' (''index1 << 8 + index2'') |- | getstatic || align="center" | b2 || index1, index2 || &rarr; value || gets a static field ''value'' of a class, where the field is identified by field reference in the constant pool ''index'' (''index1 << 8 + index2'') |- | goto || align="center" | a7 || branchbyte1, branchbyte2 || [no change] || goes to another instruction at ''branchoffset'' (signed short constructed from unsigned bytes ''branchbyte1 << 8 + branchbyte2'') |- | goto_w || align="center" | c8 || branchbyte1, branchbyte2, branchbyte3, branchbyte4 || [no change] || goes to another instruction at ''branchoffset'' (signed int constructed from unsigned bytes ''branchbyte1 << 24 + ''branchbyte2 << 16 + ''branchbyte3 << 8 + branchbyte4'') |- ! colspan="5" | I |- | i2b || align="center" | 91 || || value &rarr; result || converts an int into a byte |- | i2c || align="center" | 92 || || value &rarr; result || converts an int into a character |- | i2d || align="center" | 87 || || value &rarr; result || converts an int into a double |- | i2f || align="center" | 86 || || value &rarr; result || converts an int into a float |- | i2l || align="center" | 85 || || value &rarr; result || converts an int into a long |- | i2s || align="center" | 93 || || value &rarr; result || converts an int into a short |- | iadd || align="center" | 60 || || value1, value2 &rarr; result || adds two ints together |- | iaload || align="center" | 2e || || arrayref, index &rarr; value || loads an int from an array |- | iand || align="center" | 7e || || value1, value2 &rarr; result || performs a bitwise and on two integers |- | iastore || align="center" | 4f || || arrayref, index, value &rarr; || stores an int into an array |- | iconst_m1 || align="center" | 02 || || &rarr; -1 || loads the int value -1 onto the stack |- | iconst_0 || align="center" | 03 || || &rarr; 0 || loads the int value 0 onto the stack |- | iconst_1 || align="center" | 04 || || &rarr; 1 || loads the int value 1 onto the stack |- | iconst_2 || align="center" | 05 || || &rarr; 2 || loads the int value 2 onto the stack |- | iconst_3 || align="center" | 06 || || &rarr; 3 || loads the int value 3 onto the stack |- | iconst_4 || align="center" | 07 || || &rarr; 4 || loads the int value 4 onto the stack |- | iconst_5 || align="center" | 08 || || &rarr; 5 || loads the int value 5 onto the stack |- | idiv || align="center" | 6c || || value1, value2 &rarr; result || divides two integers |- | if_acmpeq || align="center" | a5 || branchbyte1, branchbyte2 || value1, value2 &rarr; || if references are equal, branch to instruction at ''branchoffset'' (signed short constructed from unsigned bytes ''branchbyte1 << 8 + branchbyte2'') |- | if_acmpne || align="center" | a6 || branchbyte1, branchbyte2 || value1, value2 &rarr; || if references are not equal, 