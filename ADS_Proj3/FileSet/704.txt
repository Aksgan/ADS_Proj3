avoid having to populate the chroot with libraries required for program startup). * If privilege separation is enabled, the [[OpenSSH]] daemon will chroot an unprivileged helper process into an empty directory to handle pre-authentication network traffic for each client. The daemon can also sandbox SFTP and shell sessions in a chroot (from version 4.9p1 onwards).<ref>{{cite web|title = sshd_config(5) manual page|url = http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config|accessdate = 2008-04-27|date = 2008-04-05}}</ref> ==References== {{refbegin}} <references/> * {{man|2|chroot|FreeBSD|change root directory}} * {{man|8|chroot|FreeBSD|change root directory}} * {{man|2|chroot|Linux|change root directory}} {{refend}} * [http://www.elstel.com/openroot/ openroot - an extended chroot with X11 access, /dev & /media automounting & more.] ==See also== * [[List of Unix programs]] * [[Operating system-level virtualization]] {{unix commands}} [[Category:Computer security procedures]] [[Category:Free virtualization software]] [[Category:Unix process and task management-related software]] [[Category:Virtualization_software]] [[cs:Chroot]] [[de:Chroot]] [[es:Chroot]] [[fr:Chroot]] [[it:Chroot]] [[ja:Chroot]] [[pl:Chroot]] [[pt:Chroot]] [[ro:Chroot]] [[ru:Chroot]] [[sv:Chroot]] [[uk:Chroot]] [[zh:Chroot]]</text> </page> <page> <id>6241</id> <title>Chunk (information)</title> <text>{{Orphan|date=February 2009}} {{Unreferenced|date=January 2008}} A '''chunk''' is a fragment of information which is used in many multimedia formats, such as [[Portable Network Graphics|PNG]], [[MP3]] and [[Audio Video Interleave|AVI]]. Each chunk contains a header which indicates some parameters (e.g. the type of chunk, comments, size etc.) In the middle there is a variable area containing data which are decoded by the program from the parameters in the header. Chunks may also be fragments of information which are downloaded or managed by [[Peer-to-peer|P2P]] programs. In distributed computing, a chunk is a set of data which are sent to a processor or one of the parts of a computer for processing. For example a sub-set of rows of a matrix. ==References== {{reflist}} [[Category:Data unit]] {{software-eng-stub}} [[ca:Chunk]] [[es:Chunk]] [[eo:Chunk]] [[fr:Chunk]]</text> </page> <page> <id>6256</id> <title>Cinderella (software)</title> <text>{{Infobox Software |name = The Interactive Geometry Software Cinderella |logo = |screenshot = |caption = |collapsible = |author = Jürgen Richter-Gebert and Ulrich Kortenkamp |developer = |released = {{Start date|1998||}} |latest release version = Cinderella.2 2.0.17 build 779 |latest release date = {{Release date and age|2010|02|14}} |latest preview version = Cinderella 2.1 build 1351 |latest preview date = {{Release date and age|2010|09|03}} |frequently updated = |programming language = Java |operating system = [[Microsoft Windows|Windows]], [[Mac OS]], [[Linux]], [[Solaris]] |platform = Java |size = |language = English, German, Japanese, French, Spanish, Italian, Portuguese |status = released |genre = [[Interactive geometry software]] |license = [[Proprietary software|Proprietary]] |website = http://cinderella.de/ }} ''Cinderella'' is a [[proprietary software|proprietary]] [[interactive geometry software]], written in [[Java programming language]]. == History == Cinderella was initially developed by Jürgen Richter-Gebert and Henry Crapo and was used to input incidence theorems and conjectures for automatic theorem proving using the binomial proving method by Richter-Gebert. The initial software was created in [[Objective-C]] on the [[NeXT]] platform. In 1996, the software was rewritten in Java from scratch by Jürgen Richter-Gebert and Ulrich Kortenkamp. It still included the binomial prover, but was not suitable for classroom teaching as it still was prototypical. This version won the Multimedia Innovation Award at Learntec '97 in Karlsruhe, Germany. Due to this attention the German educational software publisher [[Heureka-Klett]] and the scientific publisher [[Springer-Verlag]], Heidelberg, agreed to produce a commercial version of the software. The school version of Cinderella 1.0 was published in 1998, including about 150 examples, animations and exercises created with Cinderella, the university version was released in 1999. In 2006, a new version of Cinderella, Cinderella.2, was published in an online-only version. The release of Cinderella 3.0 is scheduled for 2010. This version will have a printed manual published by [[Springer-Verlag]]. == Features == Interactive geometry and analysis takes place in the realm of [[euclidean geometry]], [[spherical geometry]] or [[hyperbolic geometry]]. It includes a physics simulation engine (with real gravity on [[Apple Inc|Apple computers]]) and a scripting language. An ''export to blog'' feature allows for a 1-click publication on the web of a figure. It is currently mainly used in Universities in Germany but its ease of use makes it suitable for usage at primary and secondary level as well. ==External links== *[http://cinderella.de/ Cinderella official website] *[http://beta.cinderella.de/public Public Beta version] *[http://doc.cinderella.de/ Online Documentation] {{de}} {{science-software-stub}} [[Category:Interactive geometry software]] [[fr:Cinderella (logiciel)]]</text> </page> <page> <id>6258</id> <title>CinemaDNG</title> <text>'''CinemaDNG''' is the result of an [[Adobe Systems|Adobe]]-led initiative to define an industry-wide [[Open format|open file format]] for digital cinema files.<ref name="adobe.com">Adobe Press Release: [http://www.adobe.com/aboutadobe/pressroom/pressreleases/200804/041408AdobeCinemaDNG.html Adobe Starts Initiative to Develop Open Format for Digital Cinema Files]</ref> CinemaDNG caters for sets of movie clips, each of which is a sequence of raw video images, accompanied by audio and [[metadata]]. CinemaDNG supports stereoscopic cameras and multiple audio channels. CinemaDNG specifies directory structures containing one or more video clips, and specifies requirements and constraints for the open format files, ([[Digital Negative (file format)|DNG]], [[Tagged Image File Format|TIFF]], [[Extensible Metadata Platform|XMP]], and/or [[Material Exchange Format|MXF]]), within those directories, that contain the content of those clips.<ref name="CinemaDNGspecification">Adobe Labs: [http://download.macromedia.com/pub/labs/cinemadng/cinemadng_p1_spec_091009.pdf CinemaDNG - Image Data Format Specification (Version 1.0.0.0)] (PDF)</ref> CinemaDNG is different from the Adobe [[Digital Negative (file format)|DNG (Digital Negative)]] format that is primarily used as a [[raw image format]] for still cameras. However, each CinemaDNG image is encoded using that DNG image format. The image stream can then be stored in one of two formats: either as video essence using frame-based wrapping in an [[Material Exchange Format|MXF]] file, or as a sequence of DNG image files in a specified file directory. Each clip uses just one of these formats, but the set of clips in a movie may use both. ==Rationale== The purpose of CinemaDNG is to streamline [[workflow]]s and help ensure easy archiving and exchange. There are several advantages from using raw image data for cinema, [[Raw image format|just as there are for still photography]], but like the latter the presence of proprietary raw formats can inhibit the required integration. Movie development typically involves complicated workflows involving many stages and multiple suppliers of software and hardware components.<ref name="CinemaDNGworkflow">Adobe Labs: [http://download.macromedia.com/pub/labs/cinemadng/cinemadng_p1_workflow_091009.pdf CinemaDNG Workflow - Using the CinemaDNG File Format in Cinema Workflows] (PDF)</ref> All of these indicate the desirability of using [[open format]]s. The ability to store images either within an MXF wrapper or as a DNG-sequence, with the ability to 