the IPv6 packet being carried. This means that the encapsulation overhead is simply the size of the IPv4 header of 20 bytes. With an Ethernet [[Maximum Transmission Unit]] (MTU) of 1500 bytes, one can thus send IPv6 packets of 1480 bytes without fragmentation. 6in4 tunneling is also referred to as ''proto-41 static'' because the endpoints are configured statically. Although 6in4 tunnels are generally manually configured, for example the utility [[AICCU]] can configure tunnel parameters automatically after retrieving information from a [[Tunnel Information and Control Protocol]] (TIC) server. There are similarly named methods, namely [[6to4]] or [[6over4]], which describe a different mechanism. The method [[6to4]] makes use of proto-41 too, but instead of static configuration of the endpoints, the endpoint IPv4 address information is derived from the IPv6 addresses within the IPv6 packet header. ==Network address translators (NAT)== When an endpoint of a 6in4 tunnel is behind a [[Network Address Translation|NAT]], one can in some cases still make use of the [[DMZ (computing)|DMZ]] feature of a NAT router. The NAT router will then forward all incoming proto-41 packets to the configured host, thus making the tunnel work. Some NAT devices even allow transparent operation of 6in4. ==Dynamic 6in4 tunnels and heartbeat== Even though 6in4 tunnels are static in nature, with the help of for example the heartbeat protocol<ref name=heartbeat>[http://www.sixxs.net/tools/heartbeat/ Heartbeat Protocol], J. Massar and P. van Pelt</ref> one can still have dynamic tunnel endpoints. The heartbeat protocol signals the other side of the tunnel with its current endpoint location. A tool such as [[AICCU]] can then update the endpoints, in effect making the endpoint dynamic while still using the 6in4 protocol. These kind of tunnels are generally called 'proto-41 heartbeat' tunnels. ==Security issues== The 6in4 protocol has no security features, thus one can easily inject IPv6 packets by [[IP_address_spoofing|spoofing]] the source IPv4 address of a tunnel endpoint and sending it to the other endpoint. This problem can partially be solved by implementing [[network ingress filtering]] or with [[IPsec]]. Another solution is to use a secure protocol such as [[AYIYA]] or other tunneling methods that compute digital signatures for each packet thus facilitating verification of packet authenticity. The mentioned packet injection loophole of 6in4 was exploited for a research benefit in a method called ''IPv6 Tunnel Discovery'' <ref name=tundisco>[http://www.dia.uniroma3.it/~compunet/tunneldiscovery IPv6 Tunnel Discovery], L. Colitti, G. Di Battista, and M. Patrignani</ref> which allowed the researchers to discover operating IPv6 tunnels around the world. ==References== * RFC 1933, Transition Mechanisms for IPv6 Hosts and Routers, R. Gilligan and E. Nordmark, [[1996]] {{refs}} ==External links== *[http://www.sixxs.net/faq/connectivity/?faq=ossetup How do I configure my machine to setup an IPv6 in IPv4 tunnel] *[http://wiki.debian.org/DebianIPv6 6in4 and other tunnel setups on Debian] *[http://www.cs.bell-labs.com/magic/man2html/8/6in4 6in4 setup on Plan9 OS] [[Category:Tunneling protocols]] [[Category:IPv6 transition technologies]] [[Category:Network protocols]] [[fr:6in4]] [[zh:6in4]]</text> </page> <page> <id>196</id> <title>8-bit</title> <text>{{about|computer architecture}} {{redirect|IA-8|the former congressional district|Iowa's 8th congressional district}} {{Unreferenced|date=October 2009}} {{N-bit|8|(1 octet)}} Eight-bit CPUs normally use an [[octet (computing)|8-bit]] [[data bus]] and a [[16-bit]] address bus which means that their [[address space]] is limited to 64 [[kibibyte|KiB]]. This is not a "natural law", however, so there are exceptions. The first widely adopted 8-bit [[microprocessor]] was the [[Intel 8080]], being used in many hobbyist computers of the late 1970s and early 1980s, often running the [[CP/M]] [[operating system]]. The [[Zilog Z80]] (compatible with the 8080) and the [[Motorola 6800]] were also used in similar computers. The Z80 and the [[MOS Technology 6502]] 8-bit CPUs were widely used in [[home computer]]s and [[game console]]s of the '70s and '80s. Many 8-bit CPUs or [[microcontroller]]s are the basis of today's ubiquitous [[embedded systems]]. There are 2<sup>8</sup> (256) possible values for 8 bits. The first microprocessors had a [[4-bit]] word length and were developed around 1970. The first commercial microprocessor was the [[Binary coded decimal|BCD-based]] [[Intel 4004]] (1971), developed for calculator applications. The first commercial 8-bit processor was the [[Intel 8008]] (1972) which was originally intended for [[intelligent terminal]]s. Most competitors to Intel started off with such character oriented 8-bit microprocessors. Modernized variants of these 8-bit machines are still one of the most common types of processor in embedded systems. ==List of 8-bit CPUs== A [[CPU]] can be classified on the basis of the [[data]] it can access in a single [[Instruction (computer science)|operation]]. An 8-bit processor can access 8 bits of data in a single operation, as opposed to a [[16-bit]] processor, which can access 16 bits of data in a single operation. 8 Bits ''Examples of 8-bit processors (very incomplete):'' * [[Freescale]] ** [[Freescale 68HC08]] ** [[Freescale 68HC11]] * [[Intel]] ** [[Intel 8008]] ** [[Intel 8080]] (''8008 source compatible'') ** [[Intel 8085]] (''8080 binary compatible'') ** [[Intel 8051]] (''Harvard architecture'') * [[RCA]] ** [[RCA 1802]] * [[Zilog]] ** [[Zilog Z80]] (''8080 binary compatible'') ** [[Zilog Z180]] (''Z80 binary compatible'') ** [[Zilog Z8]] ** [[Zilog eZ80]] (''Z80 binary compatible'') * [[Motorola]] ** [[Motorola 6800]] ** Motorola 6803 ** [[Motorola 6809]] (''partially 6800 compatible'') * [[MOS Technology]] ** [[MOS Technology 6502]] * [[PIC microcontroller]] ** [[PIC microcontroller|Microchip PIC10]] ** [[PIC microcontroller|Microchip PIC12]] ** [[PIC microcontroller|Microchip PIC16]] ** [[PIC microcontroller|Microchip PIC18]] * Others ** [[Atmel AVR]] family microcontrollers ** [http://www.am.necel.com/micro/product/all_8_general.html/ NEC 78K0] series microcontrollers == See also == * [[History of video game consoles (third generation)]] * [[Vasm]], a free assembler {{CPU technologies}} [[ca:8 bits]] [[cs:8bitový]] [[de:8-Bit-Architektur]] [[es:8 bits]] [[eo:8-bita arkitekturo]] [[fr:8-bits]] [[ko:8비트]] [[it:8 bit]] [[ms:8-bit]] [[ja:8ビット]] [[pl:Architektura 8-bitowa]] [[pt:8 bits]] [[sv:8-bitars CPU]] [[zh:8位元]]</text> </page> <page> <id>203</id> <title>8A4 class ROUV</title> <text>{{Technical|date=September 2009}} The '''8A4 class ROUV''' is a [[remotely operated underwater vehicle]] (ROUV), a Chinese ROUV used to perform various underwater tasks ranging from oil platform service to salvage and rescue missions. The 8A4 is a member of a series of related ROUVs developed in the [[People's Republic of China]], with improved versions designed using earlier versions or commercially available versions as a starting point. The predecessor to the 8A4 is the RECON-IV, which is an improved version of the American RECON-III. The 8A4 is an improved version of the American AMETEK 2006. The 7B8 is an improved version of the 8A4.<ref>[http://www.shtong.gov.cn/node2/node2245/node76988/node76993/node77007/node77103/userobject1ai96372.html 8A4 