Several large Fortran libraries, such as [[LAPACK]], were made available as C libraries via conversion with f2c. The f2c program also influenced the development of the [[GNU Compiler Collection|GNU g77 compiler]], which uses a modified version of the f2c runtime [[Library (computing)|libraries]]. ==See also== *[[BCX]] - translates [[BASIC programming language|BASIC]] source code to [[C (programming language)|C]]/[[C++]] source code * [http://cci.lbl.gov/fable/ fable] - automatic Fortran to C++ conversion * [http://sourceforge.net/projects/f2cpp/ f2cpp] - post-processor for f2c output == References == * S. I. Feldman and P. J. Weinberger. [http://citeseer.ist.psu.edu/feldman90portable.html A portable Fortran 77 compiler]. In ''UNIX Time Sharing System Programmer's Manual'', volume 2. AT&T Bell Laboratories, tenth edition, 1990. * S. I. Feldman, David M. Gay, Mark W. Maimone, and N. L. Schryer, "[http://citeseer.ist.psu.edu/feldman93fortrantoc.html A Fortran to C Converter]," AT&T Bell Laboratories technical report, 1990. Also the paper of the same title by S. I. Feldman, published in ''ACM SIGPLAN Fortran Forum'', vol. 9, issue 2, p. 21â€“22 (1990). * The [http://www.netlib.org/f2c/ f2c] source code and documentation, at [[Netlib]]. [[Category:Fortran compilers]] [[Category:Compilers]] [[Category:C programming language]] [[Category:Free compilers and interpreters]] [[Category:Free software programmed in C]]</text> </page> <page> <id>13012</id> <title>FARGO (programming language)</title> <text>'''FARGO''' (Fourteen-o-one [IBM 1401] Automatic Report Generation Operation) was the predecessor to the popular [[RPG programming language]] (RPG). FARGO was more of a utility program than a programming language, whereas RPG had a program generation process that produced an executable object. == A Transitional Tool == The idea behind FARGO was to facilitate ease of transition for [[IBM 407]] Accounting Machine <!-- see Fargo manual - It is 407 specific --> technicians to the new [[IBM 1400 series]] of computers. The 1400 series had two [[assembly language| assemblers]]; [[Symbolic Programming System]] (SPS) and [[Autocoder]] (a more advanced assembler than SPS, and that required more memory). These represented a significant paradigm shift and learning curve for the technicians who were accustomed to wiring a [[Control panel (computer)|control panel]] to direct input, output, control and counter operations (add, subtract). Multiplication and division operations were possible but their practicality was limited. Tabulator machine operations were directed by impulses emitted in a machine cycle; hence, FARGO emulated the notion of a cycle. FARGO coordinated the concept of coding sheets that closely approximated the principles of wiring panels of tabulating machines. Early FARGO training material showed the wiring panel vs. coding sheet relationships. == Programs did not require compilation == Another important feature of FARGO programs is that they did not require compilation. Instead, specification cards were placed into the FARGO program deck at appropriate locations and then simply run with the data cards at the end of the program deck. FARGO was designed for IBM 1401 card systems with at least 4000 positions of [[Magnetic core memory| Core storage]]. == Backward Compatibility == [[IBM]] historically placed emphasis on backward compatibility, and FARGO and 1400 Autocoder continued to be used in some [[IBM System/360]] shops by running in "Emulation" mode. [[COBOL]], [[FORTRAN]] and [[RPG programming language|RPG]] languages did not require emulation because System/360 versions were provided. == External links == *{{cite book | last = IBM | title = FARGO for IBM 1401 | url = http://www.bitsavers.org/pdf/ibm/140x/C24-1464-3_1401_fargo.pdf | year = 1964 | id = C24-1464-3 |format=PDF}} [[Category:Procedural programming languages]] [[Category:IBM software]]</text> </page> <page> <id>13017</id> <title>FASMI</title> <text>'''''Fast Analysis of Shared Multidimensional Information''''' ('''''FASMI''''') is an alternative term for [[OLAP]]. The term was coined by [[Nigel Pendse]] of The [[OLAP Report]] (now known as The BI Verdict), because he felt that the 12 rules that [[Tedd Codd]] used to define OLAP were too controversial and biased. (The rules were sponsored by [[Hyperion Solutions|Arbor Software]], the company which developed [[Essbase]]). Also, Pendse considered that the list of 12 rules was too long, and the OLAP concept could be defined in only five rules. ==References== * Pendse, Nigel (2005), [http://www.bi-verdict.com/index.php?id=37&no_cache=1&L=0&dl=1&image_uid=2378 "What is OLAP?"], in [http://www.bi-verdict.com/ ''The BI Verdict''], Business Application Research Center, 2009. Exposition of "Fast Analysis of Shared Multidimensional Information" (FASMI). [[Category:Online analytical processing]]</text> </page> <page> <id>13021</id> <title>FASTOPEN</title> <text>{{Unreferenced stub|auto=yes|date=December 2009}} {{Orphan|date=December 2009}} In computing, '''FASTOPEN''' was an [[MS-DOS]] [[Terminate and Stay Resident|TSR]] command, introduced in version 3.3, that provided to accelerated access to frequently used [[File system|files and directories]]. It worked with [[hard disk]]s, but not with [[diskette]]s (probably for security versus swapping) or with network drives (probably because such drives did not offer block-level access, only file-level access). It was possible to specify for which drives FASTOPEN should operate, how many files and directories should be [[Cache#Disk_cache|cached]] on each (10 by default, up to 999 total), how many regions for each drive should be cached and whether the cache should be located in conventional or [[expanded memory]]. If a disk [[defragmenter]] tool was used while FASTOPEN was installed, it was necessary to reboot the computer afterwards, because FASTOPEN would remember the old position of files and directories, causing MS-DOS to display garbage if e.g. "[[Dir (command)|DIR]]" was performed. The "fastopen" name has since been reused for various other "accelerating" software products. ==See also== *[[List of DOS commands]] {{DEFAULTSORT:Fastopen}} [[Category:DOS on IBM PC compatibles]] {{DOS-stub}}</text> </page> <page> <id>13024</id> <title>FAUST (programming language)</title> <text>{{ infobox software | name = FAUST | developer = | latest release version = 0.9.24 | latest release date = {{release date|2010|05|16}} | operating system = [[Linux]], [[Mac OS X]], [[Microsoft Windows|Windows]], [[Unix]] | genre = Programming language for audio signal processing | programming language = [[C++]] | license = [[GNU General Public License|GPL]] | website = http://faudiostream.sourceforge.net/ }} '''FAUST''' is a [[compiled language]] for real-time [[audio signal processing]]. The name FAUST stands for Functional Audio Stream. ==External links== *[http://faudiostream.sourceforge.net/ FAUST homepage] [[Category:Audio programming languages]] {{compu-lang-stub}} [[de:Faust (Programmiersprache)]]</text> </page> <page> <id>13031</id> <title>FBX</title> <text>{{Peacock|date=November 2008}} {{ Infobox file format | name = Autodesk FBX Technology (.fbx) | extension = <tt>.fbx</tt> | typecode = <tt>'FBX'</tt> | owner = [[Autodesk]] }} '''FBX''' is technology and a file format (.fbx) owned and developed by [[Autodesk]]. It is used to provide interoperability between digital content creation applications. ==History== FBX originated as a replacement [[file format]] for [[Montreal]]-based Kaydara's (company founded in 1993) 