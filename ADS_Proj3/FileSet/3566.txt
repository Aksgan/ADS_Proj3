In the first graph at right, the dashed green line represents a price floor set below the free-market price. In this case, the floor has no practical effect. The government has mandated a minimum price, but the market already bears a higher price. [[Image:Surplus from Price Floor.svg|thumb|200px|An effective price floor, causing a surplus (supply exceeds demand).]] By contrast, in the second graph, the dashed green line represents a price floor set above the free-market price. In this case, the price floor has a measurable impact on the market. It ensures prices stay high so that product can continue to be made. ==Effect on the market== A price floor set above the market equilibrium price has several side-effects. [[Consumer]]s find they must now pay a higher price for the same product. As a result, they reduce their purchases or drop out of the market entirely. Meanwhile, suppliers find they are guaranteed a new, higher price than they were charging before. As a result, they increase production. Taken together, these effects mean there is now an excess supply (known as a surplus) of the product in the market. To maintain the price floor over the long term, the government may need to take action to remove it. ==Minimum wage== A historical (and current) example of a price floor are [[minimum wage]] laws, laws specifying the lowest wage a company can pay an employee (employees are ''suppliers'' of labor and the company is the ''consumer'' in this case). When the minimum wage is set higher than the equilibrium market price for unskilled labor, [[unemployment]] is created (more people are looking for jobs than there are jobs are available). A minimum wage above the equilibrium wage would induce employers to hire fewer workers as well as cause more people to enter the [[labor market]], the result is a surplus in the amount of labor available. The equilibrium wage for a worker would be dependent upon the worker's skill sets along with market conditions. ==Example== This is commonly seen in agriculture. Often the government wishes to maintain high prices of agricultural goods to keep a large number of farmers working. To limit the surplus, however, governments often pay some farmers not to plant crops, this can be known as a subsidy check. Price floors are also commonly imposed on the hospitality industry. Many jurisdictions mandate a minimum price that licensed establishments must charge for alcoholic beverages in an effort to prevent over consumption. If minimum prices are set too high they can induce people to drink in unlicensed settings where consumption may be less controlled. ===Europe=== Previously, price floors in agriculture have been common around [[Europe]]. Nowadays EU uses a "softer" method: if the price falls below an [[intervention price]], EU buys the product so much that this decrease in supply raises the price to the intervention price level. Because of this, the "butter mountains"<ref name=begg>Davig Begg et al., Economics, 4th edition, McGraw-Hill 1994, s. 40-43</ref>, lie now at EU stockhouses, not at the producers, stockhouses. Because of this problem, the EU plans to stop also these price controls and just pay free cash to former farmers regardless on what they do, so as not to cause any undesired indirect effects on the economy. ==See also== *[[Price ceiling]] *[[General equilibrium]] *[[Resale price maintenance]] ==References== {{reflist}} [[Category:Pricing]] [[bg:Минимална цена]] [[de:Mindestpreis]] [[fr:Prix plancher]] [[pl:Cena minimalna]] [[fi:Minimihinta]]</text> </page> <page> <id>29915</id> <title>Primary clustering</title> <text>{{Context|date=October 2009}} '''Primary clustering''' is the tendency for certain open-addressing [[hash table]]s collision resolution schemes to create long sequences of filled slots. It is most commonly referred to in the context of problems with [[linear probing]]. These long chains degrade the hash-table performance closer to O(n) performance instead of closer to O(1). Consider the linear probing [[hash function]] h(k, i) : (h`(k) + i)mod N. With k being the key, i the probing-iteration, N being the number of slots in the hash-table and h`(k) being the secondary-hash function. Thus the probing sequence for key k is: {h`(k), h`(k) + 1, h`(k) + 2, ..., h`(k) + n}. It is easy to see that the probing sequences for two different keys may overlap and create clustering. Also since the probability of each slot being already full is equal to the [[load factor|load-factor]] of the hash-table, as the factor approaches 1.0 so does the chance that the next slot in the probing sequence will be full, this degrades performance of the hash-table to linear time. Note: clusters of filled slots can grow exponentially in some cases. For example, imagine two large clusters of filled slots separated by one empty slot. Placing an entry into this slot will double the cluster size. <!-- Hmmm there is no algorithm or database stubs cat--> [[Category:Hashing]] {{Comp-sci-stub}}</text> </page> <page> <id>29924</id> <title>Primefree sequence</title> <text>In [[mathematics]], a '''primefree sequence''' is a [[sequence]] of [[integer]]s that does not contain any [[prime number]]s. More specifically, it generally means a sequence defined by the same [[recurrence relation]] as the [[Fibonacci number]]s, but with different [[initial conditions]] causing all members of the sequence to be [[composite number]]s that do not all have a common [[divisor]]. To put it algebraically, a sequence of this type is defined by an appropriate choice of two composite numbers ''a''<sub>1</sub> and ''a''<sub>2</sub>, such that the [[greatest common divisor]] GCD(''a''<sub>1</sub>,''a''<sub>2</sub>) = 1, and such that for ''n'' > 2 there are no primes in the sequence of numbers calculated from the formula :''a<sub>n</sub> = ''a''<sub>''n'' &minus; 1</sub> + ''a''<sub>''n'' &minus; 2</sub>. ==Wilf's sequence== Perhaps the best known primefree sequence is the one found by [[Herbert Wilf]], with initial terms :''a''<sub>1</sub> = 20615674205555510, ''a''<sub>2</sub> = 3794765361567513 {{OEIS|id=A083216}}. The proof that every term of this sequence is composite relies on the periodicity of Fibonacci-like number sequences modulo the members of a finite set of primes. For each prime ''p'', the positions in the sequence where the numbers are divisible by ''p'' repeat in a periodic pattern, and different primes in the set have overlapping patterns that result in a [[covering set]] for the whole sequence. ==Nontriviality== 