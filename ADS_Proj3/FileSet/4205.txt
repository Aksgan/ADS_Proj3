language)|Forth]] programming language, in particular the [[Forth virtual machine]] ** Adobe's [[PostScript]] ** [[Parakeet programming language]] ** [[Sun Microsystems]]' [[SwapDrop]] programming language for [[Sun Ray]] [[smartcard]] identification Note that the Burroughs architecture combines a stack machine with tagged memory (a few bits in every memory word to describe the data type of the operands). Tagged memory requires fewer opcodes, e.g., a single "add" instruction works for any combination of integer and floating point operands. Requiring fewer opcodes means that the entire instruction set can fit into smaller opcodes, reducing the total instruction width. == See also == *[[Register machine]] *[[Stack-oriented programming language]] *[[Forth (programming language)|Forth]] *[[Concatenative programming language]] == References == {{reflist}} == External links == *[http://www.ece.cmu.edu/~koopman/stack_computers/ ''Stack Computers: the new wave'' book by Philip J. Koopman, Jr. 1989] *[http://www.excamera.com/articles/20/mp3c.html Homebrew CPU in an FPGA] &mdash; homebrew stack machine using FPGA *[http://www.holmea.demon.co.uk/Mk1/Architecture.htm Mark 1 FORTH Computer] &mdash; homebrew stack machine using discrete logical circuits *[http://www.holmea.demon.co.uk/Mk2/Architecture.htm Mark 2 FORTH Computer] &mdash; homebrew stack machine using bitslice/PLD *[http://citeseer.ist.psu.edu/cache/papers/cs/31239/http%3AzSzzSzwww.complang.tuwien.ac.atzSzantonzSzivme03zSzproceedingszSzdavis.pdf/davis02case.pdf The Case for Virtual Register Machines], Brian Davis, Andrew Beatty, Kevin Casey, David Gregg and John Waldron *[http://www.eecg.utoronto.ca/~laforest/Second-Generation_Stack_Computer_Architecture.pdf Second-Generation Stack Computer Architecture] &mdash; Thesis about the history and design of stack machines. [[Category:Computational models]] [[Category:Stack machines]] [[cs:Zásobníkový počítač]] [[es:Máquina de pila]] [[ja:スタックマシン]] [[pl:Maszyna stosowa]] [[simple:Stack machine]] [[zh:堆疊結構機器]]</text> </page> <page> <id>35504</id> <title>Stackable switch</title> <text>A '''stackable switch''' is a [[network switch]] that is fully functional operating standalone but which can also be set up to operate together with one or more other network switches, with this group of switches showing the characteristics of a single switch but having the port capacity of the sum of the combined switches [[Image:5500 5500G fam ppt.gif|thumb|3Com Switch 5500 Family stackable switch]] The term “stack” refers to the group of switches that have been set up in this way. The common characteristic of a stack acting as a single switch is that there is a single [[IP address]] for remote administration of the stack as a whole, not an IP address for the administration of each unit in the stack. Stackable switches are customarily Ethernet, [[19-inch rack|rack]]-mounted, managed switches of 1–2 rack unit (RU) in size, with a fixed set of data ports on the front. Some models have slots for optional slide-in modules to add ports or features to the base stackable unit. The most common configurations are 24-port and 48-port models. == Comparison with other switch architectures == A stackable switch is distinct from a standalone switch, which only operates as a single entity. A stackable switch is distinct from a switch modular [[chassis]]. Stackable switches have these benefits: # Simplified network administration: Whether a stackable switch is operated alone or “stacked” with other units, there is always just a single management interface for the network administrator to deal with. This simplifies the setup and operation of the network. # Scalability: A small network can be formed around a single stackable unit, and then the network can be grown by adding additional units over time if and when needed, with little added management complexity. # Deployment flexibility: Stackable switches can operate together with other stackable switches or can operate independently. Units one day can be combined as a stack in a single site, and later can be run in different locations as independent switches. # Resilient connections: In some vendor architectures, active connections can be spread across multiple units so that should one unit in a stack be removed or fail, data will continue to flow through other units that remain functional. # Improving backplane: A series of switches, when stacked together, improves the backplane of the switches in stack also. Compared with a modular chassis switch, stackable switches have these drawbacks: # For locations needing numerous ports, a modular chassis may be lower cost. With stackable switching, each unit in a stack has its own enclosure and at minimum a single power supply. With modular switching, there is one enclosure and one set of power supplies. # High-end modular switches have high resiliency / high redundancy features that are not found in all stackable architectures. == Functionality == Features associated with stackable switches can include: * Single IP address for multiple units. Multiple switches can share one IP address for administrative purposes, thus conserving IP addresses. * Single management view from multiple interfaces. Stack-level views and commands can be provided from a single Command Line Interface (CLI) and/or embedded Web interface. The SNMP view into the stack can be unified. * Stacking resiliency. Multiple switches can have ways to bypass a “down” switch in a stack, thus allowing the remaining units to function as a stack even with a failed or removed unit. * Layer 3 redundancy. Some stackable architectures allow for continued Layer 3 routing if there is a “down” switch in a stack. If routing is centralized in one unit in the stack, and that unit fails, then there must be a recovery mechanism to move routing to a backup unit in the stack. * Mix and match of technology. Some stackable architectures allow for mixing switches of different technologies or from different product families, yet still achieve unified management. For example, some stacking allows for the mixing 10/100 and Gigabit switches in a stack. * Dedicated stacking bandwidth. Some switches come with built-in ports dedicated for stacking, which can preserve other ports for data network connections and can avoid the possible expense of an additional module to add stacking. Proprietary data handling or cables can be used to achieve higher bandwidths than standard Gigabit or 10-Gigabit connections. There is not universal agreement as to the threshold for being a stackable versus being a standalone switch. Some companies call their switches stackable if they support a single IP address for multiple units even if they lack other features from this list. Some industry analysts have said a product is not a stackable if it lacks one of the above features (e.g., dedicated bandwidth). == Terminology == Here are other terms associated with stackable switches: * Stacking 