fonts, the characters can be grouped by their ''Unicode subrange''. Although the Unicode standard already extends character field to plane 16 and many fonts e.g. [[Ming (typeface)|MingLiU-ExtB]] begin to support higher ranges, this tool still only supports code points on [[basic multilingual plane|plane 0]] (between U+0000 and U+FFFF). Additionally, it does not display certain characters in that range though for reasons unexplained. ==See also== * [[Private Character Editor]] ==External links== *[http://tlt.its.psu.edu/suggestions/international/accents/charmap.html Character Map Utility Windows XP and Vista] *[http://windowshelp.microsoft.com/Windows/en-US/Help/e3dce7ff-c6f1-4da0-8904-cdf8761d1dc41033.mspx Using special characters (Character Map): frequently asked questions] {{Windows Components}} [[Category:Windows components]] {{Windows-stub}} [[de:Zeichentabelle]] [[es:Mapa de caracteres]] [[fr:Table de caractères]] [[ja:文字コード表 (Windows)]] [[ru:Таблица символов]] [[sv:Teckenuppsättningen]] [[vi:Character Map]] [[zh:Windows字符映射表]]</text> </page> <page> <id>5899</id> <title>Character encoding</title> <text>{{Selfref|"Special characters" redirects here. For the Wikipedia editor's handbook page, see [[Help:Special characters]].}} A '''character encoding''' system consists of a [[code]] that pairs each [[character (computing)|character]] from a given repertoire with something else, such as a sequence of natural [[number]]s, [[octet (computing)|octets]] or electrical pulses, in order to facilitate the transmission of data (generally numbers and/or text) through telecommunication networks or [[Computer data storage|storage]] of [[Character (computing)|text]] in [[computer]]s. Other terms like '''character encoding''', '''character set''' ''(charset)'', and sometimes '''character map''' or '''code page''' are used almost interchangeably, but these terms now have related but distinct meanings. See [[#General terminology|terminology section]]. ==History== Common examples of character encoding systems include [[Morse code]], the [[Baudot code]], the [[American Standard Code for Information Interchange]] ([[ASCII]]) and [[Unicode]]. [[Morse code]] was introduced in the 1840s and is used to encode each letter of the [[Latin alphabet]] and each [[Hindu-Arabic numeral system|Hindu-Arabic numeral]] as a series of long and short presses of a [[telegraph key]]. Representations of characters encoded using Morse code varied in length. The [[Baudot code]] was created by [[Émile Baudot]] in 1870, patented in 1874, modified by Donald Murray in 1901, and standardized by CCITT as International Telegraph Alphabet No. 2 (ITA2) in 1930. [[ASCII]] was introduced in 1963 and is a 7-bit encoding scheme used to encode letters, numerals, symbols, and device [[control code]]s as fixed-length codes using [[integer]]s. [[IBM]]'s [[Extended Binary Coded Decimal Interchange Code]] (usually abbreviated [[EBCDIC]]) is an 8-bit encoding scheme developed in 1963. The limitations of such sets soon became apparent, and a number of [[ad hoc|ad-hoc]] methods were developed to extend them. The need to support more [[writing system]]s for different languages, including the [[CJK characters|CJK]] family of East Asian scripts, required support for a far larger number of characters and demanded a systematic approach to character encoding rather than the previous [[ad hoc]] approaches. Early binary repertoires include: * [[Braille]] * [[International maritime signal flags]] * [[Chinese telegraph code]] ([[Hans Schjellerup]], 1869, modified 1872 and following) *:Encoding of Chinese characters as 4-digit decimals. ==Common character encodings== * [[ISO/IEC 646|ISO 646]] ** [[ASCII]] * [[Extended Binary Coded Decimal Interchange Code|EBCDIC]] ** [[EBCDIC 37|CP37]] ** [[EBCDIC 930|CP930]] ** [[EBCDIC 1047|CP1047]] * [[ISO/IEC 8859|ISO 8859]]: ** [[ISO/IEC 8859-1|ISO 8859-1]] Western Europe ** [[ISO/IEC 8859-2|ISO 8859-2]] Western and Central Europe ** [[ISO/IEC 8859-3|ISO 8859-3]] Western Europe and South European (Turkish, Maltese plus Esperanto) ** [[ISO/IEC 8859-4|ISO 8859-4]] Western Europe and Baltic countries (Lithuania, Estonia and Lapp) ** [[ISO/IEC 8859-5|ISO 8859-5]] Cyrillic alphabet ** [[ISO/IEC 8859-6|ISO 8859-6]] Arabic ** [[ISO/IEC 8859-7|ISO 8859-7]] Greek ** [[ISO/IEC 8859-8|ISO 8859-8]] Hebrew ** [[ISO/IEC 8859-9|ISO 8859-9]] Western Europe with amended Turkish character set ** [[ISO/IEC 8859-10|ISO 8859-10]] Western Europe with rationalised character set for Nordic languages, including complete Icelandic set ** [[ISO/IEC 8859-11|ISO 8859-11]] Thai ** [[ISO/IEC 8859-13|ISO 8859-13]] Baltic languages plus Polish ** [[ISO/IEC 8859-14|ISO 8859-14]] Celtic languages (Irish Gaelic, Scottish, Welsh) ** [[ISO/IEC 8859-15|ISO 8859-15]] Added the Euro sign and other rationalisations to ISO 8859-1 ** [[ISO/IEC 8859-16|ISO 8859-16]] Central, Eastern and Southern European languages (Polish, Czech, Slovak, Serbian, Croatian, Slovene, Hungarian, Albanian, Romanian, German, Italian) * [[Code page 437|CP437]], [[Code page 737|CP737]], [[Code page 850|CP850]], [[Code page 852|CP852]], [[Code page 855|CP855]], [[Code page 857|CP857]], [[Code page 858|CP858]], [[Code page 860|CP860]], [[Code page 861|CP861]], [[Code page 863|CP863]], [[Code page 865|CP865]], [[Code page 866|CP866]], [[Code page 869|CP869]] *[[Code page#Windows .28ANSI.29 code pages|MS-Windows character sets]]: ** [[Windows-1250]] for Central European languages that use Latin script, (Polish, Czech, Slovak, Hungarian, Slovene, Serbian, Croatian, Romanian and Albanian) ** [[Windows-1251]] for Cyrillic alphabets ** [[Windows-1252]] for Western languages ** [[Windows-1253]] for Greek ** [[Windows-1254]] for Turkish ** [[Windows-1255]] for Hebrew ** [[Windows-1256]] for Arabic ** [[Windows-1257]] for Baltic languages ** [[Windows-1258]] for Vietnamese * [[Mac OS Roman]] * [[KOI8-R]], [[KOI8-U]], [[KOI7]] * [[MIK Code page|MIK]] * [[Indian Script Code for Information Interchange|ISCII]] * [[Tamil Script Code for Information Interchange|TSCII]] * [[Vietnamese Standard Code for Information Interchange|VISCII]] * [[JIS X 0208]] is a widely deployed standard for Japanese character encoding that has several encoding forms. ** [[Shift JIS]] (Microsoft [[Code page 932]] is a dialect of Shift_JIS) ** [[Extended Unix Code|EUC-JP]] ** [[ISO/IEC 2022|ISO-2022-JP]] * [[JIS X 0213]] is an extended version of JIS X 0208. ** [[Shift JIS|Shift_JIS-2004]] ** [[Extended Unix Code|EUC-JIS-2004]] ** [[ISO/IEC 2022|ISO-2022-JP-2004]] * Chinese [[List of GB standards|Guobiao]] ** [[GB 2312]] ** [[GBK]] (Microsoft Code page 936) ** [[GB 18030]] * Taiwan [[Big5]] (a more famous variant is Microsoft [[Code page 950]]) * Hong Kong [[HKSCS]] * Korean ** [[KS X 1001]] is a Korean double-byte character encoding standard ** [[Extended Unix Code#EUC-KR|EUC-KR]] ** [[ISO/IEC 2022|ISO-2022-KR]] * [[Unicode]] (and subsets thereof, such as the 16-bit 'Basic Multilingual Plane'). See [[UTF-8]] * [[ANSEL]] or [[ISO/IEC 6937]] == Character encoding translation == As a result of having many character encoding methods in use (and the need for backward compatibility with archived data), many computer programs have been developed to translate data between encoding schemes. Some of these are cited below. [[Cross-platform]]: * [[Web browser]]s - most modern web browsers feature automatic character encoding detection. On Firefox 3, for example, see the View/Character Encoding submenu. * [[iconv]] – program and standardized API to convert encodings * convert_encoding.py – Python based utility to convert text files between arbitrary encodings and line endings.<ref>[http://users.physik.fu-berlin.de/~mgoerz/blog/programs/convert_encoding/ Homepage of Michael Goerz - convert_encoding.py<!-- Bot generated title -->]</ref> * decodeh.py - algorithm 