(MSDN)] *[http://msdn2.microsoft.com/en-us/library/ms189826.aspx Transact-SQL Reference for SQL Server 2005 (MSDN)] *[http://msdn.microsoft.com/en-us/library/bb510741(SQL.100).aspx Transact-SQL Reference for SQL Server 2008 (MSDN)] [[Category:SQL]] [[Category:Data-centric programming languages]] [[cs:Transact-SQL]] [[de:Transact SQL]] [[fr:Transact-SQL]] [[id:Transact-SQL]] [[is:Transact-SQL]] [[it:Transact-SQL]] [[ja:Transact-SQL]] [[pl:Transact-SQL]] [[pt:Transact-SQL]] [[ru:Transact-SQL]] [[zh:Transact-SQL]]</text> </page> <page> <id>38061</id> <title>Transaction Processing Facility</title> <text>{{Infobox OS | name = z/TPF | logo = | screenshot = | caption = | developer = [[IBM]] | source_model = [[Closed source]] (Source code is available to licenced users with restrictions) | kernel_type = [[Real-time operating system|Real-time]] | supported_platforms = ? | ui = ? | family = z/Architecture assembly language (z/TPF), ESA/390 assembly language (TPF4) | released = | latest_release_version = V1R1 | latest_release_date = December, 2005 | latest_test_version = | latest_test_date = | marketing_target = | programmed_in = Basic Assembly Language sks s/390 assembly C C++ | prog_language = | language = | updatemodel = | package_manager = | working_state = Current | license = [[Proprietary software|Proprietary]] monthly license charge (MLC) | website = [http://www.ibm.com/software/htp/tpf/ IBM: z/TPF operating system] }} {{History of IBM mainframe operating systems}} '''TPF''' is an [[International Business Machines|IBM]] [[real-time operating system]] for [[IBM mainframe|mainframes]] descended from the IBM [[System/360]] family, including [[zSeries]] and [[ZSeries|System z9]]. The name is an [[initialism]] for '''Transaction Processing Facility'''. TPF evolved from the [[Airlines Control Program]] (ACP), a free package developed in the mid-1960s by [[International Business Machines|IBM]] in association with major North American and European airlines. In 1979, IBM introduced TPF as a replacement for ACP &mdash; and as a priced software product. The new name suggests its greater scope and evolution into non-airline related entities. Current users include [[Sabre (computer system)|Sabre]] (reservations), [[Amadeus (computer system)|Amadeus]] (reservations), [[VISA (credit card)|VISA Inc]] (authorizations), [[American Express]] (authorizations), [[HP Enterprise Services|EDS]] SHARES (reservations), [[Holiday Inn]] (central reservations), [[CBOE]] (order routing), [[Singapore Airlines]], [[KLM]], [[Qantas]], [[Amtrak]], [[Marriott International]], [[Travelport]] and the [[NYPD]] (911 system). TPF delivers fast, high-volume, high-throughput transaction processing, handling large, continuous loads of essentially simple transactions across large, geographically dispersed networks. The world's largest TPF-based systems are easily capable of processing tens of thousands of transactions per second. TPF is also designed for highly reliable, continuous (24x7) operation. It is not uncommon for TPF customers to have continuous online availability of a decade or more, even with system and software upgrades. This is due in part to the multi-mainframe operating capability and environment. While there are other industrial-strength [[transaction processing system]]s, notably IBM's own [[CICS]] and [[Information Management System|IMS]], TPF's ''raison d'Ãªtre'' is extreme volume, large numbers of concurrent users and very fast response times, for example [[VISA (credit card)|VISA credit card]] transaction processing during the peak holiday shopping season. TPF implements an application known as [[Programmed Airline Reservations System|PARS]]. Many airlines use this passenger reservation application or its international version IPARS. TPF was traditionally a 370 [[assembly language]] environment for performance reasons, and many TPF assembler applications persist. However, more recent versions of TPF encourage the use of [[C (programming language)|C]]. Another [[programming language]] called [[SabreTalk]] was born and died on TPF. One of TPF's major components is a high performance, specialized database facility called TPFDF. It is common for TPF sites to also use other IBM mainframe operating systems, such as [[z/OS]] and [[z/VM]], for offline and complementary processing. It is also possible to run a close cousin of TPF, called [[ALCS transaction monitor|ALCS]], atop z/OS rather than as a separate operating system. All these operating systems usually coexist on the same physical hardware since IBM mainframes feature multiple ways of partitioning, to handle mixed workloads. IBM announced the delivery of the next release of TPF, dubbed z/TPF V1.1, in September 2005. Most significantly, z/TPF adds 64-bit addressing and mandates use of the 64-bit [[GNU]] development tools. The [[GNU Compiler Collection|GCC compiler]] and the DIGNUS Systems/C++ and Systems/C are the only supported compilers for z/TPF. The Dignus compilers offer reduced source code changes when moving from TPF 4.1 to z/TPF. Japan Airlines has publicly acknowledged they are running z/TPF.<ref>http://www-03.ibm.com/press/us/en/pressrelease/23914.wss</ref> ==Operating environment== ===Tightly coupled=== TPF is capable of running on a [[Multiprocessing|multiprocessor]], that is, on mainframe systems in which there is more than one CPU. Within the community, the CPUs are referred to as '''Instruction Streams''' or simply '''I-streams'''. On a mainframe or in a logical partition (LPAR) of a mainframe with more than one I-stream, TPF is said to be running '''tightly-coupled'''. Due to the [[reentrant (subroutine)|reentrant]] nature of TPF programs and the control program, this is made possible as no active piece of work modifies any program. The default is to run on the ''main I-stream'' which is given as the lowest numbered I-stream found during IPL. However users and/or programs can initiate work on other I-streams via internal mechanisms in the API which let the caller dictate which I-stream to initiate the work on. In the new ''z/TPF'', the system itself will try to load balance by routing any application that does not request a preference or ''affinity'' to I-streams with less work than others. In the TPF architecture, each I-stream shares common core, except for a 4Kb in size prefix area for each I-stream. In other instances where core data must or should be kept separate, the application designer typically carves up reserved storage areas into a number of sections equal to the number of I-streams. A good example of the TPF system doing this can be found with TPFs support of ''I-stream unique globals''. Proper access to these carved sections of core are made by taking the base address of the area, and adding to it the product of the I-stream relative number times the size of each area. ===Loosely coupled=== TPF is capable of supporting multiple mainframes (of any size themselves - be it single I-stream to multiple I-stream) connecting to and operating on a common database. Currently, 32 IBM mainframes may share the TPF database; if such a system were in operation, it would be called '''32-way loosely coupled'''. The simplest [[loose coupling|loosely coupled]] system would be two IBM mainframes sharing one '''DASD''' ([[Direct Access Storage Device]]). In this case 