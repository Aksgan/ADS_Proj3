design of robust interdisciplinary (or composite1) networks which is one of the primary goals of the NS CTA program. The overall approach in EDIN is to mathematically characterize the rich interactions between composite networks (which may comprise multiple networks with varying levels of coupling between them), and the dynamics that occur within each network or across networks. Examples of key technical approaches within EDIN include the development of formal models for reasoning about interacting networks; development of a theory of composite graphs for modeling interacting networks; modeling and analysis of group behaviors using techniques ranging beyond traditional graph theory; development of community discovery algorithms; characterization of temporal graph properties; development of mathematically tractable tactical mobility models; development of theories of co-evolution of interacting networks, etc. Modeling the evolution and dynamics of a network entails understanding both the structural properties of dynamic networks and understanding the dynamics of processes (or behaviors) of interest embedded in the network. Typically, the dynamics of network structure impacts certain processes (e.g., how information propagates through the network); but at the same time the dynamics of processes (or behaviors) may result in alteration of network structures. Therefore, gaining a fundamental understanding of such relationships under several kinds of network dynamics is of paramount importance for obtaining significant insights into the behavior and evolution of complex military networks as well as adversarial networks. EDIN will also investigate a particular type of network dynamics, i.e., mobility (not only of communication devices but also of human beings, information etc.), which is particularly important in the military network context. === Participating Institutions in the Alliance === * [[Army Research Laboratory]] * [[CERDEC]] * [[BBN Technologies]] (Principal member, IRC, and Consortium Lead). Center director: Dr. [[Will E. Leland]]. * [[Pennsylvania State University]] (Principal member, CNARC). Center director: Prof. [[Thomas La Porta]]. * [[University of Illinois, Urbana-Champaign]] (Principal member, INARC). Center director: Prof. [[Jiawei Han]]. * [[Rensselaer Polytechnic Institute]] (Principal member, SCNARC). Center director: Prof. [[Boleslaw Szymanski]]. There are approximately 30 institutions (universities and industrial R&D labs) involved in the NS CTA. === The NS CTA Facility === The NS CTA facility is located in Cambridge, Massachusetts in the campus of [[BBN Technologies]].<ref>[http://maps.google.com/maps?f=q&source=s_q&hl=en&geocode=&q=10+Fawcett+Street,+Cambridge,+MA&sll=42.389107,-71.146002&sspn=0.013122,0.027595&ie=UTF8&hq=&hnear=10+Fawcett+St,+Cambridge,+Middlesex,+Massachusetts+02138&z=16 10 Fawcett Street, Cambridge, MA on Google Map]</ref> ==Notes== {{reflist}} [[Category:Networks]] [[Category:Network theory]]</text> </page> <page> <id>26184</id> <title>Network cloaking</title> <text>{{multiple issues | advert=April 2010 | orphan=April 2010 | refimprove=April 2010 }} '''Network cloaking''' is a technology that makes a protected [[Computer network|network]] invisible to malicious external traffic, while allowing complete and uninterrupted access for legitimate users. Network cloaking is accomplished via a promiscuous [[bridge]] with [[Firewall (computing)|firewall]] functionality, located in front of the internet firewall. All [[encryption|non-encrypted]] [[Internet]] traffic entering a network is inspected for [[malware|malicious code]], prohibited behaviors, malformed [[Packet (information technology)|packet]]s, and [[hacking|hack]] attempts. The '''network cloaking''' function immediately drops all packets from an offending [[IP address]], including the initial request packets, and responses from the protected network. To the perpetrator, the protected network simply appears to be unused, or invisible. ==External links== * [http://www.networkcloaking.com networkcloaking.com] {{Comp-eng-stub}} {{compu-network-stub}} [[Category:Distributed computing architecture]] [[Category:Human–computer interaction]]</text> </page> <page> <id>26185</id> <title>Network coding</title> <text>'''Network coding''' is a technique where, instead of simply relaying the [[Packet (information technology)|packets]] of information they receive, the [[Node (networking)|nodes]] of a network will take ''several'' packets and combine them together for transmission. This can be used to attain the maximum possible [[information]] [[flow network|flow]] in a [[Network theory|network]]. Network coding is a field of [[information theory]] and [[coding theory]]. == A brief history == A network is represented by a [[directed graph]] <math>\mathcal{G}=(V, E, C)</math>. <math>V</math> is the set of nodes or vertices, <math>E</math> is the set of directed links (or edges), and <math>C</math> gives the capacity of each link of <math>E</math>. Let <math>t(s, t)</math> be the maximum possible throughput from node <math>s</math> to node <math>t</math>. It has long been known that <math>t(s, t)</math> is upper bounded by the minimum capacity of all cuts, which is the sum of the capacities of the edges on a cut, between these two nodes. [[Karl Menger]] proved that there is always a set of edge-disjoint paths achieving the upper bound in a [[unicast]] scenario, known as the [[max-flow min-cut theorem]]. Later, the [[Ford-Fulkerson algorithm]] was proposed to find such paths in a polynomial time. Then, Edmonds proved in the paper "Edge-Disjoint Branchings" the upper bound in the broadcast scenario is also achievable, and proposed a polynomial time algorithm. However, the situation in the [[multicast]] scenario is more complicated, and in fact, such an upper bound can't be reached using traditional [[routing]] ideas. Ahlswede, et al. proved that it can be achieved if additional computing tasks (incoming packets are combined into one or several outgoing packets) can be done in the intermediate nodes.<ref name="Ahlswede 2000">{{cite journal| first=Rudolf| last= [[Rudolf Ahlswede|Ahlswede]]| coauthors= N. Cai, Shuo-Yen Robert Li, and Raymond Wai-Ho Yeung| title=Network Information Flow| journal=IEEE Transactions on Information Theory, IT-46| pages= 1204–1216| year= 2000| doi=10.1109/18.850663| volume=46}}</ref> In 2003, Li, et al. proved that [[linear coding]] is enough to achieve the upper bound in multicast problems <ref>S. Li, R. Yeung, and N. Cai, “Linear Network Coding”([http://pdos.lcs.mit.edu/decouto/papers/li03.pdf PDF]), in IEEE Transactions on Information Theory, Vol 49, No. 2, pp. 371-381, 2003.</ref> In 2005, [[Randall Dougherty]], [[Chris Freiling]], and Ken Zeger showed that the linear coding is not sufficient in general (multisource, multisink with arbitrary demands), even for more general versions of linearity such as [[convolutional coding]], [[filter-bank coding]], etc.<ref>Dougherty, Freiling, and Zeger. Insufficiency of Linear Coding in Network Information Flow.[http://code.ucsd.edu/~zeger/publications/journals/DoFrZe05-IT-Insufficiency/DoFrZe05-IT-Insufficiency.pdf] and [http://code.ucsd.edu/~zeger/publications/journals/DoFrZe05-IT-Insufficiency/DoFrZe05-IT-Insufficiency-erratum.pdf]</ref> == Linear network coding == In a Linear Network coding problem a group of nodes <math>P</math> are involved in moving the data from <math>S</math> source nodes to <math>K</math> sink nodes. Each node generates a new packet, which is a linear combination of the earlier received packets on the link, by coefficients in the [[galois field|finite field]]. A message generated so <math>X_k</math> is related to the received messages <math>M_i</math> by the relation: :<math>X_k = \sum_{i=1}^{S}g_k^i\cdot M_i</math> Each node forwards the computed value <math>X_k</math> along with all the coefficients used in the <math>k^{th}</math> level, <math>g_k^i</math>. 