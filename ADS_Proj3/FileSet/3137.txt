changes from NetBSD 4.0 to 5.0 |date=December 23, 2009 |accessdate=January 15, 2010}}</ref> A scalable M2 thread scheduler was implemented, though the old 4.4BSD scheduler still remains the default but was modified to scale with SMP. Threaded [[Interrupt|software interrupts]] were implemented to improve synchronization. The [[virtual memory]] system, [[Slab allocation|memory allocator]] and [[Trap (computing)|trap handling]] were made MP safe. The file system framework, including the [[Virtual file system|VFS]] and major [[file system]]s were modified to be MP safe. Since April, 2008 the only subsystems running with a giant lock are the [[Protocol (computing)|network protocols]] and most [[device driver]]s. ===Security=== NetBSD provides various features in the security area.<ref>{{cite web|url=http://netbsd.gw.com/cgi-bin/man-cgi?security+8+NetBSD-current|title=NetBSD security(8) manual page}}</ref> The Kernel Authorization framework<ref>{{cite web |url=http://netbsd.gw.com/cgi-bin/man-cgi?kauth+9+NetBSD-current |title=kauth(9) |work=NetBSD Manual Pages |date=August 10, 2009 |accessdate=January 15, 2010}}</ref> (or Kauth) is a subsystem managing all authorization requests inside the kernel, and used as system-wide security policy. It allows external modules to plug-in the authorization process. NetBSD also incorporates exploit mitigation features,<ref>{{cite web|url=http://netbsd.gw.com/cgi-bin/man-cgi?paxctl+8+NetBSD-current|title=NetBSD paxctl(8) manual page}}</ref> ASLR, MPROTECT and Segvguard from [[PaX]] project, and [[GNU Compiler Collection|GCC]] [[Stack-smashing protection|Stack Smashing Protection]] (SSP, or also known as ProPolice, enabled by default since NetBSD 6.0) compiler extensions. [[Veriexec|Verified Executables]] (or Veriexec) is an in-kernel file integrity subsystem in NetBSD. It allows the user to set digital fingerprints (hashes) of files, and take a number of different actions if files do not match their fingerprints. For example, one can allow [[Perl]] to run only scripts that match their fingerprints.<ref>{{cite web|url=http://www.netbsd.org/docs/guide/en/chap-veriexec.html|title=Chapter 19. NetBSD Veriexec subsystem}}</ref> The cryptographic device driver (CGD) allows using disks or partitions (including CDs and DVDs) for encrypted storage.<ref>{{cite web|url=http://www.netbsd.org/docs/guide/en/chap-cgd.html|title=Chapter 14. The cryptographic device driver (CGD)}}</ref> ===Virtualization=== The Xen [[Hypervisor|virtual-machine monitor]] is supported in NetBSD since the 3.0 release. To use Xen, the system requires a special pre-kernel boot environment that loads a specialized Xen kernel as the "host OS" (known as Dom0). Any number of "guest OS" (known as DomU) virtualized computers, with or without (using "hypervisor" options) specific Xen/DomU support, can be run in parallel with the appropriate hardware resources. With NetBSD 5, which greatly improves disk I/O and network I/O performance over NetBSD 4, some guest Operating Systems running under Xen are known to operate faster than when installed natively on the same hardware without NetBSD and Xen behind the scenes.{{Citation needed|date=January 2010}} The need for a boot manager, such as GRUB, was also eliminated with NetBSD 5's new built-in Xen-compatible configurable boot manager.<ref>{{cite web |url=http://netbsd.gw.com/cgi-bin/man-cgi?boot++NetBSD-current |title=boot(8) |work=NetBSD Manual Pages |date=September 4, 2009 |accessdate=January 15, 2010}}</ref> User-space [[Platform virtualization|virtualization]] such as [[VirtualBox]] and [[QEMU]] are also supported on NetBSD. ===Storage=== NetBSD includes many enterprise features like [[iSCSI]], a [[journaling filesystem]], [[logical volume management]] and the [[ZFS]] filesystem. The WAPBL journalling filesystem, an extension of the BSD FFS filesystem, was contributed by Wasabi Systems in 2008.<ref>{{cite mailing list |url=http://mail-index.netbsd.org/tech-kern/2008/03/02/msg000504.html |title=Patches for journalling support |first=Simon |last=Burge |date=March 2, 2008 |maillinglist=tech-kern@NetBSD.org |accessdate=January 15, 2010}}</ref> The NetBSD Logical Volume Manager is based on a BSD reimplementation of a device-mapper driver and a port of the Linux [[Logical Volume Manager]] tools. It was mostly written during the [[Google Summer of Code]] 2008.<ref>{{cite mailing list |url=http://mail-index.netbsd.org/tech-kern/2008/08/28/msg002554.html |title=HEADS UP NetBSD lvm support |first=Adam |last=Hamsik |date=August 29, 2008 |maillinglist=tech-kern@NetBSD.org |accessdate=January 15, 2010}}</ref> The [[ZFS]] filesystem developed by [[Sun Microsystems]] was imported in to the NetBSD base system in 2009. Currently, the NetBSD ZFS port is based on ZFS version 13. ===Compatibility with other operating systems=== At the source code level, NetBSD is very nearly entirely compliant with [[POSIX]].1 (IEEE 1003.1-1990) standard and mostly compliant with POSIX.2 (IEEE 1003.2-1992). NetBSD also provides [[system call]]-level binary compatibility on the appropriate processor architectures with several UNIX-derived and UNIX-like operating systems, including [[Linux]], other BSD variants like [[FreeBSD]], Apple's [[Darwin (operating system)|Darwin]], [[Solaris Operating System|Solaris]] and [[SunOS]] 4. This allows NetBSD users to run many applications that are only distributed in binary form for other operating systems, usually with no significant loss of performance.<ref>{{cite web |url=http://www.netbsd.org/docs/compat.html |title=NetBSD Binary Emulation |date=January 13, 2010 |accessdate=January 15, 2010}}</ref> A variety of "foreign" disk [[filesystem]] formats are also supported in NetBSD, including [[File Allocation Table|FAT]], [[NTFS]], Linux [[ext2fs]], [[Mac OS X]] [[Unix File System|UFS]], [[RISC OS]] FileCore/ADFS, [[AmigaOS]] [[Amiga Fast File System|Fast File System]], [[IRIX]] [[Extent File System|EFS]] and many more through [[Filesystem in Userspace|FUSE]]. ==Licensing== All of the NetBSD kernel and most of the core userland source code is released under the terms of the [[BSD licenses|BSD License]] (two, three, and four-clause variants). This essentially allows everyone to use, modify, redistribute or sell it as they wish, as long as they do not remove the copyright notice and license text (the four-clause variants also include terms relating to publicity material). Thus, the development of products based on NetBSD is possible without having to make modifications to the source code public. In contrast, the [[GNU General Public License|GPL]] stipulates that changes to source code of a product must be released to the product recipient when products derived from those changes are released. On June 20, 2008, the NetBSD Foundation announced a transition to the two clause BSD license, citing concerns with UCB support of clause 3 and industry applicability of clause 4.<ref>{{cite press release|url=http://www.netbsd.org/about/redistribution.html#why2clause|title=NetBSD Licensing and Redistribution|date=June 2008|accessdate=June 20, 2008}}</ref> NetBSD also includes the [[GNU]] development tools and other packages, which are covered by the GPL and other open source licenses. As is the case for the other [[BSD#Significant_BSD_descendants|BSD]] projects, NetBSD separates those in its base source tree, in order to make removal of code under more restrictive licenses easier.{{Citation needed|date=April 2010}}<!-- need a source giving the policy itself --> As for packages, the installed software licenses may be controlled by modifying the list of allowed licenses in the pkgsrc configuration file (<code>mk.conf</code>). ==Releases== The following table lists major NetBSD releases and their notable features in reverse chronological order. Minor and patch releases are not included. {| class="wikitable" |- ! Colour ! Meaning |- | align=center style="background-color:#A0E75A;" | Green | Release still supported |- | align=center style="background-color:#fa8072;" | Red | Release no longer supported |} {| class="wikitable" 