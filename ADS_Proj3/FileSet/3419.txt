preserves them, and makes them available for viewing. Access to the archive is made available to the public via the Pandora web site. Web sites are selected based on their cultural significance and research value in the long term. There is no legal deposit provision in the [[Australian Copyright Act 1968]] for digital format publications so that permission is sought from [[publisher]]s before a web site can be copied to the PANDORA archive. The archival management system called PANDAS (PANDORA Digital Archiving System) is used to add a title into PANDORA. This was developed and is maintained by the National Library of Australia. The latest version is PANDAS 3 which was deployed in mid 2007. ==History== The first two titles were downloaded in October 1996. By June 1997 the Archive contained 31 titles. In August 1998 the [[State Library of Victoria]] became a participant in adding content to the Archive. By March 2004 all of the mainland State libraries, the [[Northern Territory Library]], the [[National Film and Sound Archive]], the [[Australian War Memorial]] and the [[Australian Institute of Aboriginal and Torres Strait Islander Studies]] had become participants. The [[State Library of Tasmania]] is not participating in PANDORA, but is running its own project called Our Digital Island. As of February 2008 there were 17,951 discrete websites/titles within the Archive comprising 2.01 TB of data. ==See also== *[[Internet Archive]] *[[Library of Congress Digital Library project]] *[[National Digital Information Infrastructure and Preservation Program]] *[[Web archiving]] ==External links== *[http://pandora.nla.gov.au/ PANDORA: Australia's Web Archive] *[http://www.nla.gov.au/ National Library of Australia] *[http://www.nla.gov.au/pub/gateways/archive/46/p01a01.html New look marks milestone for PANDORA Tour de Force], August 2000. Retrieved 13 September 2006. *[http://www.nla.gov.au/pub/gateways/issues/82/story01.html The Work of Pandora], September 2006. [[Category:1996 establishments]] [[Category:Archives in Australia]] [[Category:Digital libraries]] [[Category:Internet in Australia]] [[Category:Web archives]] [[Category:Geographic region-oriented digital libraries]] [[Category:Backronyms]] {{coord|35|17|47.49|S|149|07|46.02|E|display=title|region:AU_type:city_source:GNS-enwiki}}</text> </page> <page> <id>28362</id> <title>Panorama (GIS)</title> <text>'''Panorama''' project is the set of geoinformation technologies, which includes professional [[Geographic information system|GIS]] "MAP 2005", professional vectorizer of electronic maps "Panorama-Editor", developer tools for various platforms ([[Microsoft Windows|Windows]] and [[Linux]]) "GIS Toolkit", system of accounting and registration of landownership (SARL) and some specialized applications. ==External links== *[http://www.gisinfo.ru/index_en.htm Official site] [[Category:GIS software]] {{science-software-stub}}</text> </page> <page> <id>28369</id> <title>Pantalk</title> <text>'''Pantalk''' is an interpreted cross-platform [[programming language]] developed in the early 1980s by Cojyp (HyperPanel Lab) for use on Canal Plus' [[MediaHighway]] [[interactive tv]] platform and other embedded environments. Pantalk was created to take much less development time compared to [[Java (programming language)|Java]] by avoiding the "Kid in a candyshop" effect that plenty of rich language and structures may have, but in practice the serious limitations prevent it being taken as a serious computer language outside of the limited Mediahighway digital TV platform which has been outpaced by the more ubiquitous javascript based liberate and C based OpenTV platforms. Pantalk is a partially tokenised [[interpreted language]] in which structured code written as [[plain text]] (*.isb files) and then precompiled into *.isc files. These *.isc files can be compiled into [[bytecode]] ([[p-code machine|p-code]], or *.isu files). It features a subset of the simpler control structures, operators, [[Variable (programming)|variable]] types and statements that you expect from any compiled or interpreted language, and it also has features of its own. For example the variables declaration (all global across whole applications), the [[memory]] allocation, the management of the [[graphics]] and widgets. It misses some basics like data structures, subroutines and functions outside of loading a new tokenised file (apart from the system API) and feels like a very old style basic. All variables are global. Pantalk manages single scalar variables up to multidimensional [[Array data structure|arrays]]. The available types are: [[Integer]], [[Real number|Real]], Alpha, Alphanu, [[calendar date|Date]], [[Time]], [[String (computer science)|Text]], [[Memory]]. These variable are written in *.clb files and then precompiled into *.cla files. These *.cla files can be compiled into bytecode (p-code, or *.clu files). It reads like a hybrid of 8-bit microcomputer BASIC and Pascal, and after working with it for some time developers will be frustrated by its lack of consistency and having many of the limitations of said 8-bit BASIC interpreters. A Pantalk script does not have any [[header]] or script name and does not require the Return or End statement at the end of a procedure. Many statements must end with a semi colon, but depending on certain API areas, not always. There are two types of [[script (computer programming)|script]], the panel script(also called dependent script) and the independent script. Panel script: a panel is a group of graphical objects named widgets. Each graphical [[object (computer science)|object]] is also called a [[Web widget|widget]] because it can trigger one or several scripts. When a widget invokes a script, the script must be a panel script. A panel script can invoke any types of script, panel or independent. Such a script is named Panel script and is stored in a library of panel scripts only. Independent script: an independent script can be invoked by any other scripts and by a module boot sequence. An independent script cannot invoke a panel script. When calling a script, the script path must be specified. The path specifies the script location ( which module and script library it pertains to). <pre> /* set courier font for a target */ fontname := "helvetica"; /* 1 corresponds to Courier */ /* 10 is the size */ XSet_Font ( winId, 1,10 ); XGet_Font_Size ( winId, 100,150, fwidth, fheight, fbaseline ); XDraw_String ( winId, 60, 80, "Hello World" ); XSet_Show_String ( 4, 5, fontname, 10 ); /* display a string in the middle */ /* of the upper part of the screen */ XShow_String ( 200, 10, "Hello again world" ); </pre> == External links == * [http://www.hyperpanel.com/ Creator of the Pantalk language ] [[Category:Digital television]] [[Category:Domain-specific programming languages]]</text> </page> <page> <id>28376</id> <title>Paper prototyping</title> <text>{{Multiple issues|refimprove=March 2010|wikify=March 2010}} In [[humanâ€“computer interaction]], '''paper prototyping''' is a widely used method in the [[user-centered design|user-centered design process]], a process that helps developers to create software that meets the user's expectations and needs - in this case, especially for [[user interface design|designing]] and [[usability 