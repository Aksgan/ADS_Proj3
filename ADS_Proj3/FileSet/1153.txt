organism and its environment, which may include other organisms. A '''device ecology''' refers to a collection of devices with relationships among each other, that is, these devices can communicate with one another and are aware of each others' presence {{Harv|Loke|2003}}. Devices in a future living room, devices in a kitchen, or devices in a factory might collectively form device ecologies (a living room device ecology, a kitchen device ecology, etc) to cooperatively perform tasks for a user. Imagine a user introducing a new device to the living room device ecology (i.e., bringing home a new device). Ideally, the user simply places the device in the living room, and there is an automatic "orientation" of the new device with subsequent integration into the living room device ecology. It is possible that devices have different roles within a device ecology. The word "ecology" is used as a [[metaphor]] but also emphasises the idea of devices in relationship. We may even speak of devices in [[symbiotic]] relationships, where devices are somehow "helping" each other in their goals. The notions of [[mutualism (biology)|mutualism]], [[commensalism]], [[endosymbiosis]] and [[ectosymbiosis]] may then be interpreted for a device ecology with devices of different forms, functionalities and sizes; other relationships can be defined {{Harv|Seera|2007}}. This also means that devices within a device ecology can affect each other through their behavior. Device ecology relates to the notion of social devices, using the word "social" to describe devices that are capable of interacting with one another, and relates to [[smart devices]], which refers to devices with capabilities to interact with one another and with users in an intelligent context-aware manner. Typically, with a user in an environment, the devices in the environment and on the user can form a device ecology. A research problem is how a user might interact with device ecologies, and another is how devices might keep track of each other, even as new devices might join the ecology or devices leave. A European project talks about networked societies of artifacts.<ref>http://fronts.cti.gr/</ref> ==See also== * [[Information ecology]] * [[Universal Plug and Play]] == References == * {{Cite conference | ref=harv | first = Seng W. | last = Loke | authorlink = | coauthors = | title = Service-Oriented Device Ecology Workflows | booktitle = Proceedings of the International Conference on Service-Oriented Computing | place = Trento, Italy | pages = 559–574 | year = 2003 }} * {{Cite conference | ref=harv | first = Seng W. | last = Loke | authorlink = | coauthors = | title = Formally Characterizing Device Ecology Workflows with Predictable Observable Effects | booktitle = Proceedings of FESCA at ETAPS 2004 | place = | pages = | year = 2004 }} * {{Cite conference | ref=harv | first = Harinder | last = Seera | first2 = Seng W. | last2 = Loke | | first3 = Torab | last3 = Torabi | | title = Towards Device-Blending: Model and Challenges | booktitle = AINA Workshops (vol 2) | place = | pages = 139–146 | year = 2007 }} === Notes === {{Reflist}} [[Category:Ubiquitous computing]]</text> </page> <page> <id>10143</id> <title>Device independent</title> <text>:''Device Independent also is the full name of the [[DVI (file format)|DVI file format]]. A [[computer program|program]] or [[computer file|file]] is '''device independent''' when its function is universal on different types of device. For the '''[[World Wide Web]]''', this means writing simple common denominator [[Hypertext Markup Language]] (HTML) and [[Cascading Style Sheets]] (CSS) so that ''most'' Web [[user agent]]s on ''most'' devices can render it acceptably. For '''[[computer program]]s''', this generally means that it is written in a [[metalanguage]] that can be read by any [[system platform|platform]]. A program that was not originally written for a certain environment can be [[porting|ported]], i.e. the code can be adapted for a certain platform and [[compiler|compiled]] for the platform it will be functioning in. Unfortunately, this can lead to confusion if the [[user interface]] still resembles the one for the platform it was initially designed for. For '''[[computer file]]s''', device independence means that [[software]] (or, theoretically, [[computer hardware|hardware]]) is in place that can interpret the file and allow the user to view or manipulate it. Good examples of [[cross-platform]] or '''device independent''' [[file format]]s are [[HTML]] and [[Portable Document Format|PDF]], [[GIF]] and [[JPEG]]. ==External links== * [http://www.w3.org/2001/di/ Device Independence Activity] [[Category:Computing terminology]]</text> </page> <page> <id>10145</id> <title>Device under test</title> <text>{{Unreferenced stub|auto=yes|date=December 2009}} '''Device under test''' ('''DUT'''), also known as '''unit under test''' ('''UUT'''), is a term commonly used to refer to a manufactured product undergoing testing. ==In semiconductor testing== In [[semiconductor testing]], DUT refers to a specific [[Die (integrated circuit)|die]] on a [[Wafer (electronics)|wafer]] or the resulting [[packaged part]]. Using a connection system, the part is connected to a piece of [[Semiconductor curve tracer|manual]] or [[automatic test equipment]] (ATE). The ATE then applies power to the part, supplies stimulus signals, then measures and evaluates the resulting outputs from the device. In this way, the ATE determines whether the particular device under test is good or bad. While in the form of a wafer, the ATE connects to the individual DUTs (dice) using a set of microscopic needles. Once the chips are sawn apart and packaged, the ATE connects to the DUTs (packages) using [[Zero insertion force|ZIF sockets]] (sometimes called ''contactors''). ==General electronic testing== The term DUT is also used more generally within electronics to refer to any electronic assembly under test. For example, cell phones coming off of an assembly line may be given a final test in the same way as the individual chips were earlier tested. Each cell phone under test is, briefly, the DUT. The DUT is often connected to the ATE using a [[bed of nails tester]] of [[pogo pin]]s. ==See also== * [[System Under Test]] {{DEFAULTSORT:Device Under Test}} [[Category:Semiconductor device fabrication]] [[Category:Electronic engineering]] [[Category:Hardware testing]] {{Tech-stub}} [[de:Device Under Test]] [[zh:被测器件]]</text> </page> <page> <id>10151</id> <title>DexDrive</title> <text>{{Unreferenced|date=April 2010}} {{Infobox computer hardware generic | name = DexDrive | image = dexdrive.jpg | caption = DexDrive for PlayStation | invent-date = 1996 | 