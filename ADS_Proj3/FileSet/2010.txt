pencil beam. Image:Hb4.JPG|Relative errors between the pure Monte Carlo method and the Hybrid Model. </gallery> <gallery widths="300px" heights="300px" align=center> Image:Hb55.jpg|Diffuse reflectance of the Hybrid Model in response to a pencil beam when the critical depth is set to 0.01cm, 0.03cm, 0.05cm and 0.1cm. Image:Hb7.JPG|Relative errors with different critical depths for the Hybrid Model. </gallery> <gallery widths="300px" heights="300px" align=center> Image:Hb7.jpg|Comparisons between the Monte Carlo method and the Hybrid Model in terms of diffuse reflectance in response to a pencil beam when the critical depth is set to 0.1cm. The absorption coefficient <math>\mu_a</math> varies among 0.1, 1, and 10 <math>cm^{-1}</math>. </gallery> ==References== {{reflist}} [[Category:Scientific simulation software]] [[Category:Optical software]]</text> </page> <page> <id>17158</id> <title>HyperCard</title> <text>{{Infobox Software | name = HyperCard | logo = [[Image:HyperCard 2-icon.png]] | screenshot = [[Image:hypercard.png|250px]] | caption = HyperCard Screenshot | developer = [[Apple Inc.]] (formerly Apple Computer, Inc.) | latest_release_version = 2.4.1 | latest_release_date = 1998 | operating_system = [[System Software 6]], [[System 7]], [[Mac OS 8]], [[Mac OS 9]] | genre = [[Hypermedia]], [[Software development|Development]] | license = [[Proprietary software|Proprietary]] | website = }} '''HyperCard''' is an [[application program]] created by [[Bill Atkinson]] for [[Apple Inc.|Apple Computer, Inc.]] that was among the first successful [[hypermedia]] systems before the [[World Wide Web]]. It combines [[database]] capabilities with a graphical, flexible, user-modifiable interface.<ref>[http://macgui.com/usenet/?group=14&id=4827 HyperCard: Rumors or Reality]</ref> HyperCard also features [[HyperTalk]], written by [[Dan Winkler]], a [[programming language]] for manipulating data and the user interface. Some HyperCard users employed it as a programming system for [[Rapid Application Development]] of applications and databases. HyperCard was originally released in 1987 for $49.95, and was included with all new Macs sold at the time.<ref>[http://macgui.com/usenet/?group=14&id=4987 Hypercard â€“ How About New Mac Owners]</ref> It was withdrawn from sale in March 2004, although by then it had not been updated for many years. HyperCard runs natively only in [[Mac OS]] versions 9 or earlier, but it can still be used in [[Mac OS X]]'s [[Classic (Mac OS X)|Classic]] mode on PowerPC based machines (G5 and earlier). The last functional native HyperCard authoring environment is Classic mode in Mac OS X 10.4 (Tiger) on PowerPC based machines (although it can be run on modern Intel-based machines by using an emulation layer such as [[SheepShaver]]). ==Description== HyperCard has been described as a "software [[erector set]]." It integrates a software development environment with a run-time environment in a simple, easily accessible way. The tools required to write an application, principally the creation and configuration of screen objects like buttons, fields and menus, are part and parcel with the ability to add programmed functionality to those objects. When designing and programming an application one may contemplate both structure and capability within a single well defined arena. That one could personally design and implement a custom application uniquely suited to one's own needs revolutionized the very concept of what software was. Instead of trying to force a particular task onto an Excel spreadsheet, for example, a custom solution may be authored, modified and updated as needed, in a very short time, without functional compromise and with a personalized interface. "Empowerment" became a catchword as this possibility was embraced by the Macintosh community, as was the phrase "programming for the rest of us", that is, anyone, not just professional programmers. HyperCard is based on the concept of a "stack" of virtual "cards." Cards hold data, just as they would in a [[rolodex]]. The layout engine was similar in concept to a "form" as used in most Rapid Application Development (RAD) environments (such as [[Borland Delphi]] or [[Visual Basic]]). A special "Home" stack (precursor to the home page on a website) was available as an application launcher, a repository for shared scripts, and a facility for setting preferences. HyperCard is not only a database system. The layout of each card could be unique, just as one can write additional non-standard information on a Rolodex card. A special background layer contained elements that appeared on all cards of that stack or on all cards grouped under a certain background. Backgrounds could include pictures (its original purpose, "background picture"), in addition to the objects also available for each card: fields; buttons; (static) text; (editable) text fields; and other common [[GUI]] elements. Each card then could contain different data in the text or picture fields, as in a database. For instance, an address book could be built by adding to the background a few text fields to hold the name and address. Once completed, the user adds a new card (by typing Command-N or under software control) and types into the fields. The background could be modified at any time, allowing changes to be made easily. Basic operations such as search, add, and delete were built-in, allowing simple databases to be set up and used by anyone able to use the [[Macintosh]] computer. The Rolodex paradigm does not preclude the creation of standard looking applications. Arbitrary functionality could be programmed into a single card, making it resemble a traditional single-screen application. Additional cards could be linked similarly to the way that additional screens are linked in ordinary programs. Full control of the menu bar and support of virtually all native objects and controls allowed the creation of professional looking software. Hypercard saved the working stack to disk automatically after most standard operations, such as editing a text field or navigating to another card. This feature is disk intensive (there is in fact no native "save" command at all, except to make a copy of the current stack). HyperCard's <code>find</code> command could quickly navigate to cards containing text using a ''hintBits'' algorithm. This could be made more selective with modifications such as <code>find "Bob" in card field "hello"</code>. Similarly, it had a "sort" command that allowed evaluating entire expressions to determine sorting order. ==HyperTalk== {{main|HyperTalk}} The programming language within HyperCard is called HyperTalk and is [[Object-oriented programming|object oriented]]. Objects exist in a message path hierarchy and respond to messages generated by either the user or the system itself. Objects inherit properties and attributes from those above them 