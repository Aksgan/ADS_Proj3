managing everyone's expectations throughout the project lifecycle to ensure that the expectations of all parties are synchronized and consistent. *The '''work order''' is the Project Manager's means of communicating with the staff about what is to be done and when it is to be completed. It becomes an internal contract between the Project Manager and those assigned responsibility for completion. *The '''Issues List''' is a way to record and track problems, exceptions, anomalies, or other incomplete tasks requiring attention. === The IBM Rational Method Composer product === The IBM Rational Method Composer product is a tool for authoring, configuring, viewing, and publishing processes. See [[IBM Rational Method Composer]] and an open source version [[Eclipse Process Framework]] (EPF) project for more details. === Certification === {{Copyedit|date=September 2009}} In January 2007, the new RUP certification examination for ''IBM Certified Solution Designer - Rational Unified Process 7.0'' was released which replaces the previous version of the course called ''IBM Rational Certified Specialist - Rational Unified Process''.<ref name='rupcert'>{{cite web|url=http://www-128.ibm.com/developerworks/rational/library/jan07/krebs/index.html |title=The value of RUP certification |accessdate=2008-05-13 |last=Krebs |first=Jochen |date=2007-01-15 |publisher=[[IBM]] }}</ref> The new examination will not only test knowledge related to the RUP content but also to the process structure elements.<ref name='rup7'>{{cite web|url=http://www-03.ibm.com/certify/certs/38008003.shtml |title=Spacer IBM Certified Solution Designer - IBM Rational Unified Process V7.0 |accessdate=2008-05-13 |publisher=[[IBM]] }}</ref> To pass the new RUP certification examination, a person must take IBM's ''Test 839: Rational Unified Process v7.0''. You are given 75 minutes to take the 52 question exam. The passing score is 62%.<ref name='test389'>{{cite web|url=http://www-03.ibm.com/certify/tests/ovr839.shtml |title=Test 839: Rational Unified Process v7.0 |accessdate=2008-05-13 |publisher=[[IBM]] }}</ref> === Six Best Practices === Six Best Practices as described in the Rational Unified Process is a paradigm in [[software engineering]], that lists six ideas to follow when designing any software project to minimize faults and increase productivity . These practices are:<ref>Stephen Schach (2004). ''Classical and Object-Oriented Software Engineering''. 6/e, WCB McGraw Hill, New York, 2004.</ref><ref>[http://www.augustana.ab.ca/~mohrj/courses/2000.winter/csc220/papers/rup_best_practices/rup_bestpractices.html Rational Unified Process white paper]</ref> ; Develop iteratively : It is best to know all requirements in advance; however, often this is not the case. Several software development processes exist that deal with providing solution on how to minimize cost in terms of development phases. ; Manage requirements : Always keep in mind the requirements set by users. ; Use components : Breaking down an advanced project is not only suggested but in fact unavoidable. This promotes ability to test individual components before they are integrated into a larger system. Also, code reuse is a big plus and can be accomplished more easily through the use of [[object-oriented programming]]. ; Model visually : Use diagrams to represent all major components, users, and their interaction. "UML", short for [[Unified Modeling Language]], is one tool that can be used to make this task more feasible. ; Verify quality : Always make testing a major part of the project at any point of time. Testing becomes heavier as the project progresses but should be a constant factor in any software product creation. ; Control changes : Many projects are created by many teams, sometimes in various locations, different platforms may be used, etc. As a result it is essential to make sure that changes made to a system are synchronized and verified constantly. (See [[Continuous integration]]). == Other frameworks == ===Refinements and variations=== *[[Unified Process]] - The generic Unified Process *[[Open Unified Process]] (OpenUP) - An open source software development process, created as part of the [[Eclipse Process Framework]] (EPF) project. Simplified subsets: *[[Agile Unified Process]] - a simplified RUP, featuring "Test Driven development" *[[Essential Unified Process]] (EssUP) - a model that simplifies The Agile Unified Process *[[OpenUP/Basic]] - The most agile and lightweight form of OpenUP, targets small and collocated teams interested in agile and iterative development. *[[UPEDU]] - The Unified Process for Education - a subset of RUP for presenting within the education system Expanded supersets: *[[Enterprise Unified Process]] - has wider scope, including software purchase, production operations and support, product retirement and replacement etc. Supporting Specific Commercial Development Products *[[IBM Tivoli Unified Process (ITUP)]] *[[Oracle Unified Method]] ===Competing frameworks and methodologies=== The referenced methodologies and / or frameworks below do not necessarily compete with RUP on all fronts, but do so to differing degrees * [[Clean room Software Engineering]] * [[Dynamic Systems Development Method]] (DSDM) * [[ICON IX|ICON IX Process]] is a lightweight, agile subset of the RUP practices * [[Extreme Programming]] is a lightweight, agile set of practices * [[Microsoft Solutions Framework]] (MSF) * [[Oracle Unified Method]] (OUM) * [[OpenUP]] is an OpenSource lightweight agile version of RUP supported by [[Rational Software|IBM Rational]], Number Six Software and others * [[Personal Software Process]] (PSP) is not a development process, it is a personal management process * [[Scrum (management)|Scrum]] is a lightweight, agile set of practices == See also == {{Portal|Software Testing}} * [[Macroscope (methodology_suite)]] * [[Agile Modeling]] * [[Agile Software Development]] * [[Integrated Unified Process]] * [[Computer programming]] * [[Extreme programming]] * [[Feature Driven Development]] * [[Project life cycle]] * [[Quality control|Quality assurance]] * [[Software Architecture]] * [[Software component]] * [[Software development process]] * [[Software engineering]] * [[Test-driven development]] ==References== {{reflist}} {{Ref improve|date=December 2008}} == Further reading == * [[Ivar Jacobson]], [[Grady Booch]], and [[James Rumbaugh]] (1999). ''The Unified Software Development Process'' * Per Kroll, [[Philippe Kruchten]] (2003). ''Rational Unified Process Made Easy, The: A Practitioner's Guide to the RUP'' * Per Kroll, Bruce Mac Isaac (2006). ''Agility and Discipline Made Easy: Practices from OpenUP and RUP'' * [[Philippe Kruchten]] (1998). ''The Rational Unified Process: An Introduction'' * Ahmad Shuja, Jochen Krebs (2007). ''RUP Reference and Certification Guide'' * Walker Royce, ''Software Project Management, A Unified Framework'' == External links == * [http://www-306.ibm.com/software/awdtools/rup/?S_TACT=105AGY59&S_CMP=WIKI&ca=dtl-08rupsite IBM Rational Unified Process Web Site] * [http://www.rational.com/ Rational Software at IBM] * [http://www.rational-ug.org/ Global Rational User Group Community] {{Software Engineering}} {{UML}} {{DEFAULTSORT:Ibm Rational Unified Process}} [[Category:Formal methods]] [[Category:IBM software|Rational ClearQuest]] [[Category:Software project management]] [[cs:Rational Unified Process]] [[da:Unified Process]] [[de:Rational Unified Process]] [[es:Proceso Unificado de Rational]] [[fa:فرآیند یکپارچه رشنال]] [[fr:Unified Process]] [[ko:래셔널 통합 프로세스]] [[id:RUP]] [[it:Rational Unified Process]] [[lt:RUP]] [[nl:Rational Unified Process]] [[ja:ラショナル統一プロセス]] [[no:Rational 