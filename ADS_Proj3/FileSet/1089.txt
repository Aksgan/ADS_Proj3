relating to the forensic study of [[databases]] and their related metadata.<ref>{{cite web|last=Olivier|first=Martin S.|title=On metadata context in Database Forensics|url=http://www.sciencedirect.com/science/article/B7CW4-4TSD9G6-1/2/a5031117d753054d92f2afba332eadf8|publisher=Science Direct|accessdate=2 August 2010|doi=10.1016/j.diin.2008.10.001.|month=March|year=2009}}</ref> The discipline is similar to [[computer forensics]], following the normal forensic process and applying investigative techniques to database contents and metadata. Cached information may also exist in a servers [[RAM]] requiring [[Digital forensics#live analysis|live analysis]] techniques. A forensic examination of a database may relate to the timestamps that apply to the update time of a row in a relational table being inspected and tested for validity in order to verify the actions of a database user. Alternatively, a forensic examination may focus on identifying transactions within a database system or application that indicate evidence of wrong doing, such as fraud. Software tools such as ACL, Idea and Arbutus (which provide a read-only environment) can be used to manipulate and analyse data. These tools also provide audit logging capabilities which provide documented proof of what tasks or analysis a forensic examiner performed on the database. Currently many database software tools are in general not reliable and precise enough to be used for forensic work as demonstrated in the first paper published on database forensics.<ref>[http://www.giac.org/certified_professionals/practicals/gcfa/0159.php Oracle Database Forensics using LogMiner - GIAC Certified Student Practical<!-- Bot generated title -->]</ref> There is currently a single book published in this field,<ref>Oracle Forensics ISBN 0977671526 (May 2008)</ref> though more are destined.<ref>Oracle Forensics Using Quisix ISBN 047019118X (Dec 2008)</ref> Additionally there is a subsequent SQL Server forensics book by Kevvie Fowler named SQL Server Forensics which is well regarded also.<ref>SQL Server Forensics ISBN 0321544366 (Dec 2008)</ref> The forensic study of relational databases requires a knowledge of the standard used to encode data on the computer disk. A documentation of standards used to encode information in well known brands of DB such as SQL Server and Oracle has been contributed to the public domain.<ref>[http://www.sans.org/reading_room/whitepapers/forensics/1906.php SANS Institute - Forensic Analysis of a SQL Server 2005 Database Server<!-- Bot generated title -->]</ref><ref>[http://www.databasesecurity.com/oracle-forensics.htm Oracle Forensics and Incident Response - databasesecurity.com<!-- Bot generated title -->]</ref> ==Further reading== * Farmer and Venema, 1999, http://www.porcupine.org/forensics/forensic-discovery/appendixB.html * Sarbanes Oxley section 404 – enforce financial standards to limit chance of fraud. http://thecaq.aicpa.org/Resources/Sarbanes+Oxley/ * HIPAA – Health and Portability Act http://www.cms.hhs.gov/hipaa/ * Sarbanes Oxley section 404 – enforce financial standards to limit chance of fraud http://thecaq.aicpa.org/Resources/Sarbanes+Oxley/ * Fair Credit Reporting Act (FCRA) http://www.gao.gov/new.items/d06674.pdf * Oracle Forensics In a Nutshell, Paul M. Wright (May 2007) http://www.oracleforensics.com/wordpress/wp-content/uploads/2007/03/OracleForensicsInANutshell.pdf * Oracle Forensics, Paul Wright, Rampant Techpress, ISBN 0977671526, May 2008. http://www.rampant-books.com/book_2007_1_oracle_forensics.htm == References == {{Reflist}} {{Digital forensics}} {{DEFAULTSORT:Database Forensics}} [[Category:Databases]] [[Category:Digital forensics]]</text> </page> <page> <id>9466</id> <title>Database integrity</title> <text>{{Unreferenced|auto=yes|date=December 2009}} {{Expert-subject|Computer science|date=November 2008}} '''Database integrity''' ensures that [[data]] entered into the [[database]] is accurate, valid, and [[Consistency (database systems)|consistent]]. Any applicable [[integrity constraints]] and [[data validation]] rules must be satisfied before permitting a change to the database. Three basic types of database integrity constraints are: *[[Entity integrity]], allowing no two rows to have the same identity within a table. *[[Data domain|Domain]] integrity, restricting data to predefined [[data type]]s, e.g.: dates. *[[Referential integrity]], requiring the existence of a related row in another table, e.g. a customer for a given customer ID. ==See also== *[[Data integrity]] {{DEFAULTSORT:Database Integrity}} [[Category:Data modeling]] {{Database-stub}} [[cs:Databázová integrita]] [[ru:Целостность базы данных]]</text> </page> <page> <id>9474</id> <title>Database publishing</title> <text>: ''For the company formerly known as ''Database Publications'', see [[Europress]]''. {{Unreferenced|date=July 2009}} '''Database publishing''' is an area of automated media production in which specialized techniques are used to generate paginated documents from source data residing in traditional [[database]]s. Common examples are catalogues, direct marketing, report generation, price lists and telephone directories. The database content can be in the form of text and pictures but can also contain metadata related to formatting and special rules that may apply to the document generation process. Database publishing can be incorporated into larger workflows as a component, where documents are created, approved, revised and released. The basic idea is using database contents like article and price information to fill out pre-formatted template documents. Templates are typically created in a normal desktop layout application where certain boxes or text are designated as placeholders. These placeholders are then targeted with new content which flows in from the database. This allows for quick generation of final output and, in case of changes to the database, quickly perform updates, with limited or no manual intervention. Another model of database publishing is found in many Web-to-Print solutions where users browse templates from an online catalog (eg. Business Cards, Brochures, etc.), personalize the selected template by filling in a form and then view the rendered result. In this case the initial source of data is from user input, but it is captured in a database so that if the same user revisits the site later, they can resume editing where they left off. The form is then pre-filled from the database-stored variables the user entered before. The main layout applications for this workflow are: Datalogics Pager, [[Adobe Systems|Adobe]] [[Framemaker|FrameMaker]] / [[Indesign|InDesign]], [[QuarkXPress]], [[Xyvision]] and [[Arbortext Advanced Print Publisher]] (formerly 3B2). Generally, these layout applications have a corresponding server version, which receives commands via web interfaces rather than desktop interaction. QuarkXPress Server and Adobe InDesign Server both take full advantage of the design features available in their respective desktop versions. These applications make their broad spectrum of features available for extension and integration with vertical solutions, that can be developed either internally, through some form of scripting (e.g. [[JavaScript]] or [[AppleScript]] for InDesign), or externally, through some API and corresponding Developer Kits. Numerous developers have created complete or partial vertical solutions around the rendering capabilities of the server applications. Other variants of Database Publishing are the rendering of content for direct PDF-output. This approach prevents manual intervention on the final output, since PDF is not (comfortably) editable. This may not be perceived as a limitation in situations like report generation where manual editability is not needed or not desired. ==See also== *[[Desktop publishing]] *[[Template system]] *[[Dynamic publishing]] *[[Variable data printing]] {{DEFAULTSORT:Database Publishing}} [[Category:Reporting software]] [[Category:Direct marketing]] [[Category:Publishing terms]] [[Category:Workflow technology]] [[Category:Databases]] 