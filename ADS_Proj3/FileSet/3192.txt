of simple imperative commands Nomad's language was designed to simplify the application development process, especially for reporting applications. Where possible, common requirements were addressed by intuitive nonprocedural syntax elements, to avoid traditional programming. The heart of the system was the LIST command, which created report output. <blockquote><pre>LIST BY STATE BY CUST_ID NAME PHONE ACROSS STATUS BALANCE WHERE STATE AMONG('CT','NY') State Customer ID Name Phone Active Inactive New ----- ----------- ----------------- ------------ -------- -------- --------- CT 1001 ABC Co. 203-555-1212 1200 0 0 1012 DEF Co. 203-555-1313 0 50 900 NY 1305 GHI Co. 212-555-1414 2650 0 0 </pre></blockquote> In this example, database fields STATE, CUST_ID, NAME, PHONE, STATUS, and BALANCE are laid out on a grid, with two sort breaks (via BY), generated columns based on data values (via ACROSS), and data selection (via WHERE). Additional keywords could control subtotals, titles, footers, table lookup, and myriad reporting details. The LIST command is somewhat analogous to the [[SQL]] SELECT statement, but incorporates formatting, totaling, and other elements helpful for tailoring output to a business requirement. The SELECT statement, in contrast, is essentially a data query tool: its results would be processed or formatted as required using other mechanisms. This distinction is highlighted by SQL's classification as a 'Data Sublanguage' (DSL): SQL is a powerful formalism for controlling ''data retrieval.'' The LIST command is a comprehensive ''report writer'' addressing broader functionality. Another example of Nomad's power is illustrated by Nicholas Rawlings in his comments for the Computer History Museum about NCSS (see citation below). He reports that [[James Martin (author)|James Martin]] asked Rawlings for a Nomad solution to a standard problem Martin called the ''Engineer's Problem'': "give 6% raises to engineers whose job ratings had an average of 7 or better." Martin provided a "dozen pages of COBOL, and then just a page or two of [[MARK-IV (Software)|Mark IV]], from [[Sterling Software|Informatics]]." Rawlings offered the following single statement, performing a set-at-a-time operation, to show how trivial this problem was with Nomad: <blockquote><pre>CHANGE ALL SALARY=SALARY*1.06 WHERE POSITION='ENG' AND AVG(INSTANCE(RATING)) GE 7</pre></blockquote> Rawlings continues: "[Martin] decided to drop the idea [of showing alternative solutions to the problem]. [The Nomad solution] was too unbelievable for him. He published his book in 1982 [''sic:'' 1981], with many fine examples of NOMAD, most of which look silly today, for they don't reflect what NOMAD was really used for in the years since: serious, mission critical applications. I used Martin's Engineer's Problem in hundreds of NOMAD classes, as I forced people to think in terms of sets of data, instead of record-at-a-time, which is how they'd been taught." ==Early development== Nomad was developed by [[National CSS|National CSS, Inc.]], at the time in [[Stamford, Connecticut]] (later [[Wilton, Connecticut|Wilton]]), by a small team launched in 1973. It was developed to supplant [[Ramis software|RAMIS]], previously a major NCSS offering. The corporate view of Nomad's importance at the time &ndash; and of tensions with the owners of RAMIS &ndash; can be deduced from the original NOMAD acronym: ''NCSS Owned, Maintained, And Developed''. Another RAMIS successor was [[FOCUS]], which evolved in competition with Nomad. These and other 4GL platforms such as [[Oracle database|Oracle]] competed for many of the same customers, all trying to solve end-user information problems without recourse to traditional 3GL programming. Nomad was officially released in October 1975 (although customer usage began in May 1975). The Nomad customer base expanded rapidly, as new categories of users adopted time-sharing data management tools to solve problems they previously could not tackle. Nomad competed principally with Focus and Ramis for this expanding market. Nomad was claimed to be the first commercial product to incorporate relational database concepts. This seems to be borne out by the launch dates of the well-known early RDBMS vendors, which first emerged in the late 70s and early 80s &ndash; such as [[Oracle Corporation|Oracle]] (1977), [[Informix]] (1980), and [[Unify Corporation|Unify]] (1980). The seminal non-commercial research project into RDBMS concepts was IBM's [[System R]], first installed at IBM locations in 1977. System R included and tested the original [[SQL]] implementation. The early RDBMS vendors were able to learn from numerous papers describing System R in the late 70s and early 80s. Nomad was released before these industry events, and thus, like System R, Nomad drew on earlier academic work by relational database pioneers such as [[E. F. Codd]]. Early Nomad development was in particular inspired by [[Christopher J. Date|C. J. Date's]] influential ''An Introduction to Database Systems'', itself first published in 1975. This book was an important source of technical ideas about the relational database model, and included a brief mention of [[SEQUEL]] (later [[SQL]]). Later editions of the book included Nomad itself, and Date's approval of Nomad's support of the relational database model. At the time, relational database concepts were new; most database systems utilized hierarchical, network, or other data models. Adding relational features to Nomad's original hierarchical design was evidently a bold move for NCSS. Training materials, such as [[Daniel McCracken|Dan McCracken]]'s book (cited below), focused on these relational database features, and their use in rapid application development. A simple methodology letting end-users design effective, [[database normalization|normalized]] relational databases was soon added to the curriculum &ndash; and was later taught on campuses throughout the country, in the ''ACM Lectureship Series'', by NCSS emeritus Lawrence Smith. NCSS can thus be seen as an early advocate of relational methods; but this position was soon eclipsed as SQL-based vendors burst onto the scene. ==Later development== Nomad was the flagship NCSS product during the firm's years of rapid growth, going through a series of releases and receiving a major share of this (publicly-traded) company's R&D, sales, support, and other resources. NCSS and its [[time-sharing]] competitors primarily sold services to large corporations, at a time when most MIS departments were bogged down on huge [[COBOL]] implementation projects (see [[Frederick Brooks|Brooks]]'s famous ''[[The Mythical Man-Month]]'' for the contemporary mind-set). Because of development backlogs, outside services like NCSS became attractive. Tools like Nomad made end-users self-sufficient: If they had discretionary budgets, and could get the necessary 