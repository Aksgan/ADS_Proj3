'w'," depending on which aspects of "Wikipedia" are pertinent to our particular database. Edges are the lines that connect nodes to nodes or nodes to properties and they represent the relationship between the two. Most of the important information is really stored in the edges. Meaningful patterns emerge when one examines the connections and interconnections of nodes, properties, and edges. <ref name="sSOA">[http://searchsoa.techtarget.com/tip/0,289483,sid26_gci1522881,00.html "Graph database vs. relational database"] </ref> == Properties == Compared with [[relational databases]], graph databases are often faster for associative data sets, and map more directly to the structure of object-oriented applications. They can scale more naturally to large data sets as they do not typically require expensive [[Join (SQL)|join]] operations. As they depend less on a rigid schema, they are more suitable to manage ad-hoc and changing data with evolving schemas. Conversely, relational databases are typically faster at performing the same operation on large numbers of data elements. Graph databases are a powerful tool for graph-like queries, for example computing the shortest path between two nodes in the graph. A [[relational database]] is not able to handle shortest path queries in a graph structure without prefixing the path's length. Other graph-like queries can be performed over a graph database on a natural way (for example graph's diameter computations or community detection). == Graph database projects == The following is a list of several well-known graph database projects<ref>http://graph-database.org</ref>: * [http://gremlin.tinkerpop.com/ Gremlin] - an open-source graph programming language that works over various graph database systems. * [http://www.kobrix.com/hgdb.jsp HyperGraphDB] - an open-source (LGPL) graph database supporting generalized [[hypergraph]]s where edges can point to other edges * [http://infinitegraph.com InfiniteGraph] - a highly scalable, distributed and cloud-enabled commercial product with flexible licensing for startups. * [http://infogrid.org/ InfoGrid] - an open-source / commercial (AGPLv3, free for small entities)<ref>http://infogrid.org/wiki/Docs/License</ref> graph database with web front end and configurable storage engines (MySQL, PostgreSQL, Files, Hadoop) * [[Neo4j]] - an open-source / commercial (AGPLv3)<ref>http://neotechnology.com/products</ref> graph database * [[AllegroGraph]] - a scalable, high-performance graph database. * [http://sones.com/ sones] - an open-source / commercial (AGPLv3)<ref>http://sones.com/</ref> graph database and universal access layer (funded by Deutsche Telekom AG) * [[DEX (Graph database) | DEX]] - A high-performance graph database * [[Resource Description Framework]] - framework to express node-edge graphs * [http://freebase.com/ Freebase] - a world-writable database of common knowledge * [http://filament.sourceforge.net/ Filament] - graph persistence framework and associated toolkits based on a navigational query style. * [[FlockDB]] - an open source distributed, fault-tolerant graph database for managing data at webscale * [http://www.orientechnologies.com OrientDB] - a high-performance open source document-graph database * [http://www.dekorte.com/projects/opensource/vertexdb/ VertexDB] - high performance graph database server that supports automatic garbage collection == See also == * [[Document-oriented database]] * [[structured storage]] * [[Object Database]] * [[Graph transformation]] for a complementary topic (rule based in memory manipulation of graphs instead of [[Database transaction|transaction]] safe [[Persistence (computer science)|persistence]]). == References == {{Reflist}} == External links == * [http://infogrid.org/blog/2010/02/operations-on-a-graph-database-part-1/ Graph Database Tutorial] * [http://highscalability.com/paper-graph-databases-and-future-large-scale-knowledge-management Graph Databases and the Future of Large-Scale Knowledge Management] * [http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/ Graphs in the database: SQL meets social networks] * [http://blog.neo4j.org/2009/09/social-networks-in-database-using-graph.html Social networks in the database: using a graph database] * [http://netdb09.cis.upenn.edu/netdb09papers/netdb09-final3.pdf Scaling Online Social Networks without Pains] * [http://highscalability.com/blog/2009/6/15/large-scale-graph-computing-at-google.html Large-scale Graph Computing at Google] * [http://blog.directededge.com/2009/02/27/on-building-a-stupidly-fast-graph-database/ On building a stupidly fast graph database] * [http://www.infinitegraph.com/information/index.html#docs InfiniteGraph technical documentation] * [http://neo4j.org/ Neo4j - an open source graph database] * [http://www.sparsity-technologies.com/dex.php DEX - a high-performance graph database] * Eric Lai. (2009, July 1). [http://www.computerworld.com/s/article/9135086/No_to_SQL_Anti_database_movement_gains_steam_ No to SQL? Anti-database movement gains steam] * Renzo Angles, Claudio Gutierrez. [http://portal.acm.org/citation.cfm?id=1322433 Survey of graph database models]. ACM Computing Surveys, Feb. 2008. * [http://infogrid.org/ InfoGrid] - an open-source application platform including a graph database * [http://openquery.com/graph OQGRAPH] - Graph computation engine ([[GPLv2]] licensed) for [[MySQL]], MariaDB and [[Drizzle_(database_server) | Drizzle]] * Rodriguez, M.A., [http://markorodriguez.com/Blarko/Entries/2010/3/29_MySQL_vs._Neo4j_on_a_Large-Scale_Graph_Traversal.html MySQL vs. Neo4j on a Large-Scale Graph Traversal] * [http://www.orientechnologies.com/ OrientDB - a high-performance open source document-graph database] * [http://portal.acm.org/citation.cfm?id=1807283 Optimizing Schema-Last Tuple-Store Queries in Graphd] SIGMOD 2010 {{Database models}} [[Category:Databases]] [[it:Base di dati a grafo]]</text> </page> <page> <id>15702</id> <title>Graph equation</title> <text>'''Graph equations''' are [[equations]] in which the unknowns are [[Graph theory|graphs]]. One of the central questions of graph theory concerns the notion of [[Graph isomorphism|isomorphism]]. We ask: When are two graphs the same (i.e, graph isomorphism)? The graphs in question may be expressed differently in terms of graph equations.<ref>[http://www3.interscience.wiley.com/journal/113386917/abstract?CRETRY=1&SRETRY=0 Bibliography on Graph equations ]</ref> What are the graphs ([[root of a function|solutions]]) ''G'' and ''H'' such that the [[line graph]] of ''G'' is same as the [[total graph]] of ''H''? (What are ''G'' and ''H'' such that ''L''(''G'') = '' T''( ''H'') ? ). For example, ''G'' = ''K''<sub>3</sub>, and ''H'' = ''K''<sub>2</sub> are the solutions of the graph equation ''L''(''K''<sub>3</sub>) = ''T''(''K''<sub>2</sub>) and ''G'' = ''K''<sub>4</sub>, and ''H'' = ''K''<sub>3</sub> are the solutions of the graph equation ''L''(''K''<sub>4</sub>) = ''T''(''K''<sub>3</sub>). <gallery> Image: Complete graph K2.svg|<math>K_2</math> Image: Complete graph K3.svg|<math>K_3</math> Image: Complete graph K4.svg|<math>K_4</math> </gallery> </center> Note that ''T''(''K''<sub>3</sub>) is a 4-[[regular graph]] on 6 vertices. ==Selected publications== * Graph equations for line graphs and total graphs, DM Cvetkovic, SK Simic &ndash; ''[[Discrete Mathematics (journal)|Discrete Mathematics]]'', 1975 * Graph equations, graph inequalities and a fixed point theorem, DM Cvetkovic, IB Lackovic, SK Simic &ndash; Publ. Inst. Math.(Belgrade)., 1976 &ndash; elib.mi.sanu.ac.yu , PUBLICATIONS DE L'INSTITUT MATHÉMATIQUE Nouvelle série, tome 20 (34), 1976, * Graphs whose complement and line graph are isomorphic, M Aigner &ndash; ''[[Journal of Combinatorial Theory]]'', 1969 * Solutions of some further graph equations, [[Bhat-Nayak Vasanti N.|Vasanti N. Bhat-Nayak]], Ranjan N. Naik &ndash; ''[[Discrete Mathematics (journal)|Discrete Mathematics]]'', 47 (1983) 169&ndash;175 * More Results on the Graph Equation G2= G, M Capobianco, SR Kim &ndash; Graph Theory, Combinatorics, and Algorithms: Proceedings of …, 1995 &ndash; Wiley-Interscience * Graph equation Ln (G)= G, S Simic - Univ. Beograd. Publ. Elektrotehn. Fak. Ser. Mat. Fiz, 1975 ==References== {{reflist}} {{DEFAULTSORT:Graph Equation}} [[Category:Graph theory]]</text> </page> <page> <id>15712</id> <title>Graph state</title> <text>In [[quantum computing]], a '''graph state''' is a special type of multi-[[qubit]] state that can be represented by a [[graph (mathematics)|graph]]. Each qubit is represented by a [[Vertex (graph theory)|vertex]] of the graph, 