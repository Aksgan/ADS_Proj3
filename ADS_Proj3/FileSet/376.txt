open, the contents on disk may not correctly represent what the owner of the file intends. This is especially true for database files of all kinds. The term [[fuzzy backup]] can be used to describe a backup of live data that looks like it ran correctly, but does not represent the state of the data at any single point in time. This is because the data being backed up changed in the period of time between when the backup started and when it finished. For databases in particular, fuzzy backups are worthless.{{Citation needed|date=July 2010}} ; [[Snapshot (computer storage)|Snapshot]] backup : A snapshot is an instantaneous function of some storage systems that presents a copy of the file system as if it were frozen at a specific point in time, often by a [[copy-on-write]] mechanism. An effective way to back up live data is to temporarily [[quiesce]] it (e.g. close all files), take a snapshot, and then resume live operations. At this point the snapshot can be backed up through normal methods.<ref>[http://edseek.com/~jasonb/articles/dirvish_backup/snapshot.html What is a Snapshot backup?]. Retrieved on 10 March 2007 </ref> While a snapshot is very handy for viewing a filesystem as it was at a different point in time, it is hardly an effective backup mechanism by itself. ; Open file backup : Many backup software packages feature the ability to handle open files in backup operations. Some simply check for openness and try again later. [[File locking]] is useful for regulating access to open files. : When attempting to understand the logistics of backing up open files, one must consider that the backup process could take several minutes to back up a large file such as a database. In order to back up a file that is in use, it is vital that the entire backup represent a single-moment snapshot of the file, rather than a simple copy of a read-through. This represents a challenge when backing up a file that is constantly changing. Either the database file must be locked to prevent changes, or a method must be implemented to ensure that the original snapshot is preserved long enough to be copied, all while changes are being preserved. Backing up a file while it is being changed, in a manner that causes the first part of the backup to represent data ''before'' changes occur to be combined with later parts of the backup ''after'' the change results in a corrupted file that is unusable, as most large files contain internal references between their various parts that must remain consistent throughout the file. ; Cold database backup : During a cold backup, the database is closed or locked and not available to users. The datafiles do not change during the backup process so the database is in a consistent state when it is returned to normal operation.<ref>[http://www.wisc.edu/drmt/oratips/sess003.html#coldbackup Oracle Tips] (10 December 1997). Retrieved on 10 March 2007 </ref> ; Hot database backup : Some database management systems offer a means to generate a backup image of the database while it is online and usable ("hot"). This usually includes an inconsistent image of the data files plus a log of changes made while the procedure is running. Upon a restore, the changes in the log files are reapplied to bring the database in sync.<ref>[http://www.wisc.edu/drmt/oratips/sess003.html#Hotbackup Oracle Tips] (10 December 1997). Retrieved on 10 March 2007 </ref> === Metadata === Not all information stored on the computer is stored in files. Accurately recovering a complete system from scratch requires keeping track of this non-file data too. ; System description : System specifications are needed to procure an exact replacement after a disaster. ; [[Boot sector]] : The boot sector can sometimes be recreated more easily than saving it. Still, it usually isn't a normal file and the system won't boot without it. ; [[Disk partitioning|Partition]] layout : The layout of the original disk, as well as partition tables and filesystem settings, is needed to properly recreate the original system. ; File [[metadata]] : Each file's permissions, owner, group, ACLs, and any other metadata need to be backed up for a restore to properly recreate the original environment. ; System metadata : Different operating systems have different ways of storing configuration information. [[Microsoft Windows]] keeps a [[Windows Registry|registry]] of system information that is more difficult to restore than a typical file. == Manipulation of data and dataset optimization == It is frequently useful or required to manipulate the data being backed up to optimize the backup process. These manipulations can provide many benefits including improved backup speed, restore speed, data security, media usage and/or reduced bandwidth requirements. ; [[Data compression|Compression]] : Various schemes can be employed to shrink the size of the source data to be stored so that it uses less storage space. Compression is frequently a built-in feature of tape drive hardware. ; [[Data deduplication|De-duplication]] : When multiple similar systems are backed up to the same destination storage device, there exists the potential for much redundancy within the backed up data. For example, if 20 Windows workstations were backed up to the same data repository, they might share a common set of system files. The data repository only needs to store one copy of those files to be able to restore any one of those workstations. This technique can be applied at the file level or even on raw blocks of data, potentially resulting in a massive reduction in required storage space. Deduplication can occur on a server before any data moves to backup media, sometimes referred to as source/client side deduplication. This approach also reduces bandwidth required to send backup data to its target media. The process can also occur at the target storage device, sometimes referred to as inline or back-end deduplication. ;[[Replication (computer science)|Duplication]] : Sometimes backup jobs are duplicated to a second set of storage media. This can be done to rearrange the backup images to optimize restore speed or to have a second copy at a different location or on a different storage medium. 