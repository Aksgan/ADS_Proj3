and processes. A unique characteristic of HoneyMonkey is its layered approach to interacting with servers in order to identify zero-day exploits. HoneyMonkey initially crawls the web with a vulnerable configuration. Once an attack has been identified, the server is reexamined with a fully patched configuration. If the attack is still detected, one can conclude that the attack utilizes an exploit for which no patch has been publicly released yet and therefore is quite dangerous. === SHELIA === Shelia {{ref|shelia}} is a high interaction client honeypot developed by Joan Robert Rocaspana at Vrije Universiteit Amsterdam. It integrates with an email reader and processes each email it receives (URLs & attachments). Depending on the type of URL or attachment received, it opens a different client application (e.g. browser, office application, etc.) It monitors whether executable instructions are executed in data area of memory (which would indicate a buffer overflow exploit has been triggered). With such an approach, SHELIA is not only able to detect exploits, but is able to actually ward off exploits from triggering. === UW Spycrawler === The Spycrawler {{ref|spycrawler}} developed at the University of Washington is yet another browser based (Mozilla) high interaction client honeypot developed by Moshchuk et al. in 2005. This client honeypot is not available for download. The Spycrawler is state based and detects attacks on clients by monitoring files, processes, registry, and browser crashes. Spycrawlers detection mechanism is event based. Further, it increases the passage of time of the virtual machine the Spycrawler is operating in to overcome (or rather reduce the impact) of time bombs. === Web Exploit Finder === WEF {{ref|stuttgart}} is an implementation of an automatic drive-by-download – detection in a virtualized environment, developed by Thomas Müller, Benjamin Mack and Mehmet Arziman, three students from the Hochschule der Medien (HdM), Stuttgart during the summer term in 2006. WEF can be used as an active HoneyNet with a complete virtualization architecture underneath for rollbacks of compromised virtualized machines. == Low interaction == Low interaction client honeypots differ from high interaction client honeypots in that they do not utilize an entire real system, but rather use lightweight or simulated clients to interact with the server. (in the browser world, they are similar to web crawlers). Responses from servers are examined directly to assess whether an attack has taken place. This could be done, for example, by examining the response for the presence of malicious strings. Low interaction client honeypots are easier to deploy and operate than high interaction client honeypots and also perform better. However, they are likely to have a lower detection rate since attacks have to be known to the client honeypot in order for it to detect them; new attacks are likely to go unnoticed. They also suffer from the problem of evasion by exploits, which may be exacerbated due to their simplicity, thus making it easier for an exploit to detect the presence of the client honeypot. === HoneyC === HoneyC {{ref|honeyc}} is a low interaction client honeypot developed at Victoria University of Wellington by Christian Seifert in 2006. HoneyC is a platform independent open source framework written in Ruby. It currently concentrates driving a web browser simulator to interact with servers. Malicious servers are detected by statically examining the web server’s response for malicious strings through the usage of Snort signatures. === Monkey-Spider === Monkey-Spider {{ref|monkeyspider}} is a low-interaction client honeypot initially developed at the University of Mannheim by Ali Ikinci. Monkey-Spider is a crawler based client honeypot initially utilizing anti-virus solutions to detect malware. It is claimed to be fast and expandable with other detection mechanisms. The work has started as a diploma thesis and is continued and released as Free Software under the [[GPL]]. === PhoneyC === PhoneyC {{ref|phoneyc}} is a low-interaction client developed by Jose Nazario. PhoneyC mimics legitimate web browsers and can understand dynamic content by de-obfuscating malicious content for detection. Furthermore, PhoneyC emulates specific vulnerabilities to pinpoint the attack vector. PhoneyC is a modular framework that enables the study of malicious HTTP pages and understands modern vulnerabilities and attacker techniques. === SpyBye === SpyBye {{ref|spybye}} is a low interaction client honeypot developed by Niels Provos. SpyBye allows a web master to determine whether a web site is malicious by a set of heuristics and scanning of content against the ClamAV engine. == Hybrid Client Honeypots == Hybrid client honeypots combine both low and high interaction client honeypots to gain from the advantages of both approaches. === HoneySpider === The HoneySpider {{ref|honeyspider}} network is a hybrid client honeypot developed as a joint venture between [[CERT Polska|NASK/CERT Polska]] , [http://www.govcert.nl/ GOVCERT.NL] and [http://www.surfnet.nl/ SURFnet]. The projects goal is to develop a complete client honeypot system, based on existing client honeypot solutions and a crawler specially for the bulk processing of URLs. == Literature == * Jan Göbel, Andreas Dewald, ''Client-Honeypots: Exploring Malicious Websites'', Oldenbourg Verlag 2010, ISBN: [http://www.oldenbourg-verlag.de/wissenschaftsverlag/client-honeypots/9783486705263 978-3-486-70526-3], [http://www.amazon.de/Client-Honeypots-Exploring-Jan-Gerrit-G%C3%B6bel/dp/3486705261/ This book at Amazon] == Papers == * M. Egele, P. Wurzinger, C. Kruegel, and E. Kirda, ''Defending Browsers against Drive-by Downloads: Mitigating Heap-spraying Code Injection Attacks,'' Secure Systems Lab, 2009, p. Available from http://www.iseclab.org/papers/driveby.pdf; accessed on 15 May 2009. * Feinstein, Ben. Caffeine Monkey: Automated Collection, Detection and Analysis of JavaScript. BlackHat USA. Las Vegas, 2007. * Ikinci, A, Holz, T., Freiling, F.C. : ''Monkey-Spider: Detecting Malicious Websites with Low-Interaction Honeyclients''. [http://pi1.informatik.uni-mannheim.de/filepool/publications/monkey-spider.pdf Sicherheit 2008: 407-421], * Moshchuk, A., Bragin, T., Gribble, S.D. and Levy, H.M. ''A Crawler-based Study of Spyware on the Web''. In 13th Annual Network and Distributed System Security Symposium (NDSS). San Diego, 2006. The Internet Society. * Provos, N., Holz, T. ''Virtual Honeypots: From Botnet Tracking to Intrusion Detection''. Addison-Wesley. Boston, 2007. * Provos, N., Mavrommatis, P., Abu Rajab, M., Monrose, F. ''All Your iFRAMEs Point to Us''. Google Technical Report. Google, Inc., 2008. * Provos, N., McNamee, D., Mavrommatis, P., Wang, K., Modadugu, N. ''The Ghost In The Browser: Analysis of Web-based Malware''. Proceedings of the 2007 HotBots. Cambridge, April 2007. USENIX. * Seifert, C., Endicott-Popovsky, B., Frincke, D., Komisarczuk, P., 