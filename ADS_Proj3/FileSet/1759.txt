game play. Although the rules are simple, the practical strategy is extremely complex. The game emphasizes the importance of balance on multiple levels and has internal tensions. To secure an area of the board, it is good to play moves close together; however, to cover the largest area, one needs to spread out, perhaps leaving weaknesses that can be exploited. Playing too ''low'' (close to the edge) secures insufficient territory and influence, yet playing too ''high'' (far from the edge) allows the opponent to invade. It has been claimed that Go is the most complex game in the world due to its vast number of variations in individual games.<ref>{{Citation | publisher = American Go Association | url = http://www.usgo.org/resources/topten.html | title = Top Ten Reasons to Play Go | accessdate = 2008-06-11}}</ref> Its large board and lack of restrictions allow great scope in strategy and expression of players' individuality. Decisions in one part of the board may be influenced by an apparently unrelated situation in a distant part of the board. Plays made early in the game can shape the nature of conflict a hundred moves later. The [[game complexity]] of Go is such that describing even elementary strategy fills many introductory books. In fact, numerical estimates show that the number of possible games of Go far exceeds [[Observable universe#Matter content|the number of atoms in the known universe]].<ref group="nb">The number of board positions is at most 3<sup>361</sup> (about 10<sup>172</sup>) since each position can be white, black, or vacant. There are at least 361! games (about 10<sup>768</sup>) since every permutation of the board positions corresponds to a game. See [[Go and mathematics]] for more details, which includes much larger estimates.</ref> ===Software players=== {{main|Computer Go}} Go poses a daunting challenge to [[computer programmer]]s.<ref name="research.microsoft.com">{{Citation | url=http://research.microsoft.com/pubs/65658/sterngraepelmackay04.pdf | title=Modelling Uncertainty in the Game of Go | last=Stern | first=David | work=[[University of Cambridge]]| date=2008-02-01 | accessdate = 2008-12-04 }}</ref> While the strongest computer chess programs can defeat the best human players (for example, the [[Deep Fritz]] program, running on a laptop, beat reigning world champion [[Vladimir Kramnik]] without losing a single game in 2006), the best Go programs only manage to reach an intermediate amateur level. On the small 9×9 board, the computer fares better, and some programs now win a fraction of their 9x9 games against professional players . Human players generally achieve an intermediate amateur level by studying and playing regularly for a few years. Many in the field of [[artificial intelligence]] consider Go to require more elements that mimic human thought than [[chess]].<ref> {{Citation| url=http://query.nytimes.com/gst/fullpage.html?res=9C04EFD6123AF93AA15754C0A961958260 | title=To Test a Powerful Computer, Play an Ancient Game | last=Johnson | first=George | work=[[The New York Times]]| date=1997-07-29 | accessdate = 2008-06-16}}</ref> However, this does not take into account [[chess aesthetics]] which - unlike typical chess ''playing'' technology - has only relatively recently become amenable to scientific investigation and computation. [[Image:13 by 13 game finished.jpg|thumb|right|A finished beginner's game on a 13×13 board. Go software can reach stronger levels on a smaller board size.]] The reasons why computer programs do not play Go well are attributed to many qualities of the game,<ref>{{Citation | url = http://www.intelligentgo.org/en/computer-go/overview.html | publisher = Intelligent Go Foundation | title = Overview of Computer Go | accessdate = 2008-06-16 |archiveurl = http://web.archive.org/web/20080531072850/http://www.intelligentgo.org/en/computer-go/overview.html <!-- Bot retrieved archive --> |archivedate = 2008-05-31}}</ref> including: * The number of spaces on the board is much larger (over five times the spaces on a chess board—361 vs. 64). On most turns there are many more possible moves in Go than in chess. Throughout most of the game, the number of legal moves stays at around 150–250 per turn, and rarely goes below 50 (in chess, the average number of moves is 37).<ref>{{citation | title = How to beat your chess computer | first1 = Raymond | last1 = Keene | first2 = David | last2 = Levy | publisher = Batsford Books | year = 1991 | page = 85}}</ref> Because an exhaustive computer program for Go must calculate and compare every possible legal move in each [[Ply (game theory)|ply]] (player turn), its ability to calculate the best plays is sharply reduced when there are a large number of possible moves. Most computer game algorithms, such as those for chess, compute several moves in advance. Given an average of 200 available moves through most of the game, for a computer to calculate its next move by exhaustively anticipating the next four moves of each possible play (two of its own and two of its opponent's), it would have to consider more than 320 billion (3.2{{e|11}}) possible combinations. To exhaustively calculate the next eight moves, would require computing 512 quintillion (5.12{{e|20}}) possible combinations. {{As of|2008|6}}, the most powerful supercomputer in the world, IBM's "Roadrunner" distributed cluster, can sustain 1.02 [[FLOPS|petaflops]].<ref>{{cite web |url=http://www.computerworld.com/action/article.do?command=viewArticleBasic&taxonomyName=hardware&articleId=9095318&taxonomyId=12&intsrc=kc_top |title=IBM's Roadrunner smashes 4-minute mile of supercomputing |accessdate=2008-06-10 |author=Sharon Gaudin |date=2008-06-09 |publisher=Computerworld }}</ref><ref>{{cite web |url=http://news.cnet.com/Military-supercomputer-sets-record/2100-1010_3-6241145.html?tag=nefd.top |title=Military supercomputer sets record |publisher= [[CNET Networks|CNET News.com]] }}</ref><ref>{{cite web | url=http://news.bbc.co.uk/1/hi/technology/7443557.stm | publisher=BBC | title=Supercomputer sets petaflop pace | accessdate=2008-06-09 | date=2008-06-09 }}</ref> At this rate, even given an exceedingly low estimate of 10 flops required to assess the value of one play of a stone, Roadrunner would require 138 hours, more than five days, to assess all possible combinations of the next eight moves in order to make a single play. * Unlike chess and [[Reversi]], the placement of a single stone in the initial phase can affect the play of the game hundreds of moves later. For a computer to have a real advantage over a human, it would have to predict this influence, and from the example above, it would be completely unworkable to attempt to exhaustively analyze the next hundred moves to predict what a stone's placement will do. * In capture-based games (such as chess), a position can often be evaluated relatively easily, such as by calculating who has a material advantage or more active pieces.<ref group="nb">While chess position evaluation is simpler than Go position evaluation, it is still more complicated than simply 