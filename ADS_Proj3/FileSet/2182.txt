against an [[Adversary (cryptography)|adversary]] who is allowed to use chosen-plaintext and chosen-ciphertext attacks. The scheme is based on [[Diffieâ€“Hellman problem]]. Two incarnations of the IES are standardized: [[Discrete logarithm|Discrete Logarithm]] Integrated Encryption Scheme (DLIES) and [[Elliptic curve|Elliptic Curve]] Integrated Encryption Scheme (ECIES), which is also known as the Elliptic Curve Augmented Encryption Scheme or simply the Elliptic Curve Encryption Scheme. These two incarnations are identical up to the change of an underlying group and so to be concrete we concentrate on the latter. To send an encrypted message to [[Alice and Bob|Bob]] using ECIES Alice needs the following information: * cryptographic suite to be used: ** [[Key derivation function|KDF]], e.g., ''ANSI-X9.63-KDF with SHA-1 option''; ** [[Message authentication code|MAC]], e.g., ''HMAC-SHA-1-160 with 160-bit keys'' or ''HMAC-SHA-1-80 with 80-bit keys''; ** [[Symmetric-key algorithm|symmetric encryption scheme]] <math>E</math>, e.g., ''[[TDEA]] in [[cipher block chaining|CBC]] mode'' or ''XOR encryption scheme''; * EC domain parameters: <math>(p,a,b,G,n,h)</math> for a curve over prime field or <math>(m,f(x),a,b,G,n,h)</math> for a curve over binary field; * Bob's public key: <math>K_B</math> (Bob generates it as follows: <math>K_B = k_B G</math>, where <math>k_B</math> is the private key he chooses at random: <math>k_B \in [1, n-1]</math>); * optional shared information: <math>S_1</math> and <math>S_2</math>. To encrypt a message <math>m</math> Alice does the following: # generates a random number <math>r \in [1, n-1]</math> and calculates <math>R = r G</math>; # derives a shared secret: <math>S = P_x</math>, where <math>P = (P_x, P_y) = r K_B</math> (and <math>P \ne O</math>); # uses KDF to derive a symmetric encryption and a MAC keys: <math>k_E \| k_M = \textrm{KDF}(S\|S_1)</math>; # encrypts the message: <math>c = E(k_E; m)</math>; # computes the tag of encrypted message and <math>S_2</math>: <math>d = \textrm{MAC}(k_M; c \| S_2)</math>; # outputs <math>R \| c \| d</math>. To decrypt the ciphertext <math>R \| c \| d</math> Bob does the following: # derives the shared secret: <math>S = P_x</math>, where <math>P = (P_x, P_y) = k_B R</math> (it is the same as the one Alice derived because <math>P = k_B R = k_B r G = r k_B G = r K_B</math>), or outputs ''failed'' if <math>P=O</math>; # derives keys the same way as Alice did: <math>k_E \| k_M = \textrm{KDF}(S\|S_1)</math>; # uses MAC to check the tag and outputs ''failed'' if <math>d \ne \textrm{MAC}(k_M; c \| S_2)</math>; # uses symmetric encryption scheme to decrypt the message <math>m = E^{-1}(k_E; c)</math>. ==References== * Victor Shoup, [http://www.shoup.net/papers/iso-2_1.pdf A proposal for an ISO standard for public key encryption], Version 2.1, December 20, 2001. * Certicom Research, [http://www.secg.org/download/aid-385/sec1_final.pdf Standards for efficient cryptography, SEC 1: Elliptic Curve Cryptography], Version 1.0, September 20, 2000. {{Crypto navbox | public-key}} [[Category:Asymmetric-key cryptosystems]] [[de:Elliptic Curve Integrated Encryption Scheme]]</text> </page> <page> <id>18641</id> <title>Integrated Enterprise Modeling</title> <text>[[Image:Screen Shot Modell.jpg|300px|thumb|Model example]] The '''Integrated Enterprise Modeling''' (IEM) is an [[enterprise modeling]] method used for the admission and for the [[reengineering]] of [[Business process|processes]] both in producing enterprises and in the public area and service providers. In the Integrated Enterprise Modeling different aspects as functions and data become described in one model. Furthermore the method supports analyses of [[business process]]es independently of the available organizational structure. The Integrated Enterprise Modeling is developed at the ''[[Fraunhofer Society|Fraunhofer Institute]] for Production Systems and Design Technology (German: IPK) Berlin, Germany''.<ref>[[:de:Integrierte Unternehmensmodellierung|German page]]</ref> ==Integrated Enterprise Modeling Topics== ===Base constructs=== [[Image:Generische Objektklassen der IUM 2.jpg|300px|thumb|Generic object classes of the IEM]] [[Image:Beispielklassen.jpg|300px|thumb|Overview of the object classes product, order and resource]] [[Image:Generisches Aktivitaetsmodell.jpg|300px|thumb|Generic activity model]]The Integrated Enterprise Modeling (IEM) method uses an [[Object orientated|object-oriented]] approach and adapts this for the enterprise description. An application-oriented division of all elements of an enterprise forms the core of the method in generic object classes ''"product"'', ''"resource"'' and ''"order"''. ;Product The object class "product" represents all objects whose production and sale are the aim of the looked-at-enterprise as well as all objects which flow into the end product. Raw materials, intermediate products, components and end products as well as services and the describing data are included. ;Order The object class "order" describes all types of a commissioning in the enterprise. The objects of the class "order" represent the information which is relevant from the point of view of planning, control and supervision of the enterprise processes. One understands by it what, when, at which objects, in whose responsibility and with which resources it will be executed. ;Resource The IEM class "resource" contains all necessary key players which are required in the enterprise for the execution or support of activities. Among other things these are employees, business partner, all kinds of documents as well as information systems or operating supplies. The classes "product", "order", and "resource" can gradually be given full particulars and specified. Through this it is possible to show both line of business typical and enterprise specific product, order and resource subclasses. Structures (e.g. parts lists or organisation charts) can be shown as relational features of the classes with the help of being-part-of- and consists-of-relations between different subclasses. ; Action The activities which are necessary for the production of products and to the provision of services can be described as follows: an activity is the purposeful change of objects. The aim orientation of the activities causes an explicit or implicit planning and control. The execution of the activities is incumbent by the capable key players. From these considerations the definitions can be derived for the following constructs: * An ''action'' is an object neutral description of activities: a verbal description of a work task, a lawsuit or proceeding; * A ''function'' describes the change of state of a defined status into another defined one of objects of a class by using an action; * An ''activity'' specifies necessary resources for the state transformation of objects of a class the controlling order described by a function and these for the execution of this transformation in the enterprise, in each case represented by an object state description. ===Views=== All modeled data of the looked-at-enterprise are recorded in the model core of an Integrated Enterprise Modeling (IEM) model in two main [[View model|views]]: * 