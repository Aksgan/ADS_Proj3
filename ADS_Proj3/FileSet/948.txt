Raymond Hill |title = A First Course in Coding Theory |publisher = [[Oxford University Press]] |series = Oxford Applied Mathematics and Computing Science series |year = 1986 |isbn = 9780198538035}} [[Category:Coding theory]] [[Category:Error detection and correction]] {{compsci-stub}} {{math-stub}}</text> </page> <page> <id>8258</id> <title>CouchDB</title> <text>{{Inappropriate tone|date=July 2010}} {{Infobox Software | name = Apache CouchDB | logo = [[Image:Couchdb-logo.png|logo]] | screenshot = [[File:Couchdb screenshot.png|300px]] | caption = CouchDB's Futon Administration Interface, User database | collapsible = | author = [[Damien Katz]], [[Jan Lehnardt]], [[Noah Slater]], [[Christopher Lenz]], [[J. Chris Anderson]] | developer = [[Apache Software Foundation]] | status = Active | released = 2005 | frequently updated = yes<!-- Release version update? Don't edit this page, just click on the version number! --> | programming language = [[Erlang (programming language)|Erlang]] | operating system = [[Cross-platform]] | latest preview version = 1.0.1 | latest preview date = {{release date|2010|08|11}} | language = English | genre = [[Document-oriented database]] | license = [[Apache License]] 2.0 | website = http://couchdb.apache.org/ }} '''Apache CouchDB''', commonly referred to as '''CouchDB''', is a [[free software|free]] [[open source software|open source]] [[document-oriented database]] written in the [[Erlang (programming language)|Erlang]] programming language. It is a [[NoSQL]] product designed for local replication and to scale vertically along a wide range of devices. CouchDB is supported by commercial enterprises [[CouchOne]] and [[Cloudant]]. ==History== In April 2005, [[Damien Katz]] (former [[Lotus Notes]] developer at [[IBM]]; now founder, CEO of CouchOne) posted on his blog about a new database engine he was working on. Details were sparse at this early stage, but what he did share was that it would be a "storage system for a large scale object database" and that it would be called CouchDB (''Couch'' is an acronym for ''cluster of unreliable commodity hardware'').<ref>{{cite web | last = Lennon| first = Joe | title = Exploring CouchDB | work = IBM | publisher = IBM | date = 2009-03-31 | url = http://www.ibm.com/developerworks/opensource/library/os-couchdb/index.html | accessdate = 2009-03-31 }}</ref> His objectives for the database were for it to become the database of the Internet and that it would be designed from the ground up to serve web applications. CouchDB was originally written in [[C++]], but the project moved to the [[Erlang (programming language)|Erlang]] OTP platform for its emphasis on [[fault tolerance]]. He self-funded the project for almost two years and released it as an open source project under the [[GNU General Public License]]. In February 2008, it became an [[Apache Incubator]] project and the license was changed to the [[Apache License]] rather than the [[GPL]].<ref>[http://mail-archives.apache.org/mod_mbox/incubator-general/200802.mbox/%3c3d4032300802121136p361b52ceyfc0f3b0ad81a1793@mail.gmail.com%3e Apache mailing list announcement] on mail-archives.apache.org</ref> On November 2008, it graduated to a top-level project alongside the likes of the [[Apache HTTP Server]], [[Apache Tomcat|Tomcat]] and [[Apache Ant|Ant]].<ref>[http://mail-archives.apache.org/mod_mbox/incubator-couchdb-dev/200811.mbox/%3c3F352A54-5FC8-4CB0-8A6B-7D3446F07462@jaguNET.com%3e Re: Proposed Resolution: Establish CouchDB TLP] on mail-archives.apache.org</ref> Currently, CouchDB is maintained at the Apache Software Foundation with backing from IBM. Katz works on it full-time as the lead developer. ==Design== CouchDB is most similar to other document stores like [[MongoDB]] and [[Lotus Notes]]. It is not a [[relational database management system]]. Instead of storing data in rows and columns, the database manages a collection of [[JSON]] documents. The documents in a collection need not share a [[database schema|schema]], but retain query abilities via [[View (database)|view]]s. Views are defined with [[aggregate function]]s and [[filter (software)|filter]]s are computed in parallel, much like [[MapReduce]]. Views are generally stored in the database and their [[Index (database)|index]]es updated continuously, although queries may introduce temporary views. CouchDB supports a view system using external socket servers and a [[JSON]]-based protocol.<ref name="Apache, View Server" >[http://wiki.apache.org/couchdb/ViewServer View Server Documentation] on wiki.apache.org</ref> As a consequence, view servers have been developed in a variety of languages. CouchDB exposes a [[RESTful]] HTTP API and a large number of pre-written clients are available. Additionally, a [[plugin]] architecture allows for using different computer languages as the view server such as [[JavaScript]] (default), [[PHP]], [[Ruby (programming language)|Ruby]], [[Python (programming language)|Python]] and [[Erlang (programming language)|Erlang]]. Support for other languages can be easily added. CouchDB design and philosophy borrows heavily from Web architecture and the concepts of resources, methods and representations and can be simplified as the following. {{cquote|[[Django (web framework)|Django]] may be built for the Web, but CouchDB is built of the Web. Iâ€™ve never seen software that so completely embraces the philosophies behind HTTP. CouchDB makes Django look old-school in the same way that Django makes [[Active Server Pages|ASP]] look outdated.|15px||Jacob Kaplan-Moss, Django Developer <ref>[http://books.couchdb.org/relax/intro/why-couchdb#A%20Different%20Way%20to%20Model%20Your%20Data A Different Way to Model Your Data]</ref> }} It is in use in many software projects and web sites<ref>[http://wiki.apache.org/couchdb/CouchDB_in_the_wild CouchDB in the wild] A list of software projects and websites using CouchDB</ref>, including [[Ubuntu (operating system)|Ubuntu]], where it is used to synchronize address and bookmark data.<ref>[http://mail-archives.apache.org/mod_mbox/couchdb-dev/200910.mbox/%3C4AD53996.3090104@canonical.com%3E Email from Elliot Murphy (Canonical)] to the CouchDB-Devel list</ref> Since Version 0.11 CouchDB supports [[CommonJS]]' Module specification<ref>http://wiki.apache.org/couchdb/CommonJS_Modules</ref>. ===Features=== ; Document Storage : CouchDB stores documents in their entirety. You can think of a document as one or more field/value pairs expressed as JSON. Field values can be simple things like strings, numbers, or dates. But you can also use [[Array data structure|ordered lists]] and [[Associative array|associative maps]]. Every document in a CouchDB database has a unique id and there is no required document schema. ; ACID Semantics : Like many relational database engines, CouchDB provides [[atomicity, consistency, isolation, durability|ACID]] semantics<ref name="ACID">[http://couchdb.apache.org/docs/overview.html], see section on ACID Properties.</ref>. It does this by implementing a form of [[Multi-Version Concurrency Control]] (MVCC) not unlike [[InnoDB]] or Oracle. That means CouchDB can handle a high volume of concurrent readers and writers without conflict. ; Map/Reduce Views and Indexes : To provide some structure to the data stored in CouchDB, you can develop views that are similar to their relational database counterparts. In CouchDB, each view is constructed by a [[JavaScript]] function (server-side JavaScript by using [[CommonJS]] and [[SpiderMonkey (JavaScript engine)|SpiderMonkey]]) that acts as the Map half of a [[MapReduce]] operation. The function takes a document and transforms it into a single value which it returns. The logic in your JavaScript functions can be arbitrarily complex. Since computing a view 