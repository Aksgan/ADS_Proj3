listed by the US Navy as "missing in action, cause unknown". The expedition to locate the submarine was financed and arranged by the family of the commander of the USS Grunion, Lt. Cmdr. [[Mannert L. Abele]]. ==Notes== <references/> === References === *<sub>Bodil Bluhm (Sept. 5, 2002). [http://oceanexplorer.noaa.gov/explorations/02arctic/logs/sep5/sep5.html "Getting to the Bottom...of Arctic Seafloor Communities"], NOAA.</sub> *<sub>Jennifer Steinberg Holland (January 2004). [http://ngm.nationalgeographic.com/ngm/0401/feature6/fulltext.html "Northern Exposer"], National Geographic.</sub> *<sub>Jerry Caba (June 30, 2005). [http://oceanexplorer.noaa.gov/explorations/05arctic/logs/june30/june30.html "Arctic ROV Operations"], NOAA.</sub> *<sub>Larry Madin (October 15, 2007). [http://oceanexplorer.noaa.gov/explorations/07philippines/logs/summary/summary.html Exploring the Inner Space of the Celebes Sea 2007], NOAA</sub> *<sub>Gerald Reilly (October 2008). [http://findarticles.com/p/articles/mi_qa5367/is_200810/ai_n31108686/pg_2/?tag=content;col1 "The Search for the USS Grunion and 70 Men on Eternal Patrol"], [http://www.sea-technology.com/ Sea Technology].</sub> *<sub>Scott C. France, ''University of Louisiana at Lafayette'' (March 13-31, 2009). [http://oceanexplorer.noaa.gov/explorations/09deepseacorals/welcome.html Deep-water Connections: Probing the Southern Limits of Distribution of North Atlantic Deep-Sea Coral Communities], NOAA.</sub> [[Category:Diving equipment]] [[Category:Robotic submarines]] [[Category:Unmanned vehicles]]</text> </page> <page> <id>15367</id> <title>Global Interpreter Lock</title> <text>In [[interpreted programming language]]s, most notably [[Python (language)|Python]] and [[Ruby (language)|Ruby]], a '''Global Interpreter Lock''' ('''GIL''') is a [[mutual exclusion]] [[lock (computer science)|lock]] held by a [[programming language]] [[interpreter (computing)|interpreter]] [[Thread (computer science)|thread]] to avoid sharing code that is not [[thread-safe]] with other threads. In languages with a GIL, there is always one GIL for each interpreter [[Process (computing)|process]]. Applications written in programming languages with a GIL can be designed to use separate processes to achieve full concurrency, as each process has its own interpreter and in turn has its own GIL. Otherwise, the GIL can be a significant barrier to concurrency—a price paid for having the dynamism of the language. == Drawbacks and profits == Usage of a Global Interpreter Lock in a language effectively limits [[Concurrency (computer science)|concurrency]] of a single interpreter process with multiple threads. If the process is almost purely made up of interpreted code and does not make calls outside of the interpreter for long periods of time (which can release the lock on the GIL on that thread while it processes), there is likely to be very little increase in speed when running the process on a [[multiprocessor]] machine. Due to signaling with a CPU-bound thread, it can cause a significant slowdown, even on single processors.<ref>{{cite web | url=http://www.dabeaz.com/python/GIL.pdf | title=Inside the Python GIL | author=David Beazley | publisher=[http://chipy.org/ Chicago Python User Group] | date=2009-06-11 | location=Chicago | accessdate=2009-10-07}}</ref> The reasons of employing such a lock include: * increased speed of single-threaded programs (no necessity to acquire or release locks on all data structures separately) * easy integration of [[C (programming language)|C]] libraries that usually are not thread-safe. == Examples == Languages that implement a Global Interpreter Lock are, among others: * [[Python (programming language)|Python]] (specifically its [[C (programming language)|C]] implementation, [[CPython]])<ref>{{cite web | url=http://www.ddj.com/linux-open-source/206103078?pgno=2 | title=Concurrency and Python | page=2 | author=Shannon -jj Behrens | publisher=[[Dr. Dobb's Journal]] | quote=''The GIL is a lock that is used to protect all the critical sections in Python. Hence, even if you have multiple CPUs, only one thread may be doing "pythony" things at a time.'' | date=2008-02-03 | accessdate=2008-07-12}}</ref><ref>[http://docs.python.org/api/threads.html Python/C API Reference Manual: Thread State and the Global Interpreter Lock]</ref> * [[Ruby (programming language)|Ruby]], specifically the [[Ruby MRI|MRI Interpreter]] (where it is called Global VM Lock). ([[Java Virtual Machine|JVM]]-based equivalents of these languages ([[Jython]] and [[JRuby]]) are pure Java applications, so they don't have any limits on threading.) == References == {{reflist|2}} == See also == * [[Green threads]] [[Category:Python programming language]] [[Category:Concurrency control]] [[Category:Concurrent computing]] [[Category:Concurrency]] [[ja:グローバルインタプリタロック]] [[pl:Global Interpreter Lock]]</text> </page> <page> <id>15374</id> <title>Global Observer</title> <text>{{Refimprove|date=January 2011}} [[Image:GlobalObserverfirstflight_web.jpg|thumb|right|300px|First flight of the Global Observer]] The '''Global Observer™''' is an [[AeroVironment]] concept for a high-altitude, long endurance [[unmanned aerial vehicle]], designed by [[AeroVironment]] (AV) to operate as a stratospheric geosynchronous satellite system with regional coverage. Two Global Observer aircraft, each flying for up to a week at an altitude of between 55,000 – 65,000 feet, could alternate coverage over any area on the earth, providing a platform for communications relays, remote sensing, or long-term surveillance. In addition to flying above weather and above other conventional aircraft, operation in this altitude regime permits communications and sensor payloads on the aircraft to service an area on the surface of the earth up to 600 miles in diameter, equivalent to more than 280,000 square miles of coverage. Global Observer may offer greater flexibility than a satellite and longer duration than conventional manned and unmanned aircraft. The Global Observer is currently in development; its first flight was in August 2010,<ref>{{cite web|url=http://www.flightglobal.com/articles/2010/08/11/346040/global-observer-clears-wing-load-testing.html |accessdate=2010-08-16 |title=Global Observer clears wing load testing }}</ref> and the first hydrogen-fueled flight was in January 2011.<ref>{{cite web|url=http://www.defpro.com/news/details/21106/|accessdate=2011-01-12|title=defence.professionals | defpro.com}}</ref> ==Statistics== *Endurance: 5 – 7 days *Payload: Up to 400 lbs (180 kg) *Operating altitude: 55,000 – 65,000 feet *Propulsion system: Liquid hydrogen-powered internal combustion powerplant driving four high efficiency electric motors. The aircraft does not produce carbon emissions. *Wing Span: 175 feet *Length: 70 feet *Launch/Recovery Method: Operate from conventional 150 ft W X 6,000 ft long paved runways (<4,200 ft takeoff and landing distance) ==JCTD Program== The Global Observer Joint Capabilities Technology Demonstration (JCTD) program has the goal of helping solve the capability gap in persistent ISR and communications relay for the US military and homeland security. The Global Observer JCTD is demonstrating a new stratospheric, extreme endurance UAV system that can be transition for post-JCTD development, extended user evaluation, and fielding. This program is a joint program with the Department of Defense, Department of Homeland Security, and AeroVironment that started in September 2007 and will culminate in a Joint Operational Utility Assessment (JOUA) in 2011. The program provides for the system development, production of two aircraft, development flight testing, and JOUA with ISR and communications relay payload. The flight testing and JOUA will be conducted at the Air Force Flight Test Center at Edwards Air Force Base, California. The primary objectives of the Global Observer JCTD Program are: *Develop enabling technologies for a liquid hydrogen powered Global Observer UAS system. *Design, build, and demonstrate the Global Observer UAS system for a 5 - 7 day endurance 