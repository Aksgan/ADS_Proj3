times.<ref name="rn3"/> So the total number of expansions in an iterative deepening search is :<math>(d + 1)1 + (d)b + (d-1)b^{2} + \cdots + 3b^{d-2} + 2b^{d-1} + b^{d}</math> :<math>\sum_{i=0}^d (d+1-i)b^i</math> For <math>b=10</math> and <math>d=5</math> the number is : 6 + 50 + 400 + 3,000 + 20,000 + 100,000 = 123,456 All together, an iterative deepening search from depth 1 to depth <math>d</math> expands only about 11% more nodes than a single breadth-first or depth-limited search to depth <math>d</math>, when <math>b=10</math>. The higher the branching factor, the lower the overhead of repeatedly expanded states, but even when the branching factor is 2, iterative deepening search only takes about twice as long as a complete breadth-first search. This means that the time complexity of iterative deepening is still <math>O(b^d)</math>, and the space complexity is <math>O(bd)</math>. In general, iterative deepening is the preferred search method when there is a large search space and the depth of the solution is not known.{{Fact|date=October 2008}} == Related algorithms == Similar to iterative deepening is a search strategy called [[iterative lengthening search]] that works with increasing path-cost limits instead of depth-limits. It expands nodes in the order of increasing path cost; therefore the first goal it encounters is the one with the cheapest path cost. But iterative lengthening incurs substantial overhead that make it less useful than iterative deepening. ==Notes== {{reflist}} [[Category:Graph algorithms]] [[Category:Search algorithms]] [[de:Iterative Tiefensuche]] [[it:Iterative deepening]] [[ja:反復深化深さ優先探索]] [[nl:Iteratief diepte-eerst zoeken]]</text> </page> <page> <id>19453</id> <title>Ivar Jacobson</title> <text>{{Infobox scientist |image = ivar_jacobson.jpg |image_width = 150px | |name = Ivar Jacobson |birth_date = {{birth date and age|mf=yes|1939|09|02}} |birth_place = [[Ystad]], [[Sweden]] |residence = [[Switzerland]] |citizenship = |nationality = Swedish |ethnicity = |field = [[Electrical Engineering]], [[Computer Science]] |work_institutions = [[Ericsson]], Objective Systems, [[Rational Software]], [[IBM]], [http://www.ivarjacobson.com Ivar Jacobson International] |alma_mater = [[Chalmers University of Technology|Chalmers Institute of Technology]] in [[Gothenburg]], [[Royal Institute of Technology]] in [[Stockholm]] |doctoral_advisor = |doctoral_students = |known_for = components and component architecture, use-cases and use-case driven development, [[Specification and Design Language|SDL]], a major contributor to [[Unified Modeling Language|UML]], Objectory, RUP, aspect-oriented software development |author_abbrev_bot = |author_abbrev_zoo = |influences = [[Grady Booch]], [[James Rumbaugh]] |influenced = |prizes = |footnotes = |signature = }} '''Ivar Hjalmar Jacobson''' (born 1939) is a [[Swedish people|Swedish]] [[computer scientist]], known as major contributor to UML, Objectory, RUP and aspect-oriented software development. == Biography == Ivar Jacobson was born in [[Ystad]], [[Sweden]] on 2 September 1939. He got his [[Masters degree|Master]] of [[Electrical Engineering]] degree at [[Chalmers University of Technology|Chalmers Institute of Technology]] in [[Gothenburg]] in 1962 and a [[Ph.D.]] at the [[Royal Institute of Technology]] in [[Stockholm]] in 1985 on a thesis on Language Constructs for Large Real Time Systems. After university Jacobson started working at Ericsson until April 1987, when he started Objective Systems. A majority stake of the company was acquired by Ericsson in 1991, and the company was renamed [[Objectory AB]]. Jacobson developed the software process OOSE at Objectory circa 1992. In October 1995 Ericsson divested Objectory to [[Rational Software]]<ref>[http://www.dbmsmag.com/9610d11.html DBMS Interview - October 1996]</ref> and Jacobson started working with [[Grady Booch]] and [[James Rumbaugh]], known collectively as the Three Amigos. Rational was bought by [[IBM]] in 2003 and Jacobson decided to quit, but he stayed on until May 2004 as an executive technical consultant. In mid 2003 Jacobson formed Ivar Jacobson International (IJI) which is an umbrella company for Ivar Jacobson Consulting (IJC)<ref>[http://www.ivarjacobson.com Ivar Jacobson Consulting (IJC)]</ref> which operates across 4 continents with offices in the UK, US (West and East Coast), Europe, Scandinavia, China, Korea, Singapore and Australia. == Work == === Ericsson === In 1967 at Ericsson Jacobson proposed the use of [[software component]]s in the new generation of [[software]] controlled [[telephone switch]]es [[Ericsson]] was developing. In doing this he invented [[sequence diagram]]s, and developed collaboration diagrams. He also used state transition diagrams to describe the message flows between components. Jacobson saw a need for ''blueprints'' for software development. He was one of the original developers of the [[Specification and Design Language]] (SDL). In 1967, SDL became a standard in the [[telecoms industry]]. At Ericsson he also invented [[use case]]s as a way to specify functional software requirements. === Rational Software === At Rational, Jacobson and his friends, [[Grady Booch]] and [[James Rumbaugh]], first designed the [[Unified Modeling Language|UML]], later developing the [[Rational Unified Process]]. === Essential Unified Process === In November 2005, Jacobson announced the [[Essential Unified Process]] or “EssUP” for short. EssUP is a new “Practice” centric software development process that stands on the shoulders of modern but established software development best practice. It is a fresh new start, integrating successful practices sourced from the three leading process camps: the unified process camp, the [[agile software development]] camp and the [[process improvement]] camp. Each one of them contributes different capabilities: structure, agility and process improvement. Ivar has described EssUP as a "super light and agile" RUP, and IJI have integrated EssUP into [[Microsoft]] [[Visual Studio Team System]] and [[Eclipse (software)|Eclipse]]. === SEMAT === In November 2009, Jacobson, [[Bertrand Meyer]] and [[Richard Soley]] ("the Troika") started an initiative called [[SEMAT]] (Software Engineering Method and Theory) to seek to develop a rigorous, theoretically sound basis for software engineering practice, and its wide adoption by industry and academia. == Publications == Jacobson has published several books and articles,<ref>{{dblp name|id=j/Jacobson:Ivar|name=Ivar Jacobson}}</ref> a selection: * 1992. ''Object-Oriented Software Engineering: A Use Case Driven Approach (ACM Press)'' With Magnus Christerson, Patrik Jonsson & Gunnar Overgaard. Addison-Wesley, 1992, ISBN 0-201-54435-0 * 1994. ''The Object Advantage: Business Process Reengineering With Object Technology (ACM Press)''. With M. Ericsson & A. Jacobson. Addison-Wesley, ISBN 0-201-42289-1 * 1997. ''Software Reuse: Architecture, Process, and Organization for Business Success (ACM Press)''. With Martin Griss & Patrik Jonsson. Addison-Wesley, 1997, ISBN 0-201-92476-5 * 1999. ''The Unified Software Development Process''. With [[Grady Booch]] & [[James Rumbaugh]]. Addison-Wesley Professional, 1999, ISBN 0-201-57169-2 * 2004. ''The Unified Modeling Language Reference Manual (2nd Edition)''. With [[Grady Booch]] & [[James Rumbaugh]]. Addison-Wesley Professional, 2004, ISBN 0-321-24562-8 * 2004. ''Aspect-Oriented Software Development With Use Cases (Addison-Wesley Object Technology Series)''. 