include *[[Earthworm Jim]] *[[Earthworm Jim 2]] *[[M.C.Kids]] *[[Cool Spot]] *[[Global Gladiators]] *[[Disney's Aladdin (video game)|Aladdin for the Sega Genesis]] *[[Gargoyles (video game)|Gargoyles]] *[[Maui Mallard in Cold Shadow]] *[[The Jungle Book (video game)|The Jungle Book for the Super NES]] *[[Alfred Chicken]] ==See also== *[[Deluxe Paint]] ==External links== * [http://opentume.co.cc tUME Homepage] * [http://greggman.com/pages/tume.htm tUME Info] [[Category:Amiga software]] [[Category:DOS software]] [[Category:Video game level editors]]</text> </page> <page> <id>36750</id> <title>T (programming language)</title> <text>{{Infobox programming language | name = T | logo = | paradigm = [[Multi-paradigm programming language|multi-paradigm]]: [[Object-oriented programming|object-oriented]], [[Imperative programming|imperative]], [[Functional programming|functional]], [[metaprogramming|meta]] | year = 1980s | designer = Jonathan A. Rees and<br/>Norman I. Adams | developer = Jonathan A. Rees and<br/>Norman I. Adams | latest_release_version = 3.0 ({{release date|1984|8|1}}) | latest release date = | typing = [[dynamic typing|dynamic]], [[strong typing|strong]] | influenced_by = [[Scheme (programming language)|Scheme]] | influenced = [[EuLisp]] [[Joule (programming language)|Joule]] | operating_system = [[Cross-platform]] | license = | website = | file_ext = }} The '''T programming language''' is a dialect of the [[Scheme (programming language)|Scheme programming language]] developed in the early 1980s by Jonathan A. Rees, Kent M. Pitman, and Norman I. Adams of [[Yale University]] as an experiment in language design and implementation. T's purpose is to test the thesis developed by [[Guy L. Steele, Jr.|Steele]] and [[Gerald Jay Sussman|Sussman]] in their series of papers about Scheme: that Scheme may be used as the basis for a practical programming language of exceptional expressive power, and that implementations of Scheme could perform better than other Lisp systems, and competitively with implementations of programming languages, such as [[C (programming language)|C]] and [[BLISS (programming language)|BLISS]], which are usually considered to be inherently more efficient than Lisp on conventional machine architectures. In 1987 Stephen Slade published the book "The T Programming Language: A Dialect of LISP". T contains some features that modern Scheme does not have. For example, T is [[object-oriented]], and it has first-class environments, called ''locales'', which can be modified non-locally and used as a module system. T has several extra special forms for lazy evaluation and flow control, as well as an equivalent to [[Common Lisp]]'s [[setf]]. T, like Scheme, supports [[call-with-current-continuation]], but it also has a more limited form called <code>catch</code>. From the T manual, a hypothetical implementation of <code>cons</code> could be: (define-predicate pair?) (define-settable-operation (car pair)) (define-settable-operation (cdr pair)) (define (cons the-car the-cdr) (object nil ((pair? self) t) ((car self) the-car) ((cdr self) the-cdr) (((setter car) self new-car) (set the-car new-car)) (((setter cdr) self new-cdr) (set the-cdr new-cdr)))) Through this example, we can see that objects in T are intimately related to closures and message-passing. A primitive called <code>join</code> puts two objects together, allowing for something resembling inheritance. ==External links== *[http://mumble.net/~jar/tproject/ The T Project] *[http://www.paulgraham.com/thist.html History of T], by [[Olin Shivers]] *[http://repository.readscheme.org/ftp/papers/t_manual.pdf T manual] (PDF) from ReadScheme [[Category:Lisp programming language family]] [[Category:Scheme programming language]] [[cs:T (programovac√≠ jazyk)]]</text> </page> <page> <id>36754</id> <title>Table (information)</title> <text>{{Cleanup|date=October 2009}} {{selfref|For sortable tables in Wikipedia, see [[Help:Sorting]]}} [[Image:Table-sample-appearance-default-params-values-01.gif|thumb|300px|An example table rendered in a web browser using HTML.]] A '''table''' is a means of arranging [[data]] in rows and columns. The use of tables is pervasive throughout all [[communication]], [[research]] and [[data analysis]]. Tables appear in print media, handwritten notes, computer software, architectural ornamentation, traffic signs and many other places. The precise conventions and terminology for describing tables varies depending on the context. Further, tables differ significantly in variety, structure, flexibility, notation, representation and use.<ref name="Fink000">{{cite book | last = Fink | first = Arlene | title = How to Conduct Surveys | publisher = Sage Publications | location = Thousand Oaks | year = 2005 | isbn = 141291423X }} </ref><ref name="Mcnabb000">{{cite book | last = McNabb | first = David | title = Research Methods in Public Administration and Nonprofit Management | publisher = M.E. Sharpe | location = Armonk | year = 2002 | isbn = 0765609576 }} </ref><ref name="Morgan000">{{cite book | last = Morgan | first = George | title = Spss for Introductory Statistics | publisher = Lawrence Erlbaum | location = Hillsdale | year = 2004 | isbn = 0805847898 }} </ref><ref name="Robey000">{{cite book | last = Robey | first = David | title = Sound and Structure in the Divine Comedy | publisher = Oxford University Press | location = Oxford Oxfordshire | year = 2000 | isbn = 0198184980 }} </ref><ref name="Zielinski000">{{cite book | last = Zielinski | first = Krzysztof | title = Software Engineering: Evolution and Emerging Technologies | publisher = IOS Press | location = Amsterdam | year = 2006 | isbn = 1586035592 }}</ref> In books and technical articles, tables are typically presented apart from the main text in numbered and captioned [[floating block]]s. == Basic description == A table consists of an ordered arrangement of '''rows''' and '''columns'''. This is a simplified description of the most basic kind of table. Certain considerations follow from this simplified description: * the term '''row''' has several common synonyms (e.g., [[Row (database)|record]], k-[[tuple]], n-tuple, vector); * the term '''column''' has several common synonyms (e.g., field, parameter, property, attribute); * a column is usually identified by a name; * a column name can consist of a word, phrase or a numerical index; * the intersection of a row and a column is a [[table cell|cell]]. The elements of a table may be grouped, segmented, or arranged in many different ways, and even nested [[Recursion|recursively]]. Additionally, a table may include [[metadata]], [[annotations]], [[header (information technology)|header]],<ref name="header">see e.g., [[Page header]] or [[Header (information technology)]]</ref> [[Page footer|footer]] or other ancillary features.<ref name="Zielinski000" /> === Simple table === The following illustrates a simple table with three columns and six rows. The first row is not counted, because it is only used to display the column names. This is traditionally called a "header row". {| class="wikitable" style="text-align:left" |+ '''Huber estimator VS. Least-square estimator''' |- ! Kinds of estimator !! <math>\rho(x)</math> !! <math>\phi(x)</math> |- | Least-square estimator || <math>\frac{x^2}{2}</math> || x |- | Huber estimator || <math>\begin{cases} 1/2*x^2\quad\text{if}|x|\leq k; \\k|x|-1/2*k^2\text{if}|x|\geq k. \end{cases} </math> || <math>\begin{cases} x; \\ksgn(x). \end{cases} 