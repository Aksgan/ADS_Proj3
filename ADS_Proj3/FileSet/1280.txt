4 Mbit || 512 KB || 80000 || 7FFFF |- | 27C080 || 8 Mbit || 1 [[Megabyte|MB]] || 100000 || FFFFF |- | 27C160 || 16 Mbit || 2 MB || 200000 || 1FFFFF |- | 27C320 || 32 Mbit || 4 MB || 400000 || 3FFFFF |} <ref>NOTE: 1702 EPROMs were [[PMOS logic|PMOS]], 27x series EPROMs containing a C in the name are [[CMOS]] based, without the C are [[NMOS logic|NMOS]]</ref> ==Gallery== <gallery> image:EPROMdie.jpg|Close up of a EPROM die image:Eprom32k.jpg|A 32KB (256Kbit) EPROM image:Eprom60x.jpg|EPROM. 60x closeup image:D8749.png|This [[Intel 8048|8749]] [[Microcontroller]] stores its program in internal EPROM </gallery> ==See also== * [[Programmable read-only memory]] * [[EEPROM]] * [[Flash memory]] * [[Intel HEX]] - File format * [[SREC (file format)|SREC]] - File format ==References== {{reflist}} ==External links== * [http://www.progshop.com/shop/electronic/eprom-programming.html Detailed information about EPROMs types and EPROM programming] [[Category:Non-volatile memory]] [[Category:Integrated circuits]] [[Category:Computer memory]] [[ar:ذاكرة القراءة فقط القابلة للبرمجة والمسح]] [[bg:EPROM]] [[ca:EPROM]] [[cs:EPROM]] [[da:EPROM]] [[de:Erasable Programmable Read-Only Memory]] [[es:Memoria EPROM]] [[eu:EPROM]] [[fr:Erasable Programmable Read Only Memory]] [[gl:EPROM]] [[ko:EPROM]] [[hr:EPROM]] [[it:EPROM]] [[he:EPROM]] [[nl:Erasable programmable read-only memory]] [[ja:EPROM]] [[pl:EPROM]] [[pt:EPROM]] [[ro:EPROM]] [[sq:EPROM]] [[sk:EPROM]] [[fi:EPROM]] [[tr:EPROM]] [[zh:EPROM]]</text> </page> <page> <id>11490</id> <title>ESC/Java</title> <text>{{No footnotes|date=March 2010}} '''ESC/Java''' (and more recently '''ESC/Java2'''), the "Extended Static Checker for Java," is a [[programming tool]] that attempts to find common [[run-time error]]s in [[Java (programming language)|Java]] programs at [[compile time]]<ref>C. Flanagan, K.R.M. Leino, M. Lillibridge, G. Nelson, J. B. Saxe and R. Stata. "Extended static checking for Java". In ''Proceedings of the Conference on Programming Language Design and Implementation'', pages 234--245, 2002. doi: http://doi.acm.org/10.1145/512529.512558</ref>. The underlying approach used in ESC/Java is referred to as [[extended static checking]], which is a collective name referring to a range of techniques for [[static code analysis|statically checking]] the correctness of various program constraints. For example, that an integer variable is greater-than-zero, or lies between the [[bounds checking|bounds of an array]]. This technique was pioneered in ESC/Java (and it's predecessor, ESC/Modula-3) and can be thought of as an extended form of [[type system#Type checking|type checking]]. Extended static checking usually involves the use of an [[automated theorem proving|automated theorem prover]] and, in ESC/Java, the Simplify theorem prover was used. ESC/Java is neither [[soundness|sound]] nor [[completeness|complete]]. This was intentional and aims to reduce the number of errors and/or warnings reported to the programmer, in order to make the tool more useful in practice. However, it does mean that: firstly, there are programs that ESC/Java will erroneously consider to be incorrect (known as ''false-positives''); secondly, there are incorrect programs it will consider to be correct (known as ''false-negatives''). Examples in the latter category include errors arising from [[modular arithmetic]] and/or [[Thread (computer science)|multithreading]]. ESC/Java was originally developed at the [[DEC Systems Research Center|Compaq Systems Research Center]] (SRC). SRC launched the project in 1997, after work on their original extended static checker, ESC/Modula-3, ended in 1996. In 2002, SRC released the [[source code]] for ESC/Java and related tools. Recent versions of ESC/Java are based around the [[Java Modeling Language]] (JML). Users can control the amount and kinds of checking by annotating their programs with specially formatted comments or ''[[pragma]]s''. The [[Radboud University Nijmegen|University of Nijmegen]]'s ''Security of Systems'' group released alpha versions of ESC/Java2, an extended version of ESC/Java that processes the [[JML]] specification language through 2004. Since 2004, ESC/Java2 development has been managed by the KindSoftware Research Group at [[University College Dublin]]. Over the years, ESC/Java2 has gained many new features including the ability to reason with multiple [[theorem prover]]s and integration with [[Eclipse (software)|Eclipse]]. == References == {{Reflist}} == External links == * [http://www.hpl.hp.com/downloads/crl/jtk/ Java Programming Toolkit Source Release] * [http://web.archive.org/web/20051208055447/http://research.compaq.com/SRC/esc/ Extended Static Checking for Java] from the [[Internet Archive]] * [http://kind.ucd.ie/products/opensource/ESCJava2/ ESC/Java2] * [ftp://gatekeeper.dec.com/pub/DEC/SRC/research-reports/abstracts/src-rr-159.html SRC-RR-159 Extended Static Checking. - David L. Detlefs, K. Rustan M. Leino, Greg Nelson, James B. Saxe] * [http://web.archive.org/web/20010228175138/research.compaq.com/SRC/esc/escm3/download.html Extended Static Checking Modula-3] from the [[Internet Archive]] * [http://www.researchchannel.org/prog/displayevent.aspx?rID=2761&fID=345 Extended Static Checking] Computer Science & Engineering Colloquia. University of Washington. 1999. {{formalmethods-stub}} [[Category:2002 introductions]] [[Category:Static code analysis]] [[Category:Formal methods tools]] [[Category:Free computer programming tools]]</text> </page> <page> <id>11498</id> <title>ESET NOD32</title> <text>{{Infobox software | name = ESET NOD32 Antivirus | logo = [[File:ESET logo.svg|100px|ESET logo]] | screenshot = [[File:ESET NOD32 Antivirus 4.png|300px|ESET NOD32 Antivirus 4]] | caption = ESET NOD32 Antivirus | collapsible = | author = | developer = [[ESET]] | released = | latest release version = 4.2.71.2 | latest release date = {{Start date and age|2011|1|25|df=yes}} | latest preview version = | latest preview date = | frequently updated = | programming language = | operating system = [[Microsoft Windows]], [[Mac OS X]], [[Linux]], [[FreeBSD]], [[DOS]], [[Novell NetWare]], [[Solaris (operating system)|Solaris]], [[Windows Mobile]] | platform = | size = | language = | status = | genre = [[Antivirus software|Antivirus]] | license = [[Proprietary software|Proprietary]] | website = [http://www.eset.com/home/nod32-antivirus/ eset.com/home/nod32-antivirus]<br />[http://www.eset.com/home/smart-security eset.com/home/smart-security] }} '''ESET NOD32 Antivirus''', commonly known as '''NOD32''', is an [[antivirus software|antivirus]] [[software]] package made by the [[Slovakia|Slovak]] company [[ESET]]. ESET NOD32 Antivirus is sold in two editions, Home Edition and Business Edition. The Business Edition packages add '''ESET Remote Administrator''' allowing for server deployment and management, mirroring of threat signature database updates and the ability to install on Microsoft [[Windows Server]] operating systems. ==History== ===ESET NOD32 Antivirus=== NOD32 was created in the early 1990s when [[computer virus]]es were becoming increasingly prevalent. Initially the program gained popularity with IT workers in Eastern European countries, as ESET was based in Slovakia. Though the program's abbreviation was originally pronounced as individual letters, recent worldwide use of the program has led to the more common single-word pronunciation, sounding like the English word ''nod''.<ref>{{cite web|url=http://www.wilderssecurity.com/showthread.php?t=25585 |title=NOD32 - What does it mean? - Wilders Security Forums |publisher=Wilderssecurity.com |date= |accessdate=2008-10-10}}</ref> The company reached its 5000th update to virus definitions on April 5, 2010. The acronym NOD stands for ''Nemocnica na Okraji Disku'' ("Hospital at the end of the disk"), a pun related to the [[Czechoslovakia]]n [[medical drama]] series ''[[Hospital at the End of the City|Nemocnice na okraji města]]'' (''Hospital at the End of the City''). ====ESET Mail Security for Microsoft Exchange Server==== On March 10, 