given on the [[Maximum likelihood]] page. == See also == *[[Estimation of covariance matrices]] *[[Multivariate statistics]] *[[Sample mean and covariance|Sample covariance matrix]] *[[Gramian matrix]] *[[Eigenvalue decomposition]] *[[Quadratic form (statistics)]] == References == <references/> * {{mathworld|urlname=CovarianceMatrix|title= Covariance Matrix}} * N.G. van Kampen, ''Stochastic processes in physics and chemistry''. New York: North-Holland, 1981. [[Category:Covariance and correlation]] [[Category:Matrices]] [[Category:Summary statistics]] [[Category:Data analysis]] [[de:Kovarianzmatrix]] [[es:Matriz de covarianza]] [[fa:ماتریس کوواریانس]] [[fr:Matrice de variance-covariance]] [[it:Matrice delle covarianze]] [[nl:Covariantiematrix]] [[ja:分散共分散行列]] [[pl:Macierz kowariancji]] [[pt:Matriz de covariância]] [[ru:Ковариационная матрица]] [[tr:Kovaryans matrisi]] [[uk:Коваріаційна матриця]] [[vi:Ma trận hiệp phương sai]] [[zh:协方差矩阵]]</text> </page> <page> <id>8311</id> <title>Cover tree</title> <text>The '''cover tree''' is a special type of [[data structure]] in [[computer science]] that is specifically designed to facilitate the speed-up of a [[nearest neighbor search]]. It was introduced by Alina Beygelzimer, John Langford, and Sham Kakade. The tree can be thought of as a hierarchy of levels with the top level containing the root [[point (geometry)|point]] and the bottom level containing every point in the metric space. Each level ''C'' is associated with an integer value ''i'' that decrements by one as the tree is descended. Each level ''C'' in the cover tree has three important properties: *'''Nesting:''' <math>C_{i} \subseteq C_{i-1}</math> *'''Covering:''' For every point <math>p \in C_{i-1}</math>, there exists a point <math>q \in C_{i} </math> such that the distance from <math>p</math> to <math>q</math> is less than or equal to <math>2^{i}</math> and exactly one such <math>q</math> is a parent of <math>p</math>. *'''Separation:''' For all points <math>p,q \in C_i</math>, the distance from <math>p</math> to <math>q</math> is greater than <math>2^{i}</math>. == Complexity Analysis == *Searches: Like other [[metric tree]]s the cover tree allows for nearest neighbor searches in O(k*log n) where k is a constant associated with the dimensionality of the dataset and n is the cardinality. This maximum bound on search times is much better than naive linear searches which operate in O(k*n). However, in high-dimensional [[metric space]]s the k constant is non-trivial, which means it cannot be ignored in complexity analysis. Unlike other metric trees, the cover tree has a theoretical bound on its constant that is based on the dataset's [[expansivity constant| expansion constant]] or doubling constant. The bound on search time is O(c<sup>12</sup> log n) where ''c'' is the expansion constant of the dataset. *Insertions: Although cover trees provide faster searches than the naive approach, this advantage must be weighed with the additional cost of maintaining the data structure. In a naive approach adding a new point to the dataset is trivial because order does not need to be preserved, but in a cover tree it can take O(c<sup>6</sup> log n) time. However, this is an upper-bound, and a number of techniques have been implemented that reduce the average-case time complexity.<ref>http://hunch.net/~jl/projects/cover_tree/cover_tree.html</ref> *Space: The cover tree uses implicit representation to keep track of repeated points. Thus, it only requires O(n) space. ==See also== *[[Nearest neighbor search]] *[[kd-tree]] ==References== <references/> * [http://hunch.net/~jl/projects/cover_tree/cover_tree.html JL's Cover Tree page]. John Langford's page links to papers and code. {{CS-Trees}} [[Category:Trees (structure)]] {{datastructure-stub}}</text> </page> <page> <id>8313</id> <title>Covering graph</title> <text>In the [[mathematics|mathematical]] discipline of [[graph theory]], a [[graph (mathematics)|graph]] ''C'' is a '''covering graph''' of another graph ''G'' if there is a '''covering map''' from the vertex set of ''C'' to the vertex set of ''G''. A covering map ''f'' is a [[surjection]] and a local isomorphism: the [[Neighbourhood (graph theory)|neighbourhood]] of a ''v'' vertex in ''C'' is mapped [[bijection|bijectively]] onto the neighbourhood of ''f''(''v'') in ''G''. Note that a [[covering (graph theory)|covering]] in graph theory may also refer to an unrelated concept, a subset of vertices that touches all edges. ==Definition== Let ''G'' = (''V'', ''E'') and ''C'' = (''V''<sub>2</sub>, ''E''<sub>2</sub>) be two graphs, and let ''f'': ''V''<sub>2</sub> → ''V'' be a [[surjection]]. Then ''f'' is a ''covering map'' from ''C'' to ''G'' if for each ''v'' &isin; ''V''<sub>2</sub>, the restriction of ''f'' to the [[Neighbourhood (graph theory)|neighbourhood]] of ''v'' is a bijection onto the neighbourhood of ''f''(''v'') &isin; ''V'' in ''G''. Put otherwise, ''f'' maps edges incident to ''v'' one-to-one onto edges incident to ''f''(''v''). If there exists a covering map from ''C'' to ''G'', then ''C'' is a ''covering graph'' (or a ''lift'') of ''G''. ==Examples== In the following figure, the graph ''C'' is a covering graph of the graph ''H''. :[[File:Covering-graph-4.svg]] The covering map ''f'' from ''C'' to ''H'' is indicated with the colours. For example, both blue vertices of ''C'' are mapped to the blue vertex of ''H''. The map ''f'' is a surjection: each vertex of ''H'' has a preimage in ''C''. Furthermore, ''f'' maps bijectively each neighbourhood of a vertex ''v'' in ''C'' onto the neighbourhood of the vertex ''f''(''v'') in ''H''. For example, let ''v'' be one of the purple vertices in ''C''; it has two neighbours in ''C'', a green vertex ''u'' and a blue vertex ''t''. Similarly, let ''v''&prime; be the purple vertex in ''H''; it has two neighbours in ''H'', the green vertex ''u''&prime; and the blue vertex ''t''&prime;. The mapping ''f'' restricted to {''t'', ''u'', ''v''} is a bijection onto {''t''&prime;, ''u''&prime;, ''v''&prime;}. This is illustrated in the following figure: :[[File:Covering-graph-4-a.svg]] Similarly, we can check that the neighbourhood of a blue vertex in ''C'' is mapped one-to-one onto the neighbourhood of the blue vertex in ''H'': :[[File:Covering-graph-4-b.svg]] ==Double cover== In the above example, each vertex of ''H'' has exactly 2 preimages in ''C''. Hence ''H'' is a ''2-fold cover'' or a ''double cover'' of ''C''. For any graph ''G'', it is possible to construct the [[bipartite double cover]] of ''G'', which is a [[bipartite graph]] and a double cover of ''G''. The bipartite double cover of ''G'' is the [[tensor product of graphs]] ''G'' × ''K''<sub>2</sub>: :[[File:Covering-graph-2.svg]] If ''G'' is already bipartite, its bipartite double cover consists of two disjoint copies of ''G''. A graph may have many different double covers other than the bipartite double cover. ==Universal cover== For any connected graph ''G'', it is possible to construct its '''universal covering graph'''.<ref>Angluin 1980.</ref> This is an instance of the more general [[universal cover]] concept from topology; the 