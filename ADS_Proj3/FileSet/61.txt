the appearance of the first simple converter tools, individuals have converted images to ASCII art automatically and afterwards claimed that they generated the result themselves "by hand" via a text editor. Images that were converted to text, where no touch up work was done after the conversion, can in almost every case be identified as such, at least by an experienced text artist. The detection of converted, software-generated text art becomes much more difficult if some time was spent by the editor to touch up the details that are typical indicators of auto-generation. The inconsistencies in "shading" in just one art piece are often what gives the software-created status away. <center> {| |- || [[Image:Redwingblackbird1.jpg|200px]] || [[Image:Blide 5 nocolours.PNG|200px]] || [[Image:bird converted to ASCII characters.png|200px]] |} </center> Still images or movies can also be converted to ASCII on various Linux and UNIX computers using the [http://aa-project.sourceforge.net/aalib aalib (black and white)] or [http://sam.zoy.org/libcaca libcaca (colour)] graphics device driver, or the VLC media player; all of which render the screen using ASCII symbols instead of pixels. See also [http://oreilly.com/pub/h/4441 O'Reilly article "Watch Videos in ASCII art"]. ==Non fixed-width ASCII== Most ASCII art is created using a [[monospace font]], where all characters are identical in width ([[Courier (typeface)|Courier New]] is a popular monospace font). Early computers in use when ASCII art came into vogue had monospace fonts for screen and printer displays. Today most of the more commonly used fonts in word processors, web browsers and other programs are proportional fonts, such as [[Arial]] or [[Times New Roman]], where different widths are used for different characters. ASCII art drawn for a fixed width font will usually appear distorted, or even unrecognizable when displayed in a proportional font. Some ASCII artists have produced art for display in proportional fonts. These ASCIIs, rather than using a purely shade-based correspondence, use characters for slopes and borders and use block shading. These ASCIIs generally offer greater precision and attention to detail than fixed-width ASCIIs for a lower character count, although they are not as universally accessible since they are usually relatively font-specific. ==Animated ASCII art== Animated ASCII art started in 1970 from so-called VT100 animations produced on [[vt100]] terminals. These animations were simply text with cursor movement instructions, deleting and erasing the characters necessary to appear animated. Usually, they represented a long hand-crafted process undertaken by a single person to tell a story. Contemporary [[web browser]] revitalized animated ASCII art again. It became possible to display animated ASCII art via [[JavaScript]] or [[Java (Sun)|Java applets]]. Static ASCII art pictures are loaded and displayed one after another, creating the animation, very similar to how movie projectors unreel film reel and project the individual pictures on the big screen at movie theaters. A new term was born: ''ASCIImation'' - another name of Animated ASCII Art. A seminal work in this arena is the Star Wars ASCIImation.<ref>{{cite web |first=Simon |last=Jansen |date=April 18, 2006 |url=http://www.asciimation.co.nz/ |title=Star "ASCIImation" Wars |publisher=Asciimation.co.nz |accessdate=2008-11-18 }}</ref> More complicated routines in JavaScript generate more elaborate ASCIImations showing effects like [[Morphing]] effects, star field emulations, fading effects and calculated images, such as [[Mandelbrot set|mandelbrot fractal]] animations.<ref name="asciimation1">[http://www.roysac.com/skylined-Morph-ASCIIanimationFrame.asp ASCII Animation "Morph" by SkyLined (using JavaScript)] includes morph effects and mandelbrot fractal animation</ref><ref name="asciimation2">[http://www.roysac.com/skylined-Starfield-ASCIIanimationFrame.asp ASCII Animation Starfield by SkyLined (using JavaScript)] includes fading effect and horizontal scrolling star field emulation</ref> There are now many tools and programs that can transform raster images into text symbols; some of these tools can operate on streaming video. For example, the music video for pop singer [[Beck Hansen]]'s song "Black Tambourine"<ref name=beckbt>[http://www.youtube.com/watch?v=3ncgg4eGYO0 Black Tambourine] ASCIImation Music Video by [[Beck Hansen]] at [[YouTube.com]]</ref> is made up entirely of ASCII characters that approximate the original footage. ==Other text-based art== There are a variety of other types of art using text symbols from character sets other than ASCII and/or some form of color coding. Despite not being pure ASCII, these are still often referred to as "ASCII art". The character set portion designed specifically for drawing is known as the line drawing characters or [[pseudo-graphics]]. ===ANSI art=== {{Main|ANSI art}} The IBM PC graphics hardware in text mode uses 16 bits per character. It supports a variety of configurations, but in its default mode under DOS they are used to give 256 glyphs from one of the IBM PC code pages ([[Code page 437]] by default), 16 foreground colors, 8 background colors, and a flash option. Such art can be loaded into screen memory directly. ANSI.SYS, if loaded, also allows such art to be placed on screen by outputting escape sequences that indicate movements of the screen cursor and color/flash changes. If this method is used then the art becomes known as [[ANSI art]]. The IBM PC code pages also include characters intended for simple drawing which often made this art appear much cleaner than that made with more traditional character sets. Plain text files are also seen with these characters, though they have become far less common since Windows GUI text editors (using the [[Windows ANSI code page]]) have largely replaced DOS based ones. ===Shift_JIS=== [[File:Mona01.svg|thumb|{{nihongo|'''Monā'''|モナー|Monā}} Posted on {{nihongo|'''[[2ch]]'''|２ちゃんねる|Nichanneru}} in 2000]] {{Main|Shift_JIS art}} A large character selection and the availability of fixed-width characters allow Japanese users to use [[Shift JIS]] as a text-based art on Japanese websites. ===Unicode=== {{Main|Unicode}} [[Unicode]] would seem to offer the ultimate flexibility in producing text based art with its huge variety of characters. However, finding a suitable fixed-width font is likely to be difficult if a significant subset of Unicode is desired. (Modern UNIX-style operating systems do provide complete fixed-width Unicode fonts, e.g. for [[xterm]]. Windows has the [[Courier New]] font which includes characters like ┌╥─╨┐♥☺♫Ƹ̵̡Ӝ̵̨̄Ʒ) Also, the common practice of rendering Unicode with a mixture of variable width fonts is likely to make predictable display hard if more than a tiny subset of Unicode is used. ===Overprinting (surprint)=== In the 1970s and early 1980s it was popular to produce a kind of text art that relied on overprinting &mdash; the overall darkness of a particular character space dependent on how many 