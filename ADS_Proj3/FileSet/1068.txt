| 25 |- | Int | align="right" | 22 |- | Integer (1-byte) | align="right" | 16 |- | Integer (8-byte) | align="right" | 20 |- | Integer (small) | align="right" | 2 |- | Integer | align="right" | 3 |- | LPSTR | align="right" | 30 |- | LPWSTR | align="right" | 31 |- | Pointer | align="right" | 26 |- | Real (4-byte) | align="right" | 4 |- | Real (8-byte) | align="right" | 5 |- | String | align="right" | 8 |- | Unsigned int (1-byte) | align="right" | 17 |- | Unsigned int (2-byte) | align="right" | 18 |- | Unsigned int (4-byte) | align="right" | 19 |- | Unsigned int (1-byte) | align="right" | 21 |- | Unsigned int | align="right" | 23 |} ==See also== * [[OLAP]] * [[Data warehouse]] * [[Data mining]] * [[SQL Server Integration Services]] * [[Meta Data Services]]. ==References== * {{cite book | author=Chaffin, Mark; Knight, Brian; and Robinson, Todd | title=Professional SQL Server 2000 DTS | publisher=[[Wrox Press]] (Wiley Publishing, Inc.) | year=2003 | isbn=0-7645-4368-7}} == External links == * [http://msdn2.microsoft.com/en-us/library/aa933484(SQL.80).aspx Microsoft SQL Server: Data Transformation Services (DTS)] * [http://www.sqldts.com/ SQL DTS unique DTS information resource] * [http://support.microsoft.com/kb/238912 Understanding Microsoft Repository] * [http://www.dtspackagesearch.com SSIS-DTS Package Search, a tool to search and document DTS packages. SSIS too!] * [http://pragmaticworks.com/Resources/webinars/Default.aspx DTS Videos & Training] * [http://www.softrus.org/dts/ DTS Documenter] [[Category:Microsoft database software]] [[Category:Data management]] [[Category:ETL tools]] [[Category:Microsoft server technology]] [[de:Data Transformation Services]] [[fr:Data Transformation Services]] [[pl:Data Transformation Services]]</text> </page> <page> <id>9325</id> <title>Data Web</title> <text>{{cleanup|date=July 2009}} '''Data Web''' refers to a government open source project that was started in 1995 to develop open source framework that networks distributed statistical databases together into a seamless unified virtual data warehouse. Originally funded by the U.S. Census Bureau, with participation at various times by the Bureau of Labor Statistics, the Centers for Disease Control, Harvard University and other non-profits. The software provides an open source service oriented architecture that pulls data from different data base structures and vendors that normalizes it into a standard stream of data. The normalized stream is intelligent and supports standard transformations, has the intelligence to understand how to geographically map itself correctly using the correct vintage of political geography, understands standard code-sets so that data can be combined in statistical appropriate ways, understands how weight survey data appropriately, understands variance and other appropriate statistical behaviors. The DataWeb network handles small data sets and very large datasets; including of course the Census. It contains the Tiger GIS mapping files to support appropriate mapping of all of the human based (i.e. political jurisdictions) geography in the United States. '''Data Web''' refers to the transformation of the [[World Wide Web|Web]] from a [[Distributed computing|distributed]] [[file system]] into a [[distributed database system]].<ref>[http://novaspivack.typepad.com/nova_spivacks_weblog/2007/09/hyperdata.html The Semantic Web, Collective Intelligence and Hyperdata]</ref> Rather than [[webpages]], pieces of data ([[Resource Description Framework|RDF]] [[triples]]) and [[Storage record|records]] formed from them ([[set (computer science)|sets]], [[trees]], [[Graph (data structure)|graphs]] or [[objects]]). Some of these could even come from [[databases]]. [[Tim Berners-Lee]] has suggested that Data Web may be a more appropriate name for the [[Semantic Web]].<ref>[http://www.businessweek.com/technology/content/apr2007/tc20070409_961951.htm Q&A with Tim Berners-Lee, Special Report ]</ref> [[Tim O'Reilly]], who coined the term [[Web 2.0]] has mentioned that the long-term vision of the [[Semantic Web]] as a web of data, where sophisticated applications manipulate the data web.<ref>[http://www.guardian.co.uk/technology/2006/apr/06/guardianweeklytechnologysection.timbernerslee Spread the word, and join it up]</ref> == Related keywords == * [[Semantic Web]] * [[Hyperdata]] * [[Linked Data]] * [[Web services]] * [[Omni functional Web]] ==References== {{Reflist}} == External links== * [http://www.intelligententerprise.com/showArticle.jhtml?articleID=184429656 Breakthrough Analysis: A Data Space for Information Coexistence] {{Semantic Web}} [[ar:وب البيانات]]</text> </page> <page> <id>9328</id> <title>Data access layer</title> <text>{{Unreferenced|date=May 2008}} A '''data access layer''' (DAL) is a [[layer (object-oriented design)|layer]] of a [[computer program]] which provides simplified [[access]] to [[data]] stored in [[persistent storage]] of some kind, such as an [[entity relationship|entity-relational]] [[database]]. For example, the DAL might return a reference to an [[object (computer science)|object]] (in terms of [[object-oriented programming]]) complete with its attributes instead of a [[row]] of [[Field (computer science)|fields]] from a database [[table (database)|table]]. This allows the client (or user) modules to be created with a higher level of [[abstraction]]. This kind of model could be implemented by creating a class of data access methods that directly reference a corresponding set of database stored procedures. Another implementation could potentially retrieve or write records to or from a file system. The DAL hides this complexity of the underlying data store from the external world. For example, instead of using commands such as ''insert'', ''delete'', and ''update'' to access a specific table in a database, a class and a few stored procedures could be created in the database. The procedures would be called from a method inside the class, which would return an object containing the requested values. Or, the insert, delete and update commands could be executed within simple functions like ''registeruser'' or ''loginuser'' stored within the data access layer. Also, business logic methods from an application can be mapped to the Data Access Layer. So, for example, instead of making a query into a database to fetch all users from several tables the application can call a single method from a DAL which abstracts those database calls. Applications using a data access layer can be either database server dependent or independent. If the data access layer supports multiple database types, the application becomes able to use whatever databases the DAL can talk to. In either circumstance, having a data access layer provides a centralized location for all calls into the database, and thus makes it easier to port the application to other database systems (assuming that 100% of the database interaction is done in the DAL for a given application). [[Object-Relational Mapping]] tools provide data layers in this fashion, following the [[Active record pattern|active record]] model. The ORM/active-record model is popular with web frameworks. == See also == * [[Data Access Object]] == External Links == * [http://msdn.microsoft.com/en-us/library/ee658127.aspx Microsoft Application Architecture Guide] {{DEFAULTSORT:Object-Oriented Programming}} [[Category:Object-oriented programming|*]] [[Category:Databases]]</text> </page> <page> <id>9332</id> <title>Data analysis</title> 