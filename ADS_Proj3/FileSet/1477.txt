them. This was particularly useful when implementing a "best two out of three", a common logic circuit used in binary adders.<ref name=s/> Another possibility is to use the same core as the switching element in several different portions of the machines logic. For instance, a single core could be used as part of the system that reads instructions from memory, and then again as part of the [[Arithmetic logic unit|ALU]], as long as both functions don't operate at the same time (as they would in an [[instruction pipeline]]). Interest in magnetic amplifiers lasted only a short time through the 1950s. When they were first being studied, [[transistor]]s were expensive and unreliable devices, but the introduction of new manufacturing techniques in the late 1950s started to address both of these problems.<ref name=s/> In spite of their other advantages, magnetic amplifiers quickly disappeared as transistor based logic became increasingly common, and only a few computers based on these systems were produced.<ref>See [[UNIVAC Solid State]] for one example.</ref> ====Neuron==== One group working on the magnetic amplifier design was Gordon Scarrott's team at Ferranti R&D labs in West Gorton, Manchester.<ref name=s/> This team had a longstanding partnership with [[Manchester University]], after commercializing the [[Manchester Mark 1]] and several follow-on designs. As the prices of transistors dropped, Ken Johnson, an engineer at the lab, proposed a new type of transistor-based logic that followed the same conventions as the magnetic amplifiers, namely that binary logic was based on well known currents instead of voltages. Like the magnetic amplifiers, Johnson's "Neuron" design could be used to control several different inputs. Better yet, the system often required only one transistor per logic element, whereas conventional voltage-based logic often required two or more.<ref name=s/> Although transistors were falling in price they were still expensive, so a Neuron based machine might offer similar performance at a much lower price.<ref name=dykref>Gordon Scarrott, [http://www.cs.manchester.ac.uk/CCS/res/res12.htm#f "From Torsional Mode Delay Lines to DAP"], ''Computer Resurrection'', Number 12 (Summer 1995)</ref> Interest in Neuron was high, and the team decided to build a small machine to test it, known as "Newt", <ref name=h/> for "Neuron test". This machine was successful, and the lab was so impressed that they decided to expand the testbed into a complete computer. The result was the Sirius, which was much less expensive than similar machines using traditional transistor logic.<ref name=s/> Sirius was announced on 19 May 1959 with claims that it would be the smallest and most economically priced computer in the European market.<ref>Barbara Ainsworth, [http://www.cs.manchester.ac.uk/CCS/res/res44.htm#f "The Ferranti Sirius at Monash University"], ''Computer Resurrection'', Number 44 (Autumn 2008)</ref> The Sirius was marketed in England for ₤20,000, a deal compared to its competitors, the [[Elliott 803]] at ₤35,000 and the [[ICT 1301]] at ₤120,000 pounds.<ref>Wilson, pg. 383</ref> About 20 were produced in total.<ref>Ainsworth, pg. 3</ref> ====Orion==== Convinced that Neuron was a major advance, Ferranti R&D proposed a much larger machine based on the same logic, one that would have even greater price advantages over traditional designs. The new machine was aimed at the business market, not their traditional high-performance niche, and [[Prudential plc]] signed up as a launch customer while several other large insurance firms followed. Emerging as the [[Ferranti Orion]] in 1961,<ref>''Advantages'', pg. 4</ref> the system proved to be a disaster. As the machine was much larger than the Sirius physically, it had longer wire runs and thus required larger currents to operate the Neurons.<ref name=s/><ref name=h/> Electrical noise and settling times were major issues, and Orion was much slower than promised. Engineers at other Ferranti offices were concerned about the Neuron-based design from the start, but were never able to convince management to stop the effort.<ref name=h>Hall</ref> When Orion failed, these teams were able to convince Prudential that they could deliver a machine five times as fast at the same price point within three years. A ground-up redesign using traditional transistor logic followed and emerged in 1964 as the Orion 2.<ref>Different sources suggest the new logic was either "Griblons" developed in the U.K., or those from the "Gemini" design developed by Ferranti's Canadian subsidiary.</ref> However, the losses caused by the Orion project were too great for management's taste, and the computer divisions had already been sold off to [[International Computers and Tabulators]] in October 1963. ==Description== The Sirius was based on decimal numbers stored as 4 binary digits each,<ref name=i11>''Introduction'', pg. 11</ref> a useful design for many tasks that the Neuron circuits allowed to be implemented inexpensively. Numbers were stored as a string of ten decimal digits in one of eight [[accumulator (computing)|accumulator]]s, along with a parity bit.<ref name=i6/> The computer words could also be used to store half of a double-length number, or five characters.<ref name=i3>''Introduction'', pg. 3</ref> The accumulators were backed by what Ferranti called a "single-level store", a [[main memory]] formed out of a series of torsional [[delay line memory]] elements storing 50 words each. Machines were normally supplied with 1,000 words,<ref name=i11/> but this could be expanded through additional cabinets with 3,000 words each to a reach a total of 10,000 words.<ref name=i6>''Introduction'', pg. 6</ref> Normally the first 200 words were used to store library routines. The [[instruction set]] was a single-address format stored in single decimal digits of a word, containing a 6-digit address, a 2-digit instruction code, and 1-digit specifying the "A" and "B" accumulators. In most instructions the contents of the B register and the memory location were processed and output to A. For instance, instruction "01" added the contents of the address to B, then subtracted that result from the existing contents of A, writing the result back to A.<ref name=i11/> As the Sirius used decimals for storage, the system offered a number of instructions that quickly multiplied the input or output by 10, by shifting the numbers in the accumulators. The Sirius was also supplied with a version of [[Autocode]] adapted from the [[Ferranti Pegasus]], and Autocode programs from the Pegasus could be run on the Sirius "with very little alteration."<ref name=i4>''Introduction'', pg. 4</ref> The computer operated at 500 kHz, but 