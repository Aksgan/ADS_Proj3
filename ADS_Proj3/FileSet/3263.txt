the Eleventh International Conference on Data Engineering | pages=251–260 | year=1995 | doi=10.1109/ICDE.1995.380386}} * {{note|Goldman}} http://infolab.stanford.edu/~mchughj/oemsyntax/oemsyntax.html ==External links== *[http://infolab.stanford.edu/~mchughj/oemsyntax/oemsyntax.html A Standard Textual Interchange Format for the Object Exchange Model] {{database-software-stub}} [[Category:Database management systems]] [[de:Object Exchange Model]]</text> </page> <page> <id>27055</id> <title>Objectory</title> <text>{{Unreferenced stub|auto=yes|date=December 2009}} '''Objectory''' is an [[object-oriented]] [[methodology]] mostly created by [[Ivar Jacobson]], who is also responsible for [[object-oriented software engineering]]. [[category:Object-oriented programming]] {{Soft-eng-stub}}</text> </page> <page> <id>27059</id> <title>Oblique case</title> <text>{{Unreferenced|date=June 2009}} An '''oblique case''' ([[list of glossing abbreviations|abbreviated]] {{sc|'''obl'''}}; {{lang-la|casus generalis}}) in [[linguistics]] is a [[noun case]] of [[synthetic language]]s that is used generally when a [[noun]] is the [[object (grammar)|object]] of a [[verb]] or a [[preposition]]. An oblique case can appear in any case relationship except the [[nominative case]] of a sentence subject or the [[vocative case]] of direct address. Languages with a nominative or an oblique case system also contrast with those that have an [[absolutive case|absolutive]] or [[ergative case]] system. In [[ergative-absolutive language]]s, the absolutive case is used for a direct object (the subject will then be in the ergative case); but the absolutive case is also used for the subject of an [[intransitive verb]], where the subject is being passively described, rather than performing an action. Nevertheless, there are ergative-absolutive languages that demonstrate oblique cases; in the [[Northwest Caucasian languages]] [[Adyghe language|Adyghe]], [[Kabardian language|Kabardian]] and [[Ubykh language|Ubykh]], the oblique case marker serves to mark the ergative case, the [[dative case]], and the object of a verbal [[verb applicative|applicative]]. [[Bulgarian language|Bulgarian]], an analytic [[Slavic language]], also has an oblique case—or, rather, two of them for [[pronoun]]s: Accusative: * "Kiss me!": целувай ме! (''tseluvay me!'') * "Kiss ''me''! (not him)" целувай мен! (''tseluvay men!'') Dative: * "Give me that ball": дай ми тaзи топка (''day mi tazi topka'') * "Give that ball to ''me''" дай тaзи топка на мен (''day tazi topka na men'') There is also one for [[grammatical gender|masculine]] nouns with the [[article (grammar)|article]]: * "The wind is blowing": Вятърът вее (''vyatǎrǎt vee'') * "I despise the wind": Mразя вятъра (''mrazya vyatǎra'') In analytic [[Indo-European languages]], the oblique case is a relic of the original, more complex system of noun cases from the common [[Proto-Indo-European language]]. Oblique cases appear in the [[English language|English]] pronoun set; these pronouns are often called [[objective pronoun]]s. One can observe how the first person pronoun ''me'' serves a variety of grammatical functions: *as an [[accusative case]] for a direct object: ::''She bit me!'' *as a [[dative case]] for an indirect object: ::''Give me the rubber hose!'' *as the [[prepositional pronoun|object of a preposition]]: ::''Stop spitting on me!'' *and as a [[disjunctive pronoun|disjunctive]] topic marker: ::''Me, I like French.'' The pronoun ''me'' is not [[inflection|inflected]] differently in any of these uses; it is used for all grammatical relationships except the [[genitive case]] of possession and a non-disjunctive [[nominative case]] as the subject. ==See also== *[[Objective (grammar)]] *[[Object (grammar)]] *[[Subjective (grammar)]] *[[Quirky subject]] {{Grammatical cases}} {{DEFAULTSORT:Oblique Case}} [[Category:Grammatical cases]] [[br:Troad oblikel]] [[ca:Cas oblic]] [[cs:Objektiv (lingvistika)]] [[de:Obliquus (Kasus)]] [[es:Caso oblicuo]] [[fr:Régime (cas)]] [[is:Aukafall]] [[la:Casus obliquus]] [[ja:斜格]] [[pt:Caso oblíquo]] [[sv:Oblik (grammatik)]] [[zh:間接格]]</text> </page> <page> <id>27061</id> <title>Oblivious transfer</title> <text>In [[cryptography]], an '''oblivious transfer''' protocol (often abbreviated '''OT''') is a type of protocol in which a sender transfers one of potentially many pieces of information to a receiver, but remains oblivious as to what piece (if any) has been transferred. The first form of oblivious transfer was introduced in 1981 by [[Michael O. Rabin]]{{ref|Note1}}. In this form, the sender sends a message to the receiver with [[probability]] 1/2, while the sender remains oblivious as to whether or not the receiver received the message. Rabin's oblivious transfer scheme is based on the [[RSA]] cryptosystem. A more useful form of oblivious transfer called '''1-2 oblivious transfer''' or "1 out of 2 oblivious transfer," was developed later by [[Shimon Even]], [[Oded Goldreich]], and [[Abraham Lempel]]{{ref|Note2}}, in order to build protocols for [[secure multiparty computation]]. It is generalized to "1 out of n oblivious transfer" where the user gets exactly one database element without the server getting to know which element was queried, and without the user knowing anything about the other elements that were not retrieved. The latter notion of oblivious transfer is a strengthening of [[private information retrieval]] where one does not care about database's privacy. [[Claude Crépeau]] showed that Rabin's oblivious transfer is equivalent to 1-2 oblivious transfer.{{ref|Note3}} Further work has revealed oblivious transfer to be a fundamental and important problem in cryptography. It is considered one of the critical problems in the field, because of the importance of the applications that can be built based on it. In particular, it is a `complete' for [[secure multiparty computation]]: that is given an implementation of oblivious transfer it is possible to securely evaluate any polynomial time computable function without any additional primitive.{{ref|Note4}} ==Rabin's oblivious transfer protocol== In Rabin's oblivious transfer protocol, the sender generates an RSA public modulus ''N''=''pq'' where ''p'' and ''q'' are large [[prime number]]s, and an exponent ''e'' [[relatively prime]] to (''p''-1)(''q''-1). The sender encrypts the message ''m'' as ''m''<sup>''e''</sup> mod ''N''. # The sender sends ''N'', ''e'', and ''m''<sup>''e''</sup> mod ''N'' to the receiver. # The receiver picks a random ''x'' modulo ''N'' and sends ''x''<sup>2</sup> mod ''N'' to the sender. Note that gcd(''x,N'')=1 with overwhelming probability, which ensures that there are 4 square roots of ''x''<sup>2</sup> mod ''N''. # The sender finds a square root ''y'' of ''x''<sup>2</sup> mod ''N'' and sends ''y'' to the receiver. If the receiver finds ''y'' is neither ''x'' nor -''x'' modulo ''N'', the receiver will be able to [[integer factorization|factor]] ''N'' and therefore decrypt ''m''<sup>''e''</sup> to recover ''m'' (see [[Rabin encryption]] for more details). However, if ''y'' is ''x'' or -''x'' mod ''N'', the receiver will have no information about ''m'' beyond the encryption of it. Since every [[quadratic residue]] modulo ''N'' has four square roots, the probability that the receiver learns ''m'' is 1/2. ==1-2 oblivious transfer== In a 1-2 oblivious transfer protocol, the sender has two messages ''m''<sub>0</sub> and ''m''<sub>1</sub>, and the receiver has a bit 