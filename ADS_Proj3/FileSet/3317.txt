Glyphlet Development Kit (GDK) for SING Gaiji Architecture |publisher=Adobe.com |date= |accessdate=2009-11-11 |archiveurl = http://web.archive.org/web/20080627183635/http://www.adobe.com/devnet/opentype/gdk/topic.html |archivedate = June 27, 2008}}</ref><ref>DeLaHunt, Jim. [http://www.adobe.com/devnet/opentype/pdf/SING_Intro_IUC26.pdf "SING: Adobe's New Gaiji Architecture"]. 26th Internationalization and Unicode Conference, September 2004. Retrieved 16 July 2009.</ref> technology that made its debut with Adobe's Creative Suite 2 allows for the creation of glyphs, each packaged as a standalone font, after a fashion. Such a packaged glyph is called a ''glyphlet''. The format, which Adobe has made public, is based on OpenType. The package consists of the glyph outline in [[TrueType]] or [[CFF fonts|CFF]] (PostScript style outlines) form; standard OpenType tables declaring the glyph's metrics and behavior in composition; and metadata, extra information included for identifying the glyphlet, its ownership, and perhaps pronunciation or linguistic categorization. SING glyphlets can be created using [[Fontlab|Fontlab's]] SigMaker3 application. The SING specification states that glyphlets are to travel with the document they are used in. That way documents are portable, leaving no danger of characters in the document that cannot be displayed. Because glyphlets are essentially OpenType fonts, standard font machinery can render them. The SING specification also describes an [[XML]] format that includes all the data necessary for reconstituting the glyphlet in binary form. A typical glyphlet might require one to two kilobytes to represent. == Security issues == Critical security update for [[Windows Vista]] KB969947 resolves several security issues that "could allow remote code execution if a user viewed content rendered in a specially crafted Embedded OpenType (EOT) font". Such fonts could be embedded in Web sites, including those that host user-provided content.<ref>{{cite web|url=http://www.microsoft.com/technet/security/Bulletin/MS09-065.mspx|title=Microsoft Security Bulletin MS09-065 - Critical Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (969947)|date=2009-11-10}}</ref> ==See also== * [[Uniscribe]] (Windows multilingual text rendering engine) * [[Windows Presentation Foundation]] (The first Windows API with near complete OpenType support) * [[Apple Type Services for Unicode Imaging]] (Macintosh multilingual text rendering engine) * [[WorldScript]] (Old Macintosh multilingual text rendering engine) * [[Pango]] (Open source multilingual text rendering engine) * [[XeTeX]] A free typesetting system based on a merger of [[TeX]] with Unicode and Mac OS X font technologies. * [[International Components for Unicode]] (Open source multilingual architecture with a font layout library) * [[List of typographic features]] * [[Embedded OpenType]] * [[Typography]] * [[Panorama (Layout Engine)|Bitstream Panorama]] * [[FreeType]] * [[Web Open Font Format|WOFF (Web Open Font Format)]], a webfont format that contains an OpenType font with metadata ==References== {{Reflist|2}} ==External links== * [http://www.adobe.com/type/opentype/ Adobe - Fonts : OpenType] * [http://partners.adobe.com/public/developer/opentype/index_spec.html The OpenType Specification (Adobe)] **[http://partners.adobe.com/public/developer/opentype/index_tag.html Layout Tags] * [http://www.microsoft.com/typography/otspec/default.htm The OpenType Specification (Microsoft)] * [http://www.freedesktop.org/wiki/Software/HarfBuzz HarfBuzz - OpenType Layout engine based on FreeType] * [http://euro.typo.cz Typo.cz Information on Central European typography and fonts] * [http://diacritics.typo.cz Diacritics Project — All you need to design a font with correct accents] * [http://members.fortunecity.com/odradek5/otf-LaTeX/index.html How to install OpenType fonts with LaTeX] * [http://www.bitstream.com/font_rendering/products/panorama/index.html Bitstream Panorama: Line layout engine for worldwide text layout, multilanguage, multilingual fonts, and international complex scripts] * [http://www.d-type.com/ D-Type Font Engine and Text Layout Module — Portable software components for OpenType font rasterization and text layout] * [http://www.adobe.com/devnet/opentype/afdko/ Adobe Font Development Kit for OpenType (AFDKO)] * [http://otf.urfonts.com/ Free OpenType Fonts more than 24,000 free .otf fonts] {{Typography terms}} {{DEFAULTSORT:Opentype}} [[Category:Digital typography]] [[Category:Typesetting]] [[Category:Font formats]] [[Category:Adobe Systems]] [[Category:Microsoft Windows]] [[ar:أبن‌تيب]] [[zh-min-nan:OpenType]] [[cs:OpenType]] [[de:OpenType]] [[es:OpenType]] [[eo:OpenType]] [[fr:OpenType]] [[hi:ओपेनटाइप]] [[ko:오픈타입]] [[hr:OpenType]] [[it:OpenType]] [[he:אופן טייפ]] [[nl:OpenType]] [[ja:OpenType]] [[pl:OpenType]] [[pt:OpenType]] [[ru:OpenType]] [[sv:OpenType]] [[uk:Opentype]] [[ur:OpenType]] [[zh:OpenType]]</text> </page> <page> <id>27461</id> <title>OpenWebNet</title> <text>'''OpenWebNet''' is a [[Communications protocol|Communication Protocol]] developed by [[Bticino]] since [[2000]]. OpenWebNet Protocol allow a “high level” interaction between a remote unit and [[Bus SCS]] of MyHome [[domotic]] system. Latest protocol evolution has been improved to allow interaction with well known home automation systems like [[KNX (standard)|KNX]] and [[DMX512-A]] system, by using appropriate [[gateways]]. The ''OpenWebNet'' protocol is disclosed on MyOpen community. ==OpenWebNet Protocol== The protocol is thought to being independent from the used technology. For example it’s possible to use a supervisor software connected via [[Ethernet]], via serial [[RS-232]] or via [[USB]] to a gateway that is directly connected to a domotic system. Everyone can require protocol message extension. It's enough to propose your own [[Request for Comments|RFC]]. It will be examined and disclosed if it respects ''OpenWebNet'' syntax. ===Syntax=== An ''OpenWebNet'' message is structured with variable length fields separated by the special character '*' and closed by '##'. The characters admitted in the fields are numbers and the character “#”. The structure of a message is therefore: *field1*field2*… *fieldN## The following fields are admitted: WHO WHERE WHAT DIMENSION VALUE '''WHO''' It characterizes the domotic system function to which the OpenWebNet message is referred. For example: WHO = 1, characterizes the messages for lighting system management. '''WHERE''' It characterizes the set of objects to which the OpenWebNet message is referred. It can be a single object, a group of objects, a specific environment, the entire system, etc. For every WHO (and therefore for every function) there is a specified WHERE table. The tag WHERE can also contain optional parameters: WHERE#PAR1#PAR2… #PARn. Example of where: all the lights of group 1, sensor 2 of zone 1 of alarm system, etc. '''WHAT''' It characterizes an action to do or a status to read. For every WHO (and therefore for every function) there is a specific WHAT table. The field WHAT can also contain optional parameters: WHAT#PAR1#PAR2… #PARn. Example of actions: switch ON light, dimmer to 75%, switch DOWN shutter, radio ON, etc. Example of status: light ON, active alarm, battery unload, etc. '''DIMENSION''' Is a range of value that characterizes the dimension of the object to which the message is referred. For every WHO (and therefore for every function) there is a specific DIMENSION table. It’s possible to require/to read/to write the value of one dimension. Every dimension has a prefixed number of values, described in VALUE field. Example of dimension: sensor temperature, loudspeaker volume, firmware version of a device, etc. '''VALUE''' It characterizes the read/written value of a written/required/read dimension. ===Message=== There are 4 types of OpenWebNet Message: Command / Status Message Status Request Message Request/Read/Write Dimension 