(x :> simpler_obj)#get_x;; - : int = 10 </source> But not object <code>z</code>, because it is not a structural subtype: <source lang="ocaml"> # (z :> simpler_obj);; This expression cannot be coerced to type simpler_obj = < get_x : int >; it has type < blahblah : float; set_x : int -> unit > but is here used with type < get_x : int; .. > The first object type has no method get_x </source> This shows that compatibility for widening coercions are structural. == References == *{{Cite book|last=Pierce|first=Benjamin C.|title=[[Types and Programming Languages]]|year=2002|publisher=MIT Press|isbn=0-262-16209-1|chapter=19.3}} == External links == * [[wiki:NominativeAndStructuralTyping|NominativeAndStructuralTyping]] at [[WikiWikiWeb]] {{DEFAULTSORT:Structural Type System}} [[Category:Type theory]] [[fr:Système structural de types]]</text> </page> <page> <id>35960</id> <title>Structure-Organization-Process</title> <text>{{Orphan|date=February 2009}} {{Cleanup|date=March 2008}} In The Tree of Knowledge (1997:47), Humberto [[Maturana]] and [[Francisco Varela]] set out a way of describing the nature of living things: “…[An] organization denotes those relations that must exist among components of a system for it to be a member of a specific class. Structure denotes the components and relations that actually constitute a particular unity [or thing]…” While Maturana and Varela (1987:28) do not pursue a specific discussion about process, they set out to understand the role of cognition as “…the universal nature of doing”. Maturana and Varela are seeking to understand what they term autopoiesis, how living things self–produce. Maturana and Varela (1987:47) claim: “…by realizing what characterizes living beings in their autopoietic organization, we can unify a whole lot of empirical data about their biochemistry and cellular functioning”. In this description we find that structure refers to the component parts that comprise something and organizations refers to the way these parts are assembled (organized). In this way all real things can be described as having an organized structure. The term system can also be used for an organized structure. This idea forms the basis of Maturana and Varela’s idea of autopoiesis (self–production). In The Web of Life, [[Fritjof Capra]] (1996:156) synthesized the systems theory literature and, in particular, Maturana and Varela’s contribution, by setting out three criteria for a living system–the pattern of organization, the structure and the life process: * Pattern of organization is the configuration of relationships that determines the systems essential characteristics ([[Autopoiesis]] as defined by Maturana and Varela, 1987). * Structure is the physical embodiment of the system’s pattern of organization (Dissipative structures as defined by [[Prigogine]] and Stengers, 1987). * Life process is the activity involved in the continual embodiment of the system’s pattern of organization. (Cognition as defined by [[Gregory Bateson]], 1979). ==Structure-Organization-Process== While Capra concentrates his discussion on living things, the idea behind the concept of structure–organization–process is one in which a process [self] organizes [its own] structure (autopoieses as defined by Maturana and Varela, 1987). As we can see, the definitions for these three elements are a little confusing. This is why the idea of ''structure–organization–process'' (SOP) has been applied more generally by Linda Glassop (2007). At the level of a real thing, SOP describes: * '''Structure''' refers to the attributes distinguishing something (trait, value, shape and efficacy). * '''Organization''' refers to parts that comprise something: the properties (evident by valued traits), and their relationship (evident by their shape and efficacy). * '''Process''' refers to the constitution of parts (the bundle of related properties) that produces a whole thing. In the ontological literature, SOP describes: * '''Structure''' refers closed systems (or the attributes of the universe that are independent). * '''Organization''' refers to open systems (or the parts of the universe that depend on closed systems). * '''Process''' refers to social systems (or the wholes that are inter–dependent on closed and open systems that make up eco–systems, e.g., the universe). In the metaphysics literature, SOP describes: * '''Structure''' refers to individual things. * '''Organization''' refers to categories of things (clusters of individuals, where a part is a category). * '''Process''' refers to universal things (all things, e.g., parts as the set). The SOP model described by Glassop (2007) opens up a way of looking at anything by considering: # what the thing is composed of (the ''structures'' that distinguish it), # how the thing is composed (the ''organization'' of the parts), and # that a whole thing is an organized structure (the ''process'' of comprising the parts). What we see in this description is that real things are multi–faceted and that each level needs to be considered separate and together. Glassop has utilized this framework to provide a theoretical description for the Periodic Table of Elements and the key features of DNA. ==References== *Bateson, G. (1979) ''Mind and Nature: A necessary unity'', E.P. Dutton, New York. *Capra, F. (1996) ''The Web of Life: A new synthesis of mind and matter'', Harper Collins Publishers, New York. *Glassop, L.I. (2007) ''Rethinking Causality: pattern as the science of change'', Heidelberg Press, Melbourne. *Maturana, H.R. and Varela, F.J. (1987) ''The Tree of Knowledge: The biological roots of human understanding'', Shambala, Boston. *Prigogine, I. and Stengers, I. (1984) ''Order Out of Chaos: Man's new dialogue with nature'', Bantam Books, New York. [[Category:Systems theory]]</text> </page> <page> <id>35961</id> <title>Structure and Interpretation of Computer Programs</title> <text><!-- Commented out because image was deleted: [[Image:Structure and interpretation of computer programs.jpg|164px|thumb|right|Front cover]] --> '''''Structure and Interpretation of Computer Programs''''' ('''''SICP''''') is a textbook published in 1984<ref>[http://mitpress.mit.edu/sicp/ Official SICP site]</ref> about general [[computer programming]] concepts from [[MIT Press]] written by [[Massachusetts Institute of Technology]] professors [[Harold Abelson]] and [[Gerald Jay Sussman]], with [[Julie Sussman]]. It was used as the textbook of [[MIT]]'s old introductory programming class [http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/CourseHome/index.htm '''6.001'''] (this class has been replaced by [http://course.mit.edu/6.01 6.01], which uses [[Python (programming language)|Python]].<ref>"I talked to Professor Sussman on the phone ... He said that he'd actually been trying to have 6.001 replaced for the last ten years (and I read somewhere that Professor Abelson was behind the move too). Understanding the principles is not essential for an introduction to the subject matter anymore. He sees 6.001 as obsolete." From [http://www.mitadmissions.org/topics/learning/coursework/the_end_of_an_era_1.shtml MIT Admissions Blog, 'The End of an Era'], retrieved 2008-08-05</ref>), and at [http://www.schemers.com/schools.html other 