8, 2009</ref>. A structure chart depicts<ref name="IRT"/> * the size and complexity of the system, and * number of readily identifiable functions and modules within each function and * whether each identifiable function is a manageable entity or should be broken down into smaller components. A structure chart is also used to [[diagram]] associated elements that comprise a run stream or thread. It is often developed as a [[hierarchical diagram]], but other representations are allowable. The representation must describe the breakdown of the [[configuration system]] into [[subsystem]]s and the lowest manageable level. An accurate and complete structure chart is the key to the determination of the configuration items, and a visual representation of the configuration system and the internal interfaces among its CIs. During the configuration control process, the structure chart is used to identify CIs and their associated artifacts that a proposed change may impact.<ref name="IRT"/> == Structure chart construction == [[Image:Structure chart construction.jpg|thumb|320px|A process flow diagram describing the construction of a structure chart by a so called Subject Matter Experts (SME).<ref name="IRT"/>]] According to Wolber (2009), "a structure chart can be developed starting with the creating of a structure, which places the root of an upside-down tree which forms the structure chart. The next step is to conceptualize the main sub-tasks that must be performed by the program to solve the problem. Next, the programmer focuses on each sub-task individually, and conceptualizes how each can be broken down into even smaller tasks. Eventually, the program is broken down to a point where the leaves of the tree represent simple methods that can be coded with just a few program statements".<ref name= "Wol"/> In practice, see figure, first it is checked if a Structure Chart has been developed already. If so an expert needs to review it to ensure it represents the current structure and if not, updates the chart where needed.<ref name="IRT"/> == See also == {{Commonscat|Structure charts}} * [[Computer-aided software engineering]] * [[Context diagram]] * [[Decomposition diagram]] * [[Function model]] * [[HIPO]] * [[Structured Analysis and Design Technique]] * [[Warnier/Orr diagram]] * [[Work breakdown structure]] == References == {{reflist}} == Further reading == * Sarah Brooks (1981). "Structure Charts and Basic Programming". in: ''MATYC Journal'', v15 n2 p.107-112 Spring 1981. * [[Tom DeMarco]] (1979). ''Structured Analysis and System Specification''. Prentice Hall. * [[Edward Yourdon]] (1999). ''Modern Structured Analysis'', Yourdon Press Computing Series, 1999, == External links == * [http://www.hit.ac.il/staff/leonidM/information-systems/ch63.html Structure charts] Overview. * [http://elearning.tvm.tcs.co.in/SDO/SDO/3_2.htm Strategies for converting the DFD into Structure Chart] * [http://www.un.org/aboutun/chart_en.pdf UN structure chart], an example. * [http://www.ncsconline.org/D_Research/Ct_Struct/Index.html State Court Structure Charts], a series of examples. * [http://www.usfca.edu/~wolberd/cs112/SupplementalNotes/structureChart.doc Structure Charts] (.doc). [[Category:Charts]] [[Category:Systems analysis]]</text> </page> <page> <id>35963</id> <title>Structure from motion</title> <text>In [[computer vision]] and the study of [[visual perception]], '''structure from motion''' refers to the process of finding the three-dimensional structure of an object by analyzing local [[motion perception|motion signals]] over time. ==Obtaining 3D information from 2D images== Humans perceive a lot of information about the three-dimensional structure in their environment by moving through it. When the observer moves and the objects around him move, information is obtained from images sensed over time.<ref>{{cite book | title = Computer Vision | author = Linda G. Shapiro, George C. Stockman | publisher = Prentice Hall | year = 2001 | isbn = 0-13-030796-3 }}</ref> Finding structure from motion presents a similar problem as finding structure from [[stereo vision]]. In both instances, the correspondence between images and the reconstruction of 3D object needs to be found. To find correspondence between images, features such as corner points (edges with gradients in multiple directions) need to be tracked from one image to the next. The feature trajectories over time are then used to reconstruct their 3D positions and the cameras motion.<ref>{{Cite journal | journal = IEEE Computer Society Conference on Computer Vision and Pattern Recognition | title = Structure from Motion without Correspondence | author = F. Dellaert, S. Seitz, C. Thorpe, and S. Thrun | year = 2000 | url = http://www.ri.cmu.edu/pub_files/pub2/dellaert_frank_2000_1/dellaert_frank_2000_1.pdf }}</ref> Structure from motion is related to the [[kinetic depth effect]] in perception whereby subjects viewing the shadow cast by a wire frame or other structure in rotation, perceive the full three-dimensional structure of the object, whereas when viewing the shadow of a static object they perceive only its two-dimensional projection. ==Products and Software based on Structure from Motion== ===Commercial Companies=== #[http://www.2d3.com 2d3 - developers of automatic software solutions for the visual media industries which includes tools to extract 3D data from film and video for use in image processing and enhancement] #[http://www.vicon.com Vicon-Motion Capture Equipment Manufactures] #[http://www.yotta.tv/index.php Yotta - provides highway authorities (and others) with a complete visual record of their network, linked to a map.] ===Software Toolboxes=== #[http://www.fit3d.info FIT3D (From Images to 3D) Toolbox by Isaac Esteban] #[http://vision.ucsd.edu/~vrabaud/toolbox/doc/overview.html Structure from Motion toolbox by Vincent Rabaud] #[http://www.robots.ox.ac.uk/~vgg/hzbook/code/ Matlab Functions for Multiple View Geometry by Andrew Zissermann] #[http://cms.brookes.ac.uk/staff/PhilipTorr/Code/code_page_4.htm Structure and Motion Toolkit by Phil Torr] #[http://research.microsoft.com/~ltorre/projects/learning-nr-shape/em-sfm.zip Matlab Code for Non-Rigid Structure from Motion using Factorisation by Lorenzo Torresani Kooni] #[http://phototour.cs.washington.edu/bundler/ Bundler] - Structure from Motion for Unordered Photo Collections by Noah Snavely #[http://www.digilab.uni-hannover.de/docs/manual.html Voodoo Camera Tracker]: A tool for the integration of virtual and real scenes, by Laboratorium für Informationstechnologie, University of Hannover ==See also== * [[Match moving]] * [[Motion field]] * [[Tomasi–Kanade factorization]] == Further reading == * {{cite book | author=Richard Hartley and Andrew Zisserman | title=Multiple View Geometry in Computer Vision | publisher=Cambridge University Press| year=2003 | isbn=0-521-54051-8}} * {{cite book | author=Olivier Faugeras and Quang-Tuan Luong and Theodore Papadopoulo | title=The Geometry of Multiple Images | publisher=MIT Press| year=2001 | isbn=0-262-06220-8}} *{{cite book | title=An Invitation to 3-D Vision: From Images to Geometric Models | author=Yi Ma, S. Shankar Sastry, Jana Kosecka, Stefano Soatto, Jana Kosecka | publisher=Springer-Verlag New York, LLC | month=November| year=2003| isbn=0-387-00893-4| series=Interdisciplinary Applied Mathematics Series, #26 }} ==References== <references/> [[Category:Computer vision]] {{comp-sci-stub}}</text> </page> <page> <id>35983</id> <title>Structured program theorem</title> <text>The '''structured program theorem''' is a result in [[programming language]] theory. It states that every [[computable function]] can be implemented 