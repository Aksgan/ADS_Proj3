the [[Ruby (programming language)|Ruby programming language]] targeting [[Microsoft]] [[.NET framework]]. It is implemented on top of the [[Dynamic Language Runtime]] (DLR), a library running on top of the [[Common Language Infrastructure]] that provides dynamic typing and dynamic method dispatch, among other things, for dynamic languages.{{Citation needed|date=July 2008}}. ==History== On April 30, 2007, at [[MIX (Microsoft)|MIX]] 2007, Microsoft announced IronRuby, which uses the same name as Wilco Bauwer's IronRuby project with permission.<ref>{{cite web | url = http://www.wilcob.com/Wilco/IronRuby/microsoft_ironruby.aspx | title = Microsoft's Iron Ruby | author = Wilco Bauwer | accessdate = 2007-07-24 |archiveurl = http://web.archive.org/web/20070929025914/http://www.wilcob.com/Wilco/IronRuby/microsoft_ironruby.aspx <!-- Bot retrieved archive --> |archivedate = 2007-09-29}}</ref> It was planned to be released to the public at [[O'Reilly Open Source Convention|OSCON]] 2007.<ref>{{cite web | url = http://www.iunknown.com/2007/05/microsoft_and_i.html | title = Microsoft and IronRuby | author = John Lam | accessdate = 2007-06-18}}</ref> On July 23, 2007, as promised, John Lam and the DLR Design Team presented the pre-Alpha version of the IronRuby compiler at OSCON. He also announced a quick timeline for further integration of IronRuby into the open source community.<ref>{{cite web | url = http://www.iunknown.com/2007/07/a-first-look-at.html | title = A First Look at IronRuby | author = John Lam | accessdate = 2007-07-23}}</ref> On August 31, 2007, John Lam and the DLR Design Team released the code in its [[Development stage#Alpha|pre-alpha]] stage on RubyForge.<ref>{{cite web |url = http://www.iunknown.com/2007/08/ironruby-on-rub.html |title = IronRuby on Rubyforge! |quote = ''Today, you must check the source code out of the IronRuby Subversion repository on Rubyforge. You will need a Subversion client; we recommend TortoiseSVN. To build the sources from the command line, you must also have Ruby installed on your computer already'' | last=Lam|first=John |accessdate = 2007-08-31}}</ref> The source code has continued to be updated regularly by the core Microsoft team (but not for every [[Revision control|check-in]]). The team also does not accept community contributions for the core [[Dynamic Language Runtime]] library, at least for now.<ref>{{cite web |url = http://rubyforge.org/pipermail/ironruby-core/2008-April/001507.html |title = Regarding IronRuby... How true it sounds from this blog |quote = ''The DLR is does not accept contributions from the community (...) Today we do not push to SVN on every successful SNAP check-in'' | last=Lam|first=John |date = 2008-04-29 |accessdate = 2008-05-25}}</ref> On July 24, 2008, the IronRuby team released the first binary alpha version, in line with [[O'Reilly Open Source Convention|OSCON]] 2008.<ref>{{cite web |url = http://www.iunknown.com/2008/07/ironruby-at-oscon.html |title = IronRuby at OSCON | last=Lam|first=John |quote = ''We’re shipping our first binary release. In this package, we’re taking a “batteries included” approach and shipping the Ruby standard libraries in it'' |date=2008-07-24 |accessdate = 2008-08-04}}</ref> On November 19, 2008, they released a second Alpha version. The team actively worked to support [[Ruby on Rails|Rails]] on IronRuby.<ref>{{cite web |url = http://en.oreilly.com/rails2008/public/schedule/detail/2056 |title = IronRuby on Rails |accessdate = 2008-05-25}}</ref><ref>{{cite web |url = http://rubyforge.org/pipermail/ironruby-core/2008-May/001911.html |title = IronRuby r112 is out | last=Lam|first=John |date=2008-05-24 |accessdate = 2008-05-25}}</ref> Some Rails functional tests start to run, but a lot of work still needs to be done to be able to run Rails in a production environment.<ref>{{cite web |url = http://rubyforge.org/pipermail/ironruby-core/2008-May/001909.html |title = IronRuby / Rails Question | last=Lam|first=John |quote = ''I don't think we're near the end game yet :) We're barely able to run Rails functional tests now, and there's a lot more library work to be done before we can start thinking about deployment'' |date=2008-05-25 |accessdate = 2008-05-25}}</ref> On May 21, 2009, they released 0.5 version in conjunction with RailsConf 2009. With this version, IronRuby can now run some [[Ruby on Rails|Rails]] applications, but still not on a production environment.<ref>{{cite web |url = http://blog.jimmy.schementi.com/2009/05/ironruby-at-railsconf-2009.html |title = IronRuby at RailsConf 2009 | last=Schementi|first=Jimmy |quote = ''IronRuby running Rails is not new, but doing it well or completely – is. IronRuby can now run real Rails applications, rather than just toy-hello-world examples. This does not mean IronRuby on Rails is ready for production, but it’s a great measure of forward progress'' |date=2008-05-25 |accessdate = 2008-05-25}}</ref> Version 0.9 was announced as OSCON 2009.<ref>{{cite web |url = http://en.oreilly.com/oscon2009/public/schedule/detail/7965 |title = IronRuby 0.9 |date = 2009-07-23 |accessdate = 2009-08-03}}</ref> This version improved performance.<ref>{{cite web |url = http://antoniocangiano.com/2009/08/03/performance-of-ironruby-ruby-on-windows/ |title = Comparing the performance of IronRuby, Ruby 1.8 and Ruby 1.9 on Windows | last=Cangiano|first=Antonio |date = 2009-08-03 |accessdate = 2009-08-03}}</ref> Version 1.0 RC1 became available on 20 November 2009.<ref>{{cite web |url = http://ironruby.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=35312 |title = IronRuby 1.0RC1 |date = 2009-11-20 |accessdate = 2009-12-29}}</ref> Version 1.0 became available on 12 April 2010, in two different versions: * The preferred one, which runs on top of .NET 4.0. * A version with more limited features, which run on top of .NET 2.0. This version is the only one compatible with [[Mono (software)|Mono]]<ref>{{cite web |url = http://ironruby.codeplex.com/releases/view/25901 |title = IronRuby 1.0 release notes |date = 2010-04-12 | quote=''IronRuby now comes in two flavors - one that runs on top of .NET 4.0, and one that runs on any earlier framework starting with .NET 2.0 SP1. The .NET 4.0 flavor features faster startup time, compatibility with C#’s dynamic keyword, and access to the new features in .NET 4.0. So, the .NET 4.0 flavor is the preferred download now, as the Microsoft .NET Framework 4.0 is publicly available as of today. For Mono compatibility, use the zip file release for 2.0 SP1.'' |accessdate = 2010-04-17}}</ref> The IronRuby team plan to support Ruby 1.8.6 only for 1.0 point releases, and 1.9 version only for upcoming 1.x releases, skipping support for Ruby 1.8.7.<ref>{{cite web |url = http://rubyforge.org/pipermail/ironruby-core/2010-February/006301.html |title = MRI 1.8.7 compatibility |date = 2010-02-12 |accessdate = 2010-03-06}}</ref><ref>{{cite web |url = http://rubyforge.org/pipermail/ironruby-core/2010-February/006323.html |title = MRI 1.8.7 compatibility |date = 2010-02-14 |quote=''IronRuby 1.0.x releases: ONLY ruby-1.8.6 compatible; IronRuby 1.x releases: ONLY ruby-1.9 compatible'' |accessdate = 2010-03-06}}</ref> IronRuby is also integrating [[RubySpec]], which is a project to write a complete, executable specification for the Ruby programming language. The IronRuby GIT repo includes a copy of the RubySpec tests, including the MSpec test framework.<ref>{{cite web | url=http://github.com/ironruby/ironruby/wiki/RubySpec | title=RubySpec | quote=''The IronRuby GIT repo includes a copy of the RubySpec tests, including the MSpec test framework, under External.LCA_RESTRICTED\Languages\IronRuby\mspec. This 