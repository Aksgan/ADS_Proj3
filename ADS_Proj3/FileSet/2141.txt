the renarrative could be considered a [[realis]] mood. '''News reports''' It is interesting that news headlines (in Bulgaria, at least) are rarely presented in this mood, but rather in the ''indicative preterite'' - even though in most cases the reporters clearly did not witness the events being reported. '''<ref>Exceptions, of course, do occur when the situation requires it - for example if a predicted/probable/possible future event is being r–µferred to, eg. ''tokut '''shtyal''' da poskupne'' - "energy prices '''set to''' rise" ([http://news.netinfo.bg/index.phtml?tid=40&oid=1207806 http://www.vesti.bg]); or if an as-yet unverified report is received and immediately reported on; or if it is a somewhat unconventional or "unexpected" state of affairs, eg. ''"Stanishev '''nosel''' ochila za da izglezhda po-umen"'' - "[Prime Minister] [[Sergei Stanishev|Stanishev]] (says that) he wears glasses in order to appear cleverer", where "wears", in the admirative, highlights the unconventional reason which follows.</ref>''' The main body of the news report tends to use the renarrative correctly - but sometimes, again, it is intentionally avoided. This is especially so when sensitive or controversial subject matter is being dealt with. This is because, due to its ambiguity, the renarrative in such cases could be perceived as a passing of judgement or expression of doubt by the reporter, rather than as a simple renarration. In such cases, constructions with a directly-cited source reference such as "the minister said that + ''indicative''" are preferred. ==References== {{Reflist}} ==See also== * [[Balkan sprachbund]] [[Category:Grammatical moods]]</text> </page> <page> <id>18213</id> <title>InfiniteReality</title> <text>'''InfiniteReality''' refers to a [[3D graphics]] [[hardware architecture]] and a family of [[Video card|graphics system]]s that implemented the aforementioned hardware architecture that was developed and manufactured by [[Silicon Graphics, Inc.|Silicon Graphics]] from 1996 to 2005. The InfiniteReality was positioned as Silicon Graphics' high-end [[Visualization (computer graphics)|visualization]] hardware for their [[MIPS architecture|MIPS]]/[[IRIX]] platform and was used exclusively in their Onyx family of visualization systems, which are sometimes referred to as "graphics supercomputers" or "visualization supercomputers". The InfiniteReality was marketed to and used by large organizations such as companies and universities that are involved in [[computer simulation]], [[digital content creation]], engineering and research. == InfiniteReality == The InfiniteReality was introduced in early 1996 and was used in the Silicon Graphics [[SGI Onyx|Onyx]]. It succeeded the [[RealityEngine]], although the RealityEngine coexisted with the InfiniteReality for some time for the Onyx as an entry-level option for deskside "workstation" configurations. The InfiniteReality architecture was a third-generation design and is categorized as a sort-middle architecture. It was designed to [[Rendering (computer graphics)|render]] complex scenes in high-quality at 60 frames per second, roughly four or two times the performance of the RealityEngine it replaces. It was designed explicitly for use in conjunction with the [[OpenGL]] [[graphics library]] and implements most of the [[OpenGL pipeline]] in hardware. The implementation is partitioned into '''Geometry''' (also known as the '''Geometry Engine'''), '''Raster Memory''' (also known as the '''Raster Manager''') and '''Display Generator''' boards, with each board corresponding to each stage of the three major stages in the architecture's pipeline. The board set partitioning scheme is the same as the RealityEngine, as a result of Silicon Graphics wanting the RealityEngine to be easily upgradable to the InfiniteReality. Each pipeline consists of one Geometry Engine board, one, two or four Raster Manager boards and one Display Generator board.<ref name="Paper">John S. Montrym et al. "InfiniteReality: A Real-Time Graphics System". ACM SIGGRAPH.</ref> The implementation comprises twelve [[Application-specific integrated circuit|ASIC]] designs [[Semiconductor fabrication|fabricated]] in 0.5 and 0.35 micrometre processes with three layers of metal interconnect.<ref name="Paper"/> These ASICs require a 3.3 V power supply. An InfiniteReality pipeline in a maximal configuration contains 251 million transistors. The InfiniteReality was developed by 55 engineers.<ref name="HC"> John Montrym, Brian McClendon. "InfiniteReality Graphics - Power Through Complexity". Advanced Systems Division, Silicon Graphics, Inc.</ref> Given a system capable enough, such as certain models of the Onyx2 and Onyx 3000, up to 16 InfiniteReality pipelines can be hosted. The pipelines can be operated in three modes: multi-seat, multi-display and multi-pipe. In multi-seat mode, each pipeline can serve up to eight simultaneous users, each with their own separate displays, keyboards and mice. In multi-display mode, multiple outputs drive multiple displays, which is useful for [[virtual reality]]. The multi-pipe mode has two methods of operation. The first method requires a digital multiplexer (DPLEX) daughterboard to be installed in every pipeline, which combines the output of multiple pipelines. The second method uses '''MonsterMode''' software to distribute the data used to render a frame to multiple pipelines. To interface the pipeline to the system, a Flat Cable Interface (FCI) cable is used to connect the Host Interface Processor ASIC on the Geometry Board to the Ibus on the IO4 board, a part of the host system. === Geometry board === The Geometry board is responsible for geometry and image processing and is divided into four stages, each stage being implemented by separate device(s). The first stage is the '''Host Interface'''. Due to the InfiniteReality being designed for two very different platforms, the traditional [[shared memory]] [[Bus (computing)|bus]]-based Onyx using the POWERpath-2 bus, and the [[distributed shared memory]] network-based Onyx2 using the [[NUMAlink|NUMAlink2]] interconnect, the InfiniteReality had to have an interface that could provide similar performance on both platforms, which had a large difference in incoming bandwidth (200 MB/s versus 400 MB/s respectively).<ref name="Paper"/> To this end, a '''Host Interface Processor''', an embedded [[RISC]] core, is used to fetch display list objects using [[direct memory access]] (DMA). The Host Interface Processor is accompanied by 16 MB of [[SDRAM|synchronous dynamic random access memory]] (SDRAM), of which 15 MB is used to [[cache]] display leaf objects. The cache can deliver data to the next stage at over 300 MB/s. The next stage is the '''Geometry Distributor''', which transfers data and instructions from the Host Interface Processor to individual Geometry Engines. The next stage is performing geometry and image processing. The '''Geometry Engine''' is used for the purpose, with each Geometry board containing up to four working in a [[MIMD|multiple instruction multiple data]] (MIMD) fashion. The Geometry Engine is a semi-custom ASIC with a single instruction multiple data 