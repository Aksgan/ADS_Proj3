B., Kuipers, J. A. M., Briels, W. J. and Van Swaaij, W. P. M. (1996) Discrete particle simulation of bubble and slug formation in a two-dimensional gas-fluidised bed: a hard-sphere approach. Chem. Engng Sci. 51, 99-118.</ref>. == Notes == <references/> {{DEFAULTSORT:Cfd-Dem}} [[Category:Computational physics]]</text> </page> <page> <id>5030</id> <title>CFUnit</title> <text>'''CFUnit''' is a [[Unit Test|unit testing]] framework for [[ColdFusion]] ([[CFML]]), modelled after the popular [[JUnit]] framework. CFUnit is an [[Open-source software|Open Source]] project hosted on [[SourceForge]]. "CFUnit v0.1 Alpha" was the project’s first publicly distributed version, published in August of 2005. The latest version, v2.0 Beta 1, was released on 16 September 2006. Several articles had been written in the [http://www.houseoffusion.com/ House of Fusion], where there is also a [http://houseoffusion.com/groups/cfunit/ mailing list dedicated to CFUnit]. ==See also== [[cfcUnit]] - an alternate unit testing framework for CFML. ==External links== *[http://cfunit.sourceforge.net CFUnit home page] *[http://sourceforge.net/projects/cfunit Sourceforge site] *[http://junit.org/ JUnit home page] [[Category:Unit testing frameworks]] [[Category:CFML programming language]] {{compu-prog-stub}}</text> </page> <page> <id>5034</id> <title>CGI.pm</title> <text>{{Infobox Software | name = CGI.pm | logo = | screenshot = | caption = | author = [[Lincoln D. Stein]] | developer = | released = | latest release version = 3.49 | latest release date = 2010-02-05 | latest preview version = | latest preview date = | operating system = | platform = [[Perl]] | language = | status = | genre = [[Perl module]] for [[Common Gateway Interface|CGI]] | license = | website = http://stein.cshl.org/WWW/software/CGI/ }} '''CGI.pm''' is a large and widely used [[Perl module]] for [[Computer programming|programming]] [[Common Gateway Interface]] (CGI) [[WWW|web]] applications, providing a consistent [[Application programming interface|API]] for receiving user input and producing [[HTML]] or [[XHTML]] output. The module is written and maintained by [[Lincoln D. Stein]]. == A Sample CGI Page == Here is a simple CGI page, written in Perl using CGI.pm (in [[Object-oriented programming|object oriented]] style): <source lang="perl"> #!/usr/bin/perl -w # use strict; use warnings; use CGI; my $cgi = CGI->new(); print $cgi->header('text/html'); print $cgi->start_html('A Simple CGI Page'), $cgi->h1('A Simple CGI Page'), $cgi->start_form, 'Name: ', $cgi->textfield('name'), $cgi->br, 'Age: ', $cgi->textfield('age'), $cgi->p, $cgi->submit('Submit!'), $cgi->end_form, $cgi->p, $cgi->hr; if ( $cgi->param('name') ) { print 'Your name is ', $cgi->param('name'), $cgi->br; } if ( $cgi->param('age') ) { print 'You are ', $cgi->param('age'), ' years old.'; } print $cgi->end_html; </source> This would print a very simple webform, asking for your name and age, and after having been submitted, redisplaying the form with the name and age displayed below it. This sample makes use of CGI.pm's object-oriented abilities; it can also be done by calling functions directly, without the <tt>$cgi-></tt>. Note: in many examples $q, short for query, is used to store a CGI object. As the above example illustrates, this might be very misleading. Here is another script that produces the same output using CGI.pm's [[Procedural programming|procedural]] interface: <source lang="perl"> #!/usr/bin/perl use strict; use warnings; use CGI ':standard'; print header, start_html('A Simple CGI Page'), h1('A Simple CGI Page'), start_form, 'Name: ', textfield('name'), br, 'Age: ', textfield('age'), p, submit('Submit!'), end_form, p, hr; print 'Your name is ', param('name'), br if param 'name'; print 'You are ', param('age'), ' years old.' if param 'age'; print end_html; </source> ==See also== *[[Mod perl|mod_perl]] ==External links== *[http://stein.cshl.org/WWW/software/CGI/ Official homepage] *[http://search.cpan.org/dist/CGI.pm/ CGI.pm] &ndash; at the [[CPAN]] {{Wikibooks|Perl Programming|CGI}} {{unix-stub}} [[Category:Perl modules]]</text> </page> <page> <id>5038</id> <title>CG artwork</title> <text>{{Unreferenced|date=May 2010}} '''CG''' is a term most commonly known in the West for its use in [[Japan]]ese webpages to denote digital artwork. In traditional Japanese, it is an abbreviation of the [[Japanese language|Japanese]] [[gairaigo]] {{nihongo|'''[[computer graphics]]'''|コンピュータグラフィックス}}, used to refer to any form of digital artwork, from digitally shaded [[dōjinshi]] to legitimate [[film|cinematic]] art (like ''[[Toy Story]]''). In the West, however, the term has come to refer exclusively to 2D digital art, as the term [[computer-generated imagery]] (CGI) is used to describe art forms that CG otherwise describes. In recent years, the [[hentai]] industry has begun to incorporate this into their market schemes. ==External links== * Japanese link directories: * [http://www.evokoo.com/ Evokoo.com]: - A Bilingual (Chinese and English) CG community. * [http://www.surpara.com/ Surfer's Paradise] * [http://www.tinami.com/ Tinami] * [http://cgspice.com/index.php?option=com_picgallery&view=picgallery&Itemid=154] CG Picture Gallery * [http://cgarts.myfreeforum.org/ CG Arts] Free computer artwork at your request * [http://cg-cars.com/ CG Cars]: A website for 3D car models as well as 2D car drawings. * [http://cgtalk.com.ua/ CG talk.com.ua]: - articles and forums according computer graphics. Video clips and reels, gallery and portfolio of CG artists * [http://whichdimension.com/ WhichDimension.com]: online GFX.3D directory * [http://www.liveinternet.ru/users/1548265/post115937019/ CG artwork example painting ] [[Category:Computer art]] {{compu-graphics-stub}}</text> </page> <page> <id>5042</id> <title>CHAOS (Linux clustering)</title> <text>'''CHAOS''' (Clustered High Availability Operating System) is a Linux distribution produced within the Livermore Computing center at the [[Lawrence Livermore National Laboratory]]. It augments the standard [[Red Hat Enterprise Linux]] distribution with kernel modifications and user-space tools to support HPC ([[high-performance computing]]) [[Cluster (computing)|clustering]]. This means that it helps to bring multiple computers together to run as one; numerously increasing the power of an everyday computer. <ref>{{cite web | url=http://www.llnl.gov/linux/projects.html#chaos | title=Linux at Livermore: Projects | accessdate=2007-10-22}}</ref> It is used on Linux clusters within the Livermore Computing center. <ref>{{cite web | url=http://www.llnl.gov/linux/clusters.html | title=Linux at Livermore: Production Clusters | accessdate=2007-10-22}}</ref> == References == <references /> [[Category:Linux]] [[Category:Lawrence Livermore National Laboratory]] {{operating-system-stub}}</text> </page> <page> <id>5046</id> <title>CHESS model checker</title> <text>'''CHESS''' is a [[software]] [[model checker]] for finding errors/heisenbugs in multithreaded software by systematic exploration of thread schedules. It finds errors, such as data-races, deadlocks, livelocks, and data-corruption induced access violations, that are extremely hard to find with current testing tools. Once CHESS locates an error, it provides a fully repeatable execution of the program leading to the error, thus greatly aiding the debugging process. CHESS can be used for testing concurrent software, as an alternative to stress testing. {{Portal|Software Testing}} ==External links== * [http://research.microsoft.com/projects/CHESS/ CHESS website] * [http://msdn.microsoft.com/en-us/devlabs/cc950526.aspx CHESS Release on DevLabs] {{programming-software-stub}} [[Category:Model checkers]] [[ru:CHESS (динамический анализатор)]]</text> </page> <page> <id>5048</id> <title>CHILDES</title> <text>The '''Child Language Data Exchange System''' (CHILDES) is a [[speech corpus|corpus]] established in 1984 by [[Brian MacWhinney]] and [[Catherine E. Snow|Catherine Snow]] to serve as a central repository for first [[language acquisition]] data. Its earliest transcripts date from 