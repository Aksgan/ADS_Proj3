# Reverse the homomorphism to recover the original secret. == Example: decentralized voting protocol == [[Shamir's Secret Sharing|Shamir's secret sharing]] is a kind of homomorphic secret sharing in which a secret, represented by a number, is transformed into a polynomial. As a specific application, suppose a community is worried about corrupt authorities tampering with their votes. Instead of sending their votes to a single authority who might be corrupt, they decide to use secret sharing to distribute encrypted fragments of their votes to several authorities, hoping to decentralize the vote-counting process. In fact, Shamir's secret sharing has several advantages, which are discussed in more detail below. The protocol proceeds as follows: Suppose that we have a simple ballot where a voter can either choose to vote ''yes'' (represented by the number +1) or ''no'' (represented by the number -1), and suppose there are <math>k</math> authorities who will be receiving the parts of votes. # Each voter generates a random polynomial of degree <math>k-1</math>. <math>P(x) = a_{k-1}x^{k-1}+\ldots+a_1x^1+a_0</math>. The constant term <math>a_0</math> will equal the option they voted for, i.e. <math>a_0</math> will be either +1 or -1. # Each authority has a publicly-known ID number <math>t_k</math>. Next, the voter calculates <math>P(t_k)</math> for each of the <math>k</math> authorities. The <math>P(t_k)</math> are the pieces of the secret, which are distributed to the corresponding <math>k</math> recipients along with their voter ID. #*The secret is secure because it takes <math>k</math> points to recover a polynomial of degree <math>k-1</math>. (Two points determine a line, three points determine a parabola, and so on) #*Since it is mathematically impossible to determine the voter's choice with only one piece of the secret, the voter ID doesn't have to be confidential. #*Additionally, this system resists tampering because no authority would be able to predict how altering their piece would affect the vote. # After voting has been completed, each authority adds up the pieces he has received from all of the voters, and then sends this sum to the rest of the authorities. #* Recall that the secret has been transformed via <math> f: \text{vote} \rightarrow \text{polynomial}</math>. Because <math>f</math> was a homomorphism, adding up the polynomials precisely corresponds to adding up the votes, that is <math>f^{-1}(\text{sum of polynomials})=\text{sum of votes}</math>. # When the <math>k</math> sums from the <math>k</math> authorities are all known, the sum-polynomial <math>Q(x)=A_{k-1}x^{k-1}+A_{k-2}x^{k-2}+\ldots+A_1x^1+A_0</math> can be calculated. <math>A_0</math> will be the ''sum'' of all the votes received. (Hence if <math>A_0</math> is positive, more votes were received for ''yes'' than ''no'', and if <math>A_0</math> is negative, more votes were received for ''no'' than ''yes''.) === Features === This protocol works as long as not all of the <math>k</math> authorities are corrupt—if they were, then they could collaborate to reconstruct <math>P(x)</math> for each voter and then alter the votes. The [[Cryptographic protocol|protocol]] requires t+1 authorities to be completed, therefore in case there are N>t+1 authorities, N-t-1 authorities can be corrupted, which gives the protocol a certain degree of robustness. The protocol manages the IDs of the voters (the IDs were submitted with the ballots) and therefore can verify that only legitimate voters have voted. Under the assumptions on t: #A ballot can not be backtracked to the ID so the privacy of the voters is preserved. #A voter can not prove how he voted. #It is impossible to verify a vote. The [[Cryptographic protocol|protocol]] implicitly prevents corruption of ballots. This is because the authorities has no incentive to change the ballot since each authority has only a share of the ballot and has no knowledge how changing the ballot will affect the outcome. === Vulnerabilities === *The voter can not be certain that his vote had been recorded correctly. *The authorities can not be sure the votes were legal and equal, in example the voter can choose a value which is not a valid option ( i.e. not in {-1, 1} ) such as -20, 50 which will tilt the results in his favor. == See also == * [[End-to-end auditable voting systems]] * [[Electronic voting]] * [[Certification of voting machines]] * [[Electoral fraud#Physical tampering with voting machines|Techniques of potential election fraud through physical tampering with voting machines]] * [[Election fraud#Testing and certification of electronic voting|Preventing Election fraud: Testing and certification of electronic voting]] * [[Vote counting system]] * [[E-democracy]] * [[Secure multi-party computation]] {{DEFAULTSORT:Homomorphic Secret Sharing}} [[Category:Functions and mappings]] [[Category:Abstract algebra]] [[Category:Cryptographic protocols]]</text> </page> <page> <id>16918</id> <title>Homophone</title> <text>{{this|the term in linguistics|Homophony (disambiguation)}} [[File:Homograph homophone venn diagram.png|thumb|472px|[[Venn diagram]] showing the relationships between homophones (blue) and related linguistic concepts.]] A '''homophone''' is a word that is [[Pronunciation|pronounced]] the same as another word but differs in meaning. The words may be [[Spelling|spelled]] the same, such as [[wikt:rose#Noun|''rose'']] (flower) and [[wikt:rose#Verb|''rose'']] (past tense of "rise"), or differently, such as ''[[Carat (unit)|carat]]'', ''[[caret]]'', and ''[[carrot]]'', or ''to'', ''two'', and ''too''. Homophones that are spelled the same are also both [[homographs]] and [[homonyms]].<ref>According to the strict sense of homonyms as words with the same spelling ''and'' pronunciation; however, homonyms according to the loose sense common in nontechnical contexts are words with the same spelling ''or'' pronunciation, in which case all homophones are also homonyms. [http://dictionary.reference.com/browse/homonym?r=66 Random House Unabridged Dictionary entry for "homonym"] at Dictionary.com</ref> Homophones that are spelled differently are also called '''heterographs'''. The term "homophone" may also apply to units longer or shorter than words, such as phrases, letters or groups of letters that are pronounced the same as another phrase, letter or group of letters. The word derives from the [[Greek language|Greek]] ''homo-'' (ὁμο-), "same", and ''phōnḗ'' (φωνή), "voice, utterance". The opposite is ''heterophone''s: similar, but not phonetically identical words that have the same meaning. ==In wordplay and games== Homophones are often used to create [[pun]]s and to deceive the reader (as in [[crossword|crossword puzzles]]) or to suggest multiple meanings. The last usage is common in [[poetry]] and creative [[literature]]. An example of this is seen in [[Dylan Thomas]]'s radio play ''Under Milk Wood'': "The shops in mourning" where ''mourning'' can be heard as ''mourning'' or ''morning''. Another vivid example is [[Thomas Hood]]'s use of 