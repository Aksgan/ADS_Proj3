suffix means do not generate epilogue code (i.e. LEAVE instruction) || Use IRETD rather than IRET in 32-bit situations |- | JCXZ, JECXZ || '''J'''ump if register '''(E)CX''' is '''z'''ero || |- | LFS, LGS || Load far pointer || |- | LSS || '''L'''oad '''s'''tack '''s'''egment || |- | LODSD || '''Lo'''a'''d''' '''s'''tring || can be prefixed with REP |- | LOOPW, LOOPD || '''Loop''' || Loop; counter register is (E)CX |- | LOOPEW, LOOPED || '''Loop''' while '''e'''qual || |- | LOOPZW, LOOPZD || '''Loop''' while '''z'''ero || |- | LOOPNEW, LOOPNED || '''Loop''' while '''n'''ot '''e'''qual || |- | LOOPNZW, LOOPNZD || '''Loop''' while '''n'''ot '''z'''ero || |- | MOVSW, MOVSD || '''Mov'''e data from '''s'''tring to string || |- | MOVSX || '''Mov'''e with '''s'''ign-e'''x'''tend || |- | MOVZX || '''Mov'''e with '''z'''ero-e'''x'''tend || |- | POPAD || '''Pop''' '''a'''ll '''d'''ouble-word (32-bit) registers from stack || Does not pop register ESP off of stack |- | POPFD || '''Pop''' data into E'''F'''LAGS register || |- | PUSHAD || '''Push''' '''a'''ll '''d'''ouble-word (32-bit) registers onto stack || |- | PUSHFD || '''Push''' E'''F'''LAGS register onto stack || |- | SCASD || '''Sca'''n '''s'''tring data '''d'''ouble-word || |- | SETA, SETAE, SETB, SETBE, SETC, SETE, SETG, SETGE, SETL, SETLE, SETNA, SETNAE, SETNB, SETNBE, SETNC, SETNE, SETNG, SETNGE, SETNL, SETNLE, SETNO, SETNP, SETNS, SETNZ, SETO, SETP, SETPE, SETPO, SETS, SETZ || '''Set''' byte to one on condition || |- | SHLD || '''Sh'''ift '''l'''eft '''d'''ouble-word || |- | SHRD || '''Sh'''ift '''r'''ight '''d'''ouble-word || |- | STOSx || '''Sto'''re '''s'''tring || |} ====Added with [[80486]]==== {| class="wikitable" ! Instruction !! Meaning !! Notes |- | BSWAP || '''B'''yte '''Swap''' || Only works for 32 bit registers. |- | CMPXCHG || '''C'''o'''MP'''are and e'''XCH'''an'''G'''e || |- | INVD || '''Inv'''ali'''d'''ate Internal Caches || |- | INVLPG || Invalidate TLB Entry || |- | WBINVD || Write Back and Invalidate Cache || |- | XADD || Exchange and Add || |} ====Added with [[Intel P5|Pentium]]==== {| class="wikitable" ! Instruction !! Meaning !! Notes |- | [[CPUID]] || '''CPU''' '''ID'''entification || This was also added to later [[80486]] processors. |- |CMPXCHG8B || '''C'''o'''MP'''are and e'''XCH'''an'''G'''e '''8''' '''b'''ytes|| |- |[[RDMSR]] || '''R'''ea'''D''' from '''M'''odel-'''S'''pecific '''R'''egister|| |- |[[RDTSC]] || '''R'''ea'''D''' '''T'''ime '''S'''tamp '''C'''ounter|| |- |[[WRMSR]] || '''WR'''ite to '''M'''odel-'''S'''pecific '''R'''egister|| |- | RSM[http://www.softeng.rl.ac.uk/st/archive/SoftEng/SESP/html/SoftwareTools/vtune/users_guide/mergedProjects/analyzer_ec/mergedProjects/reference_olh/mergedProjects/instructions/instruct32_hh/vc279.htm] || '''R'''esume from '''S'''ystem '''M'''anagement Mode || This was introduced by the i[[386SL#The_i386SL_variant|386SL]] and later and is also in the i[[Intel_80486SL|486SL]] and later. Resumes from [[System Management Mode]] (SMM) |} ====Added with Pentium MMX==== {| class="wikitable" ! Instruction !! Meaning !! Notes |- | [[RDPMC]] || Read the PMC [Performance Monitoring Counter] || Specified in the ECX register into registers EDX:EAX |} Also MMX registers and MMX support instructions were added. They are usable for both integer and floating point operations, see below. ====Added with [[AMD K6-2]]==== SYSCALL, SYSRET (functionally equivalent to SYSENTER and SYSEXIT) ====Added with [[Pentium Pro]]==== Conditional MOV: CMOVA, CMOVAE, CMOVB, CMOVBE, CMOVC, CMOVE, CMOVG, CMOVGE, CMOVL, CMOVLE, CMOVNA, CMOVNAE, CMOVNB, CMOVNBE, CMOVNC, CMOVNE, CMOVNG, CMOVNGE, CMOVNL, CMOVNLE, CMOVNO, CMOVNP, CMOVNS, CMOVNZ, CMOVO, CMOVP, CMOVPE, CMOVPO, CMOVS, CMOVZ, SYSENTER (SYStem call ENTER), SYSEXIT (SYStem call EXIT), UD2 ====Added with [[Streaming SIMD Extensions|SSE]]==== MASKMOVQ, MOVNTPS, MOVNTQ, PREFETCH0, PREFETCH1, PREFETCH2, PREFETCHNTA, [[SFENCE]] (for Cacheability and [[Memory ordering|Memory Ordering]]) ====Added with [[SSE2]]==== CLFLUSH, [[LFENCE]], MASKMOVDQU, [[MFENCE]], MOVNTDQ, MOVNTI, MOVNTPD, PAUSE (for Cacheability) ====Added with [[x86-64]]==== CMPXCHG16B (CoMPare and eXCHanGe 16 Bytes), RDTSCP (ReaD Time Stamp Counter and Processor ID) ====Added with [[SSE3]]==== LDDQU (for Video Encoding) MONITOR, MWAIT (for [[thread (computer science)|thread]] synchronization; only on processors supporting [[Hyper-threading]] and some [[dual-core]] processors like [[Core 2]], [[Phenom (processor)|Phenom]] and others) ====Added with [[x86 virtualization#AMD virtualization (AMD-V)|AMD-V]]==== CLGI, SKINIT, STGI, VMLOAD, VMMCALL, VMRUN, VMSAVE (SVM instructions of AMD-V) ====Added with [[Intel VT-x]]==== VMPTRLD, VMPTRST, VMCLEAR, VMREAD, VMWRITE, VMCALL, VMLAUNCH, VMRESUME, VMXOFF, VMXON ====Added with [[SSE4a]]==== LZCNT, POPCNT (POPulation CouNT) - advanced bit manipulation ==[[x87]] floating-point instructions== ===Original [[8087]] instructions=== {| class="wikitable" ! Instruction !! Meaning !! Notes |- | F2XM1 || 2<sup>x</sup> - 1 || Can be computed faster than 2<sup>x</sup> |- | FABS || Absolute value || |- | FADD || Add || |- | FADDP || Add and pop || |- | FBLD || Load BCD || |- | FBSTP || Store BCD and pop || |- | FCHS || Change sign || |- | FCLEX || Clear exceptions || |- | FCOM || Compare || |- | FCOMP || Compare and pop || |- | FCOMPP || Compare and pop twice || |- | FDECSTP || Decrement floating point stack pointer || |- | FDISI || Disable interrupts || 8087 only, otherwise FNOP |- | FDIV || Divide || [[Pentium FDIV bug]] |- | FDIVP || Divide and pop || |- | FDIVR || Divide reversed || |- | FDIVRP || Divide reversed and pop || |- | FENI || Enable interrupts || 8087 only, otherwise FNOP |- | FFREE || Free register || |- | FIADD || Integer add || |- | FICOM || Integer compare || |- | FICOMP || Integer compare and pop || |- | FIDIV || Integer divide || |- | FIDIVR || Integer divide reversed || |- | FILD || Load integer || |- | FIMUL || Integer multiply || |- | FINCSTP || Increment floating point stack pointer || |- | FINIT || Initialize floating point processor || |- | FIST || Store integer || |- | FISTP || Store integer and pop || |- | FISUB || Integer subtract || |- | FISUBR || Integer subtract reversed || |- | FLD || Floating point load || |- | FLD1 || Load 1.0 onto stack || |- | FLDCW || Load control word || |- | FLDENV || Load environment state || |- | FLDENVW || || |- | FLDL2E || Load log<sub>2</sub>(e) onto stack || |- | FLDL2T || Load log<sub>2</sub>(10) onto stack || |- | FLDLG2 || Load log<sub>10</sub>(2) onto stack || |- | FLDLN2 || Load ln(2) onto stack || 