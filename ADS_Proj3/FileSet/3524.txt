National Playbus Association is a charity that provides support and advice to organisations wishing to operate play buses. Formed in 1969, it is now supported by various government departments.<ref>[http://www.playbus.org.uk/index.php?option=com_content&task=view&id=64&Itemid=100 National Playbus Association] History page, accessed 29 September 2008</ref> == See also == * [[Bookmobile]] * [[Biobus]] * [[Tumble bus]] == References == {{reflist}} == External links == {{Wiktionary}} * [http://www.workingonwheels.org Working on Wheels (American Bus Association) ] [[Category:Learning]] [[Category:Play]] [[Category:Types of buses]]</text> </page> <page> <id>29444</id> <title>Plugboard</title> <text>{{this|plugboards, or control panels, in unit record machines, cypher machines and early computers|plug board (disambiguation)}} A '''plugboard''', or '''control panel''' (the term used depended on the application area), is an array of [[jack (connector)|jacks]], or hubs, into which [[patch cords]] can be inserted to complete an electrical circuit. Control panels were used to direct the operation of some [[unit record equipment]]. Plugboards were used on some [[:Category:Cryptographic hardware|cipher machine]]s, and some [[History of computing hardware#Digital computation|early computers]]. ==Unit record equipment== [[Image:IBM402plugboard.Shrigley.wireside.jpg|thumb|[[IBM 402]] Accounting Machine control panel<ref>{{cite book |title = IBM Accounting Machine: 402, 403 and 419 Principles of Operation| id = 22-5654|date = 1949 }}</ref> wiring. This board was labeled "profit & loss summary."]] [[Image:Ibm407 tabulator 1961 01.redstone.jpg|thumb|An [[IBM 407]] Accounting Machine with control panel<ref>{{cite book |title = IBM Reference Manual 407 Accounting Machine |id = A24-1011|date = 1959 }}</ref> inserted, but not engaged.]] Control panels were introduced in 1906 for a [[Herman Hollerith|Hollerith]] [[Tabulating machine|tabulator]], earlier machines had been hard wired for specific applications. Removable control panels were introduced with the Hollerith (IBM) type 3-S tabulator in the 1920s. Different programs could be stored on separate plugboards, and then inserted into the tabulators as needed. IBM manuals use the word "program" only for calculators, such as the [[IBM 602]] and [[IBM 604]], that executed a sequence of operations. For all other machines, from sorters, interpreters, to the [[IBM 407]], the control panel "directed" or "automatic operation was obtained by..." An IBM control panel was roughly one to two feet (300 to 600 mm) on a side and had a rectangular array of hubs. [[Jack (connector)|Plugs]] at each end of a patch cord were inserted into hubs, making a connection between two contacts on the machine when the control panel was placed in the machine, thereby connecting an emitting hub to an accepting hub. For example, in a card duplicator application a card column reading (emitting) hub might be connected to a punch column (accepting) hub. It was a relatively simple matter to copy some fields, perhaps to different columns, and ignore other columns by suitable wiring. Tabulator control panels required dozens of patch cords for complex applications. Wiring a control panel required knowledge of the machines functions and its timing constraints. Many applications using unit record tabulators were later migrated to computers such as the [[IBM 1401]]. Two programming languages, [[FARGO (programming language)|FARGO]] and [[RPG programming language|RPG]], were created to aid this migration. Since tabulator control panels were based on the machine cycle, both FARGO and RPG emulated the notion of the machine cycle and training material showed the control panel vs. programming language coding sheet relationships. ==Cypher machines== [[Image:Enigma-plugboard.jpg|thumb|The plugboard (''steckerbrett'') on the Enigma is positioned at the front of the machine, below the keys. In the photograph, two pairs of letters are swapped (S-O and J-A). Up to 13 letters can be swapped this way.]] A plugboard was used on the famous [[Enigma machine]]; it was not removable. In this case the plugboard acted as a "fourth rotor" in the [[rotor machine]]'s workings. Plugboard wirings were part of the "day settings" that specified which rotors to insert into which slot, and which plugboard connections to make. In practice the plugboard did not improve the security of the cypher being generated, as it did not change with every keypress, unlike the rotors. ==Early computers== The first version of the [[ENIAC]] computer was programmed via cabling, switches and plugboards. ENIAC's cabling was later reconfigured to use the existing Function Tables data ROM memory as program ROM memory (the switches and plugboards continued to be used in the reconfigured ENIAC). Plugboards remained in use in specialty-purpose computers for some time, acting as a ROM but able to be manually reprogrammed in the field. One example is the [[Ferranti Argus]] computer, used on the [[Bristol Bloodhound]] missile, which feature a plugboard programmed by inserting small ferrite rods into slots, in effect creating a read-only [[core memory]] by hand. Wiring the plugboard "programmed" the system, which operated as a sort of [[read only memory]]. ==See also== *[[Enigma machine#Plugboard|Enigma machine]] ==References== <references/> *{{cite book | last = IBM | title = IBM Punched Card Data Processing Equipment: Functional Wiring Principles | date = 1956 | id = 22-6275-0 | url = http://www.bitsavers.org/pdf/ibm/cardProc/22-6275-0_ibmWiringPrinc.pdf }} ==External links== *[http://www.columbia.edu/acis/history/plugboard.html Columbia University Computing History: IBM Control Panels] *[http://www-03.ibm.com/ibm/history/witexhibit/wit_definitions.html IBM Archives: IBM 407 control panel photo]. [[Category:IBM unit record equipment]] [[Category:UNIVAC unit record equipment]] [[Category:Unit record equipment]] [[Category:Cryptographic hardware]] [[ko:플러그판]] [[ja:プラグボード]] [[it:Plugboard]]</text> </page> <page> <id>29446</id> <title>Pluggable look and feel</title> <text>'''Pluggable look and feel''' is a mechanism used in the [[Java (programming language)|Java]] [[Swing (Java)|Swing]] [[widget toolkit]] allowing to change the [[Look and feel#Look and Feel in Widget Toolkits|look and feel]] of the [[graphical user interface]] at runtime. Swing allows an application to specialize the look and feel of widgets, by modifying the default (via runtime parameters), deriving from an existing one, by creating one from scratch, or, beginning with '''J2SE 5.0''', by using the [[skinnable]] [[Synth Look and Feel|synth]] look and feel, which is configured with an [[XML]] property file. The look and feel can be changed at runtime. ==Architecture== The corresponding [[Application programming interface|API]] includes: * [[Hooking|Hooks]] in [[Swing (Java)|Swing]] [[GUI widget|widgets]] to interact with their look and feel. Each widget defined in Swing can delegate its "painting" to its associated [[Graphical user interface|user interface]] classes called ''UI delegates''. * An API to manage existing look and feel definitions. This API allow to set the look and feel or switch from look and feels at runtime. * Another API to define 