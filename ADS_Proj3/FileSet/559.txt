==External links== {{reflist|3}} [[Category:Architectural design]] [[Category:Non-profit organisations based in Hong Kong]] [[Category:International non-profit organizations]] [[Category:Computer-aided design software]] [[Category:Computer-related organizations]]</text> </page> <page> <id>4918</id> <title>CAMiLEON</title> <text>The '''CAMiLEON''' (Creative Archiving at Michigan & Leeds) project was a joint undertaking by the [[University of Michigan]] and the [[University of Leeds]] to develop and evaluate a range of technical strategies for the long term [[digital preservation| preservation of digital material]] suffering from [[digital obsolescence]]. The project was funded jointly by the UK [[Joint Information Systems Committee]] (JISC) and the US [[National Science Foundation]] over a 3-4 year period from 1 October 1999. The UK component of the project was completed on 31 December 2002, the US component finished on 30 September 2003. The project's first case study was the multimedia [[BBC Domesday Project]] created by the [[BBC]] between 1985 and 1986. The BBC published this work on Laser Discs in LVROM format, which can now be read only by a few machines, and there were fears that the data would become unreadable. The method proposed by CAMiLEON to recover the data was to [[emulator|emulate]] the obsolete hardware using modern equipment. CAMiLEON has successfully produced a system, DomesEm, that emulates the original hardware and allows the discs to be viewed. ==See also== * [[Digital Dark Age]] ==References== * [http://www2.si.umich.edu/CAMILEON/ CAMiLEON website] [[Category:Archival science]] [[Category:University of Michigan]] [[Category:University of Leeds]] [[Category:Digital library projects]] {{technology-stub}} {{library-stub}}</text> </page> <page> <id>4922</id> <title>CAN Kingdom</title> <text>'''CAN Kingdom''' is a communications protocol running on top of '''[[Controller Area Network | CAN]]'''. It is designed as a [[fieldbus]]. Unlike other CAN high level protocols, it makes no attempt to follow the [[OSI model]]. The network is mostly distributed, as the nodes may run autonomously except that a "King" or master controller is needed to configure the network. A major design philosophy behind CAN Kingdom is that the system designer is fully aware of the capabilities of the nodes. A node designer, on the other hand, needs to know nothing about the other nodes: a node merely provides services to the network, and it is up to the system designer to activate a node's services or not through runtime configuration. ==Terminology== In order to make network terminology friendly to non systems designers, CAN Kingdom uses lay-friendly names. *Page : a CAN data payload *Envelope : a CAN identifier *Letter : a CAN frame *Form : a specification for fixed format data presented in a page *Document : a set of forms or pages (depending on context) *Folder : maps a single document to a set of envelopes *City/Mayor : a node and its controller *Capital/King : the single master controlling node *City Founder : the (human) module designer *Kingdom Founder : the (human) network designer ==Capabilities== CAN Kingdom provides the following capabilities over bare CAN. * The King configures which nodes will receive and transmit which messages. * It provides an infrastructure for transmitting fixed format data that runs over a single CAN packet payload length. In CAN Kingdom parlance this is known as "document pagination". * It allows point to point transfer of data streams, through the "Block Transfer" mechanism. * It allows runtime mapping of CAN identifiers with an optional second level of indirection. The first level, from CAN identifier to "folder" must be mapped by the King. The second level, "folder" to "document", can optionally be fixed by the node designer. * It provides a mechanism for clock synchronization. * It provides a specification for packed bit fields. * It provides event driven, "daisy chain", and synchronous messaging. * It provides a mechanism to set message filters. Because messages can be remapped at runtime, a system designer can configure the system to coexist with nodes on the system which may be using a different high level protocol like [[CANopen]] or [[DeviceNet]]. ==See also== * [[Controller Area Network]] * [[CANopen]] * [[DeviceNet]] [[Category:Network protocols]] [[Category:Automation]]</text> </page> <page> <id>4935</id> <title>CAST-256</title> <text>{{Infobox block cipher | name = CAST-256 | image = | caption = | designers = [[Carlisle Adams]], [[Stafford Tavares]], [[Howard Heys]], [[Michael Wiener]] | publish date = 1998 | derived from = [[CAST-128]] | derived to = | key size = 128, 160, 192, 224, or 256 bits | block size = 128 bits | structure = generalised [[Feistel cipher|Feistel network]] | rounds = 48 | cryptanalysis = }} In [[cryptography]], '''CAST-256''' (or '''CAST6''') is a [[block cipher]] published in June [[1998]]. It was submitted as a candidate for the [[Advanced Encryption Standard]] (AES); however, it was not among the five [[AES finalists]]. It is an extension of an earlier cipher, [[CAST-128]]; both were designed according to the "CAST" design methodology invented by [[Carlisle Adams]] and [[Stafford Tavares]]. [[Howard Heys]] and [[Michael Wiener]] also contributed to the design. CAST-256 uses the same elements as CAST-128, including [[S-box]]es, but is adapted for a [[block size (cryptography)|block size]] of 128 bits &mdash; twice the size of its 64-bit predecessor. (A similar construction occurred in the evolution of [[RC5]] into [[RC6]]). Acceptable [[key size]]s are 128, 160, 192, 224 or 256 bits. CAST-256 is composed of 48 rounds, sometimes described as 12 "quad-rounds", arranged in a generalised [[Feistel network]]. In [[Request for Comments|RFC]] 2612, the authors state that, "''The CAST-256 cipher described in this document is available worldwide on a royalty-free and licence-free basis for commercial and non-commercial uses.''" ==See also== * [[AES process]] ==External links== * [http://www.quadibloc.com/crypto/co040410.htm John Savard's description of CAST-256] Archive * [http://www.users.zetnet.co.uk/hopwood/crypto/scan/cs.html#CAST-256 SCAN's entry for CAST-256] * [http://www.rfc-editor.org/rfc/rfc2612.txt RFC 2612] {{crypto-stub}} {{Crypto navbox | block}} [[Category:Block ciphers]] [[de:CAST-256]] [[es:CAST-256]] [[fr:CAST-256]] [[it:CAST-256]] [[ja:CAST-256]] [[ru:CAST-256]]</text> </page> <page> <id>4954</id> <title>CAdES (computing)</title> <text>{{Other uses|Cades (disambiguation){{!}}Cades}} '''CAdES''' (''CMS Advanced Electronic Signatures'') is a set of extensions to [[Cryptographic Message Syntax|Cryptographic Message Syntax(CMS)]] signed data making it suitable for advanced [[electronic signature]]. ==Description== While [[Cryptographic Message Syntax|CMS]] is a general framework for digitally signing documents such as E-Mail([[S/MIME]]) or [[PDF]], CAdES specifies precise profiles of [[Cryptographic Message Syntax|CMS]] signed data for use with [http://europa.eu/eur-lex/pri/en/oj/dat/2000/l_013/l_01320000119en00120020.pdf advanced electronic signature in the meaning of European Union Directive 1999/93/EC]. One important benefit 