X]] {{operating-system-stub}} {{Mac-stub}}</text> </page> <page> <id>13152</id> <title>FTP bounce attack</title> <text>'''FTP bounce attack''' is an [[exploit (computer science)|exploit]] of the [[File Transfer Protocol|FTP]] protocol whereby an attacker is able to use the <tt>PORT</tt> command to request access to [[Transmission Control Protocol|ports]] indirectly through the use of the victim machine as a middle man for the request. This technique can be used to [[port scan]] hosts discreetly, and to access specific ports that the attacker cannot access through a direct connection. [[nmap]] is a port scanner that can utilize an FTP bounce attack to scan other servers. Nearly all modern FTP server programs are configured by default to refuse <tt>PORT</tt> commands that would connect to any host but the originating host, thwarting FTP bounce attacks. ==See also== * [[Confused deputy problem]] ==External links== *[http://www.cert.org/advisories/CA-1997-27.html CERT Advisory on FTP Bounce Attack] *[http://www.cert.org/tech_tips/ftp_port_attacks.html CERT Article on FTP Bounce Attack] *[http://insecure.org/nmap/hobbit.ftpbounce.txt Original posting describing the attack] [[Category:FTP]] [[Category:Computer security exploits]] {{compu-network-stub}}</text> </page> <page> <id>13153</id> <title>FTP servlet</title> <text>{{Orphan|date=February 2009}} An '''FTP servlet''' is an intermediate application that resides between the [[FTP server]] and the [[FTP client]]. It works as a proxy interposed within client/server communications and helps to unload some of the computing power of the FTP server and distribute it to the FTP servlet. It also provides a firewall and proxy friendly file transfer environment by wrapping FTP traffic over [[HTTP]]. FTP traffic can be wrapped over [[https|HTTPs]] using a [[Secure Sockets Layer|SSL]] certificate to provide enhanced security. {{RightTOC}} ==Architecture== FTP clients can connect to the FTP servlet through the Internet. In most cases FTP is wrapped over an application layer protocol. Most commonly used are HTTP (for easy, unencrypted transfers) or HTTPs (for encrypted transfers). The use of HTTPs requires an SSL certificate to be present at the site of the FTP servlet. A number of simultaneous connections can be made to the FTP servlet. The number of connections is restricted to the computing power of the server. The number of end-users supported through the number of connections is usually more. As all connected end-users aren’t “active” until they make a request from the server. Consequently, the number of end-users simultaneously online on the FTP server can be greater than the number of active connections supported by the FTP server. ==Security== FTP servlets protect direct access to an FTP server from the outside world. The FTP servlet can be housed on the [[demilitarized zone (computing)|DMZ]]. The internal network can house the FTP server. Direct access from the outside can’t be initiated with the internal FTP server. For additional security, [[port forwarding]] can also be used to enhance security between the DMZ and internal network. ==Issues and drawbacks== FTP servlets can only work with advanced FTP clients that support the wrapping of FTP over HTTP or HTTPs. There are a number of commercially available clients/FTP servlets that work in such a way. Refer to Related links below. ==Related links== *[http://java.sun.com/developer/onlineTraining/Servlets/Fundamentals/servlets.html "Java servlet API Tutorial"] &mdash; [[Sun Microsystems]] ==See also== * [[FTP]] * [[SFTP]] * [[HTTP Wrapper]] * [[TCP Wrapper]] ===FTP-like protocols=== * [[FTPS]] (FTP/SSL), FTP run over SSL * [[Secure Copy]] (SCP), a protocol running over [[secure shell|SSH]] * [[Simple File Transfer Protocol]] (SFTP), the historic protocol RFC 913 * [[SSH file transfer protocol]] (SFTP, SH-FTP, FTP/SSH), a protocol running over [[secure shell|SSH]] * [[Trivial File Transfer Protocol]] (TFTP) * [[Filecatalyst]] accelerated file transfer [[Category:Clear text protocols]] [[Category:Network file transfer protocols]] [[Category:FTP]] [[Category:World Wide Web]] [[Category:Network-related software]] [[Category:Servers]] [[Category:Application layer protocols]]</text> </page> <page> <id>13164</id> <title>FUSE Message Broker</title> <text>{{Notability|date=June 2009}} {{ Infobox_Software | name = | logo = [[Image:Fuse-lg.jpg|150px|FUSE logo]] | screenshot = | caption = | developer = [[Progress Software]] | latest_release_version = 5.0 | latest_release_date = | latest_preview_version = | latest_preview_date = | operating_system = [[Cross-platform]] | programming_language = [[Java (programming language)|Java]] | genre = [[Java Message Service]] [[Message Oriented Middleware]] [[Enterprise Messaging System]] [[Service-oriented architecture|SOA]] | license = based on [[Apache License]] 2.0 | website = http://fusesource.com/products/enterprise-activemq/ }} '''FUSE Message Broker''' is an open source [[Java Message Service|JMS]] message broker that is based on [[Apache ActiveMQ]] for use in enterprise IT organizations. It is certified, productized and fully supported by the people who wrote the code. FUSE Message Broker is the JMS platform for scalable, high-performance SOA infrastructure to connect processes across heterogeneous systems. FUSE Message Broker delivers large amounts of data efficiently and reliably. Performance testing has shown that FUSE Message Broker exhibits the highest performance of any open source messaging platform, and has clustering and failover to ensure high availability. FUSE Message Broker is part of a family of open source SOA infrastructure tools that include [[FUSE ESB]] (enterprise release of [[Apache ServiceMix]]), [[FUSE Services Framework]] (enterprise release of [[Apache CXF]]) and [[FUSE Mediation Router]] (enterprise release of [[Apache Camel]]). ==See also== *[[Message-oriented middleware]] *[[Enterprise messaging system]] *[[Enterprise Integration Patterns]] *[[Service-oriented architecture]] *[[Event-driven SOA]] ==References== <references /> ==External links== *[http://activemq.apache.org Apache ActiveMQ web site] *[http://fusesource.com/products/enterprise-activemq/ FUSE Message Broker (Enterprise ActiveMQ) web site] *[http://fusesource.com/documentation/fuse-message-broker-documentation FUSE Message Broker (Enterprise ActiveMQ) documentation] *[http://fusesource.com/forums/index.jspa FUSE Message Broker (Enterprise ActiveMQ) forums] *[http://fusesource.com/enterprise-support FUSE Message Broker enterprise support] *[http://FUSESource.com/ FUSE community web site] [[Category:Open source software distributions]] [[Category:Message-oriented middleware]] [[Category:Service-oriented architecture related products]] [[Category:Enterprise application integration]] {{business-software-stub}}</text> </page> <page> <id>13165</id> <title>FUSE Services Framework</title> <text>{{ Infobox Software | name = | logo = [[Image:Fuse-lg.jpg|150px|FUSE logo]] | screenshot = | caption = | developer = [[Progress Software]] | latest_release_version = 2.0 | latest_release_date = | latest_preview_version = | latest_preview_date = | operating_system = [[Cross-platform]] | programming_language = [[Java (programming language)|Java]] | genre = [[Web service]]s, [[Service-oriented architecture|SOA]] | license = based on [[Apache License]] 2.0 | website = http://fusesource.com/products/enterprise-cxf/ }} FUSE Services Framework is an open source SOAP and REST web services platform based on [[Apache CXF]] for use in enterprise IT organizations. It is productized and supported by the FUSE group at [[Progress Software]]. FUSE Services Framework service-enables new and existing systems for use in enterprise SOA infrastructure. FUSE Services Framework is a pluggable, small-footprint engine that creates high performance, secure and robust services in minutes using front-end 