2.0 is in development as JSR 297. == Goals of M3G == M3G was designed to meet the specific needs of mobile devices, which are constricted in terms of memory, and processing power, and which often lack an [[Floating point unit|FPU]] and graphics hardware such as a [[Graphics processing unit|GPU]]. The API's architecture allows it to be implemented completely inside [[Computer software|software]] or to take advantage of the hardware present on the device. == M3G is not Java 3D == M3G should not be mistaken for [[Java 3D]], which extends the capabilities of the [[Java SE]]. Java 3D is designed for [[Personal computer|PCs]] that have more memory and greater processing power than mobile devices. M3G and Java 3D are two separate and incompatible APIs designed for different purposes. == Immediate and Retained Modes == M3G provides two ways for developers to draw 3D graphics: ''immediate mode'' and ''retained mode''. In immediate mode, graphics commands are issued directly into the graphics pipeline and the rendering engine executes them immediately. When using this method, the developer must write code that specifically tells the rendering engine what to draw for each [[Frame (film)|animation frame]]. A camera, and set of lights is also associated with the scene, but is not necessarily part of it. In immediate mode it is possible to display single objects, as well as entire scenes (or worlds, with a camera, lights, and background as parts of the scene). Retained mode always uses a [[scene graph]] that links all geometric objects in the 3D world in a [[tree structure]], and also specifies the camera, lights, and background. Higher-level information about each object &mdash; such as its geometric structure, position, and appearance &mdash; is retained from frame to frame. == Other Features == The M3G standard also specifies a file format for 3D model data, including animation data. This allows developers to create content on PCs that can be loaded by M3G on mobile devices. == Advantages and disadvantages of M3G == M3G is a high level 3D API that allows you to get results quickly. With only a few lines of code you can import a scene and animate it. The API is intuitive and has quite sophisticated features. The down side is that it is runs quite slow on a lot of mobile phones. This is mainly because it uses floats and most mobile phones do not have a processor with a floating point unit. Nevertheless, the performance can be acceptable if you optimise your program correctly (especially on newer phones). Alternative proprietary APIs such as [[Mascot Capsule]] run faster (because of its use of fixed point calculations), but aren't as widely supported. == Further reading == * Alessio Malizia: ''Mobile 3D Graphics'', Springer, 2006, ISBN 978-1-84628-383-3 * Kari Pulli, Tomi Aarnio, [[Ville Miettinen]], Kimmo Roimela, Jani Vaarala: ''Mobile 3D Graphics with OpenGL ES and M3G'', Morgan Kaufmann, 2007, ISBN 0-12373-727-3 * Claus HÃ¶fele: ''Mobile 3D Graphics: Learning 3D Graphics with the Java Micro Edition'', Thomson Course Technology PTR, 2007, ISBN 1-59863-292-2 * Carlos Morales, David Nelson: ''Mobile 3D Game Development: From Start to Market'', Charles River Media, 2007, ISBN 1-58450-512-5 == M3G utilities == * [http://m3x.dev.java.net M3X] - XML encoding of the .m3g file format and related open-source tools * [http://www.wizzerworks.com/index.php?option=com_content&view=category&layout=blog&id=9&Itemid=4 Wizzer Works M3G Viewer] - open source toolkit for viewing and manipulating .m3g files * [http://www.m3gexport.com M3GExport for Maya] * [http://www.mascotcapsule.com/M3G Mascot Capsule M3G Exporter] for 3ds Max, Maya, Lightwave, and Softimage|XSI * [http://www.nelson-games.de/bl2m3g Blender Exporter] - an open-source M3G exporter for Blender * [http://code.google.com/p/liquidiser/ Blender Converter] - an open-source file level converter for Blender == External links == * [http://www.jcp.org/en/jsr/detail?id=184 JSR 184] (Mobile 3D Graphics API for J2ME 1.0, 1.1) * [http://www.jcp.org/en/jsr/detail?id=297 JSR 297] (Mobile 3D Graphics API 2.0) * [http://developers.sun.com/techtopics/mobility/apis/articles/3dgraphics/ Getting Started With the Mobile 3D Graphics API for J2ME] * 3D graphics for Java mobile devices: [http://www-128.ibm.com/developerworks/wireless/library/wi-mobile1/ Part 1] and [http://www-128.ibm.com/developerworks/wireless/library/wi-mobile2/ Part 2] * [http://www.jcp.org/en/jsr/detail?id=239 JSR 239] (Java Bindings for [[OpenGL]] Embedded Subset) - related Java ME graphics specification * [http://www.jbenchmark.com/result.jsp?benchmark=3d JSR 184 compatible devices] (Performance listing of most mobile 3D devices) [[Category:Java device platform]] [[Category:Java specification requests]] [[Category:3D computer graphics]] [[Category:3D Scenegraph APIs]] [[Category:Application programming interfaces]] [[Category:Computer file formats]] [[ja:Mobile 3D Graphics API]] [[ru:Mobile 3D Graphics API]]</text> </page> <page> <id>24783</id> <title>Mobile Computing and Communications Review</title> <text>'''Mobile Computing and Communications Review''' (MC2R) is the [[peer-reviewed]] [[quarterly]] [[Association for Computing Machinery|ACM]] publication for the [[mobile computing]] and [[mobile network|networking]] community. ==Objectives== MC2R stated objectives are that it will do the following: * Place a strong emphasis on quick publication of interesting completed or work-in-progress technical work. * Publish articles that provide a healthy balance between state-of-the-art research and practice. * Provide thorough pre-publication reviews of every article by experts in the field. * Keep the [[SIGMOBILE]] community appraised of relevant happenings in this area, by providing regular features on the status of major international ([[ITU]], [[ISO]], [[IEEE]], etc.) standards in mobile computing and communications. * Provide a variety of additional services, such as bibliographies of recent publications in other journals, paper and book reviews, workshop and conference reports, calls for papers, information on research groups from throughout the world, bibliographies and locations of technical reports, and general news in the field. * Help first-time authors who have interesting research ideas get their work into print. ==Scope== The scope of the publication include the following: * Applications and computing services supporting the mobile user * [[Network architecture]]s, [[network protocols|protocols]], or service algorithms * Performance characterization of mobile/[[wireless network]]s * [[Network management]] for mobile and wireless networks * [[Data management]] and [[database]]s for mobile environments * Service integration and interworking of wired and wireless networks * Interaction between different [[network layers|layers]] of mobile or wireless systems * [[Network security|Security]], [[scalability]], and [[Reliability (statistics)|reliability]] issues * [[Nomadic computing]] * [[Wearable computing]] and networking * [[Satellite communications]] * [[Quality of service]] and [[integrated services]] in mobile or wireless networks * Mobile [[Internetworking]] * Intelligent [[network signaling]] * Mobile [[Voice over IP|VoIP]] * Mobile [[ad hoc network|ad hoc]] and [[sensor network]]s 