displaying details for the object currently selected, is turned on by default in Windows 2000. For certain file types, such as pictures and media files, the preview is also displayed in the left pane.<ref>[http://www.microsoft.com/technet/prodtechnol/windows2000serv/reskit/prork/prde_ffs_sleq.mspx?mfr=true Managing Files, Folders, and Search Methods: Microsoft TechNet]</ref> Until the dedicated interactive preview pane appeared in [[Windows Vista]], Windows 2000 had been the only Windows release to feature an interactive media player as the previewer for sound and video files. However, such a previewer can be enabled in [[Windows Me]] and [[Windows XP]] through the use of third-party shell extensions, as the updated Windows Explorer allows for custom thumbnail previewers and [[tooltip]] handlers. The default file tooltip displays file title, author, subject and comments;<ref name="ToolTipHandlers">{{Cite document|title = Windows 2000 Registry: Latest Features and APIs Provide the Power to Customize and Extend Your Apps | publisher = MSDN Magazine | date = November 2000 | url = http://msdn.microsoft.com/msdnmag/issues/1100/Registry/ | accessdate = 2007-08-26|postscript = <!--None-->}}</ref> this metadata may be read from a special [[NTFS]] stream, if the file is on an NTFS volume, or from an OLE [[structured storage]] stream, if the file is a structured storage document. All [[Microsoft Office]] documents since Office 4.0<ref name="OLEStructuredStorage">{{Cite document|first=Charlie|last=Kindel | title = OLE Property Sets Exposed | publisher = MSDN Magazine | date = 27 August 1993 | url = http://msdn.microsoft.com/archive/en-us/dnarolegen/html/msdn_propset.asp?frame=true | accessdate = 2007-08-26|format={{dead link|date=April 2009}} &ndash; <sup>[http://scholar.google.co.uk/scholar?hl=en&lr=&q=author%3AKindel+intitle%3AOLE+Property+Sets+Exposed&as_publication=&as_ylo=&as_yhi=&btnG=Search Scholar search]</sup>|postscript=<!--None-->}} {{Dead link|date=September 2010|bot=H3llBot}}</ref> make use of [[structured storage]], so their metadata is displayable in the Windows 2000 Explorer default [[tooltip]]. [[Computer shortcut|File shortcuts]] can also store comments which are displayed as a tooltip when the mouse hovers over the shortcut. The shell introduces extensibility support through metadata handlers, icon overlay handlers and column handlers in Explorer ''Details view''.<ref>[http://msdn.microsoft.com/en-us/magazine/dvdarchive/cc748674.aspx Windows 2000 UI Innovations: MSDN Magazine]</ref> [[File:Htt folder.png|thumb|300px|A HTT file as it appears in Windows 2000]] The right pane of Windows 2000 Explorer, which usually just lists files and folders, can also be customized. For example, the contents of the system folders aren't displayed by default, instead showing in the right pane a warning to the user that modifying the contents of the system folders could harm their computer. It's possible to define additional Explorer panes by using [[Div (HTML tag)|DIV]] elements in folder template files<ref name="ActiveDesktop"/> Other Explorer UI elements that can be customized include columns in "Details" view, icon overlays, and search providers: the new DHTML-based search pane is integrated into Windows 2000 Explorer, unlike the separate search dialog found in all previous Explorer versions. This degree of customizability is new to Windows 2000; neither Windows 98 nor the Desktop Update could provide it.<ref name="WindowsShellExtensions">{{Cite document|title="Figure 1 Windows Shell Extensions"|url=http://msdn.microsoft.com/msdnmag/issues/0300/w2kui/w2kuifigs.asp|publisher=MSDN Magazine|accessdate=2007-08-26|date=June 2000|postscript=<!--None-->|archiveurl = http://web.archive.org/web/20040831153932/http://msdn.microsoft.com/msdnmag/issues/0300/w2kui/w2kuifigs.asp |archivedate = August 31, 2004}}</ref> The [[Windows Indexing Service|Indexing Service]] has also been integrated into the operating system and the search pane built into Explorer allows searching files indexed by its database.<ref>[http://msdn.microsoft.com/en-us/library/ms689718.aspx What is Indexing Service?: MSDN]</ref> === NTFS 3.0 === [[Image:NT Quota Management.png|thumb|Windows 2000 supports [[disk quota]]s, which can be set via the "Quota" tab found in the hard disk properties [[dialog box]].]] {{main|NTFS}} Microsoft released the version 3.0 of NTFS<ref name="NTFS3" /> (sometimes incorrectly called NTFS 5 in relation to the kernel version number) as part of Windows 2000; this introduced [[disk quota]]s (provided by [[QuotaAdvisor]]), [[Encrypting File System|file-system-level encryption]], [[sparse file]]s and [[NTFS reparse point|reparse points]]. Sparse files allow for the efficient storage of data sets that are very large yet contain many areas that only have zeros.<ref>[http://support.microsoft.com/kb/231388 Sparse Files Use Quota Equal to Total Allocated Length]</ref> [[NTFS reparse point|Reparse points]] allow the [[Object Manager (Windows)|object manager]] to reset a file namespace lookup and let file system drivers implement changed functionality in a transparent manner.<ref name="NTFS">[http://www.microsoft.com/technet/prodtechnol/windows2000pro/evaluate/featfunc/bestperf.mspx#EME Improved NTFS File System]</ref> Reparse points are used to implement [[Volume Mount Point|volume mount points]], [[NTFS junction point|junctions]], [[Hierarchical Storage Management]], Native [[Structured storage|Structured Storage]] and [[Single Instance Storage]].<ref name="NTFS" /> Volume mount points and directory junctions allow for a file to be transparently referred from one file or directory location to another. === Encrypting File System === {{main|Encrypting File System}} The Encrypting File System (EFS) introduced strong [[file system]]-level [[encryption]] to Windows. It allows any folder or drive on an NTFS volume to be encrypted transparently by the user.<ref name="EFS" /> EFS works together with the EFS service, Microsoft's [[Cryptographic Application Programming Interface|CryptoAPI]] and the EFS File System [[Run time system|Runtime]] Library (FSRTL).<ref name="EFSWorking">[http://technet2.microsoft.com/windowsserver/en/library/997fdd99-73ec-4041-9cf4-1370739a59201033.mspx?mfr=true How Encrypting File System Works]</ref> To date, its encryption has not been compromised. EFS works by encrypting a file with a bulk [[symmetric key]] (also known as the File Encryption Key, or FEK), which is used because it takes less time to encrypt and decrypt large amounts of data than if an [[asymmetric key]] [[cipher]] were used.<ref name="EFSWorking" /> The symmetric key used to encrypt the file is then encrypted with a [[public key]] associated with the user who encrypted the file, and this encrypted data is stored in the header of the encrypted file. To decrypt the file, the file system uses the private key of the user to decrypt the symmetric key stored in the file header. It then uses the symmetric key to decrypt the file. Because this is done at the file system level, it is transparent to the user.<ref>"[http://www.microsoft.com/technet/prodtechnol/windows2000serv/reskit/distrib/dsck_efs_xhkd.mspx?mfr=true Encrypting File System]". ''Microsoft''.</ref> For a user losing access to their key, support for recovery agents that can decrypt files is built in to EFS. A Recovery Agent is a user who is authorized by a public key recovery certificate to decrypt files belonging to other users using a special ''private key''. By default, local administrators are ''recovery agents'' however they can be customized using [[Group Policy]]. === Basic and dynamic disk storage === {{main|Logical Disk Manager}} Windows 2000 introduced the [[Logical Disk Manager]] and the [[diskpart]] command line tool for [[Logical Disk Manager|dynamic storage]].<ref name="Storage" /> All versions of Windows 2000 support three types of [[Logical Disk Manager|dynamic]] disk volumes (along with basic disks) : ''simple volumes'', ''spanned volumes'' and ''striped volumes'': *'''Simple volume''', a volume 