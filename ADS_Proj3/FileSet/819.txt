US$208 | 7k bytes/s |} == References == {{Reflist|colwidth=30em}} [[Category:Computer hardware]]</text> </page> <page> <id>7210</id> <title>Comparison of open source configuration management software</title> <text>This is a comparison of [[Free software|free (libre)]] and [[Open-source software|open source]] [[configuration management]] software. == Basic properties == {| class="wikitable sortable" style="text-align: center; width: 95%" |-style="background: #ececec;" ! style="width:12em" | ! Language ! Licensed ! [[Mutual authentication|Mutual auth]] ! [[Encryption|Encrypts]] ! First release ! Latest stable release |- ! {{rh}} | [[Arusha Project]] (ARK) | [[Python (programming language)|Python]] | [[BSD licenses|BSD]] [http://ark.sourceforge.net/license.html] | {{yes}} <ref name="Key Pair">Key Pair: Uses public/private key pairs and key fingerprints for mutual authentication, like SSH.</ref> | {{yes}} <ref name="Secure Shell">Secure Shell: Uses the Secure Shell protocol for encryption.</ref> | align="left" |[http://sourceforge.net/project/showfiles.php?group_id=2057&package_id=20771 2001-07-21] | align="left" | 2005-04-19 20050419 |- ! {{rh}} | [[Bcfg2]] | [[Python (programming language)|Python]] | [[BSD licenses|BSD]] [http://trac.mcs.anl.gov/projects/bcfg2/browser/trunk/bcfg2/COPYRIGHT] | {{yes}} <ref name="Certificate and Passwords">Certificate and Passwords: Uses SSL X.509 certificate and fingerprint for clients to authenticate server, and passwords for server to authenticate clients; clients should only share the same password if they are allowed access to each other's configuration data.</ref> | {{yes}} <ref name="SSL">SSL: Uses the Secure Sockets Layer / Transport Layer Security (TLS) for encryption.</ref> | align="left" |[http://trac.mcs.anl.gov/projects/bcfg2/wiki/Download 2004-08-11] | align="left" |2010-11-15 1.1.1 [http://trac.mcs.anl.gov/projects/bcfg2/wiki/Download] |- ! {{rh}} | [[Cfengine]] | [[C (programming language)|C]] | [[GPL]] [http://www.cfengine.org/pages/faq], COSL [http://cfengine.com/pages/faq] | {{yes}} <ref name="Key Pair"/> | {{yes}} <ref name="Custom">Custom: Uses code specific to the software for this function.</ref> | align="left" | 1993 | align="left" | 2010-07-05 3.0.5p1 [http://www.cfengine.org/pages/source_code] |- ! {{rh}} | [[Chef (software)|Chef]] [http://wiki.opscode.com/display/chef/Home] | [[Ruby (programming language)|Ruby]] | [[Apache License|Apache]] | {{yes}} <ref name="RSA Shared Keys">Per request signed headers and pre-shared keys.</ref> | {{yes}} <ref name="SSL">Payload encryption via SSL if HTTPS proxy is configured.</ref> | align="left" |2009-01-15 0.5.0 | align="left" |2010-08-05 0.9.8 |- ! {{rh}} | [http://www.cs.umb.edu/~rouilj/DACS DACS] [http://www.cs.umb.edu/~rouilj/DACS/dacsmanual.html] | [[Perl]] [[Bourne Shell]] | [[GPL]] plus some others | {{yes}} <ref name="ReferenceA">DACS uses ssh as the underlying transport mechanism by default.</ref> | {{yes}} <ref name="ReferenceA"/> | align="left" |1994-11 as the Config system | align="left" |2009-01-10 2.0 [http://www.cs.umb.edu/~rouilj/DACS/] |- ! {{rh}} | [http://etch.sourceforge.net/ Etch] | [[Ruby (programming language)|Ruby]] | [[MIT License|MIT]] | {{yes}} <ref name="SSL and RSA">Uses SSL X.509 certificate for clients to authenticate server, and RSA public/private keys for server to authenticate clients.</ref> | {{yes}} <ref name="SSL"/> | align="left" | [http://sourceforge.net/projects/etch/files/etch/3.0/ 2008-11-08] | align="left" | 2010-08-12 [http://sourceforge.net/projects/etch/files/etch/3.16.0/ 3.16.0] |- ! {{rh}} | [[FusionInventory]] with [[GLPI]] | [[Perl (programming language)|Perl]], [[PHP]] | [[GPL]] | {{yes}} | {{yes}} <ref name="SSL"/> | align="left" |2010 | align="left" |2010-08 |- ! {{rh}} | [[ISconf]] | [[Python (programming language)|Python]] | [[GPL]] [http://trac.t7a.org/isconf/browser/trunk/LICENSE] | {{yes}} <ref name="HMAC">HMAC: Uses [[HMAC]] signatures on all network traffic.</ref> | {{no}} <ref>Improved security which would include an encrypted, mutually authenticated, peer-to-peer message bus is tracked [http://trac.t7a.org/isconf/ticket/39 here].</ref> | align="left" |1998 | align="left" |2006-08-13 4.2.8.233 |- ! {{rh}} | [[LCFG]] | [[Perl (programming language)|Perl]] | [[GPL]] | {{partial}} <ref>LCFG does not provide its own transport mechanism; it relies on an external program, most often Apache. Using Apache it should be possible to do mutual authentication in several ways; however the documentation at [http://www.lcfg.org/doc/guide.pdf The Complete Guide to LCFG], Section 9.4: Authorization and Security, shows access control based on IP address ranges, implying that the client does not authenticate itself to the server via an SSL certificate; it also does not mention if the LCFG client checks the validity of the server's SSL certificate (such as via a per-site fingerprint distributed with the client, or a chain of trust to an accredited CA). It mentions that there can be a per-client password in the profile, but also states that ''"The contents of the LCFG profile should be considered public"''.</ref> | {{partial}} <ref>LCFG supports encrypted communications channels (SSL via Apache); however the documentation at [http://www.lcfg.org/doc/guide.pdf The Complete Guide to LCFG], Section 9.4: Authorization and Security, states that ''"The contents of the LCFG profile should be considered public"''.</ref> | align="left" |1994 | align="left" |Weekly [http://www.lcfg.org/download/ Releases] |- ! {{rh}} | [[OCS Inventory| OCS Inventory NG]] with [[GLPI]] | [[Perl (programming language)|Perl]], [[PHP]], [[C++]] | [[GPL]] | {{no}} <ref>Server authenticates to client, but client does not authenticate to server. See [http://prdownloads.sourceforge.net/ocsinventory/OCS_Inventory_NG-Installation_and_Administration_Guide_1.9_EN.pdf.zip?download OCS Inventory NG Installation and Administration guide], page 114.</ref> | {{yes}} <ref name="SSL"/> | align="left" |2003 | align="left" |2009 |- ! {{rh}} | [http://opensymbolic.org/ OpenSymbolic] | [[Java (programming language)|Java]] | [[GPL]] | {{yes}} | {{yes}} | align="left" |[http://opensymbolic.org/ 2008-05-08] | align="left" |2009-11-16 1.5.0-1 |- ! {{rh}} | [[opsi (open pc server integration)]] | [[Python (programming language)|Python]], [[CodeGear Delphi|Delphi]] | [[GPL]] | {{no}} | {{yes}} <ref name="SSL"/> | align="left" |2004 | align="left" |2009-09-01 3.4 |- ! {{rh}} | [http://pacha.cafepais.com Pacha] | [[Python (programming language)|Python]] | [[MIT License|MIT]] | {{yes}} <ref name="SSH">SSH: Uses SSH for mutual authentication and underlying transport mechanism.</ref> | {{yes}} <ref name="SSH"/> | align="left" |[http://pacha.googlecode.com/files/pacha-0.0.1.tar.gz 2010-02-02] | align="left" |[http://pypi.python.org/pypi/pacha/0.2.3 0.2.3] |- ! {{rh}} | [[Pallet (software)|Pallet]] | [[Clojure]] | [[Eclipse Public License|EPL]] | {{yes}} <ref name="SSH Key Pair">Key Pair: Uses SSH private/public key authentication.</ref> | {{yes}} <ref name="Secure Shell">Secure Shell: Uses the Secure Shell protocol for encryption.</ref> | align="left" | 2010-06-21 | align="left" |[https://github.com/pallet/pallet/archives/pallet-0.3.0 2001-11-14] |- ! {{rh}} | [http://info.enstb.org/projets/pcfengine/en/index.html PCfengine] | [[Python (programming language)|Python]] | [[GPL]] [http://svn.enstb.org/pcfengine/trunk/COPYING] | {{no}} <ref name="PCfengine Security">It is not clear if [http://mirror.opensysadmin.com/pcfengine/svn/trunk/src/pcfengine/lib/net/ PCfengine's networking code] was ever completed. The [http://mirror.opensysadmin.com/pcfengine/svn/trunk/README README] states that [http://libdnet.sourceforge.net libdnet] is used, which doesn't look like it supports any kind of strong network security.</ref> | {{no}} <ref name="PCfengine Security"/> | | align="left" |0.0.2 |- ! {{rh}} | [[PIKT]] | [[C (programming language)|C]] | [[GPL]] [http://pikt.org/pikt/licensing.html] | {{yes}} <ref>PIKT uses shared secret keys for mutual authentication. ''"As an option, you can use secret key authentication to prove the master's identity to the slave. [...] If one managed to crack any system in the PIKT domain, one would have access to all common secrets. To solve this problem, you may use per-slave uid, gid, and private_key settings."'' - from [http://pikt.org/pikt/ref/ref.6.security_considerations.html Security Considerations].</ref> | {{yes}}<ref>''"For file installs, file fetches (to diff against the central configuration), and command executions, you can optionally encrypt all such data traffic 