\right) \left( \rho_{i+1} - \rho_{i} \right), \rho^R_{i + \frac{1}{2}} = \rho_{i+1} - 0.5 \phi \left( r_{i+1} \right) \left( \rho_{i+2} - \rho_{i+1} \right)</math>, :<math> \rho^L_{i - \frac{1}{2}} = \rho_{i-1} + 0.5 \phi \left( r_{i-1} \right) \left( \rho_{i} - \rho_{i-1} \right), \rho^R_{i - \frac{1}{2}} = \rho_{i} - 0.5 \phi \left( r_{i} \right) \left( \rho_{i+1} - \rho_{i} \right)</math>. Similarly, for momentum <math> \rho u </math>, and total energy <math> E </math>. Velocity <math> u </math>, is calculated from momentum, and pressure <math> p </math>, is calculated from the equation of state. Having obtained the limited extrapolated states, we then proceed to construct the edge fluxes using these values. With the edge fluxes known, we can now construct the semi-discrete scheme, i.e. :<math>\frac{d \mathbf{U}_i}{d t} = - \frac{1}{\Delta x_i} \left[ \mathbf{F}^*_{i + \frac{1}{2} } - \mathbf{F}^*_{i - \frac{1}{2}} \right] </math>. The solution can now proceed by integration using standard numerical techniques. The above illustrates the basic idea of the MUSCL scheme. However, for a practical solution to the Euler equations, a suitable scheme (such as the above KT scheme), also has to be chosen in order to define the function <math>\mathbf{F}^*_{i \pm \frac{1}{2} } </math>. [[Image:sodProbKTospre.png|thumb|High resolution simulation of Euler equations based on G A Sod's 'Shock Tube' problem. Shows the analytical solutions along with simulated (2nd order) solutions based upon the Kuganov and Tadmor Central Scheme with Linear Extrapolation and Ospre limiter.|200px|right|High resolution simulation of Euler equations based on G A Sod's 'Shock Tube' problem. Shows the analytical solutions along with simulated (2nd order) solutions based upon the Kuganov and Tadmor Central Scheme with Linear Extrapolation and Ospre limiter.]] The diagram opposite shows a 2nd order solution to G A Sod's [[shock tube]] problem (Sod, 1978) using the above high resolution Kurganov and Tadmor Central Scheme (KT) with Linear Extrapolation and Ospre limiter. This illustrates clearly the effectiveness of the MUSCL approach to solving the Euler equations. The simulation was carried out on a mesh of 200 cells using Matlab code (Wesseling, 2001), adapted to use the KT algorithm and [[flux limiter|Ospre limiter]]. Time integration was performed by a 4th order SHK (equivalent performance to RK-4) integrator. The following initial conditions ([[SI]] units) were used: *pressure left = 100000 [Pa]; *pressure right= 10000 [Pa]; *density left = 1.0 [kg/m3]; *density right = 0.125 [kg/m3]; *length = 20 [m]; *velocity left = 0 [m/s]; *velocity right = 0 [m/s]; *duration =0.01 [s]; *lambda = 0.001069 (Δt/Δx). [[Image:SodProbParabolicKTalbada.png|thumb|High resolution simulation of Euler equations based on G A Sod's 'Shock Tube' problem - SI units. Shows the analytical solutions along with simulated (3rd order) solutions based upon the Kuganov and Tadmor Central Scheme with parabolic reconstruction and van Albada lmiter. |200px|right|High resolution simulation of Euler equations based on G A Sod's 'Shock Tube' problem - SI units. Shows the analytical solutions along with simulated (3rd order) solutions based upon the Kuganov and Tadmor Central Scheme with parabolic reconstruction and van Albada lmiter.]] The diagram opposite shows a 3rd order solution to G A Sod's [[shock tube]] problem (Sod, 1978) using the above high resolution Kurganov and Tadmor Central Scheme (KT) but with parabolic reconstruction and van Albada limiter. This again illustrates the effectiveness of the MUSCL approach to solving the Euler equations. The simulation was carried out on a mesh of 200 cells using Matlab code (Wesseling, 2001), adapted to use the KT algorithm with Parabolic Extrapolation and [[flux limiter|van Albada limiter]]. The alternative form of van Albada limiter, <math> \phi_{va} (r) = \frac{2 r}{1 + r^2 } \ </math>, was used to avoid spurious oscillations. Time integration was performed by a 4th order SHK integrator. The same initial conditions were used. Various other high resolution schemes have been developed that solve the Euler equations with good accuracy. Examples of such schemes are, *the '''Osher scheme''', and *the '''Liou-Steffen''' [[AUSM]] (advection upstream splitting method) scheme. More information on these and other methods can be found in the references below. ==See also== *[[Finite volume method]] *[[Flux limiter]] *[[Godunov's theorem]] *[[High resolution scheme]] *[[Method of lines]] *[[Sergei K. Godunov]] *[[Total variation diminishing]] ==References== *Kermani, M. J., Gerber, A. G., and Stockie, J. M. (2003), Thermodynamically Based Moisture Prediction Using Roe’s Scheme, ''The 4th Conference of Iranian AeroSpace Society'', Amir Kabir University of Technology, Tehran, Iran, January 27–29. [http://me.aut.ac.ir/mkermani/PDF-files/Conferences/Amir_Kabir.pdf] *Kurganov, Alexander and Eitan Tadmor (2000), New High-Resolution Central Schemes for Nonlinear Conservation Laws and Convection-Diffusion Equations, ''J. Comp. Phys.'', ''160'', 214–282. [http://www.cscamm.umd.edu/centpack/publications/files/KT_semi-discrete.JCP00-centpack.pdf] *Kurganov, Alexander and Doron Levy (2000), A Third-Order Semidiscrete Central Scheme for Conservation Laws and Convection-Diffusion Equations, ''SIAM J. Sci. Comput.'', ''22'', 1461–1488. [http://www.cscamm.umd.edu/centpack/publications/files/Kur-Lev_3rd_semi_discrete.SINUM00-centpack.pdf] *Lax, P. D. (1954). Weak Solutions of Non-linear Hyperbolic Equations and Their Numerical Computation, ''[[Communications on Pure and Applied Mathematics|Comm. Pure Appl. Math.]]'', VII, pp159–193. *Leveque, R. J. (2002). ''Finite Volume Methods for Hyperbolic Problems'', Cambridge University Press. *van Leer, B. (1979), Towards the Ultimate Conservative Difference Scheme, V. A Second Order Sequel to Godunov's Method, ''J. Com. Phys.''., ''32'', 101–136. *Nessyahu, H. and E. Tadmor (1990), Non-oscillatory central differencing for hyperbolic conservation laws, ''J. Comp. Phys.'', ''87'', 408–463. [http://www.cscamm.umd.edu/centpack/publications/files/NT2.JCP90-centpack.pdf]. *Rusanov, V. V. (1961). Calculation of Intersection of Non-Steady Shock Waves with Obstacles, ''J. Comput. Math. Phys. USSR'', '''1''', pp267–279. *Sod, G. A. (1978), A Numerical Study of a Converging Cylindrical Shock. ''J. Fluid Mechanics'', ''83'', 785–794. *Toro, E. F. (1999), ''Riemann Solvers and Numerical Methods for Fluid Dynamics'', Springer-Verlag. *Wesseling, Pieter (2001), ''Principles of Computational Fluid Dynamics'', Springer-Verlag. ==Further reading== *Hirsch, C. (1990), ''Numerical Computation of Internal and External Flows'', vol 2, Wiley. *Laney, Culbert B. (1998), ''Computational Gas Dynamics'', Cambridge University Press. *Tannehill, John C., et al. (1997), ''Computational Fluid mechanics and Heat Transfer'', 2nd Ed., Taylor and Francis. {{Numerical PDE}} [[Category:Fluid dynamics]] [[Category:Numerical differential equations]] [[Category:Computational fluid dynamics]]</text> </page> <page> <id>23104</id> <title>MVEL</title> <text>{{Infobox software | name = MVEL | logo = [[Image:Mvel logo.png]] | screenshot = | caption = | developer = Mike Brock and Various Contributors | latest_release_version = 2.0.18 | latest_release_date = {{release_date|2010|09|17}} | operating_system = [[Cross-platform]] | programming_language = [[Java (programming language)|Java]] | genre = [[Expression Language|Expression 