to many permission to role assignment relation. * <math>SA \subseteq S \times R</math> and is a many to many subject to role assignment relation. * <math>RH \subseteq R \times R</math> A subject may have ''multiple'' simultaneous sessions with different permissions. [[Image:RBAC.jpg]] ==Relation to Other Models== RBAC is a policy neutral and flexible access control technology sufficiently powerful to simulate DAC<ref>{{cite conference | author = Ravi Sandhu, Qamar Munawer | title = How to do discretionary access control using roles | booktitle=3rd ACM Workshop on Role-Based Access Control | year = 1998 | month = October | pages=47–54 }}</ref> and MAC.<ref>{{cite conference | author = Sylvia Osborn, Ravi Sandhu, and Qamar Munawer | title = Configuring role-based access control to enforce mandatory and discretionary access control policies | booktitle=ACM Transactions on Information and System Security (TISSEC) | year = 2000 | pages=85–106 }}</ref> Conversely, MAC can simulate RBAC if the role graph is restricted to a tree rather than a [[partially ordered set]].<ref>{{cite conference | author = D.R. Kuhn | title = Role Based Access Control on MLS Systems Without Kernel Changes | booktitle=Third ACM Workshop on Role Based Access Control | year = 1998 | pages=25–32 | url = http://csrc.nist.gov/groups/SNS/rbac/documents/design_implementation/kuhn-98.pdf | format = [[PDF]] }}</ref> Prior to the development of RBAC, MAC and DAC were considered to be the only known models for access control: if a model was not MAC, it was considered to be a DAC model, and vice versa. Research in the late 1990s demonstrated that RBAC falls in neither category.<ref>See [http://csrc.nist.gov/rbac/rbac-faq.html National Institute of Standards and Technology FAQ on RBAC models and standards], and the research of [http://csrc.nist.gov/groups/SNS/rbac/documents/ferraiolo-kuhn-92.pdf David Ferraiolo and Richard Kuhn]</ref> Unlike [[context-based access control]] (CBAC), RBAC does not look at the message context (such as a connection's source). RBAC differs from [[access control lists]] (ACLs) used in traditional discretionary access control systems in that it assigns permissions to specific operations with meaning in the organization, rather than to low level data objects. For example, an access control list could be used to grant or deny write access to a particular system file, but it would not dictate how that file could be changed. In an RBAC-based system, an operation might be to create a 'credit account' transaction in a financial application or to populate a 'blood sugar level test' record in a medical application. The assignment of permission to perform a particular operation is meaningful, because the operations are granular with meaning within the application. RBAC has been shown to be particularly well suited to [[separation of duties]] (SoD) requirements, which ensure that two or more people must be involved in authorizing critical operations. Necessary and sufficient conditions for safety of SoD in RBAC have been analyzed. An underlying principle of SoD is that no individual should be able to effect a breach of security through dual privilege. By extension, no person may hold a role that exercises audit, control or review authority over another, concurrently held role.<ref>{{cite conference | author = D.R. Kuhn | title = Mutual Exclusion of Roles as a Means of Implementing Separation of Duty in Role-Based Access Control Systems | booktitle=2nd ACM Workshop Role-Based Access Control | year = 1997 | pages=23–30 | url = http://csrc.nist.gov/groups/SNS/rbac/documents/design_implementation/kuhn-97.pdf | format = [[PDF]] }}</ref><ref>{{cite conference | author = Ninghui Li, Ziad Bizri, and Mahesh V. Tripunitara . Tripunitara | title = On mutually exclusive roles and separation-of-duty, | booktitle=11th ACM conference on Computer and Communications Security | year = 2004 | pages=42–51 | url = http://portal.acm.org/citation.cfm?id=1030091 | format = [[PDF]] }}</ref> ==Use and Availability== The use of RBAC to manage user privileges within a single system or application is widely accepted as a best practice. Systems including [[Microsoft]] [[Active Directory]], [[Microsoft SQL Server]], [[SELinux]], [[grsecurity]], [[FreeBSD]], [[Solaris Operating System|Solaris]], [[Oracle database|Oracle DBMS]], [[PostgreSQL|PostgreSQL 8.1]], [[SAP R/3]], [[ISIS Papyrus]], [[FusionForge]] and many others effectively implement some form of RBAC. In an organization with a heterogeneous IT infrastructure and requirements that span dozens or hundreds of systems and applications, using RBAC to manage sufficient roles and assign adequate role memberships becomes extremely complex without hierarchical creation of roles and privilege assignments. Alternate strategies for large scale assignment of privileges to users are discussed in this white paper: [http://www.idsynch.com/docs/beyond-roles.html Beyond Roles: A Practical Approach to Enterprise User Provisioning]. Newer systems extend the older [[NIST RBAC model]]<ref>{{cite conference | author = Sandhu, R., Ferraiolo, D.F. and Kuhn, D.R. | title = The NIST Model for Role-Based Access Control: Toward a Unified Standard | booktitle=5th ACM Workshop Role-Based Access Control | year = 2000 | month = July | pages=47–63 | url = http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf | format = [[PDF]] }}</ref> to address the limitations of RBAC for enterprise-wide deployments. Several academic papers exist. The NIST model was adopted as a standard by [[INCITS]] as ANSI/INCITS 359-2004. A discussion of some of the design choices for the NIST model has also been published.<ref>{{cite journal | author = Ferraiolo, D.F., Kuhn, D.R., and Sandhu, R. | title = RBAC Standard Rationale: comments on a Critique of the ANSI Standard on Role-Based Access Control | journal = IEEE Security & Privacy | volume = 5 | issue = 6 | year = 2007 | month = Nov/Dec | pages = 51–53 | publisher = IEEE Press | url = http://csrc.nist.gov/groups/SNS/rbac/documents/ferraiolo-kuhn-sandhu-07.pdf | format = [[PDF]] | doi = 10.1109/MSP.2007.173 }}</ref> ==See also== * [[NIST RBAC model]] * [[Lattice-based access control]] (LBAC), equivalent to [[mandatory access control]] (MAC). * [[Discretionary access control]] * [[Security label]] * [[Security classification]] * [[Covert channel]] * [[Chinese wall]] * [[Authentication]] * [[Blind credential]] * [[Sudo]] ('''s'''uper '''u'''ser '''do''') Unix program * [[Identity Driven Networking]] * [[XACML]] An Attribute Based Access Control (ABAC) model which incorporates RBAC * [[grsecurity]] A Linux kernel patch to implement RBAC * [[AGDLP]] How to implement RBAC in Active Directory domains/forests * [[PERMIS]] (PrivilEge and Role Management Infrastructure Standards) ==References== <references /> ==External links== *[http://www.tools4ever.com/usny/information/ RBAC White Paper] A White Paper from Tools4ever for Role-Based Access Control *[http://csrc.nist.gov/rbac/rbac-faq.html FAQ on RBAC models 