[[non-deterministic algorithm]] which provides an upper bound for the complexity of formulas in the [[arithmetical hierarchy]] and [[analytical hierarchy]] ==Information theory and signal processing== {{main|Information theory|Signal processing}} ===Coding theory=== {{see|Coding theory}} ====Error detection and correction==== {{see|Error detection and correction}} * [[BCH Code]]s ** [[Berlekamp–Massey algorithm]] ** [[BCH Code#Peterson Gorenstein Zierler algorithm|Peterson-Gorenstein-Zierler algorithm]] ** [[Reed–Solomon error correction]] * [[BCJR algorithm]]: decoding of error correcting codes defined on trellises (principally convolutional codes) * [[Forward error correction]] * [[Gray code]] * [[Hamming code]]s ** [[Hamming(7,4)]]: a [[Hamming code]] that encodes 4 bits of data into 7 bits by adding 3 parity bits ** [[Hamming distance]]: sum number of positions which are different ** [[Hamming weight]] (population count): find the number of 1 bits in a binary word * [[Redundancy check]]s ** [[Adler-32]] ** [[Cyclic redundancy check]] ** [[Fletcher's checksum]] ** [[Longitudinal redundancy check]] (LRC) ** [[Luhn algorithm]]: a method of validating identification numbers ** [[Luhn mod N algorithm]]: extension of Luhn to non-numeric characters ** [[Parity bit|Parity]]: simple/fast error detection technique ** [[Verhoeff algorithm]] ====Lossless compression algorithms==== {{main|:Category:Lossless compression algorithms|l1=Lossless compression algorithms}} * [[Burrows-Wheeler transform]]: preprocessing useful for improving [[Lossless data compression|lossless compression]] * [[Context tree weighting]] * [[Delta encoding]]: aid to compression of data in which sequential data occurs frequently * [[Dynamic Markov compression]]: Compression using predictive arithmetic coding * [[Dictionary coder]]s ** [[Byte pair encoding]] (BPE) ** [[DEFLATE (algorithm)|DEFLATE]] ** [[Lempel-Ziv]] *** [[LZ77 and LZ78]] *** [[LZJB|Lempel-Ziv Jeff Bonwick]] (LZJB) *** [[Lempel-Ziv-Markov chain-Algorithm]] (LZMA) *** [[Lempel-Ziv-Oberhumer]] (LZO): speed oriented *** [[Lempel-Ziv-Storer-Szymanski]] (LZSS) *** [[Lempel–Ziv–Welch]] (LZW) *** [[LZWL]]: syllable-based variant *** [[LZX]] *** [[LZRW|Lempel-Ziv Ross Williams]] (LZRW) * [[Entropy encoding]]: coding scheme that assigns codes to symbols so as to match code lengths with the probabilities of the symbols ** [[Arithmetic coding]]: advanced [[entropy]] coding *** [[Range encoding]]: same as [[arithmetic coding]], but looked at in a slightly different way ** [[Huffman coding]]: simple lossless compression taking advantage of relative character frequencies *** [[Adaptive Huffman coding]]: [[adaptive coding]] technique based on Huffman coding *** [[Package-merge algorithm|Package-Merge]]: Optimizes Huffman coding subject to a length restriction on code strings ** [[Shannon-Fano coding]] ** [[Shannon-Fano-Elias coding]]: precursor to arithmetic encoding <ref>http://www.ece.msstate.edu/~fowler/Classes/ECE8813/Handouts/shannon_fano_elias.pdf</ref> * [[Entropy encoding|Entropy coding with known entropy characteristics]] ** [[Golomb coding]]: form of entropy coding that is optimal for alphabets following geometric distributions ** [[Rice coding]]: form of entropy coding that is optimal for alphabets following geometric distributions ** [[Truncated binary encoding]] ** [[Unary coding]]: code that represents a number n with n ones followed by a zero ** [[Universal code (data compression)|Universal codes]]: encodes positive integers into binary code words *** Elias [[Elias delta coding|delta]], [[Elias gamma coding|gamma]], and [[Elias omega coding|omega]] coding *** [[Exponential-Golomb coding]] *** [[Fibonacci coding]] *** [[Levenshtein coding]] * [[FELICS|Fast Efficient & Lossless Image Compression System]] (FELICS): a lossless image compression algorithm * [[Incremental encoding]]: delta encoding applied to sequences of strings * [[PPM compression algorithm|Prediction by partial matching]] (PPM): an adaptive statistical data compression technique based on context modeling and prediction * [[Run-length encoding]]: lossless data compression taking advantage of strings of repeated characters * [[SEQUITUR algorithm]]: lossless compression by incremental grammar inference on a string ====Lossy compression algorithms==== {{main|:Category:Lossy compression algorithms|l1=Lossy compression algorithms}} * [[3Dc]]: a lossy data compression algorithm for [[Normal mapping|normal maps]] * [[Audio data compression|Audio]] and [[speech encoding|Speech]] compression ** [[A-law algorithm]]: standard companding algorithm ** [[Code-excited linear prediction]] (CELP): low bit-rate speech compression ** [[Linear predictive coding]] (LPC): lossy compression by representing the [[spectral envelope]] of a digital signal of speech in compressed form ** [[Mu-law algorithm]]: standard analog signal compression or companding algorithm ** [[Warped Linear Predictive Coding]] (WLPC) * [[Image Compression]] ** [[Block Truncation Coding]] (BTC): a type of lossy image compression technique for greyscale images ** [[Embedded Zerotree Wavelet]] (EZW) ** [[Fast Cosine Transform|Fast Cosine Transform algorithm]]s (FCT algorithms): compute Discrete Cosine Transform (DCT) efficiently ** [[Fractal compression]]: method used to compress images using fractals ** [[Set Partitioning in Hierarchical Trees]] (SPIHT) ** [[Wavelet compression]]: form of data compression well suited for [[image compression]] (sometimes also video compression and audio compression) * [[Transform coding]]: type of data compression for "natural" data like audio signals or photographic images * [[Vector quantization]]: technique often used in lossy data compression ===Digital signal processing=== {{see|Digital signal processing}} * [[Adaptive-additive algorithm]] (AA algorithm): find the spatial frequency phase of an observed wave source * [[Discrete Fourier transform]]: determines the frequencies contained in a (segment of a) signal ** [[Bluestein's FFT algorithm]] ** [[Bruun's FFT algorithm]] ** [[Cooley&ndash;Tukey FFT algorithm]] ** [[Fast Fourier transform]] ** [[Prime-factor FFT algorithm]] ** [[Rader's FFT algorithm]] * [[Fast folding algorithm]]: an efficient algorithm for the detection of approximately-periodic events within time series data * [[Gerchberg–Saxton algorithm]]: Phase retrieval algorithm for optical planes * [[Goertzel algorithm]]: identify a particular frequency component in a signal. Can be used for [[DTMF]] digit decoding. * [[Karplus-Strong string synthesis]]: physical modelling synthesis to simulate the sound of a hammered or plucked string or some types of percussion ====Image processing==== {{see|Image processing}} * [[Connected component labeling]]: find and label disjoint regions * [[Dithering]] and [[half-toning]] ** [[Error diffusion]] ** [[Floyd–Steinberg dithering]] ** [[Ordered dithering]] ** [[Riemersma dithering]] * [[Elser Difference-Map Algorithm]]: a search algorithm for general constraint satisfaction problems. Originally used for [[X-ray crystallography|X-Ray diffraction]] microscopy * [[Feature detection]] ** [[Canny edge detector]]: detect a wide range of edges in images ** [[Generalised Hough Transform]] ** [[Hough transform]] ** [[Marr-Hildreth algorithm]]: an early [[edge detection]] algorithm ** [[Scale-invariant feature transform|SIFT]] (Scale-invariant feature transform): is an algorithm to detect and describe local features in images. * [[GrowCut algorithm]]: an interactive segmentation algorithm * [[Richardson–Lucy deconvolution]]: image de-blurring algorithm * [[Seam carving]]: content-aware image resizing algorithm ==Software engineering== {{see|Software engineering}} * [[Cache algorithms]] * [[CHS conversion]]: converting between disk addressing systems * [[Double dabble]]: Convert binary numbers to BCD * [[Hash Function]]: convert a large, possibly variable-sized amount of data into a small datum, usually a single integer that may serve as an index into an array ** [[Fowler–Noll–Vo hash function]]: fast with low collision rate ** [[Pearson 