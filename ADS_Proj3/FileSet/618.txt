'''*two*''' or more UNIX-like operating systems (BSD, Linux, MacOS X, Solaris, etc.) would be put into this main category, followed by sub-categories for MacOS X, Linux, BSD (for programs that only work on one of those). The tree would look like *Windows — Stuff that only works in Windows :: ''Why should this only be used for stuff that ''only'' works in Windows? What about, e.g., stuff that runs natively under Unix and under Windows, but not under Mac OS?'' — [[User:Daniel Brockman|Daniel Brockman]] 03:56, 30 January 2006 (UTC) *MacOS — Classic and OSX programs that offer '''*native*''' [[Aqua (GUI)|Aqua GUIs]] or otherwise a significantly expanded codebase for OSX support ::Presumably that's "Mac OS X", not just "Mac OS". [[User:Guy Harris|Guy Harris]] ([[User talk:Guy Harris|talk]]) 19:58, 31 October 2009 (UTC) *UNIX — Stuff that works in '''''*two*''' or more'' of the below **HP-UX — Stuff that '''*only*''' works in HP-UX **Linux — Stuff that '''*only*''' works in Linux (such as the Linux kernel) **Solaris **SCO Unix **Darwin — Console/daemon applications or apps that require an [[X11]] server that could run on MacOS X's underlying UNIX system but do not have native MacOS X support (e.g. ''cat'' and ''[[GTK]]''). ::...and that presumably don't run on any ''other'' UN*Xes (otherwise it'd be "Unix software"). [[User:Guy Harris|Guy Harris]] ([[User talk:Guy Harris|talk]]) 19:58, 31 October 2009 (UTC) **BSD — Stuff that works in '''*all*''' BSD distributions ***FreeBSD — Stuff that '''*only*''' works in FreeBSD ***OpenBSD ***NetBSD ::Presumably there could be categories for other UN*Xes, such as [[AIX]], [[IRIX]], etc.. [[User:Guy Harris|Guy Harris]] ([[User talk:Guy Harris|talk]]) 19:58, 31 October 2009 (UTC) *Cross-platform — Stuff that works on '''*all*''' the major PC operating systems (e.g. ''apache'', ''php'', etc.). ::What are "all" the major PC operating systems? Presumably that includes Windows and Linux; does it include any of the BSDs, or Solaris? What about OSes that don't run on standard PCs, such as Darwin/OS X (yeah, yeah, I know, [[hackintosh]]es), AIX, etc.? [[User:Guy Harris|Guy Harris]] ([[User talk:Guy Harris|talk]]) 19:58, 31 October 2009 (UTC) == Should ''GNU project software'' be a subcategory of this one? == See and join discussion at [[Category talk:GNU project software]]. --[[User:Easyas12c|Easyas12c]] 06:25, 15 October 2005 (UTC)</text> </page> <page> <id>5637</id> <title>Category theory</title> <text>[[File:Commutative diagram for morphism.svg|right|thumb|200px|A category with objects X, Y, Z and morphisms ''f'', ''g'']] {{No footnotes|date=November 2009}} '''Category theory''' is an area of study in [[mathematics]] that examines in an [[abstraction|abstract]] way the properties of particular mathematical concepts, by formalising them as collections of ''objects'' and ''arrows'' (also called [[morphism]]s, although this term also has a specific, non category-theoretical sense), where these collections satisfy certain basic conditions. Many significant areas of mathematics can be formalised as categories, and the use of category theory allows many intricate and subtle mathematical results in these fields to be stated, and proved, in a much simpler way than without the use of categories. The most accessible example of a category is the [[Category of sets]], where the objects are sets and the arrows are functions from one set to another. However it is important to note that the objects of a category need not be sets nor the arrows functions; any way of formalising a mathematical concept such that it meets the basic conditions on the behaviour of objects and arrows is a valid category, and all the results of category theory will apply to it. One of the simplest examples of a category (which is a very important concept in [[topology]]) is that of [[groupoid]], defined as a category whose arrows or morphisms are all invertible. [[category (mathematics)|Categories]] now appear in most branches of mathematics, some areas of [[theoretical computer science]] where they correspond to [[Data type|types]], and [[mathematical physics]] where they can be used to describe [[vector space]]s. Categories were first introduced by [[Samuel Eilenberg]] and [[Saunders Mac Lane]] in 1942–45, in connection with [[algebraic topology]]. Category theory has several faces known not just to specialists, but to other mathematicians. A term dating from the 1940s, "[[abstract nonsense|general abstract nonsense]]", refers to its high level of abstraction, compared to more classical branches of mathematics. [[Homological algebra]] is category theory in its aspect of organising and suggesting manipulations in [[abstract algebra]]. [[Diagram chasing]] is a visual method of arguing with abstract "arrows" joined in diagrams. Note that arrows between categories are called [[functor]]s, subject to specific defining commutativity conditions; moreover, categorical diagrams and sequences can be defined as functors (viz. Mitchell, 1965). An arrow between two functors is a [[natural transformation]] when it is subject to certain naturality or commutativity conditions. Functors and natural transformations ('naturality') are the key concepts in category theory<ref>''Categories for the Working Mathematician'', 2nd Edition, p 18: "As Eilenberg-Mac Lane first observed, 'category' has been defined in order to be able to define 'functor' and 'functor' has been defined in order to be able to define 'natural transformation' ".</ref>. [[Topos|Topos theory]] is a form of abstract [[Sheaf (mathematics)|sheaf theory]], with geometric origins, and leads to ideas such as [[pointless topology]]. A topos can also be considered as a specific type of category with two additional topos axioms. == Background == The study of [[category (mathematics)|categories]] is an attempt to ''axiomatically'' capture what is commonly found in various classes of related ''mathematical structures'' by relating them to the ''structure-preserving functions'' between them. A systematic study of category theory then allows us to prove general results about any of these types of mathematical structures from the axioms of a category. Consider the following example. The [[class (set theory)|class]] '''Grp''' of [[group (mathematics)|groups]] consists of all objects having a "group structure". One can proceed to [[mathematical proof|prove]] [[theorem]]s about groups by making logical deductions from the set of axioms. For example, it is immediately proved from the axioms that the [[identity element]] of a group is unique. Instead of focusing merely on the individual objects (e.g., groups) possessing a given structure, category theory emphasizes the [[morphism]]s – the structure-preserving mappings – ''between'' these objects; by studying these morphisms, we are able to learn more 