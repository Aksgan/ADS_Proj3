/etc/passwd tar cf - . | rx -luser:pass machine.far.far.away.com!tar xf - </PRE> == ncu == '''ncu''' (networked call unix) was the usual network remote login procedure, analogous to [[TCP/IP]]'s [[telnet]] or [[rlogin]] protocols. Like '''rx''', it was a netman [[client (computing)|client]] (for passing [[standard streams|standard I/O]] to the remote machine), a netman [[server (computing)|server]] (for receiving [[standard streams|standard I/O]] on the remote machine), a [[parent process]] for hosting the remote login procedure, and a [[DNIX]] [[DNIX#Handlers|handler]] (so that remote programs believed themselves to be connected to tty devices). == bootserver == The '''bootserver''' handled boot and dump requests from the diskless workstations. It was a simple process that talked directly to the [[Ethernet]] driver. Technically not really part of DNET, in that it was a satellite protocol merely associated with DNET installations. (As was the [[X.25]] 'safelink' file server protocol used to communicate between these same diskless workstations and their file servers.) == dmap == '''dmap''' provided a facility analogous to [[TCP/IP]]'s '''ruptime''' facility. Dmap servers, one per disk-based machine, connected directly to [[Ethernet]] and periodically [[broadcast]] ([[multicast]], actually, so that non-participants never even saw the messages) their presence. The same process also collected these broadcasts and (as a server) advertised the availability of the list of senders through '''netman'''. To control the load on the servers, the broadcast frequency was affected by the current size of the list in order to limit the network messages to an average of one per second. Dmap [[client (computing)|clients]] would contact their nearest dmap [[server (computing)|server]] (as determined by who responded first to the service name enquiry) to get the current list of machines, then would contact each machine in turn (usually maintaining four [configurable] connections in parallel for speed) to get the specific machine status they were interested in. (Unlike most other transient servers, the dmap client program was ''not'' also the transient server. The convention for DNET transient servers was that the same program was used for both sides of the link. '''netman''' automatically passed a '''-B''' command-line argument to any transient server it spawned, indicating to the process that it was the B-side process and that its [[standard streams|standard input]] [[file descriptor]] was a network service connection. The reason for splitting dmap into A- and B-side programs was the desire to push as much of the processing [such as display formatting] onto the client as possible, a 'thick' client in other words. In this case because the client was run infrequently, and usually manually, the division was made in order to minimize the load on the servers. This extended even to minimizing the memory footprint of the transient server, which necessitated the split into A- and B-side programs.) [[Category:Network protocols]]</text> </page> <page> <id>9042</id> <title>DNSCurve</title> <text>{{Notability|date=October 2008}} '''DNSCurve''' is a proposed new secure DNS protocol. The basic idea is a define a secure new transport layer protocol to replace TCP, called '''CurveCP''', using [[elliptic curve cryptography]] on top of UDP, and then doing DNS queries inside CurveCP. By using DNS CNAME records to prepend the CurveCP elliptic curve cryptography public keys to the DNS names of the DNS servers, [[Daniel J. Bernstein]] claims that DNSCurve could be implemented on the Internet much easier than [[DNSSEC]].<ref name=27C3>{{cite web|url=http://vimeo.com/18279777|title=27C3 Talk by Dan Bernstein: High-speed high-security cryptography: encrypting and authenticating the whole Internet.|author=Daniel J. Bernstein}}</ref> A key part of the reasoning behind the DNSCurve proposal is that elliptic curve cryptography is fast enough. [[Daniel J. Bernstein]] claims that this is the case.<ref name=27C3 /> DNSCurve was proposed by [[Daniel J. Bernstein]].<ref>{{cite web| author = Daniel J. Bernstein | title = High-speed cryptography| url = http://marc.info/?l=djbdns&m=122011940521548&w=2}}</ref> DNSCurve appears to be much more similar in concept to [[TSIG]] (securing communication with name servers) rather than [[DNSSEC]] (securing DNS records themselves). There are some significant differences, however. TSIG, frequently needs to switch to the more expensive TCP transport, while DNSCurve is designed to keep the packets smaller. TSIG is also not typically used for all queries, but primarily for updating DNS records. TSIG does just authentication, while DNSCurve does both authentication and encryption. Finally, DNSCurve includes a scalable key distribution scheme, while TSIG is much more limited. ==Notes== <references /> ==External links== *[http://dnscurve.org Official website] *[http://cr.yp.to/talks/2009.06.27/slides.pdf High-speed cryptography and DNSCurve], a June 2009 presentation by the author *[http://cr.yp.to/talks/2008.08.22/slides.pdf DNSCurve: Usable security for DNS], an August 2008 presentation by the author *[http://tools.ietf.org/html/draft-dempsky-dnscurve-01 draft-dempsky-dnscurve-01] Propsed standard "DNSCurve: Link-Level Security for the Domain Name System", sent by M. Dempsky (from [[OpenDNS]]) to [[IETF]] (updated in February 2010) *[http://blog.opendns.com/2010/02/23/opendns-dnscurve/ OpenDNS adopts DNSCurve], official OpenDNS blog entry *[http://dnscurv.es/ dnscurv.es], a public test domain running DNSCurve-enabled authoritative servers *[http://curvedns.on2it.net/ CurveDNS], DNSCurve forwarding name server {{DEFAULTSORT:Dnscurve}} [[Category:Domain name system]] {{crypto-stub}} {{compu-network-stub}} [[de:DNSCurve]]</text> </page> <page> <id>9046</id> <title>DNS hijacking</title> <text>'''DNS hijacking''' or '''DNS redirection''' is the practice of redirecting the resolution of [[Domain Name System]] (DNS) names to other DNS servers. This is done for malicious purposes such as [[phishing]]; for self-serving purposes by [[Internet service providers]] (ISPs) to direct users' [[HTTP]] traffic via the ISP's own webservers where advertisements are served, statistics can be collected, or other purposes of the ISP; and by DNS service providers to block access to sites which the user wishes to block because they are malicious or of an unwanted{{Who|date=December 2010}} nature. ==Technical background== One of the functions of a DNS server is to translate a [[domain name]] into an [[IP address]] that applications need to connect to an Internet resource such as a website. This functionality is defined in various internet standards that define the protocol in considerable detail. DNS servers are implicitly trusted by internet-facing computers and users to correctly resolve names to the actual addresses that are registered by the owners of an internet domain. ===Rogue DNS server=== A rogue DNS server translates domain names of desirable websites (search engines, banks, brokers, etc.) into IP addresses of sites with unintended content, even malicious websites. Most users depend on DNS servers automatically assigned by their [[ISP]]s. [[Zombie computer]]s use DNS-changing [[Trojan horse (computing)|trojans]] to invisibly switch the automatic 