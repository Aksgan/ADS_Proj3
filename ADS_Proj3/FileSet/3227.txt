million users would be supported until at least 2015.<ref>{{cite news |first= Peter |last= Galli |title= Novell Pledges Support for NetWare 6.5 at BrainShare |url= http://www.eweek.com/article2/0,1895,1940242,00.asp |publisher= [[eWeek]] |date= 2006-03-20 |accessdate=2007-03-26 }}</ref> Some of Novell's NetWare supporters have taken it upon themselves to petition Novell to keep NetWare in development.<ref>[http://www.iwantnetware.com/ I Want NetWare!]</ref> ==== 2.0 ==== OES 2 was released on October 8, 2007. It includes NetWare 6.5 SP7, which supports running as a paravirtualized guest inside the [[Xen]] hypervisor and new Linux based version using SLES10. ;New features include: *64bit support *Virtualization *Dynamic Storage Technology, which provide Shadow Volumes *Domain services for Windows (provided in OES 2 service pack 1) === Current NetWare situation === {{As of | 2010}} some organizations still use Novell NetWare, but its ongoing decline in popularity began in the mid-1990s, when NetWare was the [[de facto]] standard for file and print software for the [[Intel x86]] server platform. Modern (2009) NetWare and OES installations are used by larger organizations that may need the added flexibility they provide. Microsoft successfully shifted market share away from NetWare products toward their own in the late-1990s. Microsoft's more aggressive marketing was aimed directly to management through major magazines; Novell NetWare's was through IT specialist magazines with distribution limited to select IT personnel.{{Citation needed|date=November 2009}} Novell did not adapt their pricing structure accordingly and NetWare sales suffered at the hands of those corporate decision makers whose valuation was based on initial licensing fees. As a result organizations that still use NetWare, eDirectory, and Novell software often have a hybrid infrastructure of NetWare, Linux, and Windows servers. === Netware Lite / Personal Netware === In 1991 Novell introduced a radically different and cheaper product - [[Netware Lite]]<ref>[http://query.nytimes.com/gst/fullpage.html?res=9D0CE4DC1330F930A35752C1A967958260 For Small Businesses, a Simpler Approach to Networking]</ref><ref>[http://query.nytimes.com/gst/fullpage.html?res=9E0CE0DB1738F937A35752C1A964958260&scp=2&sq=%22netware+lite%22&st=nyt Netware Lite, a peer-to-peer product introduced last year by Novell, has not made a significant impact on Artisoft, but analysts said that was because the product was weak]</ref> in answer to Artisoft's similar [[LANtastic]]. Both were peer to peer systems, where no specialist server was required, but instead all PCs on the network could share their resources. The product line became ''' Personal Netware ''' in 1993. == Performance == NetWare dominated the network operating system (NOS) market from the mid-80s through the mid- to late-90s due to its extremely high performance relative to other NOS technologies. Most benchmarks during this period demonstrated a 5:1 to 10:1 performance advantage over products from Microsoft, Banyan, and others. One noteworthy benchmark pitted NetWare 3.x running [[Network File System (protocol)|NFS]] services over TCP/IP (not NetWare's native IPX protocol) against a dedicated Auspex NFS server and a SCO Unix server running NFS service. NetWare NFS outperformed both 'native' NFS systems and claimed a 2:1 performance advantage over SCO Unix NFS on the same hardware.{{Citation needed|date=July 2009}} The reasons for NetWare's performance advantage are given below. === File service instead of disk service === At the time NetWare was first developed, nearly all LAN storage was based on the disk server model. This meant that if a client computer wanted to read a particular block from a particular file it would have to issue the following requests across the relatively slow LAN: # Read first block of directory # Continue reading subsequent directory blocks until the directory block containing the information on the desired file was found, could be many directory blocks # Read through multiple file entry blocks until the block containing the location of the desired file block was found, could be many directory blocks # Read the desired data block NetWare, since it was based on a file service model, interacted with the client at the file API level: # Send file open request (if this hadn't already been done) # Send a request for the desired data from the file All of the work of searching the directory to figure out where the desired data was physically located on the disk was performed at high speed locally on the server. By the mid-1980s, most NOS products had shifted from the disk service to the file service model. Today, the disk service model is making a comeback, see [[Storage area network|SAN]]. === Aggressive caching === From the start, the NetWare design focused on servers with copious amounts of RAM. The entire file allocation table (FAT) was read into RAM when a volume was mounted, thereby requiring a minimum amount of RAM proportional to online disk space; adding a disk to a server would often require a RAM upgrade as well. Unlike most competing [[network operating system]]s prior to Windows NT, NetWare automatically used all otherwise unused RAM for caching active files, employing delayed write-backs to facilitate re-ordering of disk requests ([[Elevator algorithm|elevator seeks]]). An unexpected shutdown could therefore corrupt data, making an [[uninterruptible power supply]] practically a mandatory part of a server installation. The default dirty cache delay time was fixed at 2.2 seconds in NetWare 286 versions 2.x. Starting with NetWare 386 3.x, the dirty disk cache delay time and dirty directory cache delay time settings controlled the amount of time the server would cache changed ("dirty") data before saving (flushing) the data to a hard drive. The default setting of 3.3 seconds could be decreased to 0.5 seconds but not reduced to zero, while the maximum delay was 10 seconds. The option to increase the cache delay to 10 seconds provided a significant performance boost. Windows 2000 and 2003 server do not allow adjustment to the cache delay time. Instead, they use an algorithm that adjusts cache delay. === Efficiency of NetWare Core Protocol (NCP) === Most network protocols in use at the time NetWare was developed didn't trust the network to deliver messages. A typical client file read would work something like this: # Client sends read request to server # Server acknowledges request # Client acknowledges acknowledgement # Server sends requested data to client # Client acknowledges data # Server acknowledges acknowledgement In contrast, NCP was based on the idea that networks worked perfectly 