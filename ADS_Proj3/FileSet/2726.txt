L., Barak A. and Shiloh A., [http://www.mosix.org/pub/dfsa.pdf The MOSIX Direct File System Access Method for Supporting Scalable Cluster File Systems]. Cluster Computing, Vol. 7, No. 2, pp. 141-150, April 2004. * Keren A. and Barak A., [http://www.mosix.org/pub/ocipc.pdf Opportunity Cost Algorithms for Reduction of I/O and Interprocess Communication Overhead in a Computing Cluster]. IEEE Tran. Parallel and Distributed Systems, Vol. 14, No. 1, pp. 39-50, January 2003. * Amar L., Barak A. and Shiloh A., The MOSIX Parallel I/O System for Scalable I/O Performance. Proc. 14-th IASTED Int. Conference on Parallel and Distributed Computing and Systems (PDCS 2002), pp. 495-500, Cambridge, MA, Nov. 2002. * Amir Y., [[Baruch Awerbuch|Awerbuch B.]], Barak A., Borgstrom R.S. and Keren A., [http://www.mosix.org/pub/ocja.pdf An Opportunity Cost Approach for Job Assignment in a Scalable Computing Cluster]. IEEE Tran. on Parallel and Distributed Systems, Vol. 11, No. 7, pp. 760-768, July 2000. * McClure S. and Wheeler R., [http://www.mosix.org/pub/usenix.pdf MOSIX: How Linux Clusters Solve Real World Problems]. Proc. 2000 USENIX Annual Tech. Conf., pp. 49-56, San Diego, CA., June 2000. * Amar L., Barak A., Eizenberg A. and Shiloh A.,. The MOSIX Scalable Cluster File Systems for LINUX, June 2000. * Barak A., La'adan O. and Shiloh A., [http://www.mosix.org/pub/mosix4linux.pdf Scalable Cluster Computing with MOSIX for LINUX]. Proc. 5-th Annual Linux Expo, pp. 95-100, Raleigh, NC, May 1999. === MOSIX Version 1 book === * Barak A., Guday S. and Wheeler R., The MOSIX Distributed Operating System, Load Balancing for UNIX. Lecture Notes in Computer Science, Vol. 672, Springer-Verlag, May 1993. === Other === * Barak A. and La'adan O., [http://www.mosix.org/pub/mosixhpcc.pdf The MOSIX Multicomputer Operating System for High Performance Cluster Computing]. Journal of Future Generation Computer Systems, Vol. 13, No. 4-5, pp. 361-372, March 1998. * Barak A., Laden O. and Yarom Y., The NOW MOSIX and its Preemptive Process Migration Scheme. IEEE TCOS, Vol. 7, No. 2, pp. 5-11, Summer 1995. * Haban D., Wybranietz D. and Barak A., Monitoring and Management-Support of Distributed Systems, Proc. European Workshop on Progress in Distributed operating Systems and Distributed System management, pp. 110-137, Berlin, April 1989. * Barak A. and Wheeler R., MOSIX: An Integrated Multiprocessor UNIX. Proc. Winter 1989 USENIX Conf., pp. 101-112, San Diego, CA, Feb. 1989. * Barak A., Shiloh A. and Wheeler R., Flood Prevention in the MOSIX Load-Balancing Scheme, IEEE-TCOS Newsletter, Vol. 3, No. 1, pp. 24-27, Winter 1989. * Barak A. and Kornatzky Y., Design Principles of Operating Systems for Large Scale Multicomputers, Proc. Int. Workshop on Experience with Distributed Systems, pp. 104-123, Kaiserslautern, Sept. 1987. Also, Report RC 13220, IBM T.J. Watson Research Center, Yorktown Heights, NY, Oct. 1987. * Alon N., Barak A. and Manber U., On Disseminating Information Reliably Without Broadcasting, Proc. 7-th Int. Conf. on Distributed Computing Systems (ICDCS-7), pp. 74-81 (best conference paper), Berlin, Sept. 1987. * Barel A., NSMOS - MOS Port to the National's 32000 Family Architecture. Proc. 2nd Israel Conf. Computer Systems and Soft. Eng., Tel-Aviv, May 1987. * Barak A., Drezner Z. and Gurevich Y., On the Number of Active Nodes in a Multicomputer System, Networks, An Int. Journal, Vol. 16, No. 3, pp. 275-282, Fall 1986. * Barak A. and Paradise G. O., MOS - Scaling Up UNIX. Proc. Summer 1986 USENIX Conf., pp. 414-418, Atlanta, GA, June 1986. * Barak A. and Paradise G. O., MOS - a Load Balancing UNIX. Proc. Autumn 86 EUUG Conf., pp. 273-280, Manchester, Sept. 1986. * Drezner Z. and Barak A., An Asynchronous Algorithm for Scattering Information Between the Active Nodes of a Multicomputer System, Journal of Parallel and Distributed Computing, Vol. 3, No. 3, pp. 344-351, Sept. 1986. * Barak A. and Shiloh A., A Distributed Load-balancing Policy for a Multicomputer. Software - Practice & Experience, Vol. 15, No. 9, pp. 901-913, Sept. 1985. * Barak A. and Litman A., MOS - A Multicomputer Distributed Operating System. Software - Practice & Experience, Vol. 15, No. 8, pp. 725-737, Aug. 1985. * Drezner Z. and Barak A., Efficient Algorithms for Routing Information in a Multicomputer System, Distributed Algorithms on Graphs, Carleton Univ. Press, pp. 41-48, Ottawa, Aug. 1985. * Barak A., Dynamic Process Control for Distributed Computing, Proc. 3-rd Int. Conf. on Distributed Computing Systems (ICDCS-3), pp. 36-40, Ft. Lauderdale, FL, Oct. 1982. * Barak A., Shapir A., Steinberg G. and Karshmer A.I., A Modular, Distributed UNIX. Proc. 14-th Hawaii Int. Conf. on System Science, pp. 740-747, January 1981. * Barak A. and Shapir A., UNIX with satellite Processors. Software - Practice & Experience, Vol. 10, No. 5, pp. 383-392, May 1980. == See also == * [[LinuxPMI]] * [[OpenMOSIX]] == External links == * [http://www.mosix.org/ MOSIX homepage] * [http://www.mosix.org/webmon HUGI Campus Multi-Cluster], a MOSIX grid at Hebrew University == Notes == {{reflist}} [[Category:Cluster computing]] [[Category:Grid computing]] [[Category:Network-related software]] [[Category:Parallel computing]] [[fr:MOSIX]] [[it:MOSIX]] [[pl:MOSIX]] [[pt:MOSIX]] [[ru:MOSIX]]</text> </page> <page> <id>23024</id> <title>MOS Technology 8568</title> <text>[[Image:SpeedScript 128 in action.png|thumb|right|320px|The VDC was designed with [[office suite]] applications in mind. Shown here is ''[[SpeedScript|SpeedScript 128]]'', a [[word processor]].]] [[Image:Ultra Hi-Res Cube Demo.gif|thumb|right|320px|This ''Ultra Hi-Res'' [[demo (computer programming)|demo]] showcases the VDC's [[blitter]] capabilities with a simple [[3D animation]] of a [[wire frame model]] of a [[cube]].]] The '''8568 Video Display Controller (VDC)''' was [[MOS Technology]]'s [[graphics processor]] responsible for the 80 column{{ref|80-column}} or [[RGB]]I display on [[Commodore 128#128D; RGB graphics|D[CR]]] models of the [[Commodore 128]] [[personal computer]]. In the Commodore 128 service manual, this part was referred to as the "80 column [[cathode ray tube|CRT]] controller." The 8568 embodied many of the features of the older [[MOS Technology 6545|6545E]] [[monochrome]] CRT controller plus RGBI color.{{ref|128-manual}} The original ("flat") C128 used the [[MOS Technology 8563|8563]] video controller to generate the 80 column display. The 8568 was essentially an updated version of the 8563, combining the latter's functionality with [[glue logic]] that previously was implemented by discrete components in physical proximity to the 8563. Unlike the 8563, the 8568 included an unused [[Logic level|active low]] [[interrupt request]] line (<tt>/INTR</tt>), which was asserted when the "ready" bit in the 8568's status register changed from 0 to 1. 