normally.<ref>Ray, 1989</ref> Low-tech implementations of the random word technique often use a pile of index cards and shuffling as a mechanism of randomization. For example, "The oblique strategies" created by Brian Eno and Peter Schmidt in 1975 is a set of 100 cards, each of which is a suggestion of a course of action or thinking to assist in creative situations, where standard logical solutions do not produce a desired result. High-tech implementations of these techniques use computers, random number generators, and availabiliy of internet resources to extend the potential of this technique. Simple random techniques are classified by modality of association (Verbal, Visual, Audial, Kinesthetic). Multi-modal techniques combine different modalities, e.g. random article, website, or video.<ref>Kosorukoff, 2000</ref> 'Random article' link is an example of this kind of technique implemented by [[MediaWiki]] software. The best tool to explore a random website creativity technique is [[Stumbleupon]]. The evolutionary-computation model of creativity <ref>Goldberg, 1989; Kosorukoff, 2000; Goldberg, 2002</ref> views random stimulus creativity techniques as mutation operators. Each such operator has some potential to bring a relatively small and beneficial change (innovation). Success of this process can be characterized by the innovation rate.<ref>Goldberg, 1989</ref> In this context, it is the share of random stimuli that were useful among all presented. The innovation rate depends on the distribution from which the random stimuli are sampled. Improving innovation rate is an important research problem in human-based evolutionary computation. ==Notes== <references/> ==References== # Goldberg, David (2002), ''The design of innovation: Lessons from and for Competent Genetic Algorithms'', Springer # Goldberg, David (1989), ''Genetic Algorithms in Search, Optimization and Machine Learning'', Addison-Wesley # [http://hbga.org/hbga.html Kosorukoff, Alex (2000), ''Human-based genetic algorithm''], # Ray, Michael & Myers, Rochelle (1989). ''Creativity in business'', Doubleday, NY. ==External links== * [http://www.brainstorming.co.uk/tutorials/methodsofextraction.html Processes for extracting ideas from a stimulus] * [http://www.brainstorming.co.uk/tutorials/randomwebsitetutorial.html How to use the Random Website technique] * [http://randomwebsite.com RandomWebsite] (2001) * [http://stumbleupon.com StumbleUpon] (2001) * [http://mangle.ca Mangle.ca] (2002) * [http://thatrandomwebsite.com That Random Website] (2008) * [http://randomwebsite.net randomwebsite.net] (2005) * [http://tools.blackhat-seo.com/strategies/ Random strategies], a website implementing the obligue strategies (Eno & Schmidt, 1975) * [http://werdomaker.com Werdomaker], A random word website utilizing the Moby word list (2010) {{DEFAULTSORT:Random Stimulus}} [[Category:Randomness]]</text> </page> <page> <id>31250</id> <title>Randomized Hough Transform</title> <text>{{Wikify|date=May 2010}} '''Randomized Hough transform''' is a probabilistic variant to the classical [[Hough transform]], which is a commonly used technique for detecting curves (straight line, circle, ellipse, etc.)<ref>D.H. Ballard, "Generalizing the Hough Transform to Detect Arbitrary Shapes", Pattern Recognition, Vol.13, No.2, p.111-122, 1981</ref> The basic idea of Hough transform (HT) is to implement a voting procedure for all potential curves in the image, and at the termination of the algorithm curves that do exist in the image will have relatively high voting scores. Randomized Hough transform (RHT) is different from HT in that it tries to avoid conducting the computationally expensive voting process for every nonzero pixel in the image by taking advantage of the geometric properties of analytical curves, and thus improve the time efficiency and reduce the storage requirement of the original algorithm. ==Motivation== Although Hough transform (HT) has been widely used in curve detection, it has two major drawbacks:<ref>L. Xu, E. Oja, and P. Kultanan, "A new curve detection method: Randomized Hough transform (RHT)", ''Pattern Recog. Lett.'' 11, 1990, 331-338.</ref> (1) For each nonzero pixel in the image, the parameters for the exsiting curve and redundant ones are both accumulated during the voting procudure. (2) The accumulator array (or Hough space) is predefined in a heuristic way. The better accuracy we need, the higher parameter resolution should be defined. These two needs usually result in a large storage requirement and low speed for real applications. Therefore, RHT was brought up to tackle this problem. ==Implementation== In comparison with HT, RHT takes advantage of the fact that some analytical curves can be fully determined by a certain number of points on the curve. For example, a straight line can be determined by two points, and an ellipse (or a circle) can be determined by three points. To illustrate the basic idea of RHT, let's consider the case of ellipse detection. The whole process generally consists of three steps: 1) Fit ellipses with randomly selected points; 2) Update the accumulator array and corresponding scores; 3) Output the ellipses with scores higher than some predefined threshold. ===Ellipse Fitting=== One general equation for defining ellipses is: <math>a (x - p)^2+ 2b (x-p) (y-q) + c (y-q)^2 + 1 = 0 </math> with restriction: <math>ac-b^2>0</math> However, only three points are needed to fully determine an ellipse. RHT starts by randomly selecting three points on the ellipse. Let them be X<sub>1</sub>, X<sub>2</sub> and X<sub>3</sub>. The first step is to find the tangents of these three points. They can be found by fitting a straight line using [[least squares]] technique for a small window of neighboring pixels. The next step is to find the intersection points of the tangent lines. This can be easily done by solving the line equations found in the previous step. Then let the intersection points be T<sub>12</sub> and T<sub>23</sub>, the midpoints of line segments <math>X_1X_2</math> and <math>X_2X_3</math> be M<sub>12</sub> and M<sub>23</sub>. Then the center of the ellipse will lie in the intersection of <math>T_{12}M_{12}</math> and <math>T_{23}M_{23}</math>. Again, the coordinates of the intersected point can be determined by solving line equations and the detailed process is skipped here for conciseness. Let the coordinates of ellipse center found in previous step be (x<sub>0</sub>, y<sub>0</sub>). Then the center can be translated to the origin with <math>x' = x-x_0</math> and <math>y' = y-y_0</math> so that the ellipse equation can be simplified to: <math>ax'^2+2bx'y'+cy'^2=1</math> Now we can solve for the rest of ellipse parameters: a, b and c by substituting the coordinates of X<sub>1</sub>, X<sub>2</sub> and X<sub>3</sub> into the equation above. ===Accumulating=== With the ellipse parameters determined from previous stage, the accumulator array can be updated correspondingly. Different from classical Hough transform, RHT does not keep "grid of buckets" as the accumulator array. Rather, it first calculates the similarities between the newly detected ellipse and the ones already stored in accumulator 