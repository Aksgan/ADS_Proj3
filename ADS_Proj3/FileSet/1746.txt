a tiered system of '''ultrapeers''' and '''leaves'''. Instead of all nodes being considered equal, nodes entering into the network were kept at the 'edge' of the network as a leaf, not responsible for any routing, and nodes which were capable of routing messages were promoted to ultrapeers, which would accept leaf connections and route searches and network maintenance messages. This allowed searches to propagate further through the network, and allowed for numerous alterations in the topology which have improved the efficiency and scalability greatly. Additionally gnutella adopted a number of other techniques to reduce traffic overhead and make searches more efficient. Most notable are Query Routing Protocol (QRP) and Dynamic Querying (DQ). With QRP a search reaches only those clients which are likely to have the files, so rare files searches grow vastly more efficient, and with DQ the search stops as soon as the program has acquired enough search results, which vastly reduces the amount of traffic caused by popular searches. [http://gnufu.net Gnutella For Users] has a vast amount of information about these and other improvements to gnutella in user-friendly style. One of the benefits of having gnutella so decentralized is to make it very difficult to shut the network down and to make it a network in which the users are the only ones who can decide which content will be available. Unlike [[Napster]], where the entire network relied on the central server, gnutella cannot be shut down by shutting down any one node and it is impossible for any company to control the contents of the network, which is also due to the many [[free and open source software|free and open source]] gnutella clients which share the network. == Protocol features and extensions == Gnutella did once operate on a purely [[query flooding]]-based protocol. The outdated gnutella version 0.4 [[network protocol]] employs five different packet types, namely * ping: discover hosts on network * pong: reply to ping * query: search for a file * query hit: reply to query * push: download request for firewalled [[servent]]s These are mainly concerned with searching the gnutella network. File transfers are handled using [[HTTP]]. The development of the gnutella protocol is currently led by the Gnutella Developers Forum ("The GDF"). Many protocol extensions have been and are being developed by the software vendors and free gnutella developers of the GDF. These extensions include intelligent query routing, [[SHA-1]] checksums, query hit transmission via [[User Datagram Protocol|UDP]], querying via UDP, dynamic queries via [[Transmission Control Protocol|TCP]], file transfers via UDP, [[XML]] meta data, source exchange (also known as "the download mesh") and parallel downloading in slices (swarming). There are efforts to finalize these protocol extensions in the gnutella 0.6 specification at the gnutella protocol development website. The gnutella 0.4 standard, although still being the latest protocol specification since all extensions only exist as proposals so far, is outdated. In fact, it is hard or impossible to connect today with the 0.4 handshake and according to developers in the GDF, version 0.6 is what new developers should pursue using the [http://gnet-specs.gnufu.net work-in-progress specifications]. The gnutella protocol remains under development and in spite of attempts to make a clean break with the complexity inherited from the old gnutella 0.4 and to design a clean new message architecture, it is still one of the most successful file-sharing protocols to date. == Gnutella2 == {{Main|Gnutella2}} The Gnutella2 protocol, often referred to as G2, is, despite its name, not a successor protocol of gnutella,<ref>[http://www.mp3newswire.net/stories/2003/gnutella2.html Gnutella vs. Gnutella2, Part 2] Thomas Mennecke for [[Slyck.com]], February 25, 2003.</ref> but rather a [[Fork (software development)|fork]]. A sore point with many gnutella developers is that the "Gnutella2" name conveys an upgrade or superiority, which led to a "Gnutella2 flame war". Other criticism included the use of the gnutella network to bootstrap G2 peers and poor documentation of the G2 protocol. Additionally, the search retries of the [[Shareaza]] client, which was one of the initial G2 clients, could unnecessarily burden the gnutella network.<ref>[http://www.slyck.com/news.php?story=100 Gnutella vs. Gnutella2, Part 1] Thomas Mennecke for [[Slyck.com]], February 25, 2003</ref> The fork took place in 2002 and both protocols have undergone significant iterations since that time. G2 has both advantages and disadvantages compared to gnutella. An advantage often cited is Gnutella2's hybrid search is more efficient than the original gnutella [[query flooding]], which was used in 2002.<ref>[http://wortschatz.uni-leipzig.de/~fwitschel/vorlP2P/literatur/search_methods.pdf A comparison of Peer-to-Peer search methods] Dimitrios Tsoumakos, 2003</ref> An advantage for gnutella is its user population numbers in the millions,<ref name="population"/> whereas the G2 network is approximately an order of magnitude smaller.<ref>[http://crawler.trillinux.org/ G2 Network Statistics] Population ~200,000 January 2010.</ref> It is difficult to compare the protocols in their current form; the individual client choice will probably have as much an effect to an end user on either network. == Software == The following tables compare general and technical information for a number of applications supporting the gnutella network. The tables do '''not''' attempt to give a complete [[List of Historical Gnutella Clients|list of gnutella clients]]. The tables are limited to clients that can participate in the current gnutella network. === General specifications === {| class="wikitable sortable" ! rowspan=1 | Name ! rowspan=1 | Platform ! rowspan=1 | License ! rowspan=1 | Latest Release ! rowspan=1 | Heritage |- ! {{rh}} | [[Acquisition (software)|Acquisition]] | [[Mac OS X]] | [[Proprietary software|Proprietary]] |{{Latest stable release/Acquisition}} | [[LimeWire]] |- | {{rh2}} | [[BearFlix]] | [[Microsoft Windows]] | [[Proprietary software|Proprietary]] | 6.2.2.521 | [[BearShare]] |- ! {{rh2}} | [[BearShare]] (Before Version 6) | [[Microsoft Windows]] | [[Proprietary software|Proprietary]] | 5.2.5.6 | Original work |- | {{rh2}} | [[Cabos]] | [[Java platform|Java]] | [[GNU GPL]] | {{Latest stable release/Cabos}} | [[LimeWire]] |- | {{rh2}} | [[FilesWire]] (P2P) | [[Java platform|Java]] | [[Proprietary software|Proprietary]] | Beta 1.1 (2007) | Original Work |- ! {{rh}} | [[FrostWire]] | [[Java platform|Java]] | [[GNU GPL]] | {{Latest stable release/FrostWire}} | [[LimeWire]] |- ! {{rh2}} | [[giFT]] (Gnutella plug-in) | [[Cross-platform]] | [[GNU GPL]] | 0.0.11 (2006-08-06) <!-- {{Latest stable release/giFT}} is outdated and wrong, as this article 