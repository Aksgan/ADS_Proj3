by Linear Programming, the inaugural issue |journal=J Bioinform Comput Biol |year=2003 |volume=1 |issue=1 |pages=95–117 |pmid=15290783 |doi=10.1142/S0219720003000186}} *{{cite journal |author=Xu J, Li M |title=Assessment of RAPTOR's linear programming approach in CAFASP3 |journal=Proteins |year=2003 |volume=53 |issue=Suppl 6 |pages=579–584 |pmid=14579349 |doi=10.1002/prot.10531}} *{{cite journal |author=Xu J, Li M, Lin G, Kim D, Xu Y |title=Protein threading by linear programming |journal=Pac Symp Biocomput |year=2003 |pages=264–275 |pmid=12603034}} *Xu J (2005). "Protein Fold Recognition by Predicted Alignment Accuracy". IEEE/ACM Trans. on ''Computational Biology and Bioinformatics''. *Xu J (2005). "Rapid Protein Side-Chain Packing via Tree Decomposition". ''RECOMB''. ==External links== *[http://www.bioinfor.com/raptor RAPTOR Website] *[http://ttic.uchicago.edu/~jinbo/myresearch.html RAPTOR author's research] *[http://predictioncenter.org/ CASP experiments home page] *[http://zhang.bioinformatics.ku.edu/casp8/ Automated assessment of protein structure prediction in CASP8] *[http://www.cs.bgu.ac.il/~dfischer/CAFASP3/ALevaluation/index.html CAFASP3 alignment accuracy evaluation] [[Category:Bioinformatics software]] [[Category:Molecular modelling software]]</text> </page> <page> <id>30978</id> <title>RDF query language</title> <text>An '''RDF query language''' is a [[computer language]] able to retrieve and manipulate data stored in [[Resource Description Framework]] format. [[SPARQL]] is emerging as the de-facto RDF query language, and is a [[W3C Recommendation]]<ref>[http://www.w3.org/TR/rdf-sparql-query/ SPARQL Query Language for RDF<!-- Bot generated title -->]</ref>. Released as a Candidate Recommendation in April 2006, it returned to Working Draft status in October 2006, due to open issues. It returned to Candidate Recommendation status in June 2007<ref>[http://www.w3.org/blog/SW/2007/06/15/sparql_is_a_candidate_recommendation W3C Semantic Web Activity News - SPARQL is a Candidate Recommendation<!-- Bot generated title -->]</ref>. On 12 November 2007 the status of SPARQL changed into Proposed Recommendation. <ref>[http://www.w3.org/News/2007#item247 Archive of W3C News in 2007<!-- Bot generated title -->]</ref> On 15 January 2008, SPARQL was standardized. <ref>[http://www.w3.org/blog/SW/2008/01/15/sparql_is_a_recommendation W3C Semantic Web Activity News - SPARQL is a Recommendation<!-- Bot generated title -->]</ref> ==Other RDF query languages== * [[DQL]], [[XML]]-based, queries and results expressed in [[DAML+OIL]] * [[N3QL]], based on [[Notation 3]] * [[R-DEVICE]] * [[RDFQ]], XML-based * [[RDQ]], [[SQL]]-like * [[RDQL]], SQL-like * [[RQL/RVL]], SQL-like * [[SeRQL]], SQL-like, similar to RQL/RVL * [[Versa (query language)]], compact syntax (non–SQL-like), solely implemented in [[4Suite]] ([[Python (programming language)|Python]]) * [[XUL]] has a [http://developer.mozilla.org/en/docs/XUL:Template_Guide:Introduction template] element in which to declare rules for matching data in RDF. [[XUL]] uses RDF extensively for databinding. * [[Adenine (programming language)|Adenine]] (programming language written in RDF). ==External links== * [http://www.w3.org/TandS/QL/QL98/pp/rdfquery.html RDF Query specification] * [http://www.w3.org/2001/11/13-RDF-Query-Rules/ RDF query language survey] ** [http://web.archive.org/web/20080702143156/http://www.aifb.uni-karlsruhe.de/WBS/pha/rdf-query/ A Comparison of (some) RDF Query Languages] * [http://rdfstore.sourceforge.net/2002/06/24/rdf-query/ RDF query use cases, including query language samples] * [http://www.w3.org/TR/rdf-sparql-query/ SparQL] ==References== {{Reflist}} [[Category:RDF data access]] [[Category:RDF|Query languages]] [[Category:Query languages]] [[ja:RDFクエリ言語]] [[pl:RDQL]]</text> </page> <page> <id>30979</id> <title>RDOS</title> <text>{{for|the Regional District|Regional District of Okanagan-Similkameen}} {{Refimprove|date=August 2009}} {{Infobox OS | name = RDOS | logo = | screenshot = | caption = | family = Data General | source_model = Proprietary | developer = [[Data General]] | released = 1972 | latest_release_version = RDOS 7.5 | latest_release_date = 1986 | latest preview version = | latest preview date = | language = | kernel_type = [[Monolithic kernel|Monolithic]] | ui = [[Command-line interpreter|CLI]] | working_state = inactive | website = | supported_platforms = [[Data General Nova|NOVA]], [[Data General Nova|microNOVA]], [[Data General Eclipse|Eclipse]] | updatemodel = | package_manager = | license = restricted, per machine }} '''RDOS''' ('''''R'''eal-time '''D'''isk '''O'''perating '''S'''ystem'') was a [[Real-time operating system|real-time]] [[operating system]] released in 1972<ref name="OShist">[http://www.oshistory.net/metadot/index.pl?id=2325;isa=Category;op=show OS History - Data General]</ref> for the popular [[Data General]] [[Data General Nova|Nova]] and [[Data General Eclipse|Eclipse]] [[minicomputer]]s. RDOS was capable of [[Computer multitasking|multitasking]], with the ability to run up to 32 "tasks" (similar to [[Thread (computer science)|threads]] on modern computer CPUs) simultaneously on each of two [[Process (computing)|grounds]] (foreground and background) within a 64K memory space. Later versions of RDOS were compatible with Data General's [[16-bit]] Eclipse minicomputer line. A cut-down version of RDOS, without real-time background and foreground capability, was called Data General Diskette Operating System (DG-DOS); another related operating system was RTOS, a Real-Time Operating System for diskless environments. RDOS on [[Data General Nova#microNOVA|microNOVA]]-based "Micro Products" micro-minicomputers was sometimes called DG/RDOS. RDOS was superseded in the early 1980s by Data General's [[Data General AOS|AOS]] family of operating systems, including AOS/VS and MP/AOS (MP/OS on smaller systems). ==Other operating systems called RDOS== {{Infobox OS | name = RDOS | logo = | screenshot = | caption = | family = [[DOS]] | source_model = [[GPL]] | developer = [[Leif Ekblad]] | released = 2005 | latest_release_version = | latest_release_date = | latest preview version = | latest preview date = | language = ? | kernel_type = [[DOS]] | ui = ? | working_state = Current | website = | supported_platforms = [[x86-64]] | updatemodel = | package_manager = | license = Mainly the [[GPL]], and various others }} *RDOS by Leif Ekblad which is an open source [[DOS]] designed for i386 embedded platforms (see infobox at right). ==References== {{reflist}} ==Sources== *[http://museum.sysun.com/museum/rdoshist.html RDOS] at The Online Software Museum ==External links== *[http://www.computerhistory.org/collections/accession/102685123 RDOS documentation at the Computer History Museum] *[http://www.telegraphics.com.au/svn/dpa/trunk/nova/rdos/paru.sr RDOS 7.50 User Parameters definition] *[http://www.simulogics.com/ SimuLogics' ReNOVAte - Emulator to run NOVA/Eclipse Software on DOS / WindowsNT / UN*X / VMS] [[Category:Data General]] [[Category:Disk operating systems]] [[Category:Real-time operating systems]] {{operating-system-stub}}</text> </page> <page> <id>31007</id> <title>RHPPC</title> <text>{{Power Architecture}} The '''RHPPC''' is a [[radiation hardened]] [[microprocessor|processor]] based on [[PowerPC 600#PowerPC 603e and 603ev|PowerPC 603e]] technology licensed from [[Motorola]] (now [[Freescale]]) and manufactured by [[Honeywell]]. The RHPPC is equivalent to the commercial PowerPC 603e processor with the minor exceptions of the [[phase locked loop]] (PLL) and the processor version register (PVR). The RHPPC processor is compatible with the [[PowerPC]] architecture (Book I-III), the PowerPC 603e programmers interface and is also supported by common PowerPC software tools and embedded operating systems, like [[VxWorks]]. == Technical details == The RHPPC processor generates 190 [[Million instructions per second|MIPS]] with the [[Dhrystone]] mix with its core clock at 100 MHz (i.e. the RHPPC processor completes 1.9 instructions per cycle). The RHPPC runs with a 25, 33.3, 40, or 50 MHz [[PowerPC_600#60x_bus|60x bus]] clock (SYSCLK) which is generated based on the PCI clock. The 60x bus clock is de-skewed on-chip by a PLL and can also be multiplied. The RHPPC processor is a [[superscalar]] machine with five execution units: system register unit, [[Arithmetic logic unit|integer unit]], load/store unit, [[floating point 