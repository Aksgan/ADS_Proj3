Aspect-Oriented Software Development== By the turn of the millennium, it was clear that a number of research groups were pursuing different technologies that employed the composition or attachment of separately-packaged state and function to form objects<ref>Communications of the ACM, Vol. 44, No. 10, October 1994, pp. 28-95</ref>. To distinguish the common field of interest from Aspect-Oriented Programming with its particular patent definitions and to emphasize that the compositional technology deals with more than just the coding phase of software development, these technologies were organized together under the term [[Aspect-Oriented Software Development]]<ref>http://aosd.net/</ref>, and an organization and series on international conferences begun on the subject. Like aspect-oriented programming, subject-oriented programming, composition filters, [[Feature Oriented Programming|feature oriented programming]] and adaptive methods are considered to be aspect-oriented software development approaches. ==Multi-Dimensional Separation of Concerns, Hyper/J and the Concern Manipulation Environment== The original formulation of subject-oriented programming deliberately envisioned it as a packaging technology – allowing the space of functions and data types to be extended in either dimension. The first implementations had been for C++<ref>Harold Ossher, Matthew Kaplan, William Harrison, Alexander Katz and Vincent Kruskal, Subject-Oriented Composition Rules, Proceedings of 1995 Conference on Object-Oriented Programming Systems, Languages, and Applications, October 1995 </ref>, and Smalltalk<ref>Hafedh Mili, William Harrison, Harold Ossher, Supporting Subject-Oriented Programming in Smalltalk, Proceedings of TOOLS USA 96, August 1996</ref>. These implementations exploited the concepts of software labels and composition rules to describe the joining of subjects. To address the concern that a better foundation should be provided for the analysis and composition of software not just in terms of its packaging but in terms of the various concerns these packages addressed, an explicit organization of the material was developed in terms of a multi-dimensional “matrix” in which concerns are related to the software units that implement them. This organization is called '''Multi-Dimensional Separation of Concerns''', and the paper describing it<ref>Harold Ossher, Peri Tarr, William Harrison, Stanley Sutton, N Degrees of Separation: Multi-Dimensional Separation of Concerns, Proceedings of 1999 International Conference on Software Engineering, May 1999 </ref> has been recognized as the most influential paper of the ICSE 1999 Conference<ref>http://www.sigsoft.org/awards/mostInfPapAwd.htm </ref> This new concept was implemented for composing [[Java (programming language)|Java]] software, using the name '''Hyper/J''' for the tool<ref>Harold Ossher, Peri Tarr. Hyper/J: Multi-dimensional separation of concerns for Java, Proceedings of the 23rd International Conference on Software Engineering, Toronto, Ontario, Canada, 2001, Pages: 821 - 822 </ref>. Composition and the concept of subject can be applied to software artifacts that have no executable semantics, like requirement specifications or documentation. A research vehicle for [[Eclipse (software)|Eclipse]], called the '''Concern Manipulation Environment''' (CME), has been described<ref>William Chung, William Harrison, Vincent Kruskal, Harold Ossher, Stanley M. Sutton, Jr., Peri Tarr, Matthew Chapman, Andrew Clement, Helen Hawkins, Sian January. The concern manipulation environment, Proceedings of the 27th international conference on Software engineering table of contents, St. Louis, MO, USA, 2005</ref> in which tools for query, analysis, modelling<ref>William Harrison, Harold Ossher, Stanley Sutton, Peri Tarr. Concern modeling in the concern manipulation environment, Proceedings of the 2005 workshop on Modeling and analysis of concerns in software, St. Louis, Missouri, 2005</ref>, and composition are applied to artifacts in any language or representation, through the use of appropriate plug-in adapters to manipulate the representation. A successor to the Hyper/J composition engine<ref>William Harrison, Harold Ossher, Peri Tarr. General Composition of Software Artifacts, Proceedings of Software Composition Workshop 2006, March 2006, Springer-Verlag, LNCS 4089, pages 194-210</ref> was developed as part of CME which uses a general approach for the several elements of a composition engine: * a query language with unification to identify join points, * a flexible structural-attachment model, * a nested-graph specification for ordering identified elements, * and a priority ordering specification to resolve conflicts among conflicting rules. Both Hyper/J and CME are available, from alphaWorks<ref>http://www.alphaworks.ibm.com/tech/hyperj</ref> or sourceforge<ref>http://sourceforge.net/projects/cme/</ref>, respectively, but neither is actively supported. ==Notes== <references/> ==See also== *[[Aspect-oriented software development]] *[[Aspect-oriented programming]] *[[Feature Oriented Programming]] *[[Separation of concerns]] *[[Role-Oriented Programming]] *[[Programming paradigm]]s ==External links== * [http://doi.acm.org/10.1145/306363.306389 Distributed Characteristics of Subject Oriented Programming: An evaluation with the Process and Object-Oriented Paradigms] * [http://www.alphaworks.ibm.com/tech/hyperj alphaWorks: HyperJ] * [http://www.eclipse.org/technology/archived.php Eclipse Archived Technology Projects] [[Category:Object-oriented programming]] [[Category:Aspect-oriented software development]] [[Category:Eclipse (software)]] [[Category:Programming paradigms]] [[de:Subjektorientierte Programmierung]] [[ru:Субъектно-ориентированное программирование]]</text> </page> <page> <id>36044</id> <title>Subject (programming)</title> <text>{{Expert-subject|Computer science|date=November 2008}} In [[computer programming]] within the [[subject-oriented programming]] [[Programming paradigm|paradigm]], '''subjects''' are a way to [[separation of concerns|separate concern]]s. For example, in a Shape class with two methods Draw() and Move(), each method would be considered a subject. ==External links== * [http://www.research.ibm.com/sop/ IBM Subject-oriented programming page] * [http://www.alphaworks.ibm.com/tech/hyperj Hyper/J] is an example of this concept. {{Uncategorized stub|date=September 2010}} {{Compu-lang-stub}}</text> </page> <page> <id>36049</id> <title>Subjectivity</title> <text>{{Cleanup|date=June 2010}} '''Subjectivity''' refers to the [[Subject (philosophy)|subject]] and his or her perspective, feelings, beliefs, and desires.<ref name=solomon>[[Robert C. Solomon|Solomon, Robert C.]] "Subjectivity," in Honderich, Ted. ''[[Oxford Companion to Philosophy]] (Oxford University Press, 2005), p.900.</ref> In philosophy, the term is usually contrasted with [[Objectivity (philosophy)|objectivity]].<ref name=solomon/> ==Qualia== {{Main|Qualia}} Subjectivity may refer to the specific discerning interpretations of any aspect of experiences. They are unique to the person experiencing them, the '''[[qualia]]''' that are only available to that person's [[consciousness]]. Though the causes of experience are thought to be "objective" and available to everyone, (such as the [[wavelength]] of a specific beam of [[light]]), experiences themselves are only available to the subject (the quality of the [[colour]] itself). Subjectivity frequently exists in theories, measurements or concepts, against the will of those attempting to be objective, and it is a goal in most fields to remove subjectivity from scientific or mathematical statements or experiments. Many fields such as physics, biology, computer science, and chemistry are attempting to remove subjectivity from their methodologies, theories and results and this is a large part of the process of experimentation in these fields today. Despite this, subjectivity is the only way we have to experience the world, mathematically, scientifically or otherwise. We share a human subjectivity, as well as individual subjectivity and all theories and philosophies that dictate our understanding of mathematics, science, literature and every concept we have about the world is 