not a very accurate name – it is not really derived from regular uncial, but it does look similar and shares many of its features; sometimes, especially when both were developing, the two scripts were used simultaneously in a mixed-uncial script. Like uncial, half-uncial derived from Roman cursive. It was first used around the 3rd century and remained in use until the end of the 8th century. The early forms of half-uncial were used for pagan authors and Roman legal writing, while in the 6th century the script came to be used in Africa and Europe (but not as often in insular centres) to transcribe Christian texts. ===Forms=== Some general forms of half-uncial letters are: *a is usually round, sometimes with a slightly open top *b and d have vertical stems, identical to the modern letters *g has a flat top, no bow, and a curved descender (somewhat resembling the number 5) *t has a curved shaft *n, r, and s are similar to their uncial counterparts (with the same differences compared to modern letters) Half-uncial was brought to Ireland in the 5th century, and was then carried to England. There, it was used up to the 8th century, and developed into the insular script after the 8th century. == See also == {{Commons|Uncial}} {{Wiktionary|uncial}} *[[Carolingian minuscule]] *[[Gaelic script]] *[[Insular script]] *[[Irish orthography]] *[[Rustic capitals]] *[[List of New Testament uncials]] {{Typography terms}} [[Category:Latin calligraphy]] [[Category:Greek New Testament uncials| ]] [[Category:Palaeography]] [[Category:Papyrology]] [[Category:Writing]] [[Category:Medieval scripts]] [[Category:Early Middle Ages]] [[ar:أنسيال]] [[ca:Uncial]] [[cs:Unciála]] [[da:Uncial]] [[de:Unziale]] [[es:Caligrafía uncial]] [[fr:Onciale]] [[gl:Uncial]] [[it:Onciale]] [[nl:Unciaal]] [[pl:Uncjała]] [[pt:Escrita uncial]] [[ru:Унциал]] [[fi:Unsiaali]] [[sv:Uncialskrift]] [[tr:Uncial]] [[uk:Унціал]]</text> </page> <page> <id>38753</id> <title>Unconventional computing</title> <text>'''Unconventional computing''' is [[computing]] by a wide range of new or unusual methods. It is also known as '''alternative computing'''. The different methods of unconventional computing include [[optical computing]], [[quantum computing]], [[chemical computer|chemical computing]], [[natural computation|natural computing]], [[biologically-inspired computing]], [[wetware computer|wetware computing]], [[DNA computer|DNA computing]], [[molecular computer|molecular computing]], [[amorphous computing]], [[nanocomputer|nanocomputing]], [[reversible computing]], [[ternary computer|ternary computing]], [[fluidics]], [[analogue computer|analogue computing]], and [[domino computer|Domino Computation]]. Historically, [[mechanical computers]] were used in industry before the advent of the [[transistor]]. Mechanical computers retain some interest today both in research and as analogue computers. Some mechanical computers have a theoretical or didactic relevance, such as [[billiard-ball computer]]s or hydraulic ones,<ref name=pen-empnew>[[Roger Penrose|Penrose, Roger]]: The Emperor's New Mind. Oxford University Press, 1990. See also corresponding [[The Emperor's New Mind|article on it]].</ref> and are actually simulated. (No attempt is made to build a functioning computer through the mechanic collisions of billiard balls.) The [[Domino computer]] is another theoretically interesting mechanic computing scheme. Unconventional computing is, according to a recent conference description,<ref>{{cite web | title = Unconventional computation Conference 2007 | url = http://cnls.lanl.gov/uc07/ }}</ref> "an interdisciplinary research area with the main goal to enrich or go beyond the standard models, such as the von-Neumann computer architecture and the Turing machine, which have dominated computer science for more than half a century". These methods model their computational operations based on non-standard paradigms, and are currently mostly in the research and development stage. This computing behavior can be "simulated" using the classical silicon-based micro-transistors or [[solid state (electronics)|solid state]] computing technologies, but aim to achieve a new kind of computing engineering inspired in nature. == Mechanisms == * [[Billiards|Billiard]] balls ([[billiard ball computer]]); this is an unintuitive and pedagogical example that a computer can be made out of almost anything. * [[Light]] ([[optical computing]]) : Computers can manipulate information as light (rather than electricity or billiard balls). * [[Molecules]] ([[DNA computing]], [[chemical computing]]) * Gears, levels, dials, etc. ([[analog computer]]/[[mechanical computers]]) * [[Neurons]] ([[wetware computer]]) * [[Fluid]] ([[fluidics]]) * Agents acting under a special set of rules ([[cellular automata]]) : People acting under a set of rules can be ''part'' of a computer; [http://xkcd.com/505/ example]. If the "agent" were a human, it would not be major part of the computer, exactly like a single neuron is not an entire brain system. * [[Quantum mechanics]] ([[quantum computing]]) == See also == * [[Biologically inspired computing]] * [[Natural computation]] * [[Network computing]] == References == <references/> [[Category:Classes of computers]] [[es:Computación no convencional]]</text> </page> <page> <id>38762</id> <title>Underhanded C Contest</title> <text>{{primarysources|date=October 2009}} The '''Underhanded C Contest''' is a [[programming]] contest to turn out code that is malicious, but passes a rigorous inspection, and looks like an honest mistake. The contest rules define a task, and a malicious component. Entries must perform the task in a malicious manner as defined by the contest, and hide the malice. Contestants are allowed to use [[C (programming language)|C]]-like compiled languages to make their programs. The contest is organized by Dr. Scott Craver <ref>[http://www2.binghamton.edu/watson/programs/academic-departments/electrical-and-computer-engineering/people/faculty-and-staff.html Faculty and Staff page of EE Dept. at Binghamton University]</ref> of the Department of Electrical Engineering at [[Binghamton University]] ([[New York State]]). The prize is a $100 gift certificate to [[ThinkGeek]]. ==2005 Contest== The 2005 contest had the task of image processing, while embedding a watermark. Winning entries from 2005 used uninitialized data structures, reuse of pointers, and an embedding of [[shellcode]] in constants. ==2006 Contest== The 2006 contest required entries to count word occurrences, but have vastly different runtimes on different platforms. To accomplish the task, entries used fork implementation errors, optimization problems, [[endian]] differences and various API implementation differences. ==2007 Contest== The 2007 contest required entries to encrypt and decrypt files with a strong, readily available encryption algorithm such that a low percentage (1% - 0.01%) of the encrypted files may be cracked in a reasonably short time. The contest commenced on April 16 and ended on July 4. Entries used misimplementations of RC4, misused API calls, and incorrect function prototypes. ==2008 Contest== The 2008 contest required entries to redact a rectangular portion of a [[Netpbm format|PPM]] image in a way that the portion may be reconstructed. Any method of "blocking out" the rectangle was allowed, as long as the original pixels were removed, and the pixel reconstruction didn't have to be perfect<ref>[http://underhanded.xcott.com/?p=8 2008 contest rules]</ref> (although the reconstruction's fidelity to the original file would be a factor in judging). 