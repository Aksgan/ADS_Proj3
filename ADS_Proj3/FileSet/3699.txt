domain]]s along a nanoscopic [[permalloy]] wire about 200 nm across and 100 nm thick. As current is passed through the wire, the domains pass by magnetic [[read/write head]]s positioned near the wire, which alter the domains to record patterns of bits. A racetrack memory device is made up of many such wires and read/write elements. In general operational concept, racetrack memory is similar to the earlier [[twistor memory]] or [[bubble memory]] of the 1960s and 1970s. [[Delay line memory]], such as mercury delay lines of the 1940s and 1950s are a still earlier form of similar technology, as used in the [[UNIVAC]] and [[EDSAC]] computers. Delay line technology was superseded by [[core memory]], a technology developed to support creating the [[Semi Automatic Ground Environment]] effort by the U.S. Department of Defense, a project that eventually led to creating the [[MITRE]] corporation. These delay-based memory storage technologies used electrical currents to "push" a magnetic pattern through a substrate. Dramatic improvements in magnetic detection capabilities, based on the development of [[spintronic magnetoresistive sensing]] materials and devices, allow the use of much smaller magnetic domains to provide far higher areal densities. In production, it is expected that the wires can be scaled down to around 50 nm. There are two ways to arrange racetrack memory. The simplest is a series of flat wires arranged in a grid with read and write heads arranged nearby. A more widely studied arrangement uses U-shaped wires arranged vertically over a grid of read/write heads on an underlying substrate. This allows the wires to be much longer without increasing its 2D area, although the need to move individual domains further along the wires before they reach the read/write heads results in slower random access times. This does not present a real performance bottleneck; both arrangements offer about the same throughput. Thus the primary concern in terms of construction is practical; whether or not the 3D vertical arrangement is feasible to mass produce. ==Comparison to other memory devices== {{Advert|section|date=April 2009}} Current projections suggest that racetrack memory will offer performance on the order of 20-32 ns to read or write a random bit. This compares to about 3,000,000 ns for a [[Hard disk drive|hard drive]], or 6-40 ns for conventional [[DRAM]]. The authors of the primary work also discuss ways to improve the access times with the use of a "reservoir," improving to about 9.5 ns. Aggregate throughput, with or without the reservoir, is on the order of 250-670 Mbit/s for racetrack memory, compared to 102400 Mbit/s for dual channel DDR2 DRAM, 1000 Mbit/s for high-performance hard drives, and much slower performance on the order of 30 to 100 Mbit/s for flash memory devices. The only current technology that offers a clear performance benefit over racetrack memory is [[Static random access memory|SRAM]], on the order of 2 ns, but is much more expensive and far lower density.<ref name=parsci>Parkin, et all., [http://www.sciencemag.org/cgi/content/abstract/320/5873/190 Magnetic Domain-Wall Racetrack Memory], ''Science'', 320, 190 (11 April 2008), DOI: 10.1126/science.1145799</ref> Flash memory, in particular, is a highly asymmetrical device. Although read performance is fairly fast, especially compared to a hard drive, writing is much slower. Flash memory works by "trapping" [[electron]]s in the chip surface, and requires a burst of high voltage to remove this charge and reset the cell. In order to do this, charge is accumulated in a device known as a [[charge pump]], which takes a relatively long time to charge up. In the case of [[NOR flash]] memory, which allows random bit-wise access like racetrack memory, read times are on the order of 70 ns, while write times are much slower, about 2,500 ns. To address this concern, [[NAND flash]] memory allows reading and writing only in large blocks, but this means that the time to access any random ''bit'' is greatly increased, to about 1,000 ns. Additionally, the use of the burst of high voltage physically degrades the cell, so most flash devices allow on the order of 100,000 writes to any particular bit before their operation becomes unpredictable. [[Wear leveling]] and other techniques can spread this out, but only if the underlying data can be re-arranged. The key determinant of the cost of any memory device is the physical size of the storage medium. The reason for this is due to the way memory devices are fabricated. In the case of solid-state devices like flash memory or DRAM, a large "wafer" of silicon is processed into many individual devices, which are then cut apart and packaged. The cost of packaging is about $1 per device, so as the density increases and the number of bits per devices increases with it, the ''cost per bit'' falls by an equal amount. In the case of hard drives, data is stored on a number of rotating platters, and the cost of the device is strongly related to the number of platters. Increasing the density allows the number of platters to be reduced for any given amount of storage. In most cases memory devices store one bit in any given location, so they are typically compared in terms of "cell size", a cell storing one bit. Cell size itself is given in units of F², where F is the [[design rule checking|design rule]], representing usually the metal line width. Flash and racetrack both store multiple bits per cell, but the comparison can still be made. For instance, modern hard drives appear to be rapidly reaching their current theoretical limits around 650 nm²/bit,<ref>1 Tbit/in² is approx. 650nm²/bit.</ref> which is defined primarily by our capability to read and write to tiny patches of the magnetic surface. DRAM has a cell size of about 6 F², SRAM is much worse at 120 F². NAND flash memory is currently the densest form of non-volatile memory in widespread use, with a cell size of about 4.5 F², but storing three bits per cell for an effective size of 1.5 F². NOR flash memory is slightly less dense, at an effective 4.75 F², accounting for 2-bit operation on a 9.5 F² 