\in R^{\mathcal{I}} \; \texttt{and} \; y \in C^{\mathcal{I}}\} </math> Define <math>\mathcal{I} \models</math> (read ''I models'') as follows ===== [[TBox]] ===== * <math>\mathcal{I} \models C \sqsubseteq D</math> if and only if <math>C^{\mathcal{I}} \subseteq D^{\mathcal{I}}</math> * <math>\mathcal{I} \models \mathcal{T}</math> if and only if <math>\mathcal{I} \models t</math> for every <math>t \in \mathcal{T}</math> ===== [[ABox]] ===== * <math>\mathcal{I} \models a : C</math> if and only if <math>a^{\mathcal{I}} \in C^{\mathcal{I}}</math> * <math>\mathcal{I} \models (a,b) : R</math> if and only if <math>(a^{\mathcal{I}},b^{\mathcal{I}}) \in R^{\mathcal{I}}</math> * <math>\mathcal{I} \models \mathcal{A}</math> if and only if <math>\mathcal{I} \models a</math> for every <math>a \in \mathcal{A}</math> ===== Knowledge Base ===== Let <math>\mathcal{K} = (\mathcal{T}, \mathcal{A})</math> be a knowledge base. * <math>\mathcal{I} \models \mathcal{K}</math> if and only if <math>\mathcal{I} \models \mathcal{T}</math> and <math>\mathcal{I} \models \mathcal{A}</math> == Inference == === Decision Problems === In addition to the ability to describe concepts formally, one also would like to employ the description of a set of concepts to ask questions about the concepts and instances described. The most common decision problems are basic database-query-like questions like ''instance checking'' (is a particular instance (member of an A-box) a member of a given concept) and ''relation checking'' (does a relation/role hold between two instances, in other words does '''a''' have property '''b'''), and the more global-database-questions like ''subsumption'' (is a concept a subset of another concept), and ''concept consistency'' (is there no contradiction among the definitions or chain of definitions). The more operators one includes in a logic and the more complicated the T-box (having cycles, allowing non-atomic concepts to include each other), usually the higher the computational complexity is for each of these problems (see [http://www.cs.man.ac.uk/~ezolin/dl/ Navigator on Description Logic Complexity] for examples). == Relationship With Other Logics == === First Order Logic === Many Description Logics (DLs) are decidable fragments of [[first order logic]] (FOL)<ref name="DLHB"/>. Some DLs now include operations (for example, transitive closure of roles) that allow efficient inference but cannot be expressed in FOL<ref name="DLHB"/>. === Fuzzy Description Logics === Fuzzy description logic combines [[fuzzy logic]] with DLs. Since many concepts that are needed for [[Intelligent Systems|intelligent systems]] lack well defined boundaries, or precisely defined criteria of membership, we need fuzzy logic to deal with notions of vagueness and imprecision. This offers a motivation for a generalization of description logics towards dealing with imprecise and vague concepts. What people should also think about for intelligent systems is multiple viewpoints of the data. This will lead to subjective (as opposed to objective) intelligent systems. === Modal logics === Description Logics (DLs) are related to — but developed independently of — [[modal logic]] (ML)<ref name="DLHB"/>. Many - but not all - DLs are syntactic variants of MLs<ref name="DLHB"/>. ==== Examples ==== {| style="width:20%" class="wikitable sortable" |+ Syntactic Variants |- ! DL ! ML |- | <math>\mathcal{ALC}</math> | '''K'''<ref name="DLHB"/> |} === Temporal Description Logics === Temporal Description Logics represent - and allow reasoning about - time dependent concepts and many different approaches to this problem exist<ref>Alessandro Artale and Enrico Franconi "Temporal Description Logics". In "Handbook of Temporal Reasoning in Artificial Intelligence", 2005.</ref>. For example, a description logic might be combined with a [[modal logic|modal]] [[temporal logic]] such as [[Linear temporal logic]]. == Tools == === Reasoners === There are some [[reasoner]]s to deal with OWL and Description Logics. These are some of the most popular: * [http://lat.inf.tu-dresden.de/systems/cel/ CEL] is a free (for non-commercial use) LISP-based reasoner * [http://www.cerebra.com/ Cerebra Engine] was a commercial C++-based reasoner, acquired in 2006 by webMethods. * [http://owl.man.ac.uk/factplusplus FaCT++ ] is a free open-source C++-based reasoner. * [[KAON]]2 is a free (free for non-commercial usage) Java reasoner. * [http://www.cs.man.ac.uk/~schmidt/mspass/ MSPASS] is a free open-source C reasoner for numerous description logics. * [http://pellet.owldl.com/ Pellet] is a dual-licensed (AGPL and proprietary) commercial, Java-based reasoner. * [http://www.racer-systems.com/ RacerPro] of Racer Systems is a commercial (free trials and research licenses are available) lisp-based reasoner. * [http://sim-dl.sourceforge.net/ Sim-DL] is a free open-source Java-based reasoner for the language ALCHQ. It also provides a similarity measurement functionality between concepts. To access this functionality a Protégé plugin can be used. * [http://hermit-reasoner.com/ HermiT] is an [[open source]] reasoner based on the hypertableaux calculus. It is developed by the [[University of Oxford]]. DL reasoners, such as FaCT, FaCT++, RACER, DLP and Pellet, implement the [[analytic tableau method]]. KAON2 is implemented by algorithms which reduce a SHIQ(D) knowledge base to a disjunctive [[datalog]] program. === Editors === * [[Protege (software)|Protégé]] is a free, open source ontology editor and knowledge-base framework, which can use DL reasoners which offer a DIG interface as backends for consistency checks. * [http://code.google.com/p/swoop/ SWOOP] is an [[open source]] ontology editor originally developed at the [[University of Maryland]]. === Interfaces === * [http://dig.sourceforge.net/ DIG] Implementation. DIG is an XML interface to DL systems, recommended by the [http://dl.kr.org/dig/ DL Implementation Group]. [http://dl.kr.org/dig/2.0 DIG 2.0] is an ongoing effort for a new DIG interface standard. * [http://owlapi.sourceforge.net/ OWL API] is an [[open source]] [[Java (programming language)|Java]] interface to the [[Web Ontology Language|W3C Web Ontology Language OWL]] developed by the [[Manchester University|University Of Manchester]] == See also == {{Portal box|Computer Science|Logic|Information science}} * [[Ontology (computer science)]] * [[Ontology language]] ** [[DARPA Agent Markup Language]] (DAML) ** [[Ontology Inference Layer]] (OIL) ** [[DAMLplusOIL|DAML+OIL]] ** [[Web Ontology Language|OWL]] * [[Formal concept analysis]] * [[Lattice (order)]] * [[Modal logic]] * [[SWRL]] * [[Analytic tableau method]] * [[Semantic parameterization]] * [[Semantic Reasoner]] ==Notes== {{Reflist|2}} ==References== * F. Baader, D. Calvanese, D. L. McGuinness, D. Nardi, P. F. Patel-Schneider: ''The Description Logic Handbook: Theory, Implementation, Applications''. Cambridge University Press, Cambridge, UK, 2003. ISBN 0-521-78176-0 * Ian Horrocks, Ulrike Sattler: [http://lat.inf.tu-dresden.de/research/papers-2001.html#HorrocksSattler-IJCAI ''Ontology Reasoning in the SHOQ(D) Description Logic''], in ''Proceedings of the Seventeenth International Joint Conference on Artificial Intelligence'', 2001. * D. Fensel, F. van Harmelen, I. Horrocks, D. McGuinness, and P. F. Patel-Schneider: [http://www.comlab.ox.ac.uk/people/ian.horrocks/Publications/download/2001/IEEE-IS01.pdf ''OIL: An Ontology Infrastructure for the Semantic Web'']. IEEE Intelligent Systems, 16(2):38-45, 2001. * Ian Horrocks and Peter F. Patel-Schneider: [http://www.comlab.ox.ac.uk/people/ian.horrocks/Publications/download/2001/HoPa01.pdf ''The Generation of DAML+OIL'']. In ''Proceedings of the 2001 Description Logic Workshop (DL 2001)'', volume 49 of CEUR <http://ceur-ws.org/>, pages 30–35, 