of strategies. Applications with high locality, such as dense matrix computations represent an ideal workload class for the local stores in Cell BE. <ref>{{cite web|url=http://www.research.ibm.com/people/m/mikeg/papers/2006_ieeemicro.pdf|format=PDF|title=Synergistic Processing in Cell's Multicore Architecture|date=March 2006}}</ref> Streaming computations can be efficiently accommodated using software-pipelining of memory block transfers using a multi-buffering strategy.<ref name="research.ibm.com"/> The software cache offers a solution for random accesses.<ref>{{cite web|url=http://www.research.ibm.com/journal/sj/451/eichenberger.pdf|format=PDF|title=Using advanced compiler technology to exploit the performance of the Cell Broadband Engine architecture|date=January 2006}}</ref> More sophisticated applications can use multiple strategies for different data types.<ref>{{cite web|url=http://www.research.ibm.com/cell/papers/2008_vee_cellgc.pdf|format=PDF|title=Cell GC: Using the Cell Synergistic Processor as a Garbage Collection Coprocessor |date=March 2008}}</ref> ==Compiler-mediated parallelism== ===References=== * [http://www.research.ibm.com/cell/ The Cell Project at IBM Research] * [http://cag.csail.mit.edu/crg/papers/eichenberger05cell.pdf Optimizing Compiler for a CELL Processor] * [http://www.research.ibm.com/journal/sj/451/eichenberger.html Using advanced compiler technology to exploit the performance of the Cell Broadband Engine architecture] <!-- repackaging of Eichberger ''et al.'' above --> * [http://domino.research.ibm.com/comm/research_projects.nsf/pages/cellcompiler.index.html Compiler Technology for Scalable Architectures] ==References== <references/> {{DEFAULTSORT:Cell Software Development}} [[Category:Cell BE architecture]]</text> </page> <page> <id>5700</id> <title>Cellular Digital Accessory</title> <text>{{Orphan|date=February 2009}} The '''Cellular Digital Accessory''' ('''CDA''') number identifies the software version and customization of a [[Mobile phone]]. Customization, among others, relates to operator-customized startup and shutdown videos, user greeting, web browser's home page and preinstalled bookmarks and also language packs that come preinstalled with the phone. CDA version depends on the country of purchase as well as on the network operator. The [[Sony Ericsson Update Service]] will only allow [[Software update]]s within one Group of CDA numbers. == External links == * The [http://uiq3.sourceforge.net/wiki/index.php/Main_Page UIQ3] project at [[SourceForge]] provides a list of CDA numbers for the [http://uiq3.sourceforge.net/wiki/index.php/CDA/P990i P990i], [http://uiq3.sourceforge.net/wiki/index.php/CDA/M600i M600i] and [http://uiq3.sourceforge.net/wiki/index.php/CDA/W950i W950i] {{tech-stub}} [[Category:Mobile phones]] [[Category:Sony Ericsson mobile phones]]</text> </page> <page> <id>5702</id> <title>Cellular image processing</title> <text>{{expert-subject|Robotics|date=June 2009}} {{unreferenced|date=June 2009}} There is a special kind of physical platform called [[cellular automata]] that can perform different kinds of computation. Although the principle of cellular automata is very attractive, it is difficult to build a [[general-purpose computer]] based on it for performing real engineering tasks. Since many [[image processing]] tasks are “cellular” in nature, it had been found that cellular processing hardware platforms can be used to perform these tasks. There are at least two kinds of hardware platforms for implementing cellular automata for the purpose of image processing. The first one is called [[cellular logic]] array and the second one is called [[cellular neural network]]. Cellular neural network is also known as cellular nonlinear network. The theory of cellular image processing is based on cellular logic and is the basis for designing image processing algorithms based on [[cellular hardware]]. It consists of the follows. *[[Local rule]]s and its implementation. *Decomposing global image processing tasks by using local rules. *Signal propagation along local connectedness. Cellular image processing is a way of designing super-fast image processing platforms. There are different [[VLSI]] implementations of [[cellular nonlinear network]]s to achieve this goal. The first comprehensive book addressing cellular image processing was written by [[Tao Yang (Wuxi)|Tao Yang]]. [[Category:Image processing]] [[Category:Cellular automata]]</text> </page> <page> <id>5708</id> <title>Cem Kaner</title> <text>'''Cem Kaner''' [[Juris Doctor|J.D.]], [[Ph.D.]], is a [[Professor]] of [[Software Engineering]] at [[Florida Institute of Technology]], and the Director of Florida Tech's [[Center for Software Testing Education & Research]] (CSTER) since 2004. He is perhaps best known outside academia as an advocate of [[software usability]] and [[software testing]]. Prior to his professorship, Kaner worked in the software industry beginning in 1983 in [[Silicon Valley]] "as a tester, programmer, tech writer, software development manager, product development director, and independent software development consultant." In 1988, he and his co-authors Jack Falk and Hung Quoc Nguyen published what became, at the time, "the best selling book on software testing," ''Testing Computer Software''.<ref name="asbio">{{cite web |url=http://www.badsoftware.com/alienwaresucks/2005/07/they-fail-to-give-their-advertised.html |title= They fail to give their advertised discount (Part 2). |accessdate=2006-07-27 |last=Kaner |first=Cem |date=31 August 2004 |format=Blog |work=Alienware Sucks! |publisher=[http://www.badsoftware.com/ badsoftware.com]}} See [[#Publications]] above for details on editions of ''Testing Computer Software.''</ref> He has also worked as a [[user interface]] designer. In 2004 he cofounded the [[non-profit]] [[Association for Software Testing]], where he serves as the Vice-President for Publications.<ref>{{cite web |url=http://www.associationforsoftwaretesting.org/documents/ArticlesOfIncorporation04152004.pdf |title=Articles of Incorporation of Association for Software Testing, Inc |accessdate=2006-07-28 |last=Kaner |first=Cem |coauthors=Registered Agent, Association for Software Testing |date=14 April 2004 |format=pdf |publisher=[http://www.associationforsoftwaretesting.org/ Association for Software Testing] |archiveurl = http://web.archive.org/web/20060713234825/http://www.associationforsoftwaretesting.org/documents/ArticlesOfIncorporation04152004.pdf <!-- Bot retrieved archive --> |archivedate = 2006-07-13}}</ref> {{Portal|Software Testing}} ==Education== Kaner received a [[Bachelor's Degree]] from [[Brock University]] in 1974, having focused on mathematics and philosophy. He went on to receive a Ph.D. in [[experimental psychology]] from [[McMaster University]] in 1984, with a dissertation in the area of [[psychophysics]] (the measurement of perceptual experiences). He later attended [[Golden Gate University]] Law School, with a primary interest in the law of software quality, graduating with a J.D. in 1994. ==Consumer and Software Quality Advocacy== Kaner worked as a part-time volunteer for the [[Santa Clara County, California|Santa Clara]], [[California Department of Consumer Affairs]], investigating and mediating consumer complaints. In the 1990s, he got trial experience working as a full-time volunteer Deputy [[District Attorney]], and later counselled independent consultants, technical book writers, and independent test labs on contract and [[intellectual property]] issues as an attorney.<ref name="asbio"/> He also did legislative work as a [[consumer protection]] advocate, including participation in the drafting of the [[Uniform Computer Information Transactions Act]] (as an advocate for customers and small software development firms), and the [[Uniform Electronic Transactions Act]], and he participated in the [[United States Department of State]]'s Advisory Committee on Private International Law: Study Group on Electronic Commerce. In 1999, he was elected to the [[American Law Institute]], after being in practice for only five years.<ref>{{cite web |url=http://www.kaner.com/resume.html |title=About Me |accessdate=2006-07-27 |last=Kaner |first=Cem |year=[2003?] |work=[http://www.kaner.com kaner.com] |archiveurl = http://web.archive.org/web/20060717055920/http://www.kaner.com/resume.html <!-- Bot retrieved archive --> |archivedate = 2006-07-17}}</ref> This experience led him, in collaboration with [[David Pels]], to publish ''Bad Software: What To Do When Software Fails'' in 1997. This book was intended "to help people who had bought a defective computer program, with advice on troubleshooting their own problems, interacting with technical support, reporting problems to consumer protection agencies, bringing a lawsuit in [[small claims court]], and if necessary, 