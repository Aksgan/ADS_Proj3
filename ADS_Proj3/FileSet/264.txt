centered on the concept of a '''notification''', which explains an incident or change in status. The term ‘notification’ is used instead of ‘event’ to clearly distinguish it from ‘event’ as defined by the AIS Event Service. The NTF service is based on the [[Publish-subscribe|publish/subscribe paradigm]]. The Notification Service defines six notification types: alarm, security alarm, object creation/deletion, state change, attribute value change, and miscellaneous. Notifications are generated/published by '''producers''' using the notification producer API. The notification consumers can be either '''subscribers''', who subscribe for notifications and receive them as they occur; or '''readers''', who retrieve notifications from persisted logs using the notification consumer API. Both types of notification consumers may define filters which specify characteristics of the notifications they are interested in receiving or reading. Notifications may be generated by AIS Services as well as by applications. AIS Services that generate notifications have a section in the specification that describes their notifications. ===Security Service (SEC)=== The Security Service provides mechanisms that can be used by AIS Services to [[authenticate]] AIS Service (and potentially other) client processes within the cluster and to [[authorize]] them to perform particular activities. These mechanisms can be used to preserve the [[integrity]] of the high availability infrastructure and of SA Forum applications, including their data, by protecting against unauthorized access. The enforcement of security is delegated to the AIS Service implementations themselves: Security-enabled AIS Services request authorization from the SEC implementation on behalf of their client processes as they initiate different activities. SEC responds to these authorization requests with a granted or denied indication, and it is up to the AIS Service to allow or disallow the operation accordingly. SEC provides these indications based on the set of [[Security policy|security policies]] configured via IMM. It also informs its subscribers about policy changes using appropriate callbacks. ==AIS Frameworks== ===Availability Management Framework (AMF)=== The Availability Management Framework is the key enabler of [[Service availability|Service Availability]] in SA Forum compliant systems. It coordinates the workload of the different entities under its control depending on their state of readiness to provide services. For this purpose, the application needs to be described according to the information model specified for AMF. This model describes which resources belong to the application, within the cluster, and which services the application provides. The basic logical entity of this information model is the '''component''', which represents a set of resources to the Availability Management Framework that encapsulate some specific application functionality. The workload generated by provisioning some service that can be assigned to a component by AMF is represented as a '''component service instance (CSI)'''. When the component is actively providing the service, it is assigned the active state on behalf of the CSI representing the service. The fundamental principle of [[fault tolerant design]] is to provide the services by a set of [[Redundancy (engineering)|redundant entities]] and therefore components need to be able to act as a standby on behalf of the CSI. The standby components maintain themselves in a state so that they are capable of taking over the service provisioning, should the component with the active assignment fail. The role of AMF is to assign active or standby workloads to the components of an application as a function of component state and system configuration. Accordingly, the APIs provided by the Availability Management Framework enable component registration, life cycle management and workload assignments. They include functions for error reporting and health monitoring. They also allow tracking the assignment of component service instances among the set of components protecting the CSI. The Availability Management Framework configuration includes recovery and repair policies. It allows the prioritization of resources and provides for a variety of redundancy models. These range from the simple 2N model (also known as 1+1, or active-standby) to more sophisticated ones such as the N-way redundancy model, which allows for more than one standby assignment on behalf of the same component service instance or the N-way-active that allows multiple active assignments. To simplify the administration, AMF further groups components into service units and service groups, and component service instances into service instances. All of these compose an application. Via IMM, a set of administrative operations are available on these logical entities. For software management purposes, the entities running the same software are grouped into types, which allows for a single point entry for the configuration of these entities. ===Software Management Framework (SMF)=== An SA Forum compliant system can be characterized by its deployment configuration, which consists of the software deployed in the system along with all configured software entities. The deployment configuration constitutes an essential part of the information model managed by the IMM Service. The Software Management Framework maintains the part of the information model that describes the software available for, and deployed in, the cluster. But the main purpose of SMF is enabling the evolution of a live system by orchestrating the migration from one deployment configuration to another. In SMF terms, this migration process is called an '''upgrade campaign'''. The Software Management Framework defines an XML schema to be used to specify an upgrade campaign. An SMF implementation migrates the system from one deployment configuration to a new desired one based on such an XML file, which is essentially a [[Script (computing)|script]] of ordered actions and configuration changes that lead to the new configuration. During this migration, SMF * maintains the campaign state model, * monitors for potential error situations caused by the migration, and * deploys error recovery procedures as required. To accomplish all these tasks, the SMF implementation interacts at least (1) with AMF in order to maintain availability, (2) with IMM to carry out changes to the information model, and (3) with NTF to receive notifications that may indicate error situations caused by the ongoing campaign. The Software Management Framework also provides an API for client processes to register their interest in receiving callbacks when a relevant upgrade campaign is initiated in the cluster and as it progresses through significant milestones. This allows for coordination of application specific actions 