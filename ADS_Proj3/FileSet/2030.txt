users of RUP do not understand that RUP is a process framework, they may perceive it as a weighty and expensive process. However a key concept within RUP was that the RUP process could and often should itself be refined. This was initially done manually, i.e. by writing a "Development case" document that specified the refined process to be used. Later the IBM Rational Method Composer product was created to help make this step simpler, so process engineers and project managers could more easily customize the RUP for their project needs. Many of the later variants of RUP, including OpenUP/Basic, the lightweight and open source version of RUP, are now presented as separate processes in their own right, and cater for different types and sizes of projects and trends and technologies in software development. Historically, as the RUP is often customized for each project by a RUP process expert, the project's overall success can be somewhat dependent on the abilities of this one person. ; Configuration and Change management discipline : The [[Change Management]] discipline in RUP deals with three specific areas: configuration management, change request management, and Status and measurement management. :* Configuration management: Configuration management is responsible for the systematic structuring of the products. Artifacts such as documents and models need to be under version control and these changes must be visible. It also keeps track of dependencies between artifacts so all related articles are updated when changes are made. :* Change request management: During the system development process many artifacts with several versions exist. [[change management|CRM]] keeps track of the proposals for change. :* Status and measurement management: Change requests have states such as new, logged, approved, assigned and complete. A change request also has attributes such as root cause, or nature (like defect and enhancement), priority etc. These states and attributes are stored in database so useful reports about the progress of the project can be produced. Rational also has a product to maintain change requests called [[Rational Clear Quest|Clear Quest]]. This activity has procedures to be followed. ;Project management discipline : The [[Project management]] discipline and [[project planning]] in the RUP occur at two levels. There is a coarse-grained or '''Phase''' plan which describes the entire project, and a series of fine-grained or '''Iteration''' plans which describe the iterations. This discipline focuses mainly on the important aspects of an iterative development process: Risk management, Planning an iterative project, through the life cycle and for a particular iteration, and Monitoring progress of an iterative project, metrics. However, this discipline of the RUP does not attempt to cover all aspects of project management. For example, it does not cover issues such as: *Managing people: hiring, training, etc. *Managing budget: defining, allocating, etc. *Managing contracts: with suppliers, with customers, etc. The project management discipline contains a number of other '''Plans''' and '''Artifacts''' that are used to control the project and to monitor its performance. Such '''Plans''' are: *'''The Phase Plan''' (The Software Development Plan) *'''The Iteration Plan''' ====Phase plan==== Each '''Phase''' is treated as a project, controlled and measured by the '''Software Development Plan''' which is grouped from a subset of monitoring plans: *The '''Measurement Plan''' defines the measurement goals, the associated metrics, and the primitive metrics to be collected in the project to monitor its progress. *The '''Risk Management Plan''' details how to manage the risks associated with a project. It details the risk management tasks that will be carried out, assigned responsibilities, and any additional resources required for the risk management activity. On a smaller scale project, this plan may be embedded within the Software Development Plan. *The '''Risk list''' is a sorted list of known and open risks to the project, sorted in decreasing order of importance and associated with specific mitigation or contingency actions. *The '''Problem Resolution Plan''' describes the process used to report, analyze, and resolve problems that occur during the project. *The '''Product Acceptance Plan''' describes how the customer will evaluate the deliverable artifacts from a project to determine if they meet a predefined set of acceptance criteria. It details these acceptance criteria, and identifies the product acceptance tasks (including identification of the test cases that need to be developed) that will be carried out, and assigned responsibilities and required resources. On a smaller scale project, this plan may be embedded within the '''Software Development Plan'''. ====Iteration plan==== The iteration plan is a fine-grained plan with a time-sequenced set of activities and tasks, with assigned resources, containing task dependencies, for the iteration. There are typically two iteration plans active at any point in time. *The '''current iteration plan''' is used to track progress in the current iteration. *The '''next iteration plan''' is used to plan the upcoming iteration. This plan is prepared toward the end of the current iteration. To define the contents of an iteration you need: *the project plan *the current status of the project (on track, late, large number of problems, requirements creep, etc.) *a list of scenarios or [[use cases]] that must be completed by the end of the iteration *a list of risks that must be addressed by the end of the iteration *a list of changes that must be incorporated in the product (bug fixes, changes in requirements) These lists must be ranked. The objectives of an iteration should be aggressive so that when difficulties arise, items can be dropped from the iterations based on their ranks. Therefore there is a set of supported '''Artifacts''' that help in measuring and building each iteration plan. ====Work Product (Artifact)==== IBM has replaced the term "[[Artifact (software development)|Artifact]]" with the term "work product". The work products used are: *The '''Iteration Assessment''' captures the result of an iteration, the degree to which the evaluation criteria were met, lessons learned, and changes to be done. *The '''project measurements''' is the project's active repository of metrics data. It contains the most current project, resources, process, and product measurements at the primitive and derived level. *The '''periodic Status Assessment''' provides a mechanism for 