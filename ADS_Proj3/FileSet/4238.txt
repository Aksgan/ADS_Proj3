of prefix stripping. Hebrew stems can be two, three or four characters; but not more.), and so on, while a stemmer for Hungarian would be easier to implement due to the precise rules in the language for flexion.{{Citation needed|date=December 2007}}. ===Multilingual stemming=== Multilingual stemming applies morphological rules of two or more languages simultaneously instead of rules for only a single language when interpreting a search query. Commercial systems using multilingual stemming exist.<ref>[http://www.coveo.com/en/Support/articles/Information%20-%20CES4-060330-3%20-%20Understanding%20Stemming.htm "Understanding Stemming"]. Coveo Knowledge Base (2006)</ref> ==Error metrics== There are two error measurements in stemming algorithms, '''overstemming''' and '''understemming'''. Overstemming is an error where two separate inflected words are stemmed to the same root, but should not have been - a [[false positive]]. Understemming is an error where two separate inflected words should be stemmed to the same root, but are not - a [[false negative]]. Stemming algorithms attempt to minimize each type of error, although reducing one type can lead to increasing the other. <!-- add some examples, please --> ==Applications== ===Information retrieval=== Stemmers are common elements in [[Information Retrieval|query systems]] such as [[World Wide Web|Web]] [[search engine]]s, since a user who runs a query on "daffodils" would probably also be interested in documents that contain the word "daffodil" (without the s). The effectiveness of stemming for English query systems were soon found to be rather limited, however, and this has led early [[Information retrieval]] researchers to deem stemming irrelevant in general.<ref>Ricardo Baeza-Yates and Berthier Ribeiro-Neto (1999). ''Modern Information Retrieval''. ACM Press/Addison Wesley.</ref> An alternative approach, based on searching for [[n-gram]]s rather than stems, may be used instead. Also, recent research has shown greater benefits for retrieval in other languages.<ref>Jaap Kamps, Christof Monz, Maarten de Rijke and Börkur Sigurbjörnsson (2004). Language-dependent and Language-independent Approaches to Cross-Lingual Text Retrieval. In: C. Peters, J. Gonzalo, M. Braschler and M. Kluck, eds. ''Comparative Evaluation of Multilingual Information Access Systems''. Springer Verlag, pp. 152–165.</ref><ref>Eija Airio (2006). Word normalization and decompounding in mono- and bilingual IR. Information Retrieval '''9''':249–271.</ref> === Use in commercial products === Many commercial companies have been using stemming since at least the 1980s and have produced algorithmic and lexical stemmers in many languages.<ref>[http://www.dtsearch.com/CS_DeveloperTools.html#languages] International Developer Tools. dtSearch</ref><ref>[http://technet2.microsoft.com/Office/en-us/library/87065c9d-d39d-479d-909b-02160ec6d7791033.mspx?mfr=true] Building Multilingual Solutions by using Sharepoint Products and Technologies. Microsoft Technet</ref> The Snowball stemmers have been compared with commercial lexical stemmers with varying results.<ref>[http://www.clef-campaign.org/2003/WN_web/19.pdf CLEF 2003: Stephen Tomlinson compared the Snowball stemmers with the Hummingbird lexical stemming (lemmatization) system.]</ref><ref>[http://www.clef-campaign.org/2004/working_notes/WorkingNotes2004/21.pdf CLEF 2004: Stephen Tomlison "Finnish, Portuguese and Russian Retrieval with Hummingbird SearchServer"]</ref> [[Google search]] adopted word stemming in 2003.<ref>[http://www.google.com/support/bin/static.py?page=searchguides.html&ctx=basics#stemming The Essentials of Google Search]. Web Search Help Center. [[Google|Google Inc.]]</ref> Previously a search for "fish" would not have returned "fishing". Other software search algorithms vary in their use of word stemming. Programs that simply search for substrings obviously will find "fish" in "fishing" but when searching for "fishes" will not find occurrences of the word "fish". ==See also== * [[Root (linguistics)]] - linguistic definition of the term "root" * [[Stem (linguistics)]] - linguistic definition of the term "stem" * [[Morphology (linguistics)]] * [[Lemma (linguistics)]] - linguistic definition * [[Lemmatization]] * [[Lexeme]] * [[Inflection]] * [[Derivation (linguistics)|Derivation]] - stemming is a form of reverse derivation * [[Natural language processing]] - stemming is generally regarded as a form of NLP * [[Text mining]] - stemming algorithms play a major role in commercial NLP software * [[Computational linguistics]] ==References== {{reflist|2}} == Further reading == <div style="font-size:85%; -moz-column-count:2; column-count:2;"> * Dawson, J.L. (1974) ''Suffix Removal for Word Conflation'', Bulletin of the Association for Literary and Linguistic Computing, 2(3): 33–46 * Frakes, W.B. (1984) ''Term Conflation for Information Retrieval'', Cambridge University Press * Frakes, W.B. & Fox, C.J. (2003) ''Strength and Similarity of Affix Removal Stemming Algorithms'', SIGIR Forum, 37: 26–30 * Frakes, W. B. (1992) ''Stemming algorithms, Information retrieval: data structures and algorithms'', Prentice-Hall, Inc., Upper Saddle River, NJ * Hafer, M.A. & Weiss, S.F., (1974) ''Word segmentation by letter successor varieties'', Information Processing & Management 10 (11/12), 371–386. * Harman, D., (1991) ''How effective is suffixing?'' Journal of the American Society for Information Science 42 (1), 7–15. * Hull, D.A. (1996) ''Stemming Algorithms – A Case Study for Detailed Evaluation'', JASIS, 47(1): 70–84 * Hull, D.A. & Grefenstette, G. (1996) A'' Detailed Analysis of English Stemming Algorithms'', Xerox Technical Report * Kraaij, W. & Pohlmann, R., 1996: ''Viewing stemming as recall enhancement'', in H-P. Frei, D. Harman, P. Schauble & R. Wilkinson (eds.), Proceedings of the 17th ACM SIGIR conference held at Zurich, August 18–22, pp. 40–48. * Krovetz, R. (1993) ''Viewing Morphology as an Inference Process'', In Proceedings of ACM-SIGIR93, pp191–203 * Lennon, M., Pierce, D.S., Tarry, B.D. & Willett, P. (1981) ''An Evaluation of some Conflation Algorithms for Information Retrieval'', Journal of Information Science, 3: 177–183 * Lovins, J. (1971) ''[http://www.eric.ed.gov/sitemap/html_0900000b800c571a.html Error Evaluation for Stemming Algorithms as Clustering Algorithms]'', JASIS, 22: 28–40 * Lovins, J. B. "Development of a Stemming Algorithm." Mechanical Translation and Computational Linguistics 11, 1968, 22—31. * Marie-Claire, J. and Smith, D. (2005) ''Conservative stemming for search and indexing'' * Paice, C.D. (1990) ''[http://www.comp.lancs.ac.uk/computing/research/stemming/paice/article.htm Another Stemmer]'', SIGIR Forum, 24: 56–61 * Paice, C.D. (1996) ''[http://www3.interscience.wiley.com/cgi-bin/abstract/57804/ABSTRACT Method for Evaluation of Stemming Algorithms based on Error Counting]'', JASIS, 47(8): 632–649 * Popovic, M. and Willett, P., (1992) ''[http://www3.interscience.wiley.com/cgi-bin/abstract/10049677/ABSTRACT The effectiveness of stemmng for natural language access to Slovene textual data]'', Journal of the American Society for Information Science, 43(5), 384–390. * Porter, M.F. (1980) ''[http://telemat.det.unifi.it/book/2001/wchange/download/stem_porter.html An Algorithm for Suffix Stripping]'', Program, 14(3): 130–137 * Savoy, J., (1993) ''[http://www3.interscience.wiley.com/cgi-bin/abstract/10049824/ABSTRACT?CRETRY=1&SRETRY=0 Stemming of French words based on grammatical categories]'' Journal of the American Society for Information Science, 44(1), 1–9. * Ulmschneider, J.E. & Doszkocs, (1983) ''[http://www.eric.ed.gov/sitemap/html_0900000b8007ea83.html A practical stemming algorithm for online search assistance]'', Online Review, 7(4), 301–318. * Xu, J. & Croft, W.B., (1998) ''[http://portal.acm.org/citation.cfm?doid=267954.267957 Corpus-based stemming using coocurrence of word variants]'', ACM Transactions on Information Systems, 16(1), 61–81. </div> == External links == * [http://code.google.com/p/ir-themis/ Themis] - open source IR framework, includes Porter stemmer implementation (PostgreSQL, Java API) * [http://snowball.tartarus.org Snowball] - free stemming algorithms for many languages, includes source code, including stemmers 