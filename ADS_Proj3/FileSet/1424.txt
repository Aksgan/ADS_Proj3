excess capabilities are ''not frills,'' but are necessary for [[maintainability]] and for avoiding early [[obsolescence]]. Extensibility can also mean that a software system's behavior is modifiable at runtime, without recompiling or changing the original source code. For example, a software system may have a public [[Application Programming Interface]] that allows its behavior to be extended or modified by people who don't have access to the original source code. Although usually applied to engineered [[systems]] involving [[software]], it can be applied to any type of engineering. For example, houses can be built with future extensions in mind. The [[Prince Edward Viaduct]] located in [[Toronto]], [[Ontario]], [[Canada]] was built to accommodate a future subway line. Though the application to software is relatively new, the word has been a rare but valid part of English for a long time. The ''[[Oxford English Dictionary]]'' cites examples going back to the 17th century. ==See also== * [[Extensibility pattern]] * [[Extensible programming]] [[Category:Software architecture]] [[fr:Extensibilité]] [[ja:拡張性]] [[pt:Extensibilidade]] [[sl:Razširljivost]]</text> </page> <page> <id>12953</id> <title>Extensive-form game</title> <text>An '''extensive-form game''' is a specification of a game in [[game theory]]. This form represents the game as a [[Tree (graph theory)|tree]]. Each [[Vertex (graph theory)|node]] (called a '''decision node''') represents every possible state of play of the game as it is played. Play begins at an unique '''initial node''' and flows through the tree along a path determined by the players until a '''terminal node''' is reached, where [[Outcome (Game theory)|play ends]] and payoffs are assigned to all players. Each non-terminal node belongs to a player; that player chooses among the possible moves at that node. Each possible move is an [[Edge (graph theory)|edge]] leading from that node to another node. <!--Any node that has only one edge connected to it is a '''terminal node''' and represents the end of the game (and also a [[strategy profile]]).--> The extensive form is an alternative to the [[normal-form game|normal-form]] representation. Unlike the normal form, the extensive form allows explicit modeling of interactions in which a player makes more than one move during the game, and moves contingent upon varying states. <!--(contrast with different concept, [[game tree]]) (?)--> ==Representation== A complete extensive-form representation specifies: # the players of a game # for every player every opportunity they have to move # what each player can do at each of their moves # what each player knows for every move # the payoffs received by every player for every possible combination of moves. [[Image:Extensive form game 1.JPG|270px|thumbnail|A game represented in extensive form]] The game on the right has two players: 1 and 2. The numbers by every non-terminal node indicate to which player that decision node belongs. The numbers by every terminal node represent the payoffs to the players (e.g. 2,1 represents a payoff of 2 to player 1 and a payoff of 1 to player 2). The labels by every edge of the graph are the name of the action that that edge represents. The initial node belongs to player 1, indicating that player 1 moves first. Play according to the tree is as follows: player 1 chooses between ''U'' and ''D''; player 2 observes player 1's choice and then chooses between ''U' '' and ''D' ''. The payoffs are as specified in the tree. There are four outcomes represented by the four terminal nodes of the tree: (U,U'), (U,D'), (D,U') and (D,D'). The payoffs associated with each outcome respectively are as follows (0,0), (2,1), (1,2) and (3,1). If player 1 plays ''D'', player 2 will play ''U' '' to maximise his payoff and so player 1 will only receive 1. However, if player 1 plays ''U'', player 2 maximises his payoff by playing ''D' '' and player 1 receives 2. Player 1 prefers 2 to 1 and so will play ''U'' and player 2 will play ''D' ''. This is the [[subgame perfect equilibrium]]. ==Infinite action space== It may be that a player has an infinite number of possible actions to choose from at a particular decision node. The device used to represent this is an arc joining two edges protruding from the decision node in question. If the action space is a continuum between two numbers, the lower and upper delimiting numbers are placed at the bottom and top of the arc respectively, usually with a variable that is used to express the payoffs. The infinite number of decision nodes that could result are represented by a single node placed in the centre of the arc. A similar device is used to represent action spaces that, whilst not infinite, are large enough to prove impractical to represent with an edge for each action. [[Image:Extensive form game 4.JPG|300px|thumbnail|left|A game with infinite action spaces represented in extensive form]] The tree on the left represents such a game, either with infinite action spaces (any [[real number]] between 0 and 5000) or with very large action spaces (perhaps any [[integer]] between 0 and 5000). This would be specified elsewhere. Here, it will be supposed that it is the latter and, for concreteness, it will be supposed it represents two firms engaged in [[Stackelberg competition]]. The payoffs to the firms are represented on the left, with q1 and q2 as the strategy they adopt and c1 and c2 as some constants (here marginal costs to each firm). The [[subgame perfect Nash equilibrium|subgame perfect Nash equilibria]] of this game can be found by taking the [[partial derivative|first partial derivative]] (reference?) of each payoff function with respect to the follower's (firm 2) strategy variable (q2) and finding its [[best response]] function, <math>q2(q1)=(5000-q1-c2)/2</math>. The same process can be done for the leader except that in calculating its profit, it knows that firm 2 will play the above response and so this can be substituted into its maximisation problem. It can then solve for q1 by taking the first derivative, yielding <math>q1*=(5000+c2-2c1)/2</math>. Feeding this into firm 2's best response function, <math>q2*=(5000+2c1-3c2)/4</math> and (q1*,q2*) is the subgame perfect Nash equilibrium. For example, if c1=c2=1000, the SPNE is (2000, 1000). ==Imperfect information== An advantage 