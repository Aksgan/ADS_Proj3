to pursue careers in information technology. These internships can introduce the student to interesting real-world tasks that typical software engineers encounter every day. Similar experience can be gained through [[military service]] in software engineering. ==Sub-disciplines== Software engineering can be divided into ten subdisciplines. They are:<ref name="BoDu04"/> * [[Software requirements]]: The elicitation, analysis, specification, and validation of [[requirements]] for [[software]]. * [[Software design]]: The design of software is usually done with [[Computer-Aided Software Engineering]] (CASE) tools and use standards for the format, such as the Unified Modeling Language ([[Unified Modeling Language|UML]]). * [[Software development]]: The construction of software through the use of programming languages. * [[Software testing]] * [[Software maintenance]]: Software systems often have problems and need enhancements for a long time after they are first completed. This subfield deals with those problems. * [[Software configuration management]]: Since software systems are very complex, their configuration (such as versioning and source control) have to be managed in a standardized and structured method. * Software engineering management: The management of software systems borrows heavily from [[project management]], but there are nuances encountered in software not seen in other management disciplines. * [[Software development process]]: The process of building software is hotly debated among practitioners; some of the better-known processes are the Waterfall Model, the Spiral Model, Iterative and Incremental Development, and Agile Development. * Software engineering tools, see [[Computer Aided Software Engineering]] * [[Software quality]] ==Related disciplines== Software engineering is a direct subfield of computer science and has some relations with [[management science]]. It is also considered a part of overall [[systems engineering]]. ===Systems engineering=== [[Systems engineering|Systems engineers]] deal primarily with the overall system design, specifically dealing more with physical aspects which include hardware design. Those who choose to specialize in computer hardware engineering may have some training in software engineering. ===Computer Software Engineers=== Computer Software Engineers are usually systems level (software engineering, information systems) computer science or software level computer engineering graduates. This term also includes general computer science graduates with a few years of practical on the job experience involving software engineering. ==See also== {{Main|Outline of software engineering}} {{multicol}} * [[Software Craftsmanship]] * [[List of basic software engineering topics]] * [[List of software engineering conferences]] * [[List of software engineering publications]] * [[List of software engineering topics]] * [[Bachelor of Software Engineering]] * [[Bachelor of Science in Information Technology]] {{multicol-break}} {{Portal box|Software|Software Testing}} {{multicol-end}} ==References== {{Reflist|2}} ==Further reading== *{{Cite book|last= Pressman|first=Roger S|authorlink=Roger S. Pressman | title = Software Engineering: A Practitioner's Approach |origyear = | edition = 6th | year = 2005 | publisher = McGraw-Hill | location = Boston, Mass | isbn = 0072853182}} *{{Cite book|last= Sommerville|first=Ian|authorlink=Ian Sommerville (academic) | title = Software Engineering|origyear = 1982 | url = http://www.pearsoned.co.uk/HigherEducation/Booksby/Sommerville/ | edition = 8th | year = 2007 | publisher = Pearson Education | location = Harlow, England | isbn = 0-321-31379-8 }} *{{Cite book|last= Jalote|first=Pankaj|authorlink=Pankaj Jalote | title = An Integrated Approach to Software Engineering |origyear = 1991 | url = http://www.springer.com/east/home?SGWisbn=5-102-22-52090005-0&changeHeader=true | edition = 3rd | year = 2005 | publisher = Springer | location = | isbn = 0-387-20881-X }} * {{Cite book|last= Ghezzi|first=Carlo | title = Fundamentals of Software Engineering|origyear = 1991 | edition = 2nd (International) | year = 2003 | publisher = Pearson Education @ Prentice-Hall | coauthors = Mehdi Jazayeri, Dino Mandrioli}} ==External links== {{Commons category|Software engineering}} * [http://www.acm.org/education/education/curric_vols/CC2005-March06Final.pdf Computing Curricula 2005: The Overview Report] by The Joint Task Force for Computing Curricula ACM/AIS/IEEE-CS * [http://sites.computer.org/ccse/ Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering] by The Joint Task Force on Computing Curricula ACM/IEEE-CS * [http://www.acmtyc.org/WebReports/SEreport/ Guidelines for Associate-Degree Transfer Curriculum in Software Engineering] by The ACM Two-Year College Education Committee and The IEEE Computer Society/ACM Joint Task Force on Software Engineering * [http://www.swebok.org Guide to the Software Engineering Body of Knowledge] * [http://www.bls.gov/oco/ocos267.htm Computer Software Engineers] - Definition and statistics from the U.S. [[Bureau of Labor Statistics]] * [http://StudentProjectGuide.info A Student's Guide to Software Engineering Projects] - a free online guide for students taking SE project courses {{Software Engineering}} {{Computer Science}} {{Technology}} {{DEFAULTSORT:Software Engineering}} [[Category:Software engineering| ]] [[af:Sagteware-ingenieurswese]] [[am:የሶፍትዌር አሠራር]] [[ar:هندسة البرمجيات]] [[ast:Inxeniería del software]] [[bs:Softverski inženjering]] [[ca:Enginyeria de programari]] [[cs:Softwarové inženýrství]] [[da:Softwareudvikling]] [[de:Softwaretechnik]] [[el:Μηχανική λογισμικού]] [[es:Ingeniería de software]] [[eu:Software-ingeniaritza]] [[fa:مهندسی نرم‌افزار]] [[fr:Génie logiciel]] [[ga:Innealtóireacht bogearraí]] [[gv:Jeshaghteyrys cooid vog]] [[gl:Enxeñaría de software]] [[ko:소프트웨어 공학]] [[hi:सॉफ्टवेयर इंजीनियरी]] [[hr:Programsko inženjerstvo]] [[id:Rekayasa perangkat lunak]] [[is:Hugbúnaðarverkfræði]] [[it:Ingegneria del software]] [[he:הנדסת תוכנה]] [[lo:Software engineering]] [[lv:Programminženierija]] [[lt:Programų inžinerija]] [[ml:സോഫ്റ്റ്വെയർ എഞ്ചിനീയറിങ്]] [[ms:Pembangunan perisian]] [[mn:Програм хангамжийн инженерчлэл]] [[nl:Software engineering]] [[ja:ソフトウェア工学]] [[no:Programvareutvikling]] [[pl:Inżynieria oprogramowania]] [[pt:Engenharia de software]] [[ro:Inginerie software]] [[ru:Инженерия программного обеспечения]] [[sq:Inxhinieri Programesh]] [[sk:Softvérové inžinierstvo]] [[sr:Инжењеринг софтвера]] [[su:Rékayasa software]] [[fi:Ohjelmistotuotanto]] [[sv:Programvaruutveckling]] [[tl:Software engineering]] [[ta:மென்பொருட் பொறியியல்]] [[th:วิศวกรรมซอฟต์แวร์]] [[tr:Yazılım mühendisliği]] [[vi:Công nghệ phần mềm]] [[yi:ווייכווארג אינזשעניריע]] [[zh:软件工程]]</text> </page> <page> <id>34993</id> <title>Software evolution</title> <text>{{Refimprove|date=October 2009}} '''Software evolution''' is the term used in [[software engineering]] (specifically [[software maintenance]]) to refer to the process of developing [[software]] initially, then repeatedly updating it for various reasons. ==General introduction== [[Fred Brooks]], in his key book ''[[The Mythical Man-Month]]'',<ref>[[Fred Brooks]], ''[[The Mythical Man-Month]]''. [[Addison-Wesley]], 1975 & 1995. ISBN 0-201-00650-2 & ISBN 0-201-83595-9.</ref> states that over 90% of the costs of a typical system arise in the maintenance phase, and that any successful piece of software will inevitably be maintained. In fact, [[Agile methods]] stem from maintenance like activities in and around web based technologies, where the bulk of the capability comes from frameworks and standards.{{Citation needed|date=October 2009}} Software maintenance address bug fixes and minor enhancements and software evolution focus on [[Adaptation (computer science)|adaptation]] and [[System migration|migration]]. ==Types of software maintenance== E.B. Swanson initially identified three categories of maintenance: corrective, adaptive, and perfective. Four categories of software were then catalogued by Lientz and Swanson (1980) <ref>Lientz, B.P. and Swanson, E.B., ''Software Maintenance Management, A Study Of The Maintenance Of Computer Application Software In 487 Data Processing Organizations''. Addison-Wesley, Reading MA, 1980. ISBN 0201042053</ref>. These have since been updated and normalized internationally in the [[ISO/IEC]] 14764:2006:<ref>[[ISO/IEC]] 14764:2006, 2006.</ref> * ''Corrective maintenance'': Reactive modification of a software product performed after delivery to correct discovered problems; * ''Adaptive maintenance'': Modification of a 