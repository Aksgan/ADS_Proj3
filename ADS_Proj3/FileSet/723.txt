is [[countable|at most countable]]. This is [[Froda's theorem]]. ''[[Thomae's function]]'' is discontinuous at every rational point, but continuous at every irrational point. The [[indicator function]] of the rationals, also known as the ''[[Dirichlet function]]'', is [[nowhere continuous|discontinuous everywhere]]. ==See also== *[[Removable singularity]] *[[Mathematical singularity]] *{{ml|Regular_space|Extension_by_continuity|Extension by continuity}} ==Notes== <references /> ==References== *{{cite book | last = Malik | first = S. C. | coauthors = Arora, Savita | title = Mathematical analysis, 2nd ed | publisher = New York: Wiley | date = 1992 | pages = | isbn = 0470218584 }} ==External links== * {{planetmath reference|title=Discontinuous|id=4447}} * [http://demonstrations.wolfram.com/Discontinuity/ "Discontinuity"] by [[Ed Pegg, Jr.]], [[The Wolfram Demonstrations Project]], 2007. * {{MathWorld | urlname=Discontinuity | title=Discontinuity}} [[Category:Mathematical analysis]] [[ca:Funcions i continuitat]] [[de:Unstetigkeitsstelle]] [[es:Clasificación de discontinuidades]] [[ko:불연속성의 분류]] [[it:Punto di discontinuità]] [[he:נקודת אי רציפות]] [[hu:Szakadás (matematika)]] [[nl:Discontinuïteit]] [[ja:不連続性の分類]] [[pl:Punkt nieciągłości]] [[sr:Прекиди функције]] [[sv:Diskontinuitet]] [[zh:不连续点]]</text> </page> <page> <id>6406</id> <title>Classifier (UML)</title> <text>{{Unreferenced|date=October 2006}} {{Context|date=October 2009}} A '''classifier''' is a category of [[Unified Modeling Language]] (UML) [[UML element|elements]] that have some common features, such as [[Attribute (computing)|attribute]]s or [[Method (computer science)|method]]s. A classifier is an [[Abstraction (computer science)|abstract]] [[metaclass]] classification concept that serves as a mechanism to show [[interface (computer science)|interfaces]], [[Class (computer science)|classes]], [[datatypes]] and [[component diagram|components]]. A classifier describes a [[set (computer science)|set]] of [[instantiation (computer science)|instances]] that have common behavioral and structural features ([[Instruction (computer science)|operations]] and [[attribute (computing)|attributes]], respectively). A classifier is a [[namespace (computer science)|namespace]] whose [[method (computer science)|members]] can specify a generalization hierarchy by referencing its general classifiers. A classifier is a type and can own generalizations, thereby making it possible to define generalization relationships to other classifiers. A classifier is a redefinable element, as it is possible to redefine nested classifiers. All [[Object (computer science)|objects]] that can have instances are classifiers. ==ImportantaAspects== *A classifier defines a [[namespace]]. *A classifier contains a set of features. *A classifier is [[generalize|generalizable]]. ==Types of UML Classifiers== *[[Class (computer science)|Class]] *[[Component diagram|Component]] *[[Datatype]] *[[Interface (computer science)|Interface]] *[[Vertex (graph theory)|Node]] *Signal *[[Subsystem]] *[[Use Case]] ==Predefined UML classifiers== *[[Actor (UML)|Actor]] *[[Association (object-oriented programming)|Association]] *[[Class (computer science)|Class]] *[[Component diagram|Component]] *[[Datatype]] *[[Interface (computer science)|Interface]] *[[Vertex (graph theory)|Node]] *Signal *[[Subsystem]] *[[Use Case]] ==External links== * [http://www.uml-diagrams.org/uml-core.html#classifier UML Classifier] {{UML}} {{DEFAULTSORT:Classifier (Uml)}} [[Category:Unified Modeling Language]] [[de:Classifier (UML)]] {{uml-stub}}</text> </page> <page> <id>6410</id> <title>Claude Berrou</title> <text>'''Claude Berrou''' (born September 23, 1951) is a [[France|French]] professor in [[electrical engineering]] at [[École Nationale Supérieure des Télécommunications de Bretagne]], now [[Telecom-Bretagne]]. He is the coinventor with [[Alain Glavieux]] in 1991 (and [[Punya Thitimajshima]] that developed later similar methods published in a doctorate thesis when he was a student in the same research lab) of a groundbreaking quasi-optimal error-correcting coding scheme called [[Turbo code]]s. == Key research activities == His current research activities are now concentrated on the application and extension of the ''Turbo'' technology in various domains, including his research on ''Artificial thinking'', because the Turbo-decoding has been recognized as a new instance of the very general principle of [[Belief propagation]]; one application of this principle has been invented for the decoding of [[Low-density parity-check code]]s (LDPC codes also known as ''Gallager codes'', in honor of [[Robert G. Gallager]], who developed the LDPC concept in his doctoral dissertation at [[MIT]] in 1960 as a theoretical model whose practical implementation was not widely developed until recently). The ''Turbo'' principle is generalized now by Claude Berrou and his lab team for the processing of various functions such as the [[demodulation]], the [[detection]] or the [[equalization]] using a network of multiple [[convolution code]]s working in parallel with probabilistic feedback. Other subjects of interest include all their possible applications in the field of [[artificial intelligence]], for example with a better understanding of natural biological thinking and memory for the implementation of such model using [[neural network]]s for the processing of pulsed signals with software and hardware methods with auto-selected and self-maintained combinations of activation cycles of adjacent neurons.<ref name="pensée artificielle">La pensée artificielle (The Artificial Thinking), research project paper by '''Claude Berrou''', ENST Bretagne (2008).</ref> == Publications == He is the author or coauthor of several books related to turbocodes and their encoding/decoding methods or implementation devices: * {{fr}} ''Codes et turbocodes'' (Codes and turbocodes) by '''Claude Berrou''' with Karine Amis Cavalec, [[Alain Glavieux]], Matthieu Arzel, Michel Jezequel, Charlotte Langlais, Raphaël Le Bidan, Samir Saoudi, Gérard Battail, Emmanuel Boutillon, Yannick Saouter, Emeric Maury, Christophe Laot, Sylvie Kerouedan, Frédéric Guilloud, and Catherine Douillard. Paris: Springer (2007), 397 p. (Iris), ISBN 978-2-287-32739-1. * {{fr}} ''Codage de canal — des bases théoriques aux turbocodes'' (Channel encoding — from theoretical grounds to turbocodes) by '''Alain Glavieux''' with Patrick Adde, Gérard Battail, Ezio Biglieri, Michel Jezequel, Alain Poli, Sandrine Vaton, Ramesh Pyndiah, Annie Picart, Catherine Douillard, and Claude Berrou. Paris: Hermès Science / Lavoisier (2005), 453 p. (''Traité IC2 : Traitement du signal et de l’image''), ISBN 2-7462-0953-5. He wrote many chapters in various books related to turbocodes in US publications, published several articles in various international research magazines with scientific review comities, and made many communications in international conferences with review comities. During his work on turbocodes and parallel convolutive encoding and decoding, he has authored several registered patents for methods and devices implementing this technology: * {{fr}} ''Procédé de codage convolutif correcteurs d’erreurs pseudo-systématique, procédé de décodage et dispositifs correspondents'' (Apparatus of pseudo-systematic error-correcting convolutive coding, associated decoding process and devices) by Claude Berrou and Patrick Adde ([[Institut TELECOM]]; [[École Nationale Supérieure des Télécommunications de Bretagne|Telecom Bretagne]]; [[France Telecom]] & [[TDF]]), France, April 1991. * {{fr}} ''Procédé de décodage d’un code convolutif à maximum de vraisemblance et pondération des décisions et décodeur correspondent'' (Apparatus of decoding for a convolutive code with maximum likelihood and weighted decisions, and associated decoder) by Claude Berrou (Institut TELECOM; Telecom Bretagne), France, April 1992. * {{fr}} ''Procédé de codage correcteurs d’erreurs à au moins deux codages convolutifs systématiques en parallèle, procédé de décodage itératif, module de décodage et décodeur correspondents'' (Apparatus of error-detecting encoding using at least two systematic convolutive encodings in parallel, process of iterative decoding, and associated decoding module and decoder) by Claude Berrou (Institut 