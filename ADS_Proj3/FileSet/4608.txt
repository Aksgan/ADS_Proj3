ui = | family = [[Unix-like]] | released = ? | latest_release_version = | latest_release_date = | latest_test_version = | latest_test_date = | marketing_target = | programmed_in = [[Assembly language]] | prog_language = | language = [[English language|English]] | updatemodel = | package_manager = | working_state = Historic | license = | website = }} '''UniFLEX''' is a [[Unix-like]] [[operating system]] developed by [[Technical Systems Consultants]] (TSC) for the [[Motorola]] [[Motorola 6809|6809]] family which allowed [[Computer multitasking|multitasking]] and [[multiprocessing]]. It was released for [[Direct memory access|DMA]]-capable 8" floppy, extended memory addressing hardware (software controlled 4KiB paging), Motorola 6809 based computers. Examples included machines from [[SWTPC]] and [[GIMIX]]. On SWTPC machines, UniFLEX also supported a 20 [[megabyte|MB]], 14[[inch|"]] hard drive ([[OEM]]'d from [[Century Data Systems]]) in 1979. Later on, it also supported larger 14" drives (up to 80 MB), 8" hard drives, and 5-1/4" floppies. Due to [[hardware]] limitations, main memory space for the UniFLEX kernel had to be smaller than 56 [[kilobyte|kB]] (code + data). This was achieved by writing the kernel entirely in [[assembly language]], and by removing a few classic [[Unix]] features, such as group permissions for files. Otherwise, UniFLEX was very similar to [[Version 7 Unix|Unix Version 7]], though some command names were slightly different. There was no technical reason for the renaming. By simply restoring the Unix style names, a considerable degree of "Unix Look & Feel" could be established, though due to memory limitations the command line interpreter (shell) was less capable than the Bourne Shell known from Unix Version 7. TSC never bundled a [[C (programming language)|C]] [[compiler]] with UniFLEX for the 6809, though they produced one. But in the early 1980s a C language implementation became available as a 3rd party product (the "McCosh Compiler"). Using such a C compiler could establish source-level compatibility with Unix Version 7, i.e., a number of Unix tools and applications could be ported to UniFLEX - if size allowed: Unix on a [[PDP-11]] limited executables to 64 kB of code and another 64 kB of data, while the UniFLEX limitation was approximately 56 kB for both, code and data together. In the mid 1980s a successor version for the [[Motorola]] [[68000]] was announced. Though it removed the pressing space limitations, it was not commercially successful because it had to compete with source-code ports of original Unix. The source code for UniFLEX and supporting software is available on the Internet. ([http://www.rtmx.com/UniFLEX The Missing 6809 UniFLEX Archive]) ==See also== * [[FLEX (operating system)]] * [[OS-9]] {{unix-like}} {{operating-system-stub}} [[Category:Unix variants]] [[Category:Discontinued operating systems]] [[es:Uniflex]]</text> </page> <page> <id>38773</id> <title>UniPro protocol stack</title> <text>{{About|a technical explanation of the architecture of the [[UniPro]]<sup>SM</sup> protocol stack|an overview of the protocol stack, its purpose, usage and status|UniPro}} {{Orphan|date=September 2010}} In mobile-telephone technology, the''' [[UniPro]]<ref name="UniPro1.1">[https://members.mipi.org/mipi-adopters/file/Specifications/Board%20Approved/MIPI%20UniPro%20Specification_v01-10-00.pdf UniPro 1.10 spec], requires an account at the MIPI website</ref> protocol stack''' follows the architecture of the classical [[OSI model|OSI Reference Model]]. In UniPro, the OSI Physical Layer is split into two sublayers: Layer 1 (the actual physical layer) and Layer 1.5 (the PHY Adapter layer) which abstracts from differences between alternative Layer 1 technologies. The actual physical layer is a separate specification as the various PHY options are reused<ref>[http://www.mipi.org/wgoverview.shtml Overview of MIPI specifications], D-PHY is used in the DSI, CSI, and UniPro specifications, M-PHY is used in the UniPro and DigRFv4 specifications</ref> in other [[Mobile Industry Processor Interface|MIPI Alliance]] specifications. {| border="1" cellpadding="3" style="margin: 1em auto 1em auto" |+ ''UniPro protocol stack (this color coding is a long-standing UniPro tradition)'' |- style="background:#D8D8D8; color:black" ! Layer # || Layer name || Functionality || Data unit name |- style="background:#7DD460; color:black" | align="center" | LA | align="center" | Application | Payload and transaction semantics | align="center" | Message |- style="background:#C2FA31; color:black" | align="center" | 4 | align="center" | Transport | Ports, multiplexing, flow control | align="center" | Segment |-style="background:#FAF931; color:black" | align="center" | 3 | align="center" | Network | Addressing, routing | align="center" | Packet |- style="background:#FF9400; color:black" | align="center" | 2 | align="center" | Data link | Single-hop reliability and priority-based arbitration | align="center" | Frame |- style="background:#FF1804; color:white" | align="center" | 1.5 | align="center" | PHY adapter | Physical layer abstraction and multi-lane support | align="center" | UniPro symbol |- style="background:#FF1804; color:white" | align="center" | 1 | align="center" | Physical layer (PHY) | Signaling, clocking, line encoding, power modes | align="center" | PHY symbol |} The UniPro specification itself covers Layers 1.5, 2, 3, and 4. The Application Layer (LA) is out of scope because different uses of UniPro will require different LA protocols. The Physical Layer (L1) is covered in separate MIPI specifications in order to allow the PHY to be reused by other (less generic) protocols if needed. OSI Layers 5 (Session) and 6 (Presentation) are, where applicable, counted as part of the Application Layer. ==Physical Layer (L1)== ===D-PHY=== Versions 1.0 and 1.1 of UniPro use MIPI's D-PHY technology for the off-chip Physical Layer. This PHY allows inter-chip communication over printed circuit board traces as well over roughly 20 cm of cabling. Data rates of the D-PHY are variable, but are in the order of 500-1000 Mbit/s (lower speeds are supported, but at decreased power efficiency). The D-PHY was named after the Roman number for 500 ("D"). The [[D-PHY]]<ref>[https://members.mipi.org/mipi-adopters/file-fix/Specifications/Board%20Approved/mipi_D-PHY_specification_v01-00-00.pdf MIPI D-PHY 1.00 specification],requires an account at the MIPI website</ref> uses differential signaling to convey PHY symbols over micro-stripline wiring. A second differential signal is used to transmit the associated clock signal from the source to the destination. The D-PHY technology thus uses a total of 4 signal wires per direction. Data traffic in the forward and reverse directions are totally independent at this level of the protocol stack. In UniPro, the D-PHY is used in a mode (called "8b9b" encoding) which conveys 8-bit bytes as 9-bit symbols. The UniPro protocol uses this to represent special control symbols (outside the usual 0 to 255 values). The PHY itself uses this to represent certain special symbols that have meaning to the PHY itself (e.g. IDLE symbols). Note that the ratio 8:9 