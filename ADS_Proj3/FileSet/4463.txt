be Coordinated Universal Time (UTC) regardless of any local time zone setting. Note that timegm is the inverse of gmtime. : '''Portability note:''' mktime is essentially universally available. timegm is rather rare. For the most portable (but non-thread safe) conversion from a UTC broken-down time to a simple time, set the TZ environment variable to UTC, call mktime, then set TZ back. === Unix extensions === The [[Single UNIX Specification]] (IEEE 1003.1, formerly POSIX) adds two functions to <code>time.h</code>: <code>'''asctime_r'''</code><ref>[http://www.opengroup.org/onlinepubs/9699919799/functions/asctime.html asctime]. The Open Group Base Specifications Issue 7, IEEE Std 1003.1-2008.</ref> and <code>'''ctime_r'''</code><ref>[http://www.opengroup.org/onlinepubs/9699919799/functions/ctime.html ctime]. The Open Group Base Specifications Issue 7, IEEE Std 1003.1-2008.</ref>. These are [[Reentrant (subroutine)|reentrant]] versions of <code>asctime</code> and <code>ctime</code>. Both functions require the caller to provide a buffer in which to store the textual representation of a moment in time. Since these functions are not in the C++ standard, they do not belong to the namespace <code>std</code> in that language. ==Constants== ;<code>CLK_PER_SEC</code> : Constant that defines the number of clock ticks per second. Used by the clock() function. ;<code>CLOCKS_PER_SEC</code> : An alternative name for CLK_PER_SEC used in its place in some libraries. ;<code>CLK_TCK</code> : Obsolete macro for CLK_PER_SEC. ==Data types== ;<code>clock_t</code> : Data type returned by clock().<br>Generally defined as int or long int. ;<code>[[time_t]]</code> : Data type returned by time().<br>Generally defined as int or long int. ;<code>[[struct]] tm</code> : A "broken-down" (componentized) calendar representation of time. ===Calendar time=== Calendar time (also known as "broken-down time") in the C standard library is represented as the <code>[[struct]]</code> <code>tm</code> structure, consisting of the following members: {|class="wikitable" width="80%" |- ! width=25%|Member || Description |- | <code>[[Integer (computer science)|int]] tm_hour</code> || hour (0 – 23) |- | <code>int tm_isdst</code> || [[Daylight Saving Time|Daylight saving time]] enabled (> 0), disabled (= 0), or unknown (< 0) |- | <code>int tm_mday</code> || day of the month (1 – 31) |- | <code>int tm_min</code> || minutes (0 – 59) |- | <code>int tm_mon</code> || month (0 – 11, 0 = January) |- | <code>int tm_sec</code> || seconds (0 – 60, 60 = Leap second) |- | <code>int tm_wday</code> || day of the week (0 – 6, 0 = Sunday) |- | <code>int tm_yday</code> || day of the year (0 – 365) |- | <code>int tm_year</code> || year since 1900 |} ==Examples== This source code snippet prints the current time to the standard output stream. <source lang="c"> #include <stdio.h> #include <time.h> int main(void) { time_t timer = time(NULL); printf("ctime is %s\n", ctime(&timer)); return 0; } </source> ==References== * {{cite book |date=2001-07-06 |title=The GNU C Library Reference Manual |chapter=Calendar Time |url=http://www.gnu.org/software/libc/manual/html_node/Calendar-Time.html |accessdate=2007-04-03 }} * {{man|bd|time.h|SUS|time types}} * {{cite book |date=2008-12-09 |title=The Open Group Base Specifications |chapter=gmtime |url=http://www.opengroup.org/onlinepubs/009695399/functions/gmtime.html}} <references/> {{DEFAULTSORT:Time.H}} [[Category:C standard library headers]] [[es:Time.h]] [[fr:Time.h]] [[ko:Time.h]] [[it:Time.h]] [[pt:Time.h]] [[ru:Time.h]]</text> </page> <page> <id>37749</id> <title>TimeML</title> <text>'''TimeML''' is a set of rules for encoding documents electronically. It is defined in the [http://www.timeml.org/site/publications/timeMLdocs/timeml_1.2.1.html TimeML Specification version 1.2.1] developed by several efforts, lead in large part by the Laboratory for Linguistics and Computation at [[Brandeis University]]. The TimeML project's goal is to create a standard markup language for temporal events in a document. TimeML addresses four problems regarding event markup, including time stamping (with which an event is anchored to a time), ordering events with respect to one another, reasoning with contextually underspecified temporal expressions, and reasoning about the length of events and their outcomes.<ref>"http://www.timeml.org". Retrieved 2010-04-11.</ref> ==History== '''TimeML''' was conceptualized in 2002 during the [http://www.timeml.org/site/terqas/index.html TERQAS (Time and Event Recognition for Question Answering Systems) workshops] organized by Professor [[James Pustejovsky]] of [[Brandeis University]]. The TERQAS Workshops set out to address the problem of how to enhance natural language [[question answering]] systems to answer temporally-based questions about the events and entities in news articles. During these workshops, TimeML version 1.0 was defined, and the [http://www.timeml.org/site/timebank/timebank.html TimeBank] corpus was created as an illustration. In 2003, the [http://www.timeml.org/site/tango/index.html TANGO (TimeML Annotation Graphical Organizer) workshops] produced a graphical annotation tool for TimeML. The [http://www.timeml.org/site/tarsqi/index.html TARSQI (Temporal Awareness and Reasoning Systems for Question Interpretation) project] currently develops algorithms that tag events and time expressions in natural language texts, anchor them temporally, and order them. <h3>Versions</h3> According to the official TimeML website, there are currently three versions of the TimeML specification language, although it is rumored that other versions exist.<ref>"http://www.timeml.org/site/publications/specs.html". Retrieved 2010-04-19.</ref> <h4>Version 1.1</h4> TimeML version 1.1 was produced in 2004. <h4>Version 1.2</h4> TimeML version 1.2 was produced in 2004, shortly after the release of version 1.1. <h4>Version 1.2.1</h4> In 2005, version 1.2.1 was defined. There were several changes made to the language, and are described in the version 1.2.1 TimeML guideline as such: <blockquote> *The nf_morph attribute that was part of MAKEINSTANCE has been changed to pos (part of speech), and the PRESPART, PASTPART, and INFINITIVE elements of nf_morph redistributed to tense. *The optional syntax attribute was added to SLINK, ALINK, and TLINK. Syntax can be used to hold CDATA, but is generally only used by annotation programs to hold the data that led to the creation of the tag. *The optional comment attribute was added to all TimeML elements, for the purpose of giving (human) annotators a place to put observations about annotated text. </blockquote> <h4>ISO-TimeML<h4> [[ISO-TimeML]] was presented to the ISO for consideration as a standard in August 2007. It was then revised, voted on, and approved as an international standard by March 2009. ==Work Group Members== *[[James Pustejovsky]] of [[Brandeis University]] (Editor) *Rob Gaizauskas *Graham Katz *Bob Ingria *Jose Castaeo *Inderjeet Mani *Antonio Sanfilippo *Dragomir Radev *Patrick Hanks *Marc Verhagen *Beth Sundheim *Andrea Setzer *Frank Schilder *Jerry Hobbs <br /> ==TimeML Tags== The following tags defined by the TimeML specification version 1.2.1.<ref>"http://www.timeml.org/site/publications/timeMLdocs/timeml_1.2.1.html". Retrieved 2010-04-15.</ref> <h4>TIMEML</h4> The TIMEML tag is similar to the root tag in an XML document. It declares that the rest of the document surrounded by the TIMEML tag is encoded with TimeML tags. <h4>EVENT</h4> The EVENT tag is used to annotate those elements in a text that mark the semantic events described by it. Syntactically, EVENTs are typically verbs, although event nominals, such as "crash" in "...killed by the 