Coding In C and C++], Making Your Code Faster, Stronger, Saferâ€¦ {{DEFAULTSORT:Secure Coding}} [[Category:Computer security]] {{Software-stub}}</text> </page> <page> <id>33614</id> <title>Secure file transfer program</title> <text>The sftp command is a client program implementing the [[SSH file transfer protocol]].<ref name="openssh">[http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&sektion=1 sftp man page from the openssh project]</ref> This should not be confused with running an [[FTP_over_SSH|FTP client over an SSH connection]]. sftp is part of the [[OpenSSH]] project.<ref name="openssh" /> <references/> [[Category:Cryptographic protocols]] [[Category:Cryptographic software]] {{security-software-stub}}</text> </page> <page> <id>33635</id> <title>Security Assertion Markup Language</title> <text>'''Security Assertion Markup Language''' ('''SAML''') is an [[XML]]-based [[open standard]] for exchanging [[authentication]] and [[authorization]] data between [[security domain]]s, that is, between an ''identity provider'' (a producer of assertions) and a ''service provider'' (a consumer of assertions). SAML is a product of the [[OASIS (organization)|OASIS]] Security Services Technical Committee. The single most important problem that SAML is trying to solve is the ''Web Browser Single Sign-On'' ([[Single sign-on|SSO]]) problem, a problem also addressed by the [[OpenID]] protocol. [[Single sign on|Single sign-on]] solutions are abundant at the [[intranet]] level (using [[HTTP cookie|cookies]], for example) but extending these solutions beyond the intranet has been problematic and has led to the proliferation of non-interoperable proprietary technologies. SAML assumes the ''principal'' (often a user) has enrolled with at least one identity provider. This identity provider is expected to provide local authentication services to the principal. However, SAML does not specify the implementation of these local services; indeed, SAML does not care how local authentication services are implemented (although individual service providers most certainly will). Thus a service provider relies on the identity provider to identify the principal. At the principal's request, the identity provider passes a SAML assertion to the service provider. On the basis of this assertion, the service provider makes an [[access control]] decision. ==History of SAML== The [[OASIS (organization)|OASIS]] Security Services Technical Committee (SSTC), which met for the first time in January 2001, was chartered "to define an XML framework for exchanging authentication and authorization information." [http://lists.oasis-open.org/archives/security-services/200101/msg00014.html] To this end, the following intellectual property was contributed to the SSTC during the first two months of that year: * ''Security Services Markup Language'' (S2ML) from Netegrity * ''AuthXML'' from Securant * ''XML Trust Assertion Service Specification'' (X-TASS) from VeriSign * ''Information Technology Markup Language'' (ITML) from Jamcracker Building on this work, in November 2002 OASIS announced the Security Assertion Markup Language (SAML) V1.0 specification as an OASIS Standard. Meanwhile, the [[Liberty Alliance]], a large consortium of companies, non-profit and government organizations, proposed an extension to the SAML standard called the Liberty Identity Federation Framework (ID-FF). Like its SAML predecessor, Liberty ID-FF proposed a standardized, cross-domain, web-based, single sign-on framework. In addition, Liberty described a ''circle of trust'', where each participating domain is trusted to accurately document the processes used to identify a user, the type of authentication system used, and any policies associated with the resulting authentication credentials. Other members of the circle of trust may examine these policies to determine whether to trust such information. While Liberty was developing ID-FF, the SSTC began work on a minor upgrade to the SAML standard. The resulting SAML V1.1 specification, ratified by the SSTC in September 2003, is widely implemented and deployed today. Then, in the same month, Liberty contributed ID-FF to OASIS, thereby sowing the seeds for the next major version of SAML. Thus in March 2005, SAML V2.0 was announced as an OASIS Standard. SAML V2.0 represents the convergence of Liberty ID-FF and other proprietary extensions, as well as early versions of SAML itself. Implementations and deployments of SAML V2.0 are in progress as of this writing (March-2007).{{Update after|2010|11|13}} ==Versions of SAML== SAML has undergone one minor and one major revision since V1.0. * SAML 1.0 was adopted as an OASIS Standard in November 2002 * [[SAML 1.1]] was ratified as an OASIS Standard in September 2003 * [[SAML 2.0]] became an OASIS Standard in March 2005 The Liberty Alliance contributed its Identity Federation Framework (ID-FF) to the OASIS SSTC in September 2003: * ID-FF 1.1 was released in April 2003 * ID-FF 1.2 was finalized in November 2003 ===Differences between V1.1 and V1.0=== Versions 1.0 and 1.1 of SAML are similar. See [[#SAMLDiff]] for specific differences between these two standards. ===Differences between V2.0 and V1.1=== The [https://spaces.internet2.edu/display/SHIB/SAMLDiffs differences between SAML 2.0 and SAML 1.1] are substantial. Although the two standards address the same use case, SAML 2.0 is incompatible (on the wire) with its predecessor. ===Differences between V2.0 and ID-FF 1.2=== Although ID-FF 1.2 was contributed to OASIS as the basis of SAML 2.0, there are some important [https://spaces.internet2.edu/display/SHIB/SAMLLibertyDiffs differences between SAML 2.0 and ID-FF 1.2]. In particular, the two specifications, despite their common roots, are incompatible (on the wire). ==SAML building blocks== SAML is built upon a number of existing standards: <!-- Don't change "Extensible" to "eXtensible"! See http://www.xml.com/axml/notes/TheCorrectTitle.html from the Annotated XML Specification. --> ; Extensible Markup Language (XML): Most SAML exchanges are expressed in a standardized dialect of [[XML]], which is the root for the name SAML (Security Assertion Markup Language). ; XML Schema: SAML assertions and protocols are specified (in part) using [[XML Schema (W3C)|XML Schema]]. ; XML Signature: Both [[SAML 1.1]] and [[SAML 2.0]] use digital signatures (based on the [[XML Signature]] standard) for authentication and message integrity. ; XML Encryption: Using [[XML Encryption]], [[SAML 2.0]] provides elements for encrypted name identifiers, encrypted attributes, and encrypted assertions (SAML 1.1 does not have encryption capabilities). ; Hypertext Transfer Protocol (HTTP): SAML relies heavily on [[HTTP]] as its communications protocol. ; SOAP: SAML specifies the use of [[SOAP (protocol)|SOAP]], specifically [http://www.w3.org/TR/2000/NOTE-SOAP-20000508/ SOAP 1.1]. ==The Anatomy of SAML== <!-- Image with unknown copyright status removed: [[Image:Saml-anatomy.gif|thumb|SAML Anatomy]] --> SAML defines XML-based assertions and protocols, bindings, and profiles. The term ''SAML Core'' refers to the general syntax and semantics of SAML assertions as well as the protocol used to request and transmit those assertions from one system entity to another. ''SAML protocol'' refers to '''what''' is transmitted, not '''how''' (the latter is determined by the choice of binding). So SAML 