them as sets, returning the set union, intersection, or difference |- | and, or|| boolean conjunction and disjunction. Negation is achieved using the <code>not()</code> function. |- | to || defines an integer range, for example <code>1 to 10</code> |- | instance of || determines whether a value is an instance of a given type |- | cast as || converts a value to a given type |- | castable as || tests whether a value is convertible to a given type |} Conditional expressions may be written using the syntax <code>if (A) then B else C</code>. XPath 2.0 also offers a <code>for</code> expression, which is a small subset of the [[FLWOR]] expression from [[XQuery]]. The expression <code>for $x in X return Y</code> evaluates the expression <code>Y</code> for each value in the result of expression <code>X</code> in turn, referring to that value using the variable reference <code>$x</code>. == Function library == The function library in XPath 2.0 is greatly extended from the function library in XPath 1.0. ('''Bold''' items are available in XPath 1.0) The functions available include the following: {|class="wikitable" !Purpose !! Example Functions |- | General string handling||lower-case, upper-case, '''substring''', '''substring-before''', '''substring-after''', '''translate''', starts-with, ends-with, '''contains''', '''string-length''', '''concat''', '''normalize-space''', normalize-unicode |- | Regular expressions||matches, replace, tokenize |- | Arithmetic||count, '''sum''', avg, min, max, '''round''', '''floor''', '''ceiling''', abs |- | Dates and times ||adjust-dateTime-to-timezone, current-dateTime, day-from-dateTime, month-from-dateTime, days-from-duration, months-from-duration, etc. |- | Properties of nodes||'''name''', node-name, '''local-name''', '''namespace-uri''', base-uri, nilled |- | Document handling||doc, doc-available, document-uri, collection, id, idref |- | URIs|| encode-for-uri, escape-html-uri, iri-to-uri, resolve-uri |- | QNames|| QName, namespace-uri-from-QName, prefix-from-QName, resolve-QName |- | Sequences || insert-before, remove, subsequence, index-of, distinct-values, reverse, unordered, empty, exists |- | Type checking || one-or-more, exactly-one, zero-or-one |} == Backwards compatibility == Because of the changes in the data model and type system, not all expressions in XPath 2.0 have exactly the same effect as in 1.0. The main difference is that XPath 1.0 was more relaxed about type conversion, for example comparing two strings (<code>"4" > "4.0"</code>) was quite possible but would do a numeric comparison; in XPath 2.0 this is defined to compare the two values as strings using a context-defined collating sequence. To ease transition, XPath 2.0 defines a mode of execution in which the semantics are modified to be as close as possible to XPath 1.0 behavior. When using [[XSLT 2.0]], this mode is activated by setting <code>version="1.0"</code> as an attribute on the <code>xsl:stylesheet</code> element. This still doesn't offer 100% compatibility, but any remaining differences are only likely to be encountered in unusual cases. ==Support== {{Expand section|date=December 2009}} Support for XPath 2.0 is still limited. * For browser support, see [[Comparison of layout engines (XML)#Query_technologies|Comparison of layout engines (XML)]]. ==References== <references/> ==External links== *[http://www.w3.org/TR/xpath20/ XPath 2.0 specification] *[http://www.xml.com/pub/a/2002/03/20/xpath2.html What's New in XPath 2.0] {{XSL}} {{W3C Standards}} {{Use dmy dates|date=January 2011}} {{DEFAULTSORT:Xpath 2.0}} [[Category:XML]] [[Category:XML data access]]</text> </page> <page> <id>40740</id> <title>XSIL</title> <text>'''XSIL''' (Extensible Scientific Interchange Language) is an [[XML]]-based transport language for scientific data, supporting the inclusion of both in-file data and [[Metadata (computing)|metadata]]. The language comes with an extensible [[Java (programming language)|Java]] [[Object (computer science)|object]] model. The language's elementary objects include Param (arbitrary association between a [[keyword (computer programming)|keyword]] and a value), Array, Table (a set of column headings followed by a set of records), and Stream, which enables one to either encapsulate [[data]] inside the XSIL [[Computer file|file]] or point to an external data source. [[Binary Format Description language|BFD]] is an XML dialect based on XSIL. ==External links== * [http://cacr.library.caltech.edu/29/ XSIL: Extensible Scientific Interchange Language] [[Category:XML-based standards]] [[Category:Data modeling languages]] {{compu-lang-stub}} [[pt:XSIL]]</text> </page> <page> <id>40743</id> <title>XSS worm</title> <text>An '''XSS worm''', sometimes referred to as a [[cross site scripting]] [[computer virus|virus]]<ref name='bindshell'>{{cite web|url=http://www.bindshell.net/papers/xssv/|title=The Cross-site Scripting Virus|first=Wade|last=Alcorn|date=2005-09-25|publisher=BindShell.net}}</ref>, is a malicious (or sometimes non-malicious) payload, usually written in [[JavaScript]], that propagates among visitors of a website in the attempt to [[Computer worm|progressively infect]] other visitors. They were first mentioned in relation to a cross site scripting vulnerability in [[Hotmail]]<ref>{{cite web|url=http://seclists.org/bugtraq/2002/Oct/119|title=XSS bug in hotmail login page|author=Berend-Jan Wever}}</ref>. {{Portal|Computer security}} ==Concept== XSS worms exploit a security vulnerability known as [[cross site scripting]] (or ''XSS'' for short) within a website, infecting users in a variety of ways depending on the vulnerability. Such site features as [[User profile|profiles]] and [[Online chat|chat systems]] can be affected by XSS worms when implemented improperly or without regard to security. Often, these worms are specific to a single web site, spreading quickly by exploiting specific vulnerabilities. Cross-site scripting vulnerabilities are commonly exploited in the form of worms on popular social or commercial websites, such as [[MySpace]], [[Yahoo!]], [[Orkut]], [[Justin.tv]], [[Facebook]] and [[Twitter]]. These worms can be used for malicious intent, giving an attacker the basis to steal personal information provided to the web site, such as passwords or credit card numbers. ==Examples== Several XSS worms have affected popular web sites. ===Samy worm=== {{Main article|Samy (XSS)}} The Samy worm, the largest known XSS worm, infected over 1 million [[MySpace]] profiles in less than 20 hours. The virus's author was sued and entered a plea agreement to a felony charge.<ref>{{cite web|publisher=Techspot.com|title=Myspace Speaks about Samy Kamkar's Sentencing|first=Justin|date=2007-01-31|last=Mann|url=http://www.techspot.com/news/24226-myspace-speaks-about-samy-kamkars-sentencing.html}}</ref> ===Justin.tv worm=== [[Image:Jtv graph1.png|thumb|Graph showing the progress of the XSS worm that impacted 2525 users on Justin.tv]] [[Justin.tv]] is a video casting website with an active user base of approximately 20 thousand users. The cross-site scripting vulnerability that was exploited was that the "Location" profile field was not properly sanitized before its inclusion in a profile page. The "Location" profile field was sanitized when included in the title of a profile page but not within the actual field in the page's body. This meant that the authors of the worm, in order to achieve stealth to boost the lifetime and spread of the worm, had to automatically remove the XSS payload from the title of the page from within the worm's code, which was already hidden by comments. After proper development of the worm, it was executed approximately Saturday, 28 Jun 2008 21:52:33 GMT, and finished on Sun, 29 Jun 2008 21:12:21 GMT. Since the 