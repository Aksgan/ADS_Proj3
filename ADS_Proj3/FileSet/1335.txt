and choose a point ''P''. In order to construct the curve, we make use of complex multiplication. In our case we compute the [[J-invariant]] : <math>j \equiv -960^3 \pmod{167} \equiv 107 \pmod{167}. \, </math> Next we compute <math>k = \frac{j}{1728-j} \pmod{167} \equiv 158 \pmod{167}</math> and we know our elliptic curve is of the form: : <math>y^2 = x^3 + 3kc^2x + 2kc^3</math>, where ''k'' is as described previously and ''c'' a non-square in <math>\mathbb{F}_{167}</math>. So we can begin with <math>r = 0, 3k \equiv 140 \pmod{167}</math> , <math>2k \equiv 149 \pmod{167}</math> which yields ''E'': <math>y^2 = x^3 + 140x + 149 \pmod{167}</math> Now, utilizing the point ''P'' = (6 ,6) on ''E'' it can be verified that 143''P'' = <math>P_\infty</math>. It is simple to check that 13(6 , 6) = (12 , 65) and 11P = (140 , 147), and so, by Morain's proposition, ''N'' is prime. ==Complexity and running times== Goldwasser and Kilian's elliptic curve primality proving algorithm terminates in expected polynomial time for at least : <math>1 - O\left(2^{-N\frac{1}{\log \log n}}\right)</math> of prime inputs. ===Conjecture=== Let <math>\pi(x)</math> be the number of primes smaller than ''x'' : <math>\exists c_1, c_2 > 0: \pi(x+\sqrt{x}) - \pi(x) \ge \frac{c_2\sqrt{x}}{\log^{c_1}x}</math> for sufficiently large ''x''. If one accepts this conjecture then the Goldwasser–Kilian algorithm terminates in expected polynomial time for every input. Also, if our ''N'' is of length ''k'', then the algorithm creates a certificate of size O<math>(k^2)</math> that can be verified in O<math>(k^4)</math>.<ref name="goldwasser">Goldwasser, Shafi, Kilian, Joe, ''Almost All Primes Can Be Quickly Certified'', http://www.iai.uni-bonn.de/~adrian/ecpp/p316-goldwasser.pdf</ref> Now consider another conjecture, which will give us a bound on the total time of the algorithm. ===Conjecture 2=== Suppose there exist positive constants <math>c_1</math> and <math>c_2</math> such that the amount of primes in the interval : <math>[x, x+\sqrt{2x}], x \ge 2</math> is larger than <math>c_1\sqrt{x}(\log x)^{-c_2}</math> Then the Goldwasser Kilian algorithm proves the primality of ''N'' in an expected time of : <math>O(\log n)^{10 + c_2}</math><ref name="morain"/> For the Atkin–Morain algorithm, the running time stated is O(<math>(\log N)^{6+\epsilon}</math>) for some <math>\epsilon > 0</math><ref name="atkin-morain"/> ==Primes of special form== For some forms of numbers, it is possible to find 'short-cuts' to a primality proof. This is the case for the [[Mersenne numbers]]. In fact, due to their special structure, which allows for easier verification of primality, the largest known prime number is a Mersenne number.<ref>http://primes.utm.edu/notes/by_year.html</ref> There has been a method in use for some time to verify primality of Mersenne numbers, known as the [[Lucas–Lehmer test]]. This test does not rely on elliptic curves. However we present a result where numbers of the form <math>N = 2^kn - 1</math> where <math>k,n \in \mathbb{Z}, k \ge 2</math>, n odd can be proven prime (or composite) using elliptic curves. Of course this will also provide a method for proving primality of Mersenne numbers, which correspond to the case where ''n'' = 1. It should be noted that there is a method in place for testing this form of number without elliptic curves (with a limitation on the size of k) known as the [[Lucas–Lehmer–Riesel test]]. The following method is drawn from the paper ''Primality Test for <math>2^kn - 1</math> using Elliptic Curves'', by Yu Tsumura.<ref name="tsumura">Tsumura, Yu, ''Primality Tests for <math>2^kn - 1</math> Using Elliptic Curves, {{arXiv|0912.5279v1}}</ref> ===Group structure of ''E''(F<sub>''N''</sub>)=== We take ''E'' as our elliptic curve, where ''E'' is of the form <math>y^2 = x^3 - mx</math> for <math>m \in \mathbb{Z}</math>, <math>m \equiv 0 \pmod{p}</math>, where <math>p \equiv 3 \pmod{4}</math> is prime, and <math>p+1 = 2^kn, k \in \mathbb{Z}, k \ge 2, n</math> odd. ===Theorem 1=== ''#E''<math>(\mathbb{F}_p) = p+1</math><ref name="washington"/> ===Theorem 2=== ''E''<math>(\mathbb{F}_p) \cong \mathbb{Z}_{2^kn}</math> or ''E''<math>(\mathbb{F}_p) \cong \mathbb{Z}_2 \oplus \mathbb{Z}_{2^{k-1}n}</math> Depending on whether or not ''m'' is a [[quadratic residue]] ''modulo p''. ===Theorem 3=== Let <math>p \equiv 3\pmod{4}</math> be prime, ''E'', ''k'', ''n'', ''m'' as above. Take ''Q'' = (''x'',''y'') on ''E'', ''x'' a quadratic nonresidue ''modulo p''. Then the order of ''Q'' is divisible by <math>2^k</math> in the cyclic group <math>E(\mathbb{F}_p) \cong \mathbb{Z}_{2^{k}n}</math>. First we will present the case where ''n'' is relatively small with respect to <math>2^k</math>, and this will require one more theorem. ===Theorem 4=== Choose a <math>\lambda > 1</math>. ''E'', ''k'', ''n'', ''m'' are specified as above with the added restrictions that : <math>n \le \sqrt{p}/\lambda</math> and <math>\lambda\sqrt{p} > (p^{1/4} + 1)^2 \, </math> ''p'' is a prime if and only if there exists a ''Q'' = (''x'',''y'') which is on ''E'', such that the <math>\gcd{(S_i,p)} = 1</math> for ''i'' = 1, 2, ...,''k'' &minus; 1 and <math>S_k \equiv 0\pmod{p}</math> where <math>S_i</math> is a sequence with initial value <math>S_0 = x</math> ==The algorithm== We provide the following algorithm, which relies mainly on Theorems 3 and 4. To verify the primality of a given number ''N'', perform the following steps: '''(1)''' Chose <math>x \in \mathbb{Z}</math> such that <math>(\frac{x}{N}) = -1</math>, and find ''y'' such that <math>(\frac{x^3-y^2}{N}) = 1</math> Take <math>m = \frac{x^3-y^2}{x} \pmod{N}</math> Then ''Q''' = (''x'',''y'') is on ''E'': <math>y^2=x^3-mx</math> where <math>m \equiv 0\pmod{N}</math> Calculate ''Q'' = ''mQ'''. If <math>Q = P_\infty</math> then ''N'' is composite, otherwise proceed to (2). '''(2)''' Set <math>S_i</math> as the sequence with initial value ''Q''. Calculate <math>S_i</math> for ''i'' = 1,2,..., ''k'' &minus; 1 If <math>\gcd({S_i,N})>1</math> for an ''i'', where <math>1 \le i \le k-1</math> then ''N'' is composite. Otherwise, proceed to (3). '''(3)''' If <math>S_k \equiv 0 \pmod{N}</math> then ''N'' is prime. Otherwise, ''N'' is composite. This completes the test. ==Justification of the algorithm== In (1), and elliptic curve, ''E'' is picked, along with a point ''Q'' on ''E'', such that the ''x''-coordinate of ''Q'' is a quadratic nonresidue. We can say : <math>\left(\frac{m}{N}\right) = \left(\frac{\frac{x^3-y^2}{x}}{N}\right) = \left(\frac{x}{N}\right)\left(\frac{x^3-y^2}{N}\right) = -1\cdot 1=-1.</math> Thus, if ''N'' is prime, ''Q''' has order divisible by <math>2^k</math>, by Theorem 3, <br> and therefore the order of ''Q''' is <math>2^kd</math> ''d'' | ''n''. This means ''Q'' = ''nQ''' has order <math>2^k</math>. Therefore, if (1) concludes that ''N'' is composite, it truly is composite. (2) and (3) check if ''Q'' has order <math>2^k</math>. Thus, if (2) or (3) conclude ''N'' is composite, 