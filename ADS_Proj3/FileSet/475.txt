= The Blue Obelisk-interoperability in chemical informatics | journal = Journal of chemical information and modeling | volume = 46 | issue = 3 | pages = 991–8 | year = 2006 | pmid = 16711717 | doi = 10.1021/ci050400b }}</ref> Multiple open source [[cheminformatics]] associate themselves with the Blue Obelisk, among which, in alphabetical order, [[Bioclipse]], [[Chemistry Development Kit]], [[JChemPaint]], [[JOELib]], [[Kalzium]], [[Openbabel]], [http://www.opensmiles.org/ OpenSMILES], and [http://usefulchem.wikispaces.com/ UsefulChem]. The project has handed out personal awards for achievements in promoting Open Data, Open Source and Open Standards. Among those who received a Blue Obelisk Award are Christoph Steinbeck (2006), Geoff Hutchinson (2006), Bob Hanson (2006), Egon Willighagen (2007), Jean-Claude Bradley (2007), Ola Spjuth (2007), Noel O'Boyle (2010), Rajarshi Guha (2010), Cameron Neylon (2010), Alex Wade (2010), Nina Jeliazkova (2010), [[Henry Rzepa]] (2011), and Dan Zaharevitz (2011).<ref>http://blueobelisk.sourceforge.net/wiki/Blue_Obelisk_Awards</ref> ==See also== * [[Cheminformatics]] ==References== <references/> ==External links== *{{official|http://www.blueobelisk.org}} [[Category:Cheminformatics]] [[Category:Free science software]]</text> </page> <page> <id>4193</id> <title>Bluesnarfing</title> <text>'''Bluesnarfing''' is the unauthorized access of information from a wireless device through a [[Bluetooth]] connection, often between phones, desktops, laptops, and PDAs. This allows access to a calendar, contact list, emails and text messages, and on some phones users can copy pictures and private videos. Currently available programs must allow connection and to be 'paired' to another phone to copy content. There may be other programs that can break into the phones without any control, but if they exist they are not made publicly available by the developer. One instance of Bluesnarfing software that was demonstrated (but never made available for download) utilized weaknesses in the Bluetooth connection of some phones. This weakness has since been patched by the Bluetooth standard. There seem to be no available reports of phones being Bluesnarfed without pairing, since the patching of the Bluetooth standard. Bluesnarfing is much more serious than [[Bluejacking]], but both exploit others' Bluetooth connections without their knowledge. Any device with its Bluetooth connection turned on and set to "discoverable" (able to be found by other Bluetooth devices in range) may be susceptible to Bluejacking, and possibly to Bluesnarfing when and if Bluesnarfing of the current Bluetooth security becomes possible. By turning off this feature, the potential victim can be safer from the possibility of being Bluesnarfed; although a device that is set to "hidden" may be Bluesnarfable by guessing the device's [[MAC address]] via [[Brute force attack|brute force]]. As with all brute-force attacks, the main obstacle to this approach is the sheer number of addresses. Bluetooth uses a 48-bit unique MAC Address, of which the first 24 bits are common to a manufacturer [http://www.securityfocus.com/infocus/1830]. The remaining 24 bits have approximately 16.8 million possible combinations, requiring an [[arithmetic mean|average]] of 8.4 million attempts to guess by brute force. Because Bluesnarfing is an invasion of [[privacy]], it is illegal in many countries. It is important not to confuse Bluesnarfing with Bluejacking. While Bluejacking is essentially harmless and does not result in the exposure of any data in the victim's handset, Bluesnarfing is the copying of information from the victim's Bluetooth device. == See also == *[[Bluejacking]] *[[Bluebugging]] *[[Pod slurping]] *[[Snarfing]] ==External links== *[http://trifinite.org/trifinite_stuff_blooover.html Blooover &mdash; A bluesnarfing proof-of-concept] *[http://boos.core-dumped.info/ Bluesnarfer &mdash; A bluesnarfing tool for Linux] *[http://www.bluesnarf.blogspot.com Bluesnarfing and more] [[Category:Bluetooth]] [[Category:Hacking (computer security)]] [[cs:Bluesnarfing]] [[de:Bluesnarfing]] [[fr:Bluesnarfing]] [[it:Bluesnarfing]] [[nl:Bluesnarfing]] [[pl:Bluesnarfing]] [[sv:Bluesnarfing]] [[th:บลูสนาร์ฟฟิง]]</text> </page> <page> <id>4204</id> <title>Board puzzles with algebra of binary variables</title> <text>{{unreferenced|date=October 2010}} '''Board puzzles with algebra of binary variables''' ask players to locate the hidden objects based on a set of clue cells and their neighbors marked as variables (unknowns). A variable with value of 1 corresponds to a cell with an object. Contrary, a variable with value of 0 corresponds to an empty cell – no hidden object. ==Overview== These puzzles are based on algebra with binary variables taking a pair of values, for example, (no, yes), (false, true), (not exists, exists), ('''0''', '''1'''). It invites the player quickly establish some equations, and inequalities for the solution. The [[Partition of a set|partitioning]] can be used to reduce the complexity of the problem. Moreover, if the puzzle is prepared in a way that there exists [[Uniqueness|a unique solution only]], this fact can be used to eliminate some variables without calculation. The problem can be modeled as [[Linear_program#Integer_unknowns|'''binary integer linear programming''']] which is a special case of integer linear programming<ref>Schrijver 1986</ref>. It is educative for elementary school students to develop math sense on algebra, and to practice on the variety of the solution techniques. ==History== One of the famous puzzle in this class is [[Minesweeper (Windows)|Microsoft's Minesweeper]]. Its ancestors and variants are summarized in the article [[Minesweeper_(computer_game)|Minesweeper Computer Game]]. Another version of this game is called Tentaizu which is appeared in Southwest Airlines' magazine Spirit in 2008–2009. Tentaizu is published as an application in Google's Android Market in 2010. ==Algebra with binary variables== Below the letters in the mathematical statements are used as variables where each can take the value either '''0''' or '''1''' only. A simple example of an equation with binary variables is given below: :'''''a''''' '''+''' '''''b''''' '''=''' '''0''' Here there are two variables '''''a''''' and '''''b''''' but one equation. The solution is constrained by the fact that '''''a''''' and '''''b''''' can take only values '''0''' or '''1'''. There is only one solution here, both '''''a''''' '''= 0''', and '''''b''''' '''= 0'''. Another simple example is given below: :'''''a''''' '''+''' '''''b''''' '''=''' '''2''' The solution is straightforward: '''''a''''' and '''''b''''' must be '''1''' to make '''''a''''' '''+''' '''''b''''' equals to '''2'''. Another interesting case is shown below: :'''''a''''' '''+''' '''''b''''' '''+''' '''''c''''' '''=''' '''2''' :'''''a''''' '''+''' '''''b''''' '''≤''' '''1''' Here, the first statement is an equation and the second statement is an inequality indicating the three possible cases: #'''''a''''' '''= 1''' and '''''b''''' '''= 0''', #'''''a''''' '''= 0''' and '''''b''''' '''= 1''', and #'''''a''''' '''= 0''' and '''''b''''' '''= 0''', The last case causes a contradiction on '''''c''''' by forcing '''''c''''' '''= 2''', which is not possible. Therefore, either first or second case is correct. This leads to the fact that '''''c''''' must be '''1'''. 