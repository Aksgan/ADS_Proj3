DirectX 10 SDK became available in February 2007.<ref>{{ cite web |url=http://msdn2.microsoft.com/en-us/xna/aa937781.aspx |title=DirectX 10 SDK available since February 2007 }}</ref> === Direct3D 10 === {{See also|List of games with DirectX 10 support|Windows Display Driver Model}} [[Windows Vista]] includes a major update to the Direct3D API. Originally called WGF 2.0 (Windows Graphics Foundation 2.0), then DirectX 10 and DirectX Next, Direct3D 10 features an updated [[shader model]], shader model 4.0. In this model shaders still consist of fixed stages as on previous versions, but all stages sport a nearly unified interface, as well as a unified access paradigm for resources such as textures and shader constants. The language itself has been extended to be more expressive, including integer operations, a greatly increased instruction count, and more C-like language constructs. In addition to the previously available [[vertex shader|vertex]] and [[pixel shader]] stages, the API includes a [[geometry shader]] stage that breaks the old model of one vertex in/one vertex out, to allow geometry to actually be generated from within a shader, allowing for complex geometry to be generated entirely on the graphics hardware. Unlike prior versions of the API, Direct3D 10 no longer uses "capability bits" (or "caps") to indicate which features are supported on a given graphics device. Instead, it defines a minimum standard of hardware capabilities which must be supported for a display system to be "Direct3D 10 compatible". This is a significant departure, with the goal of streamlining application code by removing capability-checking code and special cases based on the presence or absence of fine-grain capabilities. Because Direct3D 10 hardware was comparatively rare after the initial release of [[Windows Vista]] and because of the massive installed base of non-Direct3D 10 compatible graphics cards, the first Direct3D 10-compatible games still provide Direct3D 9 render paths. Examples of such titles are games originally written for Direct3D 9 and ported to Direct3D 10 after their release, such as [[Company of Heroes]], or games originally developed for Direct3D 9 with a Direct3D 10 path retrofitted later in development, such as [[Hellgate: London]] or Crysis. '''New features:''' * Fixed pipelines<ref>[http://news.com.com/An+inside+look+at+Windows+Vista+-+page+4/2100-1043_3-6051736-4.html?tag=st.num CNet News]</ref> are being done away with in favor of fully programmable pipelines (often referred to as unified pipeline architecture), which can be programmed to emulate the same. * New state object to enable (mostly) the CPU to change states efficiently. * [[Shader model 4.0]] enhances the programmability of the [[graphics pipeline]]. It adds instructions for integer and bitwise calculations. * [[Geometry shaders]], which work on adjacent triangles which form a [[Polygon mesh|mesh]]. * [[Texture mapping|Texture]] arrays enable swapping of textures in GPU without CPU intervention. * Predicated Rendering allows drawing calls to be ignored based on some other conditions. This enables rapid [[Hidden surface determination|occlusion culling]], which prevents objects from being rendered if it is not visible or too far to be visible. * [[Geometry instancing|Instancing 2.0]] support, allowing multiple instances of similar meshes, such as armies, or grass or trees, to be rendered in a single draw call, reducing the processing time needed for multiple similar objects to that of a single one.<ref>{{ cite web |url=http://www.tomshardware.com/2006/11/08/what_direct3d_10_is_all_about/page6.html |title=Direct3D 10 Additional Improvements }}</ref> === Direct3D 10.1 === '''Direct3D 10.1''' was announced by Microsoft shortly after the release of Direct3D 10 as a minor update. The specification was finalized with the release of November 2007 DirectX SDK and the runtime was shipped with the [[Windows Vista]] [[Windows Vista#Service Pack 1|SP1]], which is available since mid-March 2008. Direct3D 10.1 sets a few more image quality standards for graphics vendors, and gives developers more control over image quality.<ref>{{cite web|url=http://www.extremetech.com/article2/0,1558,2168429,00.asp?kc=ETRSS02129TX1K0000532|title=Microsoft Presents DirectX 10.1 Details at SIGGRAPH|date=2007-08-07|accessdate=2007-08-27}}</ref><ref name=D3D10_1_features>{{cite web|url=http://msdn.microsoft.com/en-us/library/ee415651(VS.85).aspx|title=DirectX SDK: Direct3D 10.1 Features}}</ref> Features include finer control over antialiasing (both multisampling and supersampling with per sample shading and application control over sample position) and more flexibilities to some of the existing features (cubemap arrays and independent blending modes). Direct3D 10.1 level hardware must support the following features: * Mandatory 32-bit [[floating point]] filtering. * Mandatory support for 4x [[anti-aliasing]] * [[High Level Shader Language|Shader model]] 4.1 Unlike Direct3D 10 which strictly required Direct3D 10-class hardware and driver interfaces, Direct3D 10.1 runtime can run on Direct3D 10.0 hardware using a concept of "feature levels",<ref name="D3Dfeaturelevel">{{cite web|url=http://msdn.microsoft.com/en-us/library/ee415631(VS.85).aspx|title=DirectX SDK: Direct3D 10 Reference: D3D10_FEATURE_LEVEL1|accessdate=2009-11-22|publisher=Microsoft}}</ref> but new features will be supported exclusively by new hardware. The only available Direct3D 10.1 hardware as of June 2008 were the [[Radeon R600|Radeon HD 3000 series]] and [[Radeon R700|Radeon HD 4000 series]] from [[ATI]]; in 2009, they were joined by [[S3 Chrome#Chrome 400|Chrome 430/440GT]] GPUs from [[S3 Graphics]] and select lower-end models in [[GeForce 200 series]] from [[Nvidia]]. [[Intel GMA]] chipsets only support Direct3D 10.0 as of July 2010. ===Direct3D 11=== {{Update|date=April 2010}} {{See also|List of games with DirectX 11 support|Windows Advanced Rasterization Platform}} '''Direct3D 11''' was released as part of Windows 7. It was presented at Gamefest 2008 on July 22, 2008 and demonstrated at the [[Nvision|NVISION 08]] technical conference on August 26, 2008.<ref name="gamefest2008">{{cite web | url = http://www.xnagamefest.com/presentations08.htm | accessdate = 2008-07-12 | title = Gamefest 2008}}</ref><ref name="nvision08">{{cite web | url = http://speakers.nvision2008.com/agenda/pop_session.cfm?sessionid=39 | accessdate = 2008-07-06 | title = NVISION 08}}</ref> AMD previewed working DirectX11 hardware at Computex on June 3, 2009, running some DirectX 11 SDK samples.<ref name="computex2009">{{cite web | url = http://www.fudzilla.com/content/view/14026/1/| accessdate = 2009-06-03 | title = AMD Demonstrates DirectX 11 Hardware at Computex 2009}} {{Dead link|date=September 2010|bot=H3llBot}}</ref> Its features include: *'''[[Tessellation]]''' &mdash; to increase at runtime the number of visible polygons from a low detail polygonal model *'''[[Thread (computer science)|Multithreaded]] rendering''' &mdash; to render to the same Direct3D device object from different threads for multi core CPUs *'''[[GPGPU|Compute shaders]]''' &mdash; which exposes the shader pipeline for non-graphical tasks such as [[stream processing]] and physics acceleration, similar in spirit to what [[OpenCL]], NVIDIA [[CUDA]], ATI Stream achieves, and [[HLSL]] [[Shader]] Model 5 among others.<ref name="gamefest2008"/><ref name="nvision08"/> Other notable features are the addition of two new texture compression algorithms for more efficient packing of high quality and HDR/alpha textures and an increased texture cache. The Direct3D 11 runtime is able to run on 