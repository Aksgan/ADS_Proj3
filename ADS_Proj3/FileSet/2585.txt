down possible locations with the aid of [[Fibonacci numbers]] ** [[Jump search]] (also called block search) ** [[Interpolation search|Predictive search]]: binary-like search which factors in [[magnitude (mathematics)|magnitude]] of search term versus the high and low values in the search. Sometimes called dictionary search or interpolated search. ** [[Uniform binary search]]: an optimization of the classic binary search algorithm * [[Ternary search]]: a technique for finding the minimum or maximum of a function that is either strictly increasing and then strictly decreasing or vice versa ====Merging==== {{main|Merge algorithm}} * Simple Merge algorithm * k-way Merge algorithm * Union (merge, with elements on the output not repeated) ====Permutations==== {{see|Permutations}} * [[Fisher–Yates shuffle]] (also known as the Knuth shuffle): randomly shuffle a finite set * [[Robinson–Schensted algorithm]]: generates permutations from pairs of [[Young tableaux]] * [[Steinhaus–Johnson–Trotter algorithm]] (also known as the Johnson–Trotter algorithm): generate permutations by transposing elements ====Sequence alignment==== * [[Dynamic time warping]]: measure similarity between two sequences which may vary in time or speed * [[Hirschberg's algorithm]]: finds the least cost [[sequence alignment]] between two sequences, as measured by their [[Levenshtein distance]] * [[Needleman–Wunsch algorithm]]: find global alignment between two sequences * [[Smith–Waterman algorithm]]: find local sequence alignment ====Sorting==== {{main|Sorting algorithms}} {{contradict-other|Sorting_algorithm#Comparison_of_algorithms}} * Exchange Sorts ** [[Bubble sort]]: for each pair of indices, swap the items if out of order ** [[Cocktail sort]] ** [[Comb sort]] ** [[Gnome sort]] ** [[Odd-even sort]] ** [[Quicksort]]: divide list into two, with all items on the first list coming before all items on the second list.; then sort the two lists. Often the method of choice * Humorous or ineffective ** [[Bogosort]] ** [[Stooge sort]] * Hybrid ** [[Flashsort]] ** [[Introsort]]: begin with quicksort and switch to heapsort when the recursion depth exceeds a certain level ** [[Timsort]]: adaptative algorithm derived from merge sort and insertion sort. Used in Python >=2.3 and Java SE 7. * Insertion sorts ** [[Insertion sort]]: determine where the current item belongs in the list of sorted ones, and insert it there ** [[Library sort]] ** [[Patience sorting]] ** [[Shell sort]]: an attempt to improve insertion sort ** [[Tree sort]] (binary tree sort): build binary tree, then traverse it to create sorted list ** [[Cycle sort]]: in-place with theoretically optimal number of writes * Merge sorts ** [[Merge sort]]: sort the first and second half of the list separately, then merge the sorted lists ** [[Strand sort]] * Non-comparison sorts ** [[Bead sort]] ** [[Bucket sort]] ** [[Burstsort]]: build a compact, cache efficient [[burst trie]] and then traverse it to create sorted output ** [[Counting sort]] ** [[Pigeonhole sort]] ** [[Postman sort]]: variant of Bucket sort which takes advantage of hierarchical structure ** [[Radix sort]]: sorts strings letter by letter * Selection sorts ** [[Heapsort]]: convert the list into a heap, keep removing the largest element from the heap and adding it to the end of the list ** [[Selection sort]]: pick the smallest of the remaining elements, add it to the end of the sorted list ** [[Smoothsort]] * Other ** [[Bitonic sorter]] ** [[Pancake sorting]] ** [[Topological sorting|Topological sort]] * Unknown class ** [[Samplesort]] ====Subsequences==== {{see|Subsequence}} *[[Kadane's algorithm]]: finds maximum sub-array of any size *[[Longest common subsequence problem]]: Find the longest subsequence common to all sequences in a set of sequences *[[Longest increasing subsequence problem]]: find the longest increasing subsequence of a given sequence *[[Shortest common supersequence]] problem: Find the shortest supersequence that contains two or more sequences as subsequences ====Substrings==== {{see|Substring}} * [[Longest common substring problem]]: find the longest string (or strings) that is a substring (or are substrings) of two or more strings * [[Substring search]] ** [[Aho–Corasick string matching algorithm]]: [[trie]] based algorithm for finding all substring matches to any of a finite set of strings ** [[Boyer–Moore string search algorithm]]: amortized linear ([[sublinear]] in most times) algorithm for substring search ** [[Boyer–Moore–Horspool algorithm]]: Simplification of Boyer–Moore ** [[Knuth–Morris–Pratt algorithm]]: substring search which bypasses reexamination of matched characters ** [[Rabin–Karp string search algorithm]]: searches multiple patterns efficiently ** [[Zhu–Takaoka string matching algorithm]]: a variant of the Boyer–Moore * [[Ukkonen's algorithm]]: a [[linear-time]], [[online algorithm]] for constructing [[suffix tree]]s ==Computational mathematics== {{see|Computational mathematics}} {{see also|List of algorithms#Combinatorial algorithms|l1=Combinatorial algorithms|List of algorithms#Computational science|l2=Computational science}} ===Abstract algebra=== {{see|Abstract Algebra}} * [[Chien search]]: a recursive algorithm for determining roots of polynomials defined over a finite field * [[Schreier–Sims algorithm]]: computing a base and [[strong generating set]] (BSGS) of a [[permutation group]] * [[Todd–Coxeter algorithm]]: Procedure for generating [[coset]]s. ===Computer algebra=== {{see|Computer algebra}} * [[Buchberger's algorithm]]: finds a [[Gröbner basis]] * [[Cantor–Zassenhaus algorithm]]: factor polynomials over finite fields * [[Faugère F4 algorithm]]: finds a Gröbner basis (also mentions the F5 algorithm) * [[Gosper's algorithm]]: find sums of hypergeometric terms that are themselves hypergeometric terms * [[Knuth–Bendix completion algorithm]]: for [[rewriting]] rule systems * [[Multivariate division algorithm]]: for [[polynomial]]s in several indeterminates * [[Pollard's kangaroo algorithm]] (also known as Pollard's lambda algorithm ): an algorithm for solving the discrete logarithm problem * [[Polynomial long division]]: an algorithm for dividing a polynomial by another polynomial of the same or lower degree * [[Risch algorithm]]: an algorithm for the calculus operation of indefinite integration (i.e. finding [[antiderivatives]]) ===Geometry=== {{main|:Category:Geometric algorithms|l1=Geometric algorithms}} {{see|Computational geometry}} * [[Closest pair problem]]: find the pair of points (from a set of points) with the smallest distance between them * [[Collision detection]] algorithms: check for the collision or intersection of two given solids * [[Cone algorithm]]: identify surface points * [[Convex hull algorithms]]: determining the [[convex hull]] of a [[Set (mathematics)|set]] of points ** [[Chan's algorithm]] ** [[Gift wrapping algorithm]] or Jarvis march ** [[Graham scan]] ** [[Kirkpatrick–Seidel algorithm]] * [[Euclidean distance map|Euclidean Distance Transform]] - Computes the distance between every point in a grid and a discrete collection of points. * [[Geometric hashing]]: a method for efficiently finding two-dimensional objects represented by discrete points that have undergone an [[affine transformation]] * [[Gilbert–Johnson–Keerthi distance algorithm]]: determining the smallest distance between two [[convex set|convex]] shapes. * [[Jump-and-Walk algorithm]]: an algorithm for point location in triangulations * [[Laplacian smoothing]]: an 