of bytes in memory, and operations on the variable manipulate that block. [[reference (computer science)|Referencing]] is more common for variables whose values have large or unknown sizes when the code is compiled. Such variables reference the location of the value instead of the storing value itself, which is allocated from a pool of memory called the ''[[Dynamic memory allocation#Heap-based memory allocation|heap]]''. Bound variables have values. A value, however, is an abstraction, an idea; in implementation, a value is represented by some ''[[Object (computer science)|data object]]'', which is stored somewhere in computer memory. The program, or the runtime environment, must set aside memory for each data object and, since memory is finite, ensure that this memory is yielded for reuse when the object is no longer needed to represent some variable's value. Objects allocated from the heap must be reclaimed&mdash;especially when the objects are no longer needed. In a [[garbage collection (computer science)|garbage-collected]] language (such as [[C Sharp (programming language)|C#]], [[Java (programming language)|Java]], and [[Lisp (programming language)|Lisp]]), the runtime environment automatically reclaims objects when extant variables can no longer refer to them. In non-garbage-collected languages, such as [[C (programming language)|C]], the program (and the programmer) must explicitly [[malloc|allocate]] memory, and then later free it, to reclaim its memory. Failure to do so leads to [[memory leak]]s, in which the heap is depleted as the program runs, risking eventual failure from exhausting available memory. When a variable refers to a [[data structure]] created dynamically, some of its components may be only indirectly accessed through the variable. In such circumstances, garbage collectors (or analogous program features in languages that lack garbage collectors) must deal with a case where only a portion of the memory reachable from the variable needs to be reclaimed. ==Interpolation==<!-- #### EDITOR NOTE: The header text for this section is directly linked by other articles. Please do not change the header text unless you know what links here and can make the appropriate fixes. #### --> '''Variable interpolation''' (also '''variable substitution''' or '''variable expansion''') is the process of evaluating an expression or string literal containing one or more variables, yielding a result in which the variables are replaced with their corresponding values in memory. It is a specialized instance of [[concatenation]]. Languages that support variable interpolation include [[Perl]], [[PHP]], [[Ruby (programming language)|Ruby]], [[Tcl]] and most [[Unix shell]]s. In these languages, variable interpolation only occurs when the string literal is double-quoted, but not when it is single-quoted. The variables are recognized because variables start with a [[sigil (computer programming)|sigil]] (typically "$") in these languages. For example, the following [[Perl]] code (which would work identically in [[PHP]]): <source lang="perl"> $name = "Nakul"; print "${name} said Hello World to the crowd of people."; </source> produces the output: <pre> Nakul said Hello World to the crowd of people. </pre> [[Ruby (programming language)|Ruby]] uses the "#" symbol for interpolation, and lets you interpolate any expression, not just variables. Other languages may support more advanced interpolation with a special formatting function, such as [[printf]], in which the first argument, the ''format'', specifies the pattern in which the remaining arguments are substituted. ==Notes== {{Reflist|group=note}} {{DEFAULTSORT:Variable (Programming)}} [[Category:Variable (computer programming)|*]] [[Category:Variables]] [[Category:Data types]] [[Category:Type theory]] [[bs:Promjenljiva]] [[de:Variable (Programmierung)]] [[es:Variable (programación)]] [[fr:Variable (informatique)]] [[hr:Promjenjiva]] [[it:Variabile (informatica)]] [[he:משתנה (תכנות)]] [[nl:Variabele (informatica)]] [[ja:変数 (プログラミング)]] [[pl:Zmienna (informatyka)]] [[pt:Variável (programação)]] [[ru:Переменная (программирование)]] [[sk:Premenná (informatika)]] [[fi:Muuttuja (ohjelmointi)]] [[uk:Змінна]]</text> </page> <page> <id>39227</id> <title>Variable cost</title> <text>[[Image:CVP-TC-FC-VC.svg|thumb|right|240px|Decomposing [[Total Costs]] as [[Fixed Costs]] plus [[Variable cost|Variable Costs]].]] '''Variable costs''' are expenses that change in proportion to the activity of a business.<ref name="GNB pp 48">Garrison, Noreen, Brewer. Ch 2 - Managerial Accounting and Costs Concepts, pp 48</ref> Variable cost is the sum of [[marginal cost]]s over all units produced. It can also be considered normal costs. [[Fixed cost]]s and variable costs make up the two components of [[total cost]]. '''Direct Costs''', however, are costs that can easily be associated with a particular [[cost object]].<ref name="GNB pp 51">Garrison, Noreen, Brewer. Ch 2 - Managerial Accounting and Costs Concepts, pp 51</ref> However, not all variable costs are direct costs. For example, variable manufacturing [[Overhead (business)|overhead]] costs are variable costs that are [[indirect costs]], not direct costs. Variable costs are sometimes called unit-level costs as they vary with the number of units produced. Direct labor and overhead are often called '''conversion cost''',<ref name="GNB pp 39">Garrison, Noreen, Brewer. Ch 2 - Managerial Accounting and Costs Concepts, pp 39</ref> while direct material and direct labor are often referred to as '''prime cost'''.<ref name="GNB pp 39" /> == Explanation == For example, a [[manufacturing]] firm pays for raw materials. When activity is decreased, less raw material is used, and so the spending for raw materials falls. When activity is increased, more raw material is used and spending therefore rises. Note that the changes in expenses happen with little or no need for managerial intervention. These costs are variable costs. A company will pay for line rental and maintenance fees each period regardless of how much power gets used. And some electrical equipment (air conditioning or lighting) may be kept running even in periods of low activity. These expenses can be regarded as fixed. But beyond this, the company will use electricity to run plant and machinery as required. The busier the company, the more the plant will be run, and so the more electricity gets used. This extra spending can therefore be regarded as variable. In retail the cost of goods is almost entirely a variable cost; this is not true of manufacturing where many fixed costs, such as depreciation, are included in the cost of goods. Although taxation usually varies with profit, which in turn varies with sales volume, it is not normally considered a variable cost. For some employees, salary is paid on monthly rates, independent of how many hours the employees work. This is a fixed cost. On the other hand, the hours of hourly employees can often be varied, so this type of labour cost is a variable cost. ==See also== {{Multicol}} * [[Cost]] * [[Cost accounting]] * [[Cost curve]] * 