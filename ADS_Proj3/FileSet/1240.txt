(Rails)|ActiveRecord]] from [[Ruby on Rails]]. Both of these ORM solutions have implemented a fully featured solution in the Java and [[Ruby (programming language)|Ruby]] languages. The purpose of the Doctrine project is to build an equally powerful solution for the PHP language. ==Community== * There is an active [[IRC]] channel where users and developers of Doctrine commonly associate. The channel is on the [[freenode]] network (irc.freenode.net); the channel name is <tt>#doctrine</tt>. irc://irc.freenode.net/#doctrine * User mailing list: http://groups.google.com/group/doctrine-user * Development mailing list: http://groups.google.com/group/doctrine-dev * Commit log mailing list: http://groups.google.com/group/doctrine-svn ==See also== * [[Propel (PHP)]] * [[List of object-relational mapping software]] * [[Symfony]], a [[web application framework]] which uses Doctrine by default ==References== {{Reflist}} ==External links== * [http://www.doctrine-project.org/ Doctrine homepage] * [http://www.doctrine-project.org/documentation Doctrine Documentation] * [http://trac.doctrine-project.org/ Doctrine Trac] * [http://www.doctrine-project.org/about About Doctrine] * [http://www.doctrine-project.org/download Download Doctrine] * [http://www.doctrine-project.org/community Doctrine Community] * [http://www.doctrine-project.org/blog Official Doctrine Blog] {{DEFAULTSORT:Doctrine (Php)}} [[Category:PHP programming language]] [[Category:PHP libraries]] [[Category:Object-relational mapping]] [[de:Doctrine (PHP)]] [[fr:Doctrine (ORM)]] [[pl:Doctrine]] [[ru:Doctrine]]</text> </page> <page> <id>10877</id> <title>Document Object Model</title> <text>{{Distinguish|Domain Object Model}} {{inline|date=August 2010}} {{HTML}} [[File:JKDOM.SVG|thumb|right|Hierarchy of objects in an example HTML DOM - Document Object Model]] The '''Document Object Model''' ('''DOM''') is a [[cross-platform]] and [[programming language|language]]-independent convention for representing and interacting with [[Object (computer science)|objects]] in [[HTML]], [[XHTML]] and [[XML]] documents. Aspects of the DOM (such as its "Elements") may be addressed and manipulated within the syntax of the programming language in use. The public interface of a DOM is specified in its [[application programming interface]] (API). ==History== The history of the Document Object Model is intertwined with the history of the "[[browser wars]]" of the late 1990s between [[Netscape Navigator]] and [[Microsoft Internet Explorer]], as well as with that of [[JavaScript]] and [[JScript]], the first [[scripting language]]s to be widely implemented in the [[layout engines]] of [[web browsers]]. ===Legacy DOM=== JavaScript was released by [[Netscape Communications]] in 1996 within Netscape Navigator 2.0. Netscape's competitor, [[Microsoft]], released [[Internet Explorer 3|Internet Explorer 3.0]] later the same year with a [[port (software)|port]] of JavaScript called JScript. JavaScript and JScript let [[web developer]]s create web pages with [[client-side]] interactivity. The limited facilities for detecting user-generated [[Event (computing)|events]] and modifying the HTML document in the first generation of these languages eventually became known as "DOM Level 0" or "Legacy DOM". No independent standard was developed for DOM Level 0, but it was partly described in the specification of [[HTML4]]. Legacy DOM was limited in the kinds of [[HTML element|element]]s that could be accessed. [[Form (web)|Form]], [[Hyperlink|link]] and image elements could be referenced with a hierarchical name that began with the root document object. A hierarchical name could make use of either the names or the sequential index of the traversed elements. For example, a [[Text box|form input element]] could be accessed as either "document.formName.inputName" or "document.forms[0].elements[0]". The Legacy DOM enabled client-side form validation and the popular "[[Rollover (web design)|rollover]]" effect. ===Intermediate DOM=== In 1997, Netscape and Microsoft released version 4.0 of Netscape Navigator and Internet Explorer, adding support for [[Dynamic HTML]] (DHTML), functionality enabling changes to a loaded HTML document. DHTML required extensions to the rudimentary document object that was available in the Legacy DOM implementations. Although the Legacy DOM implementations were largely compatible since JScript was based on JavaScript, the DHTML DOM extensions were developed in parallel by each browser maker and remained incompatible. These versions of the DOM became known as the "Intermediate DOM." The Intermediate DOMs enabled the manipulation of [[Cascading Style Sheet]] (CSS) properties which influence the display of a document. They also provided access to a new feature called "layers" via the "document.layers" property (Netscape Navigator) and the "document.all" property (Internet Explorer). Because of the fundamental incompatibilities in the Intermediate DOMs, [[cross-browser]] development required special handling for each supported browser. Subsequent versions of Netscape Navigator abandoned support for its Intermediate DOM. Internet Explorer continues to support its Intermediate DOM for [[backwards compatibility]]. ===Standardization=== The [[World Wide Web Consortium]] (W3C), founded in 1994 to promote [[open standards]] for the [[World Wide Web]], brought Netscape Communications and Microsoft together with other companies to develop a standard for browser scripting languages, called "[[ECMAScript]]". The first version of the standard was published in 1997. Subsequent releases of JavaScript and JScript would implement the ECMAScript standard for greater cross-browser compatibility. After the release of ECMAScript, W3C began work on a standardized DOM. The initial DOM standard, known as "DOM Level 1," was recommended by W3C in late 1998. About the same time, Internet Explorer 5.0 shipped with limited support for DOM Level 1. DOM Level 1 provided a complete model for an entire HTML or [[XML]] document, including means to change any portion of the document. Non-conformant browsers such as Internet Explorer 4.x and Netscape 4.x were still widely used as late as 2000. DOM Level 2 was published in late 2000. It introduced the "[[getElementById]]" function as well as an [[DOM Events|event model]] and support for [[XML namespaces]] and CSS. DOM Level 3, the current release of the DOM specification, published in April 2004, added support for [[XPath]] and keyboard [[event handling]], as well as an interface for [[serialization|serializing]] documents as XML. By 2005, large parts of W3C DOM were well-supported by common ECMAScript-enabled browsers, including Microsoft Internet Explorer version 6 (2001), [[Opera (web browser)|Opera]], [[Safari (web browser)|Safari]] and [[Gecko (layout engine)|Gecko]]-based browsers (like [[Mozilla Application Suite|Mozilla]], [[Mozilla Firefox|Firefox]], [[SeaMonkey]] and [[Camino]]) ==Applications== DOM is likely to be best suited for applications where the document must be accessed repeatedly or out of sequence order. If the application is strictly sequential and [[One-pass algorithm|one-pass]], the [[Simple API for XML|SAX]] model is likely to be faster and use less memory. ===Web browsers=== A web browser is not obliged to use DOM in order to render an HTML document. However, the DOM is required by JavaScript scripts that wish to inspect or modify a web page dynamically. In other words, the Document Object Model is the way JavaScript sees its containing HTML page and browser state. ==Implementations== Because DOM supports navigation in any direction (e.g., parent and previous sibling) and 