an octet-based file system or transmitting over an octet-based network. With Unicode, a simple character encoding scheme is used in most cases, simply specifying whether the bytes for each integer should be in big-[[endianness|endian]] or little-endian order (even this isn't needed with UTF-8). However, there are also compound character encoding schemes, which use escape sequences to switch between several simple schemes (such as [[ISO/IEC 2022]]), and compressing schemes, which try to minimise the number of bytes used per code unit (such as [[Standard Compression Scheme for Unicode|SCSU]], [[Binary Ordered Compression for Unicode|BOCU]], and [[Punycode]]). See [[comparison of Unicode encodings]] for a detailed discussion. Finally, there may be a '''higher level protocol''' which supplies additional information that can be used to select the particular variant of a [[Unicode]] character, particularly where there are regional variants that have been 'unified' in Unicode as the same character. An example is the [[XML]] attribute xml:lang. The Unicode model reserves the term '''character map''' for historical systems which directly assign a sequence of characters to a sequence of bytes, covering all of CCS, CEF and CES layers.<ref name=utr17/> === General terminology === In [[computer science]], the terms '''character encoding''', '''character map''', '''character set''' or '''code page''' were historically synonymous{{citation needed|date=March 2010}}, as the same standard would specify a repertoire of characters and how they were to be encoded into a stream of code units — usually with a single character per code unit. The terms now have related but distinct meanings, reflecting the efforts of standards bodies to use precise terminology when writing about and unifying many different encoding systems.<ref name=utr17/> Regardless, the terms are still used interchangeably, with ''character set'' being nearly ubiquitous. A '''[[code page]]''' usually means a [[byte oriented]] encoding, but with emphasis to some suite of encodings (covering different scripts), where many characters share same [[code point|codes]] in all these code pages (or most). Well known code page suites are "Windows" (based on Windows-1252) and "IBM"/"DOS" (based on code page 437), see [[Windows code page]] for details. Most encodings referred to as code pages, but not all of them, are single byte encodings. IBM's Character Data Representation Architecture (CDRA) designates with coded character set identifiers ([[CCSID]]s) and each of which is variously called a '''charset''', '''character set''', '''code page''', or '''CHARMAP'''.<ref name=utr17/> Contrasted to [[#CCS|CCS above]], a '''character encoding''' is a map from abstract characters to [[code word]]s. A '''character set''' in [[HTTP]] (and [[MIME]]) parlance is the same as a character encoding (but not the same as CCS). '''[[legacy system|Legacy]] encoding''' is a cliché used sometimes to characterize old character encoding, but with an ambiguity of sense. Most of its use is in the context of [[Unicode|Unicodification]], where it refers to encodings that do not cover all Unicode code points, or, more generally, using somewhat different character repertoire: several code points representing one Unicode character<ref>[http://www.basistech.co.jp/knowledge-center/database/uc-trillium-2.ppt "Processing database information using Unicode, a case study"]</ref>, or versa (see e.g. [[code page 437]]). Some sources declare an encoding to be ''legacy'' only because it preceded Unicode.<ref>{{cite web|url=http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&item_id=IWS-Chapter03#79e846db|publisher=[[SIL International]]|title=Character set encoding basics|work=Implementing Writing Systems: An introduction|first=Peter|last=Constable|date=2001-06-13|accessdate=2010-03-19}}</ref> All Windows code pages are usually referred to as legacy. ==See also== * [[Alt code]] * [[:Category:Character encoding|Character encoding]] — articles related to character encoding in general * [[:Category:Character sets|Character sets]] — articles detailing specific character encodings * [[Code page]] — various character set encodings used by IBM, Microsoft, SAP… * ''[[Mojibake]]'' — character set mismap. * [[Mojikyo]] - a system ('glyph set') that includes over 100,000 Chinese character drawings, modern and ancient, popular and obscure.<ref name="mojikyoorg"> {{ cite web | url = http://www.mojikyo.org/html/abroad/abroad_top.html | title = Mojikyo English page | accessdate = 2009 11 07 | publisher = mojikyo.org }} {{Dead link|date=September 2010|bot=H3llBot}} </ref><ref name="jbrowsecom"> {{ cite web | url = http://www.jbrowse.com/text/unij.html | title = Character Set List | accessdate = 2009 11 07 | publisher = jbrowse.com }} </ref> * [[TRON (encoding)|TRON]], part of the [[TRON Project]], is an encoding system that does not use [[Han Unification]], instead it uses 'control codes' to switch between 16bit 'planes' of characters.<ref name="jbrowsecom"/><ref name="tronorg"> {{ cite web | url = http://www2.tron.org/troncode.html | title = TRON code website | accessdate = 2009 11 07 | publisher = tron.org }} </ref> * [[Universal Character Set characters]] * [[Windows code page]] — various character set encodings used by Microsoft Windows == References == {{Refbegin}} *{{cite book |last=Mackenzie |first=Charles E. |title=Coded Character Sets, History and Development |publisher=Addison-Wesley |year =1980 |isbn =0-201-14460-3 }} {{Refend}} {{Reflist|2}} ==External links== * [http://www.iana.org/assignments/character-sets Character sets registered by Internet Assigned Numbers Authority] * [http://www.unicode.org/unicode/reports/tr17/ Unicode Technical Report #17: Character Encoding Model] {{character encoding}} [[Category:Character encoding| ]] [[Category:Natural language and computing|Encoding]] [[ast:Códigu de caracteres]] [[bn:ক্যারেক্টার এনকোডিং]] [[zh-min-nan:Pian-bé]] [[ca:Codificació de caràcters]] [[cs:Znaková sada]] [[da:Tegnsæt]] [[de:Zeichenkodierung]] [[el:Κωδικοποίηση χαρακτήρων]] [[es:Codificación de caracteres]] [[fr:Codage des caractères]] [[gl:Codificación de caracteres]] [[ko:문자 인코딩]] [[id:Pengkodean karakter]] [[ia:Codification de characteres]] [[it:Codifica di caratteri]] [[he:קידוד תווים]] [[lv:Rakstzīmju kodējums]] [[hu:Karakterkódolás]] [[mr:कॅरॅक्टर एनकोडिंग]] [[mn:Тэмдэгтийн кодлолын схем]] [[nl:Tekencodering]] [[ja:文字コード]] [[no:Tegnsett]] [[nn:Teiknsett]] [[pl:Kod znaku]] [[pt:Codificação de caracteres]] [[ru:Набор символов]] [[sv:Teckenkodning]] [[th:รหัสอักขระ]] [[uk:Кодування символів]] [[zh:字符编码]]</text> </page> <page> <id>5913</id> <title>Charging Argument</title> <text>{{Orphan|date=February 2009}} In [[computer science]], a '''Charging Argument''' is used to compare an [[algorithm output]] to an [[optimal solution]]. [[Category:Analysis of algorithms]] {{Compsci-stub}}</text> </page> <page> <id>5923</id> <title>Charles F. Van Loan</title> <text>'''Charles Francis Van Loan''' is a professor of [[computer science]] and the Joseph C. Ford Professor of Engineering at [[Cornell University]],<ref name="Statement From Chair">[http://www.cs.cornell.edu/annual_report/ChairStatement.htm Cornell CS Annual Report 1998-1999].</ref> known for his expertise in [[numerical analysis]], especially [[matrix (mathematics)|matrix]] computations.<ref>[http://fellows.siam.org/index.php?sort=year&value=2009#Charles_Van_Loan SIAM Fellowship Acknowledgement].</ref> ==Biography== Originally from New Jersey, Van Loan attended the [[University of Michigan]], where he obtained his B.S. (1969), M.A. (1970), and Ph.D (1973), all in mathematics (with the B.S. in applied mathematics).<ref>[http://www.news.cornell.edu/chronicle/99/6.17.99/VanLoan.html Cornell Chronicle: ''Charles Van Loan named chair of computer science''].</ref> His PhD dissertation was entitled "Generalized Singular Values with Algorithms and Applications" and his thesis adviser was [[Cleve Moler]].<ref>[http://genealogy.math.ndsu.nodak.edu/id.php?id=5337 Mathematics Genealogy Project: ''Charles Francis Van Loan''].</ref> Following a postdoctorate at the [[University of Manchester]], he joined the Department of Computer Science at [[Cornell University]] in 1975, and served as 