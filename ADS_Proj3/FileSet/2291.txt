aimed to make more high quality online resources available within the information environment. In 2002, following a report on JISC governance by Sir Brian Follett, JISC was restructured and the work of the DNER was split between a range of development activities known as the Information Environment, and JISC Collections. Originally each collections manager focused on a specific format area but over time this focus devolved. In 2002 Lorraine Estelle joined as the Collections Team Manager and led the team to its current company status becoming Chief Executive Officer in 2006. In the same year David House was appointed Chair of the new mutual trading company - JISC Collections - and the first elections to the new Board were conducted, with Deborah Shorley, Librarian at the University of Sussex, and Hazel Woodward, Librarian at Cranfield University, elected as institutional representatives. ==References== *{{cite web | last = Estelle | first = Lorraine | title = JISC Collections Strategy, 2004-2006 | work = | publisher = JISC Collections | date = [[2004]] | url = http://www.jisc-collections.ac.uk/about_collections/coll_strat.aspx | format = | doi = | accessdate = 2007-11-01 }} {{Dead link|date=November 2010|bot=H3llBot}} *{{cite web | last = JISC | first = Collections | title = JISC Guidelines for Publishers | work = | publisher = JISC Collections | date = [[2006]] | url = http://www.jisc-collections.ac.uk/about_collections/coll_jiscfactfile.aspx | format = | doi = | accessdate = 2007-11-01 }} {{Dead link|date=November 2010|bot=H3llBot}} *{{cite web | last = JISC | first = Collections | title = A Guide to the JISC Model Licences | work = | publisher = JISC Collections | date = [[2006]] | url = http://www.jisc-collections.ac.uk/model_licence/coll_guide_jiscmodel.aspx | format = | doi = | accessdate = 2007-11-01 }} {{Dead link|date=November 2010|bot=H3llBot}} *{{cite journal | last = Pinfield | first = Stephen | coauthors = Lorcan Dempsey | title = The Distributed National Electronic Resource (DNER) and the hybrid library | journal =Ariadne | volume = | issue = 26 | pages = | publisher = UKOLN | date = 10-01-2001 | url = http://www.ariadne.ac.uk/issue26/dner/intro.html | doi = | id = | accessdate = 2007-11-01 }} ==External links== *[http://www.jisc-collections.ac.uk/ JISC Collections website] {{DEFAULTSORT:Jisc Collections}} [[Category:Companies established in 2006]] [[Category:Government-owned companies in the United Kingdom]] [[Category:Academic publishing]] [[Category:Commercial digital libraries]]</text> </page> <page> <id>19531</id> <title>JLex</title> <text>'''JLex''' is a [[Lexical analysis | lexical analyser]] (similar to [[Lex programming tool|Lex]]) which produces [[Java (programming language)|Java]] language source code. It is implemented in Java. JLex was developed by Elliot Berk at [[Princeton University]]. ==External links== * [http://www.cs.princeton.edu/~appel/modern/java/JLex/ Main website with source code and documentation] [[Category:Parser generators]] {{compu-lang-stub}} [[ru:JLex]]</text> </page> <page> <id>19542</id> <title>JO-ZERO</title> <text>The '''JO-ZERO''' is an agile humanoid robot designed by manga artist [[Minoru Kamiya]], who created the anime show [[Act On!]]. The robot, manufactured by Himeji Softworks, was presented at the [[International Robot Exhibition]] 2009. ==References== * [http://www.robots-dreams.com/2009/12/nakamuras-jo-zero-robot-sets-a-new-performance-standard-video.html Nakamura's JO-ZERO robot sets a new performance standard (Video)] * Serkan Toto (December 30, 2009) [http://www.crunchgear.com/2009/12/30/jo-zero-super-agile-super-cool-mini-humanoid/ JO-ZERO: Super-agile, super-cool mini humanoid (video)] [[TechCrunch|CrunchGear]] * [http://www.coolest-gadgets.com/20091231/jozero-transformers-movie/ JO-ZERO could be in next Transformers movie, as himself] * http://robot.watch.impress.co.jp/docs/news/20090706_300316.html {{ja icon}} * http://journal.mycom.co.jp/articles/2009/07/10/jo-zero_debut/index.html {{ja icon}} {{DEFAULTSORT:Jo-Zero}} [[Category:Humanoid robots]] {{robo-stub}}</text> </page> <page> <id>19545</id> <title>JOONE</title> <text>{{Orphan|date=February 2009}} {{Infobox software | name = Java Object Oriented Neural Engine | logo = | screenshot = [[Image:JoonEdit.png|250px]] | caption = Demonstration of drawing capability in JOONE | collapsible = yes | developer = [[The Joone Team]] | status = Inactive | latest release version = 1.2.1 | latest release date = {{release date|2005|09|08}} | latest preview version = 2.0 RC1 | latest preview date = {{release date|2007|01|19}} | operating system = [[Cross-platform]] | size = | programming language = [[Java (programming language)|Java]] | genre = [[Neural network software]] | license = [[GPL]] or [[LGPL]] | website = http://www.jooneworld.com/ }} :''For the [[pornographic film]] [[Film director|director]], see [[Joone (Director)]]'' '''JOONE''' (Java Object Oriented Neural Engine) is a component based [[neural network]] framework built in [[Java (programming language)|Java]]. ==Features== Joone consists of a component-based architecture based on linkable components that can be extended to build new learning algorithms and neural networks architectures. Components are plug-in code modules that are linked to produce an information flow. New components can be added and reused. Beyond simulation, Joone also has to some extent multi-platform deployment capabilities. Joone has a GUI Editor to graphically create and test any neural network, and a distributed training environment that allows for neural networks to be trained on multiple remote machines. ==Comparison== As of 2010, Joone, [[Encog]] and [[Neuroph]] are the major free component based neural network development environment available for the Java platform. Unlike the two other (commercial) systems that are in existence, [[Peltarion Synapse|Synapse]] and [[NeuroSolutions]], it is written in Java and has direct [[cross-platform]] support. A limited number of components exist and the graphical development environment is rudimentary so it has significantly fewer features than its commercial counterparts. Joone can be considered to be more of a neural network framework than a full integrated development environment. Unlike its commercial counterparts, it has a strong focus on code-based development of neural networks rather than visual construction. While in theory Joone can be used to construct a wider array of [[adaptive systems]] (including those with non-adaptive elements), its focus is on backpropagation based neural networks. ==See also== {{Portal box|Free software|Java}} * [[Artificial neural network]] * [[Neural network software]] ==Internal links== [[Encog]]:another [[neural network]] programmed in [[Java (programming language)|Java]] ==External links== * [http://www.jooneworld.com/ Joone homepage] [[Category:Neural network software]] [[Category:Free software programmed in Java]] [[uk:JOONE]]</text> </page> <page> <id>19546</id> <title>JOSEKI (cipher)</title> <text>{{unreferenced|date=March 2009}} The '''JOSEKI''' [[algorithm]] is actually a pair of related algorithms for the [[encryption|encryption and decryption]] of secret algorithms stored in [[firmware]]. The [[booting|bootstrap]] [[computer software|code]] uses a [[key (cryptography)|key]] stored in [[non-volatile|non-volatile memory]] to decrypt the [[operating system]] code stored encrypted in [[Read-only memory|ROM]]. JOSEKI is unusual in that the encryption algorithm is not the same as, and cannot be deduced from, the decryption algorithm. The concern is that if the physical device is [[compromise|compromised]], the firmware cannot be erased and is subject to inspection and [[reverse-engineering]]. However, if the 