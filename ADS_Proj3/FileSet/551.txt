to solve common problems in specific lines of business, for example banking, manufacturing, and stock brokering. Due to the high degrees of system integration required for initial deployment, many enterprises use experts that specialize in BAM to implement solutions. ==Processing events== All BAM solutions process events. While most of the first BAM solutions were closely linked to [[business process management]] (BPM) solutions and therefore processed events emitted as the process was being orchestrated, this had the disadvantage of requiring enterprises to invest in BPM before being able to acquire and use BAM. Fortunately the newer generation of BAM solutions are based on [[Complex Event Processing]] (CEP) technology, and can process high volumes of underlying technical events to derive higher level business events, therefore severing the dependency on BPM, and providing the benefits of BAM to a wider audience of customers. ==Examples== A specific brief example follows of how a BAM solution might be used. A bank is interested in minimizing the amount of money it borrows overnight from a central bank. Interbank transfers must be communicated and arranged through automation by a set time each business day. The failure of any vital communication could cost the bank large sums in interest charged by the central bank. A BAM solution would be programmed to become aware of each message and await confirmation. Failure to receive confirmation within a reasonable amount of time would be grounds for the BAM solution to raise an alarm that would set in motion manual intervention to investigate the cause of the delay and to push the problem toward resolution before it becomes costly. Another example involves a mobile telecommunications company interested in detecting a situation whereby new customers are not set up promptly and correctly on their network and within the various CRM and billing solutions. Low-level technical events such as messages passing from one application to another over a middleware system, or transactions detected within a database logfile, are processed by a CEP engine. All events relating to an individual customer are correlated in order to detect an anomalous situation whereby an individual customer has not been promptly or correctly provisioned, or set up. An alert can be generated to notify technical operations or to notify business operations, and the failed provisioning step may be restarted automatically. ==External links== * [http://www.gartner.com/resources/105500/105562/105562.pdf Gartner overview of BAM, Definition (PDF)] * [http://www.ebizq.net/topics/bam/features/6596.html BAM overview] * [http://www.ebizq.net/topics/bam/features/4689.html David Luckham on BAM] ==Related fields== * [[Business service management]] * [[Business intelligence]] (BI) * [[Business process management]] (BPM) [[Category:Business terms]] [[Category:Business software]] [[Category:Information systems]] [[Category:Cognition]] [[Category:Events (computing)]] [[de:Business-Activity-Monitoring]] [[fr:Business Activity Monitoring]] [[pl:Business Activity Monitoring]] [[sv:Business activity monitoring]]</text> </page> <page> <id>4796</id> <title>Business interaction networks</title> <text>'''Business interaction networks''' are networks that allow businesses and their communities of interest to collaborate and do business online securely via the Internet. <ref>{{cite book | url = http://books.google.com/books?id=jRIEAAAAMBAJ&pg=PA34&lpg=PA34&dq=%22business+interaction+networks%22+network+world&source=bl&ots=J0ra0NYjmu&sig=Ve9afBpbCgRXrv1oUHklIAlHOkw&hl=en&ei=gq1sS6bhEJTwsQPswoyyDQ&sa=X&oi=book_result&ct=result&resnum=4&ved=0CBAQ6AEwAw#v=onepage&q=%22business%20interaction%20networks%22%20network%20world&f=false | title=Deal underscores need for users to get serious about Internet services | author=Turner, Mary Johnston | publisher = [[Network World]] | accessdate = February 5, 2010}}</ref> Mary Johnston Turner first discussed the concept in a [[Network World]] opinion piece in August, 1995, and attributed the first advocacy for the concept to the now-defunct [[BBN_Planet#Computer_technologies_since_the_1990s|BBN Planet]], the ISP division of [[BBN Technologies]]. ==References== {{reflist}} [[Category:Business]] [[Category:Internet]]</text> </page> <page> <id>4797</id> <title>Business logic</title> <text>{{merge|Business logic layer|discuss=Talk:Business logic layer|date=November 2010}} '''Business logic''', or '''domain logic''', is a non-technical term generally used to describe the functional [[algorithm]]s that handle [[information exchange]] between a [[database]] and a [[user interface]]. == Scope of business logic == Business logic: * models [[real life]] business objects (such as accounts, loans, itineraries, and inventories) * prescribes how business objects interact with one another * enforces the routes and the methods by which business objects are accessed and updated Business logic comprises:<ref>{{cite web|url=http://www.ebizq.net/topics/bpm/features/5757.html?&pp=1|title=The Challenge of BPM Adoption|date=2005-03-27|author=Steven Minsky|publisher=eBizQ}}</ref> * [[business rule]]s that express business policy (such as channels, location, logistics, prices, and products); and * [[workflow]]s that are the ordered tasks of passing documents or data from one participant (a person or a software system) to another. == Location of business logic == [[Image:Overview of a three-tier application vectorVersion.svg|thumb|right|Business logic in theory occupies the middle tier of a 3-tier architecture.]] In single-tier applications, business logic, presentation logic, and [[CRUD (acronym)|CRUD]] are often fused, with each having intimate knowledge of, or being strongly [[coupling (computer science)|coupled]] to, the others. This is seen as problematic, since changes to one result in changes to both of the others, requiring retesting and revalidation of the entire system for a single change. The interweaving also limits the extent to which the CRUD and the business logic can be [[reusability|reused]].<ref>{{cite book|url=http://www.awprofessional.com/articles/article.aspx?p=24260&seqNum=3|chapter=Introduction to Enterprise Software|author=Khawar Zaman Ahmed and Cary E. Umrysh|publisher=Addison-Wesley|date=2001-10-17|isbn=0-201-73829-5|title=Developing Enterprise Java Applications with J2EE and UML}}</ref> In a [[multilayered architecture]] (compared to [[multitier architecture]]) business logic is a separate module. In the common [[Three-tier (computing)|3-tier architecture]], the business logic in theory occupies the middle tier, the business-services tier or [[business layer]]. In practice, the business logic is often interwoven in the other two tiers (the user services tier and the database services tier), such as by encoding business logic in [[stored procedure]]s and in decisions about input validation and display formatting. However there is not a well defined rule: <ref>{{cite web|url=http://www.codeproject.com/KB/architecture/DudeWheresMyBusinessLogic.aspx|title=Dude, where's my business logic?|author=Chad Z. Hower|work=The Code Project}}</ref> Chad Hower and others advocate storing ''all'' business logic in a business layer, and not encoding any business logic in the application's user services or database services tiers, while <ref>{{cite web|url=http://web.inter.nl.net/users/T.Koppelaars/J2EE_DB_CENTRIC.doc|title=A database-centric approach to J2EE application development|author=T. Koppelaars}}</ref> T. Koppelaars and others are for placing the business logic layer in the database using stored procedures. ==Tools for handling business logic== Business logic can be extracted from procedural code using a [[BRMS|business rule management system]].<ref>{{cite news|title=Bring business logic to light: JRules 4.5 tames business rules with friendly tools|author=James Owen|publisher=JavaWorld|date=2003-09-19|url=http://www.javaworld.com/javaworld/jw-09-2003/jw-0919-iw-jrules.html}}</ref> == References == {{Reflist}} == Further reading == * {{Cite book|url=http://www.onjava.com/pub/a/onjava/excerpt/bldgjavaent_8/index1.html|title=Building Java Enterprise Applications, Vol I: Architecture|chapter=Business Logic, Part 1|author=Brett McLaughlin|isbn=0-596-00123-1|publisher=O'Reilly and Associates|month=March | year=2002}} — McLaughlin discusses the [[façade pattern]] for implementing the business layer of 