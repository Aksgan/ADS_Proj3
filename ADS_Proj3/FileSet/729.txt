of Service Attacks Against 802.11 DCF|author=Bo Chen, Vallipuram Muthukkumarasamy|publisher=[[Griffith University]]}}</ref> ==Discovery== The attack was discovered by researchers at [[Queensland University of Technology]]'s [[Information Security Research Center]].<ref name="AusCERT">{{cite web|url=http://www.auscert.org.au/render.html?it=4091|title=AusCERT Advisory: Denial of Service Vulnerability in IEEE 802.11 Wireless Devices|publisher=[[AusCERT]]}}</ref> The origin of the ''Queensland attack'' name comes thus from its original discoverers. ==In practice== The signal telling the system the airwaves are busy is of course sent through the attacker's [[NIC]], by placing it in continuous transmit mode. The attack can be set-up through the use of the Intersil's [[Prism Test Utility]] (PrismTestUtil322.exe). To execute the attack properly, a high-power NIC and external antenna are required. == References == {{reflist}} [[Category:Computer security exploits]] [[Category:Computer network security]]</text> </page> <page> <id>6448</id> <title>Clickworkers</title> <text>[[File:Clickworkers-result-detail-plain.jpg|thumb|Photo of craters on Mars.]] '''ClickWorkers''' is a small [[NASA]] experimental [[project]] that uses public [[volunteer]]s (nicknamed "clickworkers" on the site) for scientific tasks that require human perception and common sense, but not a lot of scientific training. Clickworkers are able to work when, and for however long they chose, doing routine analysis that would normally require months of work by [[scientist]]s or [[graduate school|graduate]] students. The web site and database were created and are being maintained by one engineer who is working [[part time]] on the site, and is advised by two scientists.{{Who|date=February 2010}} The pilot study was sponsored by the [[NASA Ames Director's Discretionary Fund]]. == Identifying Martian craters == The original phase ran from November 2000 to September 2001, identifying and classifying the age of craters on Mars images from [[Viking Orbiter]] that had already been analyzed by NASA. The goal was to answer two meta-science questions: # Is the public ready, willing, and able to help science? # Does this new way of powering science analysis produce results that are just as good as the traditional way? In February 2001 clickworkers started processing new images from [[Mars Global Surveyor]], surveying small craters never before cataloged. Clickworkers also searched Mars images for "honeycomb" terrain, although no further images were discovered and it is suspected that this is an illusory feature type. Their analysis might potentially be useful for scientists, although there are no specific plans for using it yet. {{As of|2007}}, new beta tasks are up on the Clickworker site. This time workers are being asked to help catalog Mars landforms in one of two ways. In the first task, high resolution images from the HiRISE camera on the Mars Reconnaissance Orbiter are displayed and the volunteers are to stamp areas on the image with appropriate landform types. The second task takes a different approach and displays wider field views from the older MOC camera on Mars Global Surveyor. The landforms on these wider views are then marked, and interesting features can be tagged for possible future hi-res imaging with HiRISE. As of November 2009 the HiRISE site was down. == New site == In November 2009 it was announced that NASA has developed a new website to allow volunteer users to help in Martian mapping. The site "Be a Martian" went live on November 17, 2009, and allows users to either map features or count craters on Mars.<ref>[http://news.bbc.co.uk/1/hi/8364865.stm BBC NEWS &#124; Science & Environment &#124; How to explore Mars and have fun]</ref> == See also == * [[Amazon Mechanical Turk]] * [[Crowdsourcing]] * [[Virtual_volunteering | Virtual Volunteering]] == References == {{Reflist}} == External links == * [http://clickworkers.arc.nasa.gov/top ClickWorkers (original site)] * [http://clickworkers.arc.nasa.gov/hirise ClickWorkers (new HiRise site), now defunct] * [http://beamartian.jpl.nasa.gov/welcome New (November 2009) NASA "Be a Martian" website] * [http://www.clickworker.com/en clickworker.com (Crowdsourcing)] [[Category:Astronomy software]] [[Category:Human-based computation]] [[Category:Crowdsourcing]] [[Category:Citizen science]] [[Category:NASA online]]</text> </page> <page> <id>6455</id> <title>Client-side scripting</title> <text>{{unreferenced|date=February 2008}} '''Client-side scripting''' generally refers to the class of [[computer program]]s on the [[World Wide Web|web]] that are [[Execution (computers)|executed]] ''[[client-side]]'', by the user's [[web browser]], instead of ''[[server-side]]'' (on the [[web server]]).<ref>http://www.w3.org/TR/WD-script-970314</ref> This type of [[computer programming]] is an important part of the [[Dynamic HTML]] (DHTML) concept, enabling [[web page]]s to be [[Script (computer programming)|scripted]]; that is, to have different and changing content depending on user input, environmental conditions (such as the time of day), or other variables. Web authors write [[client-side]] scripts in languages such as [[JavaScript]] ([[Client-side JavaScript]]) and [[VBScript]]. ==Method== Client-side scripts are often embedded within an [[HTML]] document (hence known as an "embedded script"), but they may also be contained in a separate [[Computer file|file]], which is referenced by the document (or documents) that use it (hence known as an "external script"). Upon request, the necessary files are sent to the user's computer by the [[web server]] (or servers) on which they reside. The user's [[web browser]] [[Execution (computers)|executes]] the script, then displays the document, including any visible output from the script. Client-side scripts may also contain instructions for the browser to follow in response to certain user actions, (e.g., clicking a button). Often, these instructions can be followed without further communication with the server. By viewing the file that contains the script, users may be able to see its [[source code]]. Many web authors learn how to write client-side scripts partly by examining the source code for other authors' scripts. In contrast, [[server-side scripting|server-side scripts]], written in languages such as [[Perl]], [[PHP]], and [[VBScript|server-side VBScript]], are executed by the web server when the user requests a document. They produce output in a format understandable by web browsers (usually HTML), which is then sent to the user's computer. The user cannot see the script's source code (unless the author publishes the code separately), and may not even be aware that a script was executed. Documents produced by server-side scripts may, in turn, contain client-side scripts. Client-side scripts have greater access to the information and functions available on the user's browser, whereas server-side scripts have greater access to the information and functions available on the server. Server-side scripts require that their language's [[Interpreter (computing)|interpreter]] be installed on the server, and produce the same output regardless of the client's browser, [[operating system]], or other system details. Client-side scripts do not require additional software on the server (making 