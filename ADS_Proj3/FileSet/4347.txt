of 1424 "program steps". This memory was shared with variable storage of up to 178 locations, in addition to the 26 fixed locations named A through Z. Programs and data could be stored on a [[cassette tape]] through an optional external tape interface unit. A printer/cassette interface was available, which used an ink ribbon on plain paper. Although not branded as such, this became known as the PC-1, as later models were labelled PC-2 through PC-8. Some were made by Sharp, and the rest were made by [[Casio]] (PC-4 through PC-7). The PC-2 had 4 colored [[ballpoint pen|ball point pens]] and could print or plot on plain paper. The others all used thermal paper, the PC-3 and PC-8 using the same printer, the PC-4, PC-5 and PC-6 using the same printer, and the PC-7 having no printer or cassette interface. ==External links== *[http://www.trs-80.com pictures and details on the TRS-80 Pocket Computer] *[http://www.pc1500.com/] [[Category:Microcomputers]] [[Category:Pocket computers]] [[ca:TRS-80 Pocket Computer]] [[es:TRS-80 Pocket Computer]]</text> </page> <page> <id>36727</id> <title>TSP (econometrics software)</title> <text>{{Infobox_Software | name = TSP (Time Series Processor) | developer = [[TSP International]] | latest_release_version = 5.1 | latest_release_date = September 2009 | operating_system = [[Microsoft Windows|Windows]] [[Mac OS X]] [[Linux]]| genre = [[programming language]] [[econometric software]] | license = [[proprietary software|proprietary]] | website = [http://www.tspintl.com/ www.tspintl.com] | }} '''TSP''' is a [[programming language]] for the estimation and simulation of [[econometric]] models. TSP stands for "Time Series Processor", although it is also commonly used with cross section and panel data. The company behind the program is TSP International which was founded in 1978 by Bronwyn H. Hall. ==Supported Data Formats== * [[Comma-separated_values]] * [[Databank_format]] * [[Microsoft_Excel_file_format]] * [[stata dta files up to version 11]] ==External links== *[http://www.tspintl.com/tspinfo/whatis.htm Homepage] [[Category:Simulation programming languages]] [[Category:Econometrics software]]</text> </page> <page> <id>36728</id> <title>TSS-8</title> <text>{{Infobox_OS |name = TSS-8 |logo = |screenshot = |caption = |developer = [[Digital Equipment Corporation]] |source_model = [[Closed Source]] |kernel_type = Time-sharing operating systems |supported_platforms = [[PDP-8]] |ui = [[Command line interface]] |family = DEC OS family |latest_release_version = 8.24 |latest_release_date = February [[1975]] <ref>[http://www.oshistory.net/metadot/index.pl?id=2248 OS history]</ref> |marketing_target = |prog_language = [[ALGOL]], [[BASIC programming language|BASIC]], [[FOCAL (programming language)|FOCAL]], [[Fortran]] D, [[PAL-III|PAL-D]] |updatemodel = |package_manager = |working_state = Discontinued |license = [[Proprietary software|Proprietary]] |website = }} '''TSS-8''' was a little time-sharing [[operating system]] co-written by Don Witcraft and John Everett at [[Digital Equipment Corporation]] in [[1967]]. The operating system ran on the [[12-bit]] [[PDP-8]] computer and was released in [[1968]]. <blockquote>"Don Witcraft wrote the TSS-8 scheduler, command decoder and UUO (Unimplemented User Operations) handler. John Everett wrote the disk handler, file system, TTY (teletypewriter) handler and 680-I service routine for TSS-8" "Roger Pyle and John Everett wrote the [[PDP-8]] Disk Monitor System, and John Everett adapted PAL-III to make PAL-D for DMS. Bob Bowering, author of MACRO for the [[PDP-6]] and [[PDP-10]], wrote an expanded version, PAL-X, for TSS-8." <ref>[http://www.faqs.org/faqs/dec-faq/pdp8/section-15.html FAQs]</ref></blockquote> This timesharing system: <blockquote>"was based on a protection architecture proposed by Adrian Van Der Goor, a grad student of [[Gordon Bell]]'s at [[Carnegie-Mellon]]. It requires a minimum of 12K words of memory and a swapping device; on a 24K word machine, it could give good support for 17 users." "Each user gets a virtual 4K PDP-8; many of the utilities users ran on these virtual machines were only slightly modified versions of utilities from the Disk Monitor System or paper-tape environments. Internally, TSS-8 consists of RMON, the resident monitor, DMON, the disk monitor (file system), and KMON, the keyboard monitor (command shell). BASIC was well supported, while restricted (4K) versions of FORTRAN D and Algol were available." <ref>[http://www.faqs.org/faqs/dec-faq/pdp8/section-10.html FAQs]</ref></blockquote> The [[RSTS/E|RSTS-11]] [[operating system]] is a descendant of TSS-8. ==References== {{reflist}} {{DEC Operating Systems}} {{operating-system-stub}} [[Category:DEC Operating Systems]]</text> </page> <page> <id>36734</id> <title>TUME</title> <text>{{Infobox_Software | name = tUME | screenshot = [[Image:Tume.png|324px|tUME]] | caption = tUME screenshot | developer = Echidna | operating system = [[MS-DOS]], [[AmigaOS]] | genre = [[tile based map editor]] | license = Mozilla Public License v1.1 | website = [http://opentume.co.cc tUME Homepage] }} '''tUME''' (the Universal Map Editor) is a tile based map editor originally created and designed by Greg Marquez and Gregg Tavares for the Commodore [[Amiga]] and later ported to [[PC compatible|MS-DOS]] by Dan Chang. It was used to create levels, maps, stages and tables for many [[8-bit]] and [[16-bit]] console games for the [[Nintendo Entertainment System]], the [[Super Nintendo Entertainment System]], the [[Game Boy]] and the [[Mega Drive|Sega Genesis]]. ==Features== tUME distinguished itself from other map editors of the era in several ways. One, it copied the keyboard layout of [[Deluxe Paint]], the most popular image editing software at the time. It has no intrinsic limits. It can edit multiple maps, each made from tiles of any arbitrary pixel size. It can even make maps made from tiles of tiles of arbitrary size nested to an arbitrary level. It supports editing multiple maps at once (or rooms as tUME calls them). It also allows an arbitrary number of layers per map allowing tiles to be stacked. Another unique feature was that it features no graphic editing tools. Most map editors of the era had internal pixel editing tools for creating the actual tiles used. tUME instead relied on external applications like Deluxe Paint realizing it could never hope to compete with all the tools available in specialized pixel editing packages. Finally, whereas most map editors of the era saved out proprietary formats intended to be used directly in a game, tUME saved a generic [[Interchange File Format|IFF]] format file and then relied on customized converters called tUMEPack(s). These tools would take the various graphics, maps, layers and based on various settings create all kinds of data including not only the graphics but things like height maps for collisions, logic mappings to map an image to a certain meaning internal to a game's logic, replacements for when areas of a map needed to be replaced at runtime during a game and many other types of data. ==Games Using tUME== tUME was widely used through out the industry. Games that used tUME 