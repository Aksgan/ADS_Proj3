grid-based techniques, especially those coupled with particle methods (such as particle level sets). SPH for fluid simulation is being used increasingly in real-time animation and games where accuracy is not as critical as interactivity. ==Uses in solid mechanics== William G. Hoover has used SPH to study impact fracture in solids. Hoover and others use the acronym SPAM (smooth-particle applied mechanics) to refer to the numerical method. The application of smoothed-particle methods to solid mechanics remains a relatively unexplored field. == References == {{Reflist}} *[1] J.J. Monaghan, "An introduction to SPH," Computer Physics Communications, vol. 48, pp. 88–96, 1988. *[2] Hoover, W. G. (2006). Smooth Particle Applied Mechanics: The State of the Art, World Scientific. *[3] [http://adsabs.harvard.edu/abs/1994MmSAI..65.1117S Impact Modelling with SPH] Stellingwerf, R. F., Wingate, C. A., Memorie della Societa Astronomia Italiana, Vol. 65, p. 1117 (1994). *[4] Amada, T., Imura, M., Yasumuro, Y., Manabe, Y. and Chihara, K. (2004) Particle-based fluid simulation on GPU, in proceedings of ACM Workshop on General-purpose Computing on Graphics Processors (August, 2004, Los Angeles, California). *[5] Desbrun, M. and Cani, M-P. (1996). Smoothed Particles: a new paradigm for animating highly deformable bodies. In Proceedings of Eurographics Workshop on Computer Animation and Simulation (August 1996, Poitiers, France). *[6] Harada, T., Koshizuka, S. and Kawaguchi, Y. Smoothed Particle Hydrodynamics on GPUs. In Proceedings of Computer Graphics International (June 2007, Petropolis Brazil). *[7] Hegeman, K., Carr, N.A. and Miller, G.S.P. Particle-based fluid simulation on the GPU. In Proceedings of International Conference on Computational Science (Reading, UK, May 2006). Proceedings published as Lecture Notes in Computer Science v. 3994/2006 (Springer-Verlag). *[8] M. Kelager. (2006) Lagrangian Fluid Dynamics Using Smoothed Particle Hydrodynamics, M. Kelagar (MS Thesis, Univ. Copenhagen). *[9] Kolb, A. and Cuntz, N. (2005) ] Dynamic particle coupling for GPU-based fluid simulation, A. Kolb and N. Cuntz. In Proceedings of the 18th Symposium on Simulation Techniques (2005) pp. 722–727. *[10] Liu, G.R. and Liu, M.B. Smoothed Particle Hydrodynamics: a meshfree particle method. Singapore: World Scientific (2003). *[11] Monaghan, J.J. (1992). Smoothed Particle Hydrodynamics. Ann. Rev. Astron. Astrophys (1992). 30 : 543-74. *[12] Muller, M., Charypar, D. and Gross, M. ] Particle-based Fluid Simulation for Interactive Applications, In Proceedings of Eurographics/SIGGRAPH Symposium on Computer Animation (2003), eds. D. Breen and M. Lin. *[13] Vesterlund, M. Simulation and Rendering of a Viscous Fluid Using Smoothed Particle Hydrodynamics, (MS Thesis, Umea University, Sweden). ==External links== *[http://www.ukaff.ac.uk/starcluster First large simulation of star formation using SPH] *[http://wiki.manchester.ac.uk/spheric SPHERIC (SPH European Research Interest Community)] *[http://ia2.oats.inaf.it/index.php?option=com_content&view=section&id=12&Itemid=71 ITVO] is the web-site of The Italian Theoretical Virtual Observatory created to query a database of numerical simulation archive. *[http://www.stellingwerf.com/rfs-bin/index.cgi?action=PageView&id=33 SPHC Image Gallery] depicts a wide variety of test cases, experimental validations, and commercial applications of the SPH code SPHC. ==Software== *[http://www.rchoetzlein.com/eng/ FLUIDS v.1] is a simple, open source (Zlib), real-time 3D SPH implementation in C++ for liquids for CPU and GPU. *[[GADGET]] [http://www.mpa-garching.mpg.de/galform/gadget/ ] is a freely available code for cosmological N-body/SPH simulations *[http://isph.sourceforge.net/ ISPH] parallel C++/OpenCL open source truly incompressible SPH implementation *[http://www.simpartik.com SimPARTIK] is a commercial simulation package for SPH and DEM simulations from Fraunhofer IWM *[http://www.astro.ex.ac.uk/people/dprice/splash SPLASH] is a freely available visualisation tool for SPH simulations *[http://www.sphysics.org SPHysics] is an open source SPH implementation in Fortran *[http://www.dual.sphysics.org DualSPHysics] is a package of executables based on SPHysics and using GPU computing *[http://pal.sourceforge.net/ Physics Abstraction Layer] is an open source abstraction system that supports real time physics engines with SPH support *[http://www.itm.uni-stuttgart.de/research/pasimodo/pasimodo_en.php Pasimodo] is a program package for particle-based simulation methods, e.g. SPH *[http://sourceforge.net/projects/punto/ Punto] is a freely available visualisation tool for particle simulations {{DEFAULTSORT:Smoothed-Particle Hydrodynamics}} [[Category:Fluid dynamics]] [[Category:Numerical differential equations]] [[Category:Computational fluid dynamics]] [[de:Smoothed Particle Hydrodynamics]] [[fa:هیدرودینامیک ذرات هموار]] [[fr:Smoothed particle hydrodynamics]] [[pl:SPH]] [[ru:Гидродинамика сглаженных частиц]]</text> </page> <page> <id>34751</id> <title>Snake-arm robot</title> <text>A '''snake-arm robot''' is a slender hyper-redundant manipulator. The high number of degrees of freedom allows the arm to “[[snake]]” along a path or around an obstacle – hence the name “snake-arm”. == Definition == [[Image:ElephantArmRobot.jpg|right|90px|thumbnail|Elephant Trunk robotic arm]] Snake-arm robots are also described as continuum robots and [[Elephant#Trunk|elephant’s trunk]] robots although these descriptions are restrictive in their definitions and cannot be applied to all snake-arm robots. * A continuum robot is a continuously curving manipulator, much like the arm of an octopus. * An elephant’s trunk robot is a good descriptor of a continuum robot. This has generally been associated with whole arm manipulation – where the entire arm is used to grasp and manipulate objects, in the same way that an elephant would pick up a ball. This is an emerging field and as such there is no agreement on the best term for this class of robot. Snake-arm robots are often used in association with another device. The function of the other device is to *introduce the snake-arm into the [[confined space]]. Examples of possible introduction axes include mounting a snake-arm on a [[Remote Control Vehicle|remote controlled vehicle]] or an industrial robot or designing a bespoke a [[linear actuator]]. In this case the shape of the arm is coordinated with the linear movement of the introduction axis enabling the arm to follow a path into confined spaces. Other features which are usually (but not always) associated with snake-arm robots: * Continuous diameter along the length of the arm * Self-supporting * Either tendon-driven or [[Pneumatics|pneumatically controlled]] in most cases. A snake-arm robot is not to be confused with a [[snakebot]] which mimics the biomorphic motion of a snake in order to slither along the ground. == Applications == The ability to reach into confined spaces lends itself to many applications involving access problems. The list below is not intended to be an exhaustive list of possibilities but merely an indication of where these robots are being used or developed for use. === Industry === * [[Nuclear power|Nuclear]] ** Decommissioning ** Repair and maintenance <ref name="IndustrialRobot">[http://www.ocrobotics.com/newsroom/publications/IR2005.pdf "Snaking around in a nuclear jungle"], Rob Buckingham and Andrew Graham, Int. J. Industrial Robot, Vol. 32, No. 2, ISSN 0143-991X, 2005, p120-127</ref><ref name="BBCarticle">[http://news.bbc.co.uk/1/hi/technology/5324708.stm "Snake-arm robots slither forward"], Jonathon Fildes, BBC News Website ([[bbc.co.uk]]), 13 September 2006</ref> * 