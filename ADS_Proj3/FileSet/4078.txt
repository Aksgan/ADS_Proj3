in slaves. Cascading means that replicas can be created (and updated) via other replicas, i.e. they needn't directly connect to the master. == Terminology == The name "slony" comes from the [[Russian language|Russian]] word слоны which stands for "[[elephant]]s".<ref>{{cite web |title=Slony-I manual: Slony-I Concepts | url=http://slony.info/adminguide/current/doc/adminguide/concepts.html |accessdate=2008-02-03 }}</ref> This is a reference to the PostgreSQL elephant logo, as well as being a "tip of the hat" to Vadim Mikheev, who came up with some of the core ideas Slony-I uses to work. Note that there is a whole set of related terminology: ; slony : is the plural word for elephants, and indicates that a cluster consists of multiple databases ; slon : is the singular word for elephant; each replication node is managed by a program named "slon", which aggregate together into the aforementioned "cluster of elephants" ; slonik : is the word for a "little elephant," and is the name of the program used to configure the cluster. In effect, the "little elephant" tells the cluster, "here's what you need to do!" == Unique Features == Unlike many other replication solutions for PostgreSQL, Slony-I is not tied to any particular version of the database, which makes it possible to upgrade a database cluster one node at a time, without material downtime. (Version 2.0.0 requires PostgreSQL 8.3+, though) ==See also== * [[PostgreSQL]] * [[Replication (computer science)]] ==References== {{reflist}} <div class="references-small"> * {{cite web |author=Ludovic Marcotte |date=2005-04-28 |title=Database Replication with Slony-I |publisher=[[Linux Journal]] |url=http://www.linuxjournal.com/article/7834 }} * {{cite web |author=A. Elein Mustain |date=2004-11-18 |title=Introducing Slony |publisher=[[O'Reilly Media|O'Reilly]] OnLamp |url=http://www.onlamp.com/pub/a/onlamp/2004/11/18/slony.html }} </div> ==External links== * [http://slony.info/ Slony-I official website] * [http://www.enterprisedb.com/learning/tutorial/slony_postgresql.do Slony tutorial] {{database-stub}} [[Category:Data synchronization]] [[Category:PostgreSQL]] [[ja:Slony-I]]</text> </page> <page> <id>34659</id> <title>Slow-growing hierarchy</title> <text>In [[computability theory]], [[computational complexity theory]] and [[proof theory]], the '''slow-growing hierarchy''' is an ordinal-indexed family of slowly increasing functions ''g''<sub>α</sub>: '''N''' → '''N''' (where '''N''' is the set of [[natural numbers]], {0, 1, ...}). It contrasts with the [[fast-growing hierarchy]]. == Definition == Let μ be a [[large countable ordinal]] such that a [[fundamental sequence (ordinals)|fundamental sequence]] is assigned to every [[limit ordinal]] less than μ. The '''slow-growing hierarchy''' of functions ''g''<sub>α</sub>: '''N''' → '''N''', for α < μ, is then defined as follows: *<math> g_0(n) = 0,\, </math> *<math> g_{\alpha+1}(n) = g_\alpha(n) + 1,\, </math> *<math> g_\alpha(n) = g_{\alpha[n]}(n) \,\!</math> if α is a limit ordinal. Here α[''n''] denotes the ''n''<sup>th</sup> element of the fundamental sequence assigned to the limit ordinal α. [[Fast-growing hierarchy#Definition]] describes a standardized choice for fundamental sequence for all α < ε<sub>0</sub>. == Relation to fast-growing hierarchy == The slow-growing hierarchy grows much more slowly than the fast-growing hierarchy. Even ''g''<sub>[[ε0|ε<sub>0</sub>]]</sub> is only equivalent to ''f''<sub>3</sub> and ''g''<sub>α</sub> only attains the growth of ''f''<sub>ε<sub>0</sub></sub> (the first function that [[Peano arithmetic]] cannot prove [[total function|total]] in the hierarchy) when α is the [[Bachmann–Howard ordinal]]. (Girard 1981) and (Cichon and Wainer 1983) However, Girard (1981) proved that the slow-growing hierarchy eventually ''catches up'' with the fast-growing one. Specifically, that there exists an ordinal α and integers ''a'', ''b'' such that :''g''<sub>α</sub>(''n'') < ''f''<sub>α</sub>(''n'') < ''g''<sub>α</sub>(''n'' + 1) where ''f''<sub>α</sub> are the functions in the fast-growing hierarchy. He further showed that the first α this holds for is the ordinal of the theory ''ID''<sub><ω</sub> of arbitrary finite iterations of an inductive definition. (Wainer 1989). However for the Cichon assignment of fundamental sequences the first match up occurs at the level ε<sub>0</sub> (Weiermann 1997). Extensions of the result proved in Wainer 1989 to considerably larger ordinals show that there are very few ordinals below the ordinal of transfinitely iterated <math>\Pi^1_1</math>-comprehension where the slow and fast growing hierarchy match up (Weiermann 1995). For the novice it is worth mentioning that the slow growing hierarchy depends extremely sensitive on the choice of the underlying fundamental sequences (Weiermann 1997 and Weiermann 1999). == Relation to term rewriting == Cichon provided an interesting connection between the slow growing hierarchy and derivation length for term rewriting (Cichon 1990). == References == *{{Citation | last1=Girard | first1=Jean-Yves | author1-link=Jean-Yves Girard | title=Π<sup>1</sup><sub>2</sub>-logic. I. Dilators | doi=10.1016/0003-4843(81)90016-4 | id={{MathSciNet | id = 656793}} | year=1981 | journal=Annals of Mathematical Logic | issn=0003-4843 | volume=21 | issue=2 | pages=75–219}} *{{Citation | last1=Cichon | first1=E. A. | last2=Wainer | first2=S. S. | title=The slow-growing and the Grzegorczyk hierarchies | doi=10.2307/2273557 | id={{MathSciNet | id = 704094}} | year=1983 | journal=The Journal of Symbolic Logic | issn=0022-4812 | volume=48 | issue=2 | pages=399–408}} * Wainer, S.S (1989), "[http://www.jstor.org/stable/2274873 Slow Growing Versus Fast Growing]". ''[[Journal of Symbolic Logic]]'' '''54'''(2): 608-614. *{{citation|id={{MR|1129778}}|last= Gallier|first= Jean H.|title= What's so special about Kruskal's theorem and the ordinal Γ<sub>0</sub>? A survey of some results in proof theory|journal= Ann. Pure Appl. Logic|volume= 53 |year=1991|issue= 3|pages= 199–260|url=http://stinet.dtic.mil/oai/oai?verb=getRecord&metadataPrefix=html&identifier=ADA290387|doi=10.1016/0168-0072(91)90022-E}} PDF's: [ftp://ftp.cis.upenn.edu/pub/papers/gallier/kruskal1.pdf part 1] [ftp://ftp.cis.upenn.edu/pub/papers/gallier/kruskal2.pdf 2] [ftp://ftp.cis.upenn.edu/pub/papers/gallier/kruskal3.pdf 3]. (In particular part 3, Section 12, pp. 59-64, "A Glimpse at Hierarchies of Fast and Slow Growing Functions".) * Weiermann, A. (1995),"Investigations on slow versus fast growing: How to majorize slow growing functions nontrivially by fast growing ones." ''Arch. Math. Logic'' 34 (5): 313-330. * Weiermann, A. (1997), "Sometimes slow growing is fast growing." ''Ann. Pure Appl. Logic'' '''90''' (1-3): 91-99. {{doi|10.1016/S0168-0072(97)00033-X}} * Weiermann, A. (1999), [http://books.google.com/books?id=2IHm3RT2bBoC&lpg=PP1&pg=PA403#v=onepage&q=&f=false "What makes a (pointwise) subrecursive hierarchy slow growing?"] Cooper, S. Barry (ed.) et al., Sets and proofs. Invited papers from the Logic colloquium '97, European meeting of the Association for Symbolic Logic, Leeds, UK, July 6-13, 1997. Cambridge: Cambridge University Press. Lond. Math. Soc. Lect. Note Ser. 258; 403-423. [[Category:Recursion theory]] [[Category:Proof theory]] [[Category:Hierarchy of functions]]</text> </page> <page> <id>34660</id> <title>Slow design</title> <text>'''Slow design''' is a relatively new concept of [[design]] thinking, a derivative of the [[slow food movement]]. Slow Design's implications are vast and yet to be fully explored. It could mean any of the following: #Longer design processes with more time for research, contemplation, real life impact tests and fine tuning. #Design for manufacturing with local/regional materials and technologies or Design that supports local industries, workshops and craftspeople. #Design that takes into account local/regional culture both as a source of inspiration and 