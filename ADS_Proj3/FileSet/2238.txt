of symbols and strings of symbols of an object language. For example, an interpretation function could take the predicate ''T'' (for "tall") and assign it the extension {''a''} (for "Abraham Lincoln"). Note that all our interpretation does is assign the extension {a} to the non-logical constant ''T'', and does not make a claim about whether ''T'' is to stand for tall and 'a' for Abraham Lincoln. Nor does logical interpretation have anything to say about logical connectives like 'and', 'or' and 'not'. Though ''we'' may take these symbols to stand for certain things or concepts, this is not determined by the interpretation function. An interpretation often (but not always) provides a way to determine the [[truth value]]s of [[sentence (mathematical logic)|sentences]] in a language. If a given interpretation assigns the value True to a sentence or [[theory (mathematical logic)|theory]], the interpretation is called a [[model (model theory)|model]] of that sentence or theory. == Formal languages == {{main|Formal language}} A formal language consists of a fixed collection of sentences (also called words or [[well formed formula|formulas]], depending on the context) composed from a fixed set of letters or symbols. The inventory from which these letters are taken is called the [[alphabet (computer science)|alphabet]] over which the language is defined. The essential feature of a formal language is that its syntax can be defined without reference to interpretation. We can determine that (''P'' or ''Q'') is a well-formed formula even without knowing whether it is true or false. To distinguish the strings of symbols that are in a formal language from arbitrary strings of symbols, the former are sometimes called well-formed formulæ (wffs) === Example === A formal language <math>\mathcal{W}</math> is defined with the alphabet α = { <math>\triangle</math>, <math>\square</math> }. A word is declared to be in <math>\mathcal{W}</math> if it begins with <math>\triangle</math> and is composed solely of the symbols <math>\triangle</math> and <math>\square</math>. A possible interpretation of <math>\mathcal{W}</math> would assign the decimal digit '1' to <math>\triangle</math> and '0' to <math>\square</math>. Therefore <math>\triangle</math> <math>\square</math> <math>\triangle</math> would denote 101 under this interpretation of <math>\mathcal{W}</math>. === Logical constants === In the specific cases of propositional logic and predicate logic, the formal languages considered have alphabets that are divided into two sets: the logical symbols ([[logical constant]]s) and the non-logical symbols. The idea behind this terminology is that '''logical''' symbols have the same meaning regardless of the subject matter being studied, while '''non-logical''' symbols change in meaning depending on the area of investigation. Logical constants are always given the same meaning by every interpretation of the standard kind, so that only the meanings of the non-logical symbols are changed. Logical constants include quantifier symbols ∀ and ∃, symbols for [[logical connective]]s, parentheses and other grouping symbols, and (in many treatments) the equality symbol =. == General properties of truth-functional interpretations == Many of the commonly studied interpretations associate each sentence in a formal language with a single truth value, either True or False. These interpretations are called '''truth functional'''; they include the usual interpretations of propositional and first-order logic. The sentences that are made true by a particular assignment are said to be '''[[satisfiable|satisfied]]''' by that assignment. No sentence can be made both true and false by the same interpretation, but it is possible that the truth value of the same sentence can be different under different interpretations. A sentence is '''[[Consistency|consistent]]''' if it is true under at least one interpretation; otherwise it is '''inconsistent'''. A sentence &phi; is said to be '''logically valid''' if it is satisfied by every interpretation (if &phi; is satisfied by every interpretation that satisfies &psi; then &phi; is said to be a '''[[logical consequence]]''' of &psi;). === Logical connectives === Some of the logical symbols of a language (other than quantifiers) are [[logical connective|truth-functional connectives]] that represent truth functions - functions that take truth values as arguments and return truth values as outputs (in other words, these are operations on truth values of sentences). The truth-functional connectives enable compound sentences to be built up from simpler sentences. In this way, the truth value of the compound sentence is defined as a certain truth function of the truth values of the simpler sentences. The connectives are usually taken to be [[logical constant]]s, meaning that the meaning of the connectives is always the same, independent of what interpretations are given to the other symbols in a formula. This is how we define logical connectives in propositional logic: *~Φ is True iff Φ is False. *(Φ {{and}} Ψ) is True iff Φ is True and Ψ is True. *(Φ {{or-}} Ψ) is True iff {{not}}({{not}}Φ {{and}} {{not}}Ψ) is True. *(Φ {{imp}} Ψ) is True iff ({{not}}Φ is True {{or-}} Ψ is True). *(Φ {{eqv}} Ψ) is True iff (Φ {{imp}} Ψ) is True and (Ψ {{imp}} Φ) is True. So under a given interpretation of all the sentence letters Φ and Ψ (i.e., after assigning a truth-value to each sentence letter), we can determine the truth-values of all formulas that have them as constituents, as a function of the logical connectives. The following table shows how this kind of thing looks. The first two columns show the truth-values of the sentence letters as determined by the four possible interpretations. The other columns show the truth-values of formulas built off of these sentence letters, with truth-values determined recursively. <center> {| class="wikitable" style="text-align:center" align="center" |+ Logical connectives ! Interpretation !! Φ !! Ψ !! {{not}}Φ !! (Φ {{and}} Ψ) !! (Φ {{or-}} Ψ) !! (Φ {{imp}} Ψ) !! (Φ {{eqv}} Ψ) |- |#1|| T || T || F || T || T || T || T |- |#2|| T || F || F || F || T || F || F |- |#3|| F || T || T || F || T || T || F |- |#4|| F || F || T || F || F || T || T |} </center> Now its easier to see what makes a formula logically valid. Take the formula ''F'': (Φ {{or-}} ~Φ). If our interpretation 