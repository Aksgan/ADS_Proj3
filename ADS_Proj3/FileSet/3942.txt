Enterprise (Sidewinder) &ndash; historically based on SecureOS, the company's derivative of [[BSDi]] (previously [[BSD/OS]]), but now based on [[FreeBSD]]. * Secure Firewall Reporter * Secure Firewall CommandCenter * CyberGuard ** Secure SnapGear &ndash; embedded system based on [[uClinux|&mu;Clinux]] ** Classic &ndash; built on [[UnixWare]] ** TSP (Total Stream Protection) &ndash; built on [[Linux]] * Borderware &ndash; sold off, as noted previously * SecureZone &ndash; discontinued * Firewall for [[Windows NT|NT]] &ndash; discontinued * Gauntlet &ndash; built on [[Solaris (operating system)|Solaris]], nearly phased out The Sidewinder firewall incorporated technical features of the high-assurance LOCK system, including [[Type enforcement]], a technology later applied in [[SELinux]]. However, interaction between Secure Computing and the [[open source]] community has been spotty due to the company's ownership of [[patent]]s related to Type enforcement. The Sidewinder never really tried to achieve an A1 [[TCSEC]] rating, but it did earn an EAL-4+ [[Common Criteria]] rating. Along with Sidewinder, Gauntlet had been one of the earliest [[application layer]] firewalls; both had developed a large customer base in the [[United States Department of Defense]]. Gauntlet was originally developed by [[Trusted Information Systems]] (TIS) as a commercial version of the ''TIS Firewall Toolkit'', an early open source firewall package developed under a [[DARPA]] contract. ==External links== * [http://www.securecomputing.com/ Secure Computing Corporation web site] *''[http://www.cryptosmith.com/docs/Lock-eff-acm.pdf Cost Profile of a Highly Assured, Secure Operating System]'', an overview of the LOCK system. *''[http://web.archive.org/web/20080623081401/http://www.byte.com/art/9601/sec12/art2.htm Is Your Network Secure?]'', an early [[Byte magazine|''Byte'' magazine]] article on the Sidewinder firewall. == References == {{reflist|2}} [[Category:Computer security software companies]] [[Category:Companies based in San Jose, California]] [[de:Secure Computing]]</text> </page> <page> <id>33599</id> <title>Secure Shell</title> <text>'''Secure Shell''' or '''SSH''' is a [[network protocol]] that allows data to be exchanged using a [[secure channel]] between two networked devices.<ref name="rfc"> Network Working Group of the IETF, January 2006, RFC 4252, The Secure Shell (SSH) Authentication Protocol </ref> The two major versions of the protocol are referred to as '''SSH1''' or '''SSH-1''' and '''SSH2''' or '''SSH-2'''. Used primarily on [[Linux]] and [[Unix]] based systems to access [[shell account]]s, SSH was designed as a replacement for [[Telnet]] and other [[Computer security|insecure]] remote [[Shell (computing)|shell]]s, which send information, notably [[password]]s, in [[plaintext]], rendering them susceptible to [[Packet analyzer|packet analysis]].<ref>[http://www.serverwatch.com/news/print.php/3551081 SSH Hardens the Secure Shell], Serverwatch.com</ref> The [[encryption]] used by SSH is intended to provide confidentiality and integrity of data over an unsecured network, such as the [[Internet]]. {{IPstack}} ==Definition== SSH uses [[public-key cryptography]] to [[authentication|authenticate]] the remote computer and allow the remote computer to authenticate the user, if necessary.<ref name="rfc">RFC 4252</ref> SSH is typically used to log into a remote machine and execute commands, but it also supports [[tunneling protocol|tunneling]], [[Port forwarding|forwarding]] [[TCP and UDP port|TCP ports]] and [[X11]] connections; it can transfer files using the associated [[SSH file transfer protocol|SFTP]] or [[secure copy|SCP]] protocols.<ref name="rfc" /> SSH uses the [[client-server]] model. The [[list of well-known ports (computing)|standard TCP port]] 22 has been assigned for contacting SSH servers.<ref>[http://www.iana.org/assignments/port-numbers <cite>port-numbers assignments</cite>] at iana.org</ref> An SSH [[client (computing)|client]] program is typically used for establishing connections to an SSH [[daemon (computer software)|daemon]] accepting remote connections. Both are commonly present on most modern [[operating systems]], including [[Mac OS X]], [[Linux]], [[FreeBSD]], [[Solaris (operating system)|Solaris]] and [[OpenVMS]]. [[proprietary software|Proprietary]], [[freeware]] and [[Open-source software|open source]] versions of various levels of complexity and completeness exist. ==History and development== === Version 1.x === In 1995, [[Tatu Ylönen]], a researcher at [[Helsinki University of Technology]], Finland, designed the first version of the protocol (now called '''SSH-1''') prompted by a password-[[Packet analyzer|sniffing]] attack at his [[university network]]. The goal of SSH was to replace the earlier [[rlogin]], [[TELNET]] and [[Remote Shell|rsh]] protocols, which did not provide strong authentication or guarantee confidentiality. Ylönen released his implementation as [[freeware]] in July 1995, and the tool quickly gained in popularity. Towards the end of 1995, the SSH user base had grown to 20,000 users in fifty countries. In December 1995, Ylönen founded [[SSH Communications Security]] to market and develop SSH. The original version of the SSH software used various pieces of [[free software]], such as [[GNU Multi-Precision Library|GNU libgmp]], but later versions released by SSH Secure Communications evolved into increasingly [[proprietary software]]. It is estimated that, {{As of|2000|lc=on}}, there were 2 million users of SSH.<ref name="Nicholas Rosasco and David Larochelle">{{cite web | author=Nicholas Rosasco and David Larochelle | title=How and Why More Secure Technologies Succeed in Legacy Markets: Lessons from the Success of SSH | publisher=Dept. of Computer Science, Univ. of Virginia |date= | work=Quoting Barrett and Silverman, ''SSH, the Secure Shell: The Definitive Guide,'' O'Reilly & Associates (2001) | url=http://www.cs.virginia.edu/~drl7x/sshVsTelnetWeb3.pdf | accessdate=2006-05-19 }}</ref> ==== Notable vulnerabilities ==== In 1998 a vulnerability was described in SSH 1.5 which allowed unauthorized insertion of content into encrypted SSH stream due to insufficient data integrity protection from [[CRC-32]] used in this version of protocol. <ref>[http://www.coresecurity.com/content/ssh-insertion-attack SSH Insertion Attack]</ref> <ref>[http://www.kb.cert.org/vuls/id/13877 Weak CRC allows packet injection into SSH sessions encrypted with block ciphers], US-CERT</ref> A fix known as SSH Compensation Attack Detector <ref>[http://www.securityfocus.com/bid/2347/discuss SSH CRC-32 Compensation Attack Detector Vulnerability], SecurityFocus</ref> was introduced into most implementations. Many of these updated implementations contained a new integer overflow vulnerability <ref>[http://www.kb.cert.org/vuls/id/945216 SSH CRC32 attack detection code contains remote integer overflow], US-CERT</ref> that allowed attackers to execute arbitrary code with the privileges of the SSH daemon, typically root. In January 2001 a vulnerability was discovered that allows attackers to modify the last block of an IDEA-encrypted session.<ref>[http://www.kb.cert.org/vuls/id/315308 Weak CRC allows last block of IDEA-encrypted SSH packet to be changed without notice], US-CERT</ref> The same month, another vulnerability was discovered that allowed a malicious server to forward a client authentication to another server.<ref>[http://www.kb.cert.org/vuls/id/684820 SSH-1 allows client authentication to be forwarded by a malicious server to another server], US-CERT</ref> === Version 1.99 === In January 2006, well after version 2.1 was established, RFC 4253 specified that an SSH server which supports both 2.0 and prior versions of SSH should identify its protoversion as 1.99.<ref>[http://tools.ietf.org/html/rfc4253#section-5.1 RFC 4253, section 5. Compatibility With Old SSH Versions], IETF</ref> This is not an actual version but a method to identify [[backward compatibility]]. === OpenSSH and OSSH 