operators I|journal=Acta Math.|year=1971|volume=127|pages=79–183}} [[Category:Mathematical analysis]] [[de:Oszillierendes Integral]]</text> </page> <page> <id>27845</id> <title>OsiriX</title> <text>{{Refimprove|date=July 2010}} {{Use mdy dates|date=August 2010}} {{Infobox software |name = OsiriX |logo = [[File:OsiriX.png|48px]] |screenshot = |caption = |developer = |latest_release_version = 3.8 |latest_release_date = September 30, 2010<ref>[http://www.macupdate.com/info.php/id/14362/osirix]</ref> |operating_system = [[Mac OS X]] |genre = [[Medical]] |license = [[GPL|GNU General Public License]] |website = http://www.osirix-viewer.com }} '''OsiriX''' is an image processing application dedicated to [[DICOM]] images (".dcm" / ".DCM" extension) produced by medical equipment ([[Magnetic resonance imaging|MRI]], [[Computed tomography|CT]], [[Positron emission tomography|PET]], [[PET-CT]], ...). Osirix is complementary to existing viewers, in particular to nuclear medicine viewers. It can also read many other file formats: TIFF (8,16, 32 bits), JPEG, PDF, AVI, MPEG and Quicktime. It is fully compliant with the DICOM standard for image communication and image file formats. OsiriX is able to receive images transferred by DICOM communication protocol from any [[PACS]] or medical imaging modality (STORE SCP - Service Class Provider, STORE SCU - Service Class User, and Query/Retrieve) . == History == The OsiriX project started in 2004 at [[UCLA]] with Prof. Osman Ratib and a radiologist, Dr Antoine Rosset<ref>[http://www.springerlink.com/content/x57mul0frg64apmh/ Journal of Digital Imaging: OsiriX: An Open-Source Software for Navigating in Multidimensional DICOM Images]</ref>. OsiriX has been developed by Rosset, working in [http://www.latour.ch LaTour Hospital] ([[Geneva]], [[Switzerland]]) and Joris Heuberger, a computer scientist from Geneva. In 2010, OsiriX foundation released a version of OsiriX for iPhone and iPod touch. == Features == OsiriX has been specifically designed for navigation and visualization of multimodality and multidimensional images: 2D Viewer, 3D Viewer, 4D Viewer (3D series with temporal dimension, for example: Cardiac-CT) and 5D Viewer (3D series with temporal and functional dimensions, for example: Cardiac-PET-CT). The 3D Viewer offers all modern rendering modes: Multiplanar reconstruction (MPR), Surface Rendering, Volume Rendering and [[Maximum intensity projection]] (MIP). All these modes support 4D data and are able to produce image fusion between two different series (for example: PET-CT). Osirix is simultaneously a DICOM PACS workstation for medical imaging and an image processing software package for medical research ([[radiology]] and [[nuclear imaging]]), functional imaging, 3D imaging, confocal microscopy and molecular imaging. Osirix supports a complete plug-in architecture that allows one to expand the capabilities of OsiriX for personal needs. OsiriX is released under a [[free software licence]] and runs under [[Mac OS X]]. == OsiriX Foundation == In 2008, the OsiriX Foundation was founded<ref>[http://ge.ch/hrcintapp/externalCompanyReport.action?companyOfrcId13=CH-660-7631008-7&lang=EN OsiriX Foundation - Excerpt of the Commercial Register of the State of Geneva, Switzerland]</ref>. OsiriX Foundation will promote research and development and distribution of software tools for scientiﬁc and medical applications. It will host and help to promote research projects in Open Source software development for medical applications. == Usage as a medical device == The usage of software for diagnostic or therapeutic purposes is regulated by authorities. There are certified versions available which are labeled as Medical Device class II (FDA, USA) and class IIb (CE-Label, Europe) for clinical use. ==External links== {{Portal|Free software}} * [http://www.osirix-viewer.com OsiriX] * [http://groups.yahoo.com/group/osirix/ Users group] * [http://www.radrounds.com/group/osirix/ Osirix Fan Group] * [http://www.springerlink.com/content/x57mul0frg64apmh/ Journal of Digital Imaging: OsiriX: An Open-Source Software for Navigating in Multidimensional DICOM Images] * [http://radiographics.rsna.org/content/26/1/299.full/ Radiographics: Navigating the Fifth Dimension: Innovative Interface for Multidimensional Multimodality Image Navigation] ==References== <references /> {{DEFAULTSORT:Osirix}} <!-- Categories --> [[Category:Medical imaging]] [[Category:Free graphics software]] [[Category:Free science software]] [[Category:Apple Design Award winners]] [[de:OsiriX]] [[fa:اوسایرکس]] [[fr:OsiriX]] [[ja:OsiriX]] [[pl:Osirix]]</text> </page> <page> <id>27852</id> <title>Ostrich algorithm</title> <text>{{otheruses2|ostrich}} In [[computer science]], the '''ostrich algorithm''' is a strategy of ignoring potential problems on the basis that they may be exceedingly rare - "to stick your head in the sand and pretend that there is no problem". This assumes that it is more cost-effective to allow the problem to occur than to attempt its prevention. This approach may be used in dealing with [[deadlock]]s in [[concurrent programming]] if deadlocks are believed to be very rare, and if the cost of detection or prevention is high. ==Trade-offs== * Convenience * Correctness It is one of the methods of dealing with deadlocks. Other methods are: avoidance ([[banker's algorithm]]), prevention, detection and recovery. Some algorithms with poor worst-case performance are commonly used because they only exhibit poor performance on artificial cases that do not occur in practice; typical examples are the [[simplex algorithm]] and the type-checking algorithm for [[Standard ML]]. Issues like [[integer overflow]] in programming languages with fixed-width integers are also frequently ignored because they occur only in exceptional cases that don't arise for practical inputs. ==Hybrid Approach== Hybrid approach to using Ostrich algorithm is determining that the exceedingly rare case does not happen, and then switching from another costly algorithm to this one. The trade-off here is that if circumstances change or are unaccounted for, the rare problem may re-occur. An example can be found in the Non Hard-Locking ReadWriteLocker[http://nohardlockrwlocker.codeplex.com/] site, where you have the option to determine where deadlocks might occur, and then turn off deadlock detection once you determine it doesn't need to be used. ==References== *[http://www.cs.rpi.edu/academics/courses/fall04/os/c10/index.html Ostrich algorithm] *[http://nohardlockrwlocker.codeplex.com/ Non-Hard Locking Read-Write Locker] [[Category:Concurrent algorithms]] {{algorithm-stub}} [[cs:Pštrosí algoritmus]] [[de:Vogel-Strauß-Algorithmus]] [[ja:ダチョウ・アルゴリズム]] [[pt:Algoritmo do avestruz]] [[uk:Алгоритм страуса]]</text> </page> <page> <id>27870</id> <title>Out of the Inner Circle</title> <text>'''''Out of the Inner Circle: A Hacker's Guide to Computer Security''''' is a book by [[Bill Landreth]] and [[Howard Rheingold]], published in 1985 by [[Microsoft Press]] and distributed by [[Simon & Schuster, Inc.]] (ISBN 0-671-30942-0). The book was created to provide insight into the ways and methods of the [[Hacker (computing)|hacking]] community in days before [[internet]] became prevalent. Although largely outdated and more than a little nostalgic, it does show what brought on many of the current trends we see in network security today. {{nonfiction-book-stub}} [[Category:1985 books]] [[Category:Computer security books]]</text> </page> <page> <id>27883</id> <title>Outline of artificial intelligence</title> <text>'''[[Artificial intelligence|Artificial intelligence (AI)]]''' is a branch of [[computer science]] that deals with intelligent behavior, learning, and adaptation ''in [[machine]]s''. Research in AI is concerned with producing machines to automate tasks requiring intelligent behavior. The following outline is provided as an overview of and topical guide to artificial intelligence. ==Essence of artificial intelligence== : ''Main article: [[Artificial intelligence]]'' * 