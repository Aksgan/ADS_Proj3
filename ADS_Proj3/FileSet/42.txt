with workable 'instanceof' operator on them when instantiating an exemplar of AJAX.OOP classes ==External links== * [http://ajaxoop.org/ AJAX.OOP Official Website] * [http://code.google.com/p/ajaxoop/downloads/list AJAX.OOP - Download] * [http://ajaxoop.org/documentation AJAX.OOP - Documentation] {{DEFAULTSORT:Ajax.Oop}} [[Category:Ajax (programming)]] [[Category:JavaScript libraries]] [[Category:Web 2.0 neologisms]] [[Category:JavaScript]] [[Category:Software using the MIT license]] [[pl:AJAX.OOP]] [[ru:AJAX.OOP]]</text> </page> <page> <id>374</id> <title>AKARI Project</title> <text>The '''AKARI Architecture Design Project''' ('''AKARI Project''') is a large project for designing New Generation Network Architecture and is supported by the [[National Institute of Information and Communications Technology]] (NICT) of Japan. The name comes from the Japanese word '''AKARI''', which means "A small light (in the dark pointing to the future)". Launched in May 2006, the AKARI Project aims to build technologies for new generation network by 2015, developing a network architecture and creating a network design based on that architecture. AKARI is also denoted as a [[Future Internet]] project. The members of the AKARI Project come from NICT and some other famous universities or companies such as [[Tokyo University]], [[Keio University]], [[Osaka University]], [[Tokyo Institute of Technology]] and NTT etc. So far they have produced a Conceptual Design Book, which describes their philosophy to pursue an ideal solution by researching new network architectures from a clean slate without being impeded by existing constraints. They have identified three major design principles as: KISS (Keep It Simple, Stupid), Sustainable and Evolutionary, and Reality Connection. To some extent, the AKARI Project is similar to the [[Global Environment for Network Innovations]] ('''GENI''') facility of USA and the [[Seventh Framework Programme]] (FP7) of EU. As a matter of fact, there are strong relationships among all these projects. == See also == * [[Future Internet]] * [[Seventh Framework Programme]] == References == * [http://akari-project.nict.go.jp/eng/concept-design/AKARI_fulltext_e_translated_version_1_1.pdf "New Generation Network Architecture AKARI Conceptual Design (ver1.1)"], June 2008. ==External links== * [http://akari-project.nict.go.jp/eng/index2.htm "AKARI Architecture Design Project for New Generation Network"] [[Category:Computer networking|Architecture]] [[Category:Network architecture]]</text> </page> <page> <id>379</id> <title>ALCOR</title> <text>'''ALCOR''' is an early computer language definition created by the '''ALCOR Group''', a consortium of universitites, research institutions and manufacturers in Europe and the USA which was founded in 1959 and which had 60 members in 1966. The group had the aim of a common [[compiler]] specification for a subset of [[ALGOL 60]] after the ALGOL meeting in Copenhagen in 1958. ALCOR is an acronym, from '''AL'''GOL '''Co'''nverte'''r'''. In Europe, a high level machine architecture for [[ALGOL 60]] was devised which was emulated on various real computers, among them the Siemens 2002 and the [[IBM 7090]]. An ALGOL manual was published which provided a detailed introduction of all features of the language with many program snippets, and four appendixes:{{SpecialChars | alt = Decimal Exponent Symbol | link = http://mailcom.com/unicode/DecimalExponent.ttf | special = Unicode 5.2 "[http://www.unicode.org/charts/PDF/U2300.pdf Miscellaneous Technical]" characters | fix = Unicode#External_links | characters = something like "<sub>10</sub>" ([http://mailcom.com/unicode/DecimalExponent.ttf Decimal Exponent Symbol] U+23E8) }} # Revised Report on the Algorithmic Language ALGOL 60 # Report on Subset ALGOL 60 (IFIP) # Report on Input-Output Procedures for ALGOL 60 # an early "standard" character set for representing [[ALGOL 60]] code on paper and paper tape. ::This character set included the unusual "&#x16ed;" <!-- "᛭" --> ([http://www.fileformat.info/info/unicode/char/16ed/index.htm iron/runic cross]) character for multiplication and the "⏨" ([http://mailcom.com/unicode/DecimalExponent.ttf Decimal Exponent Symbol]) for floating point notation. <!-- lower 10 has no [[unicode]] 5.1 equivalent --> ==References== * Baumann, R. (1961) Baumann, R. "ALGOL Manual of the ALCOR Group, Pts. 1, 2 & 3" Elektronische Rechenanlagen No. 5 (Oct. 1961), 206-212; No. 6 (Dec. 1961), 259-265; No. 2 (Apr. 1962); (in German) * http://www.science.uva.nl/museum/DWcodes.html#A001 * http://homepages.cwi.nl/~dik/english/codes/5tape.html#alcor ==External links== * [http://hopl.murdoch.edu.au/showlanguage.prx?exp=360 ALCOR in The Encyclopedia of Computer Languages] [[Category:Algol programming language family]] [[Category:Systems programming languages]] [[Category:Procedural programming languages]] [[Category:Character encoding]] [[Category:Character sets]] {{compu-lang-stub}}</text> </page> <page> <id>382</id> <title>ALGO</title> <text>'''ALGO''' is an [[algebra]]ic [[programming language]] developed between 1959 and 1961 for the [[Bendix G-15]] [[computer]]. ALGO was one of several programming languages inspired by the ''Preliminary Report on the International Algorithmic Language'' written in Zürich in 1958. This report underwent several modifications before becoming the Revised Report on which most ALGOL implementations are based. As a result, ALGO and other early "ALGOLs" have a very different syntax from [[ALGOL 60]]. Other languages developed from the Zürich report include [[BALGOL]], [[MAD programming language|MAD]] (Michigan Algorithm Decoder) and [[NELIAC]]. ==Example== Here is the [[Trabb Pardo-Knuth algorithm]] in ALGO: <pre> 1. TITLE TRABB PARDO-KNUTH ALGORITHM 2. SUBSCript I,J 3. DATA A(11) 4. FORMAt FI(2DT), FLARGE(3D) 5. PROCEdure F(T=Z) 6. BEGIN 7. Z=SQRT(ABS(T))+5*T^3 8. END 9. FOR I=0(1)10 10. A[I]=KEYBD 11. FOR J=0(1)10 BEGIN 11. I=J-10 12. F(A[I]=Y) 13. PRINT(FI)=I 14. IF Y > 400 15. GO TO LARGE 16. PRINT(FL)=Y 17. GO TO NEXT 18. LARGE: PRINT(FLARGE)=999 19. NEXT: CARR(1) END 20. END </pre> ===Remarks=== * 1. A title is the only type of comment allowed. Line numbers were inserted by the editor. * 2. Integer data type. The lower-case letters are not typos, but reflect the way in which ALGO code was presented in the original documentation. * 3. Only the size of an array can be specified, lower bound is always zero. * 4. The first format calls for a two-digit number followed by a tab, the second for a three digit number. * 5. The syntax of ALGO's procedure implementations is slightly different from that given in the Zurich report. Functions as defined by the Zürich report are not implemented. * 9. The syntax here is from the Zürich report and is also consistent with various 1950s-era autocodes. * 10. KEYBD reads a numeric value from the terminal. == See also == * [[ALGOL 58]] * [[ALGOL 60]] ==External links== *[http://www.piercefuller.com/collect/bendix/algo6008.pdf ALGO manual (PDF)] *[http://members.iinet.net.au/~dgreen/docs.html Other documents on ALGO and the G-15] [[Category:Algol programming language family]] [[pt:ALGO]]</text> </page> <page> <id>385</id> <title>ALGOL 60</title> <text>{{about|the programming language family||Algol (disambiguation)}} {{Infobox programming language | name = ALGOL 60 | paradigm = [[procedural programming|procedural]], [[imperative programming|imperative]], [[structured programming|structured]] | year = 1960 | designer = [[Friedrich L. Bauer|Bauer]], [[Hermann Bottenbruch|Bottenbruch]], [[Heinz Rutishauser|Rutishauser]], [[Klaus Samelson|Samelson]], [[John Backus|Backus]], [[Charles Katz|Katz]], [[Alan Perlis|Perlis]], [[Joseph Henry Wegstein|Wegstein]], [[Peter Naur|Naur]], [[Bernard Vauquois|Vauquois]], [[Adriaan van Wijngaarden|van Wijngaarden]], [[Michael 