καταλληλότητας ταινιών]] [[es:Clasificación por edades (cine)]] [[ko:영상물 등급 제도]] [[is:Aldurstakmark (kvikmyndir)]] [[it:Visto censura]] [[he:סיווג צפייה]] [[ml:ഫിലിം സർട്ടിഫിക്കേഷൻ]] [[ms:Sistem pemeringkatan filem]] [[nl:Kijkwijzer]] [[ja:映画のレイティングシステム]] [[no:Filmsensur]] [[nds:Öllersfreegaav]] [[ru:Ограничение по возрасту]] [[simple:Film rating systems]] [[th:เรตของภาพยนตร์]] [[vi:Hệ thống phân loại phim]] [[zh:電影分級制度]]</text> </page> <page> <id>25145</id> <title>Motion system</title> <text>{{Refimprove|date=September 2007}} {{Context|date=October 2009}}<!-- what is the thing that is move? what is the nature of the test or measurement on it? --> '''Motion system''' is a component of test and measurement system that provides motion to a load or loads in a one or many directions. Generally a motion system is made up of a set (or stack) of linear and rotational stages. A [[linear stage]] moves in a straight line, while a rotation stage moves in a partial or full circle. A stage can either be manually controlled with a knob control, or automated with a motion controller. A motion system generally is computer controlled and can perform fast, reliable, repeatable, and accurate positioning of loads. Most systems will support motion in X and Y directions, which is referred to as an XY stack. Often either a Z axis (up/down motion) or R axis (rotational motion) is placed on top of the XY stack. For automated stages, a scale can be attached to the internals of the stage and an encoder used to measure the position on the scale and report this to the controller, thereby determining the precise position of the stage. This allows for a motion controller to reliably and repeatably move to set positions with the linear stage. ==See also== * [[Linear stage]] ===External links=== Motion Basics and Standards [http://www.newport.com/Motion-Basics-and-Standards/140230/1033/catalog.aspx] [[Category:Systems engineering]] {{engineering-stub}} {{Systemstheory-stub}}</text> </page> <page> <id>25147</id> <title>MotoMagx</title> <text>{{Unreferenced|date=August 2007}} {{Infobox_OS | name = MOTOMAGX | logo = | screenshot = | caption = | developer = [[Motorola]] | family = | source_model = | working_state = Discontinued| the latest version = | latest_release_date = | kernel_type = [[Monolithic kernel|Monolithic]] ([[Linux kernel|Linux]])| license = | website = [http://developer.motorola.com/technologies/motomagx/ MOTODEV > Technologies > MOTOMAGX] }} '''MOTOMAGX''' is an [[operating system]] developed, and launched in 2007 by [[Motorola]] to run on their [[mobile phone]]s. The system is based on [[MontaVista]] Linux. Originally intended for the 60% of their upcoming devices<ref>[http://www.prnewswire.com/news-releases/motorola-unveils-motomagx-mobile-linux-platform-57935622.html Motorola Unveils MOTOMAGX Mobile Linux Platform.] ''PR Newswire''</ref>, it was soon dropped in favor of [[Android_(operating_system)|Android]] and [[Windows Mobile]] operative systems<ref>Albanesius, Chloe. [http://www.pcmag.com/article2/0,2817,2333601,00.asp Motorola Delays Cell-Phone Spinoff, Drops Platforms.] ''pcmag.com.'' October 30, 2008.</ref>. ==Devices== Phones based on this OS are: *Motorola EM30 *Motorola ROKR E2 *Motorola ROKR E8 *Motorola ROKR/RIZR Z6 *Motorola U9 *Motorola RAZR2 V8 *Motorola VE538 *Motorola VE66 *Motorola ZN5 *Motorola ZN300 ==References== {{Reflist}} * [http://www.motorola.com/content.jsp?globalObjectId=8411 Introducing MOTOMAGX] * [http://developer.motorola.com/technologies/motomagx/ MOTODEV > Technologies > MOTOMAGX] [[Category:Embedded Linux distributions]] [[Category:Mobile operating systems]] {{Mobile operating systems}} {{operating-system-stub}} {{mobile-stub}} [[ja:MOTOMAGX]] [[pl:JUIX]] [[zh:MotoMagx]]</text> </page> <page> <id>25158</id> <title>Motorola 88000</title> <text>{{Infobox CPU architecture | name = M88000 | designer = [[Motorola]] | bits = 32 | introduced = 1988 | version = | design = RISC | type = Register-Register | encoding = Fixed | branching = Compare and branch | endianness = Bi | extensions = Graphics instructions (88110 only) | open = No | gpr = 32 32-bit | fpr = 32 80-bit (88110 only) }} The '''88000''' ('''m88k''' for short) is a [[RISC]] [[instruction set architecture]] (ISA) developed by [[Motorola]]. The 88000 was Motorola's attempt at a home-grown RISC architecture, started in the 1980s. The 88000 arrived on the market some two years after the competing [[SPARC]] and [[MIPS architecture|MIPS]]. Due to the late start and extensive delays releasing the second-generation MC88110, the m88k achieved very limited success outside of the [[MVME]] platform and embedded controller environments. Though sometimes referred to as '''A88k''', the [[Apollo PRISM]] is not related to the Motorola 88000.<ref>{{cite web |title=Motorola 88000 |url=http://www.classiccmp.org/pipermail/cctalk/2001-June/172643.html |publisher=ClassicCmp |accessdate=2009-06-16}}</ref>{{-}} __TOC__{{-}} == History == Originally called the 78000 as a homage to their famed [[Motorola 68000|68000]] series, the design went through a tortured development path, including the name change, before finally emerging in April 1988. In the late 1980s several companies were actively watching the 88000 for future use, including [[NeXT]], [[Apple Computer]] and [[Apollo Computer]], but all gave up by the time the 88110 was available in 1990. There was an attempt to popularize the system with the [[88open]] group, similar to what [[Sun Microsystems]] was attempting with their [[SPARC]] design. It appears to have failed in any practical sense.<ref name="Standards Wars">{{cite web |title=STANDARDS WARS: SITUATIONS, STRATEGIES AND OUTCOMES |page=7 |url=http://www.consortiuminfo.org/bulletins/pdf/mar06/feature.pdf |format=PDF |publisher=ConsortiumInfo.org |year=2006|month=March |author=Updegrove, Andrew |accessdate=2009-06-16}}</ref> In the early 1990s Motorola joined the [[AIM alliance|AIM]] effort to create a new RISC design based on the [[IBM POWER]] design. They worked a few features of the 88000 into the new [[PowerPC]] design to offer their customer base some sort of upgrade path. At that point the 88000 was dumped as soon as possible.<ref name="Electronic News">{{cite web |title=Motorola PowerPC deal with Ford raises questions on 88K RISC fate |url=http://findarticles.com/p/articles/mi_m0EKF/is_n1964_v39/ai_13901767/ |date=May 24, 1993 |publisher=Electronic News |author=Zipper, Stuart |accessdate=2009-06-16}}</ref> ==Architecture== Like the 68000 before it, the 88000 was considered to be a very "clean" design. It was a pure 32-bit load/store architecture, using separate instruction and data caches ([[Harvard architecture]]), and separate data and address buses. It had a small but powerful command set, and, like all Motorola CPUs, did not use memory segmentation. A major architectural mistake was that both integer instructions and floating-point instructions used the same [[register file]]. This required the single register file to have sufficient read and write ports to support both the integer execution unit and the floating-point unit. The connections for each port is an additional capacitive load that must be driven by register memory cell. This made it more difficult to build high frequency superscalar implementations. {{Citation needed|date=June 2010}} == Implementations == [[Image:Motorola MC88100RC20 CPU overhead view.jpg|thumb|right|250px|Motorola 88100 RISC CPU]] The first implementation of the 88000 ISA was the [[MC88100]] [[microprocessor]], which included an integrated [[floating point unit|FPU]]. Mated to this was the MC88200 [[Memory management unit|MMU]] and [[CPU cache|cache]] controller. The idea behind this splitting of duties was to allow 