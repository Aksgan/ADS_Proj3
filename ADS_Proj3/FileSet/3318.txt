Message Acknowledge Message ''Command / Status Message'' *WHO*WHAT*WHERE## ''Status Request Message'' *#WHO*WHERE## ''Request/Read/Write Dimension Message'' Request: *#WHO*WHERE*DIMENSION## Read: *#WHO*WHERE*DIMENSION*VALUE1*...*VALUEn## Write: *#WHO*WHERE*#DIMENSION*VALUE1*...*VALUEn## ''Acknowledge Message'' ACK: *#*1## NACK: *#*0## ==Gateway OpenWebNet== It's possible to interact with the SCS [[home automation]] bus by using a specific [[Gateway (telecommunications)|gateway]]. There are two typologies of [[gateways]] that allow a connection to the field [[bus]] by using different [[Technical standard|standard]] [[Communications protocol|protocol]]s: * Gateway [[Ethernet]] ([[Linux]] based) * Gateway [[USB]] / [[RS232]] '''Gateway Ethernet''' The current implementation by BTicino is also an [[embedded]] [[web server]]. It works as a translator between OpenWebNet messages via TCP/IP and the SCS messages transmitted on the SCS bus. Actually it is possible to control three different kinds of buses: * BUS SCS * [[KNX (standard)|KNX]] * [[Digital MultipleX|DMX]] '''Gateway USB / RS232''' The gateway is an interface that works as a translator between the OpenWebNet messages transmitted on USB or Serial and the SCS messages transmitted on the SCS bus. ==Example== OpenWebNet message examples '''Command Message''' Switch Off of light 77 *1*0*77## WHO = 1 WHAT = 0 WHERE = 77 '''Status Message''' Scenario 1 of scenario unit 23 activated. *0*1*23## WHO = 0 WHAT = 1 WHERE = 23 '''Request status message''' Status request of probe 1 *#4*1## WHO = 4 WHERE = 1 '''Request Dimension Message''' Request of Temperature Measured, probe 44 *#4*44*0## WHO = 4 WHERE = 44 DIMENSION = 0 '''Read Dimension Message''' Temperature Measured, probe 44 *#4*44*0*0251*2## WHO = 4 WHERE = 44 DIMENSION = 0 VALUE1 = 0251 (T=+25,1°C) VALUE2 = 2 (System in "cooling mode") '''Write Dimension Message''' Volume set at 50%, environment 2 *#16*#2*#1*16*## WHO = 4 WHERE = #1 DIMENSION = 1 VALUE1 = 16 ==See also== * [[Home automation]] * [[KNX (standard)|KNX]] * [[Digital MultipleX|DMX]] ==References== * Moneta, D. Mauri, G. Bettoni, C. Meda, R. - Cesi ricerca (Italy) ''http://www.cired.be/CIRED07/pdfs/CIRED2007_0522_paper.pdf Test Facility for the assessment of local energy management systems''; 19th Conference on Electricity Distribution, Vienna (21–24 May 2007). * Moneta, D. Bisone, L. Mauri, G. Meda, R. - Cesi ricerca (Italy) ''http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?tp=&arnumber=4209527&isnumber=4209049 New interactions between LV customers and the network: further possibilities for home automation functions ''; IEEE International Conference on Robotics and Automation, Rome (10–14 April 2007). * Bonino, D. Castellina, E. Corno, F. - Politecnico di Torino (Italy) ''http://www.cad.polito.it/pap/db/ictai08.pdf DOG: an Ontology-Powered OSGi Domotic Gateway''; Torino (September 2008). ==External links== * [http://www.myopen-bticino.it MyOpen Bticino] * [http://domoticdog.sourceforge.net DOG] A Domotic OSGi Gateway able to expose different domotic networks as a single, technology neutral, home automation system. It supports OpenWebNet protocol. * [http://www.iana.org/assignments/port-numbers IANA, TCP ports assignment.] OpenWebNet is associated to port 20005 * [http://myhomevillage.com MyHomeVillage.com] Description of home automation projects. [[Category:Computer buses]] [[Category:Building automation]] [[Category:Home automation]] [[es:Openwebnet]] [[fr:Openwebnet]] [[it:OpenWebNet]] [[nl:Openwebnet]] [[ru:OpenWebNet]] [[sl:OpenWebNet]] [[th:OpenWebNet]]</text> </page> <page> <id>27464</id> <title>Open API</title> <text>{{Unreferenced|date=November 2007}} {{essay-like|article|date=November 2007}} '''Open API''' (often referred to as OpenAPI new testnology) is a word used to describe sets of technologies that enable websites to interact with each other by using SOAP, Javascript and other web technologies. While its possibilities aren't limited to web-based applications, it's becoming an increasing trend in so-called Web 2.0 applications. The term [[API]] stands for Application Programming Interface. ==Introduction== The term "Open API" has been recently in use by recent trends in [[social media]] and [[Web 2.0]]. It is currently a heavily sought after solution to interconnect websites in a more fluid user-friendly manner. [[Social networking]] sites like [[MySpace]] and [[Bebo]] currently do not have any open API's but with the growing trend and demand for [[social network aggregator]] websites like [[PeopleAggregator]], [[Spokeo]] and [[Socialurl|SocialURL]] there will become more prevalent for these social networks to start considering the opportunities to take a leadership role in this endeavor. Open API also applies to collaborative services environments where managed service providers can also outsource specific services to other providers via systems integration. For example, companies like [[Level Platforms]] provide an open API to adapt to any business offering within the managed service environment. With the advent of the [http://developers.facebook.com/news.php?blog=1&story=21 Facebook Platform], launched June 1st 2007, Facebook incorporated an open api into its business model [[OpenSocial]] is currently being developed by Google in conjunction with MySpace and other social networks including Bebo.com Engage.com, Friendster, hi5, Hyves, imeem, LinkedIn, MySpace, Ning, Oracle, orkut, Plaxo, Salesforce.com, Six Apart, Tianji, Viadeo, and XING. The ultimate goal is for any social website to be able to implement the APIs and host third party social applications. "Open API" is also becoming very popular among technical software, for collaboration between different trades such as architects and engineers. Since there is different software for designing structures, buildings, these trades find a way to use each other's work through "Open API". For example, an architect can draw in CAD software and engineers can implement these plans into their software. {{web-stub}} [[Application_Enablement|See also: Application Enablement]] [[Category:Application programming interfaces]] [[ko:공개 API]]</text> </page> <page> <id>27472</id> <title>Open Archives Initiative Protocol for Metadata Harvesting</title> <text>{{inline|date=October 2008}} '''OAI-PMH''' (''Open Archives Initiative Protocol for Metadata Harvesting'') is a protocol developed by the [[Open Archives Initiative]]. It is used to harvest (or collect) the [[Metadata (computing)|metadata]] descriptions of the records in an archive so that services can be built using metadata from many archives. An implementation of OAI-PMH must support representing metadata in [[Dublin Core]], but may also support additional representations. The protocol is usually just referred to as the OAI Protocol. OAI-PMH uses [[XML]] over [[HTTP]]. The current version is 2.0, updated in 2002. ==History== <!--This summary was largely drawn from (Lynch, 2001).--> In the late 1990s, [[Herbert Van de Sompel]] ([[Ghent University]]) was working with researchers and librarians at [[Los Alamos National Laboratory]] (US) and called a meeting to address difficulties related to interoperability issues of e-print servers and [[digital library|digital repositories]]. The meeting was held in [[Santa Fe, New Mexico]], in October 1999. A key development from the meeting was the definition of an interface that permitted e-print servers to expose [[metadata]] for the papers it held in a structured fashion so other repositories could identify and copy papers of 