[[TIFF]]-files, [[TGA]]-files also use this RLE compression scheme, but treats data stream as pixels instead of bytes. A PackBits data stream consists of packets with a one-byte header followed by data. The header is a signed byte; the data can be signed, unsigned, or packed (such as <nowiki>MacPaint</nowiki> pixels). In the following table, ''n'' is the value of the header byte as a signed integer. {| class="wikitable" |- | '''Header byte''' || '''Data following the header byte''' |- | 0 to 127 || (1 + ''n'') [[literal]] bytes of data |- | -1 to -127 || One byte of data, repeated (1 &ndash; ''n'') times in the decompressed output |- | -128 || No operation (skip and treat next byte as a header byte) |- |} Note that interpreting 0 as positive or negative makes no difference in the output. Runs of two bytes adjacent to non-runs are typically written as literal data. It should also be noted that there is no way based on the PackBits data to determine the end of the data stream; that is to say, one must already know the size of the compressed or uncompressed data before reading a PackBits data stream to know where it ends. == External links== *[http://developer.apple.com/technotes/tn/tn1023.html Apple webpage describing the PackBits format] [[Category:Lossless compression algorithms]]</text> </page> <page> <id>28256</id> <title>Packed pixel</title> <text>{{Unreferenced|date=July 2009}} In '''packed pixel''' or '''chunky''' [[frame buffer]] organization, the bits defining each pixel are grouped together. For example, if there are 16 bits per pixel, each pixel is represented in two consecutive (contiguous) 8-bit bytes in the frame buffer (a.k.a. screen buffer). If there are 4 bits per pixel (16 colors), each frame buffer byte defines two pixels, one in each [[nibble]]. The latter example is as opposed to storing perhaps half of the bits—2 bits—for each of four pixels in one byte and the other two bits for each of those four pixels in another byte or bytes. It is also as opposed to interleaving the bits of the two pixels within the byte. As this illustrates, packed pixel organization can be directly contrasted with [[Planar (computer graphics)|planar]] organization. == See also == * [[Highcolor]] * [[Planar (computer graphics)]] * [[Truecolor]] {{DEFAULTSORT:Packed Pixel}} [[Category:Computer graphics]] {{compu-graphics-stub}} [[ca:Chunk]] [[es:Chunk]] [[eo:Chunk]] [[it:Chunk (informatica)]] [[pl:Chunky]] [[pt:Chunk]]</text> </page> <page> <id>28260</id> <title>Packet (information technology)</title> <text>In [[information technology]], a '''packet''' is a formatted unit of [[data]] carried by a [[packet mode]] [[computer network]]. Computer communications links that do not support packets, such as traditional [[Link (telecommunications)#Point-to-point|point-to-point telecommunications links]], simply transmit data as a series of [[bytes]], [[Character (computing)|characters]], or [[bit]]s alone. When data is formatted into packets, the [[bitrate]] of the communication medium can be better shared among users than if the network were [[circuit switching|circuit switched]]. By using [[packet switching|packet switched]] networking it is also harder to guarantee a lowest possible bitrate. {{Wiktionary|packet}} == Packet framing == A packet consists of two kinds of data: control information and user data (also known as ''payload''). The control information provides data the network needs to deliver the user data, for example: source and destination addresses, error detection codes like checksums, and sequencing information. Typically, control information is found in packet headers and trailers, with user data in between. Different [[communications protocol]]s use different conventions for distinguishing between the elements and for formatting the data. In [[Binary Synchronous Transmission]], the packet is formatted in 8-bit bytes, and special characters are used to delimit the different elements. Other protocols, like [[Ethernet]], establish the start of the header and data elements by their location relative to the start of the packet. Some protocols format the information at a bit level instead of a byte level. A good analogy is to consider a packet to be like a letter: the header is like the envelope, and the data area is whatever the person puts inside the envelope. A difference, however, is that some networks can break a larger packet into smaller packets when necessary (note that these smaller data elements are still formatted as packets). A network design can achieve two major results by using packets: ''error detection'' and ''multiple host addressing''. === Error detection === It is more efficient and reliable to calculate a [[checksum]] or [[cyclic redundancy check]] over the contents of a packet than to check errors using character-by-character [[parity bit]] checking. The packet trailer often contains error checking data to detect errors that occur during transmission. === Host addressing === Modern networks usually connect three or more host computers together; in such cases the packet header generally contains addressing information so that the packet is received by the correct host computer. In complex networks constructed of multiple routing and switching nodes, like the [[ARPANET]] and the modern [[Internet]], a series of packets sent from one host computer to another may follow different routes to reach the same destination. This technology is called [[packet switching]]. == Packets vs. datagrams == In general, the term '''packet''' applies to any message formatted as a packet, while the term '''datagram''' is generally reserved for packets of an "unreliable" service.<ref name=kurose>Kurose, James F. & Ross, Keith W. (2007), "Computer Networking: A Top-Down Approach" ISBN 0-321-49770-8</ref> A "reliable" service is one that notifies the user if delivery fails, while an "unreliable" one does not notify the user if delivery fails. For example, [[Internet Protocol|IP]] provides an unreliable service. Together, [[Transmission Control Protocol|TCP]] and [[Internet Protocol|IP]] provide a reliable service, whereas [[User Datagram Protocol|UDP]] and [[Internet Protocol|IP]] provide an unreliable one. All these protocols use packets, but [[User Datagram Protocol|UDP]] packets are generally called datagrams.<ref name=kurose /> When the [[ARPANET]] pioneered packet switching, it provided a reliable packet delivery procedure to its connected hosts via its [[BBN Report 1822|1822 interface]]. A host computer simply arranged the data in the correct packet format, inserted the address of the destination host computer, and sent the message across the interface to its connected [[Interface Message Processor|IMP]]. Once the message was delivered to the destination host, an acknowledgement was delivered to the sending host. 