simple, yet characteristic, example of applying the KERNAL is given by the following [[MOS Technology 6502|6502]] [[assembly language]] subroutine (written in [[ca65]] assembler format/syntax): CHROUT = $ffd2 ; CHROUT sends a character to the current output device CR = $0d ; [[PETSCII]] code for Carriage Return ; hello: ldx #0 ; start with character 0 next: lda message,x ; read character X from message beq done ; we're done when we read a zero byte jsr CHROUT ; call CHROUT to output char to current output device (defaults to screen) inx ; next character bne next ; loop back while index is not zero (max string length 255 bytes) done: rts ; return from subroutine ; message: .byte "[[Hello world program#Accumulator .2B index register machine: MOS Technology 6502.2C CBM KERNAL.2C ca65 assembler|Hello, world!]]" .byte CR, 0 ; Carriage Return and zero marking end of string This code stub employs the <code>CHROUT</code> routine, which address is found at address <code>[[hexadecimal|$]]FFD2</code> (65490), to send a text string to the default output device (e.g., the display screen). ==About the misspelling== The KERNAL was known as ''kernel''{{ref|kernel-def}} inside of Commodore since the PET days, but in 1980 Robert Russell misspelled the word in his notebooks forming the word ''kernal''. When Commodore technical writers Neil Harris and Andy Finkel collected Russell's notes and used them as the basis for the VIC-20 programmer's manual, the misspelling followed them along and stuck.{{ref|kernal-origin}} According to early Commodore myth, and reported by writer/programmer [[Jim Butterfield]] among others, the word KERNAL is an acronym (or maybe more likely, a [[backronym]]) standing for '''''K'''eyboard '''E'''ntry '''R'''ead, '''N'''etwork, '''A'''nd '''L'''ink'', which in fact makes good sense considering its role. [[Berkeley Softworks]] later used it when naming the core routines of its GUI OS for 8-bit home computers: the [[GEOS (8-bit operating system)|GEOS]] KERNAL. The (completely different) OS core in the 16/32-bit Commodore [[Amiga]] series was called the ''[[AmigaOS#Kickstart|Amiga ROM Kernel]]'', using the correct spelling of ''kernel''. ==Notes== # {{note|kernal-origin}} See ''On The Edge: The Spectacular Rise and Fall of Commodore'', page 202. # {{note|kernel-def}} The [[kernel (computer science)|kernel]] is the most fundamental part of a program, typically an operating system, that resides in memory at all times and provides the basic services. It is the part of the operating system that is closest to the machine and may activate the hardware directly or interface to another software layer that drives the hardware # {{note|kernel-feature}}The kernal jump table, used to access all the subroutines in the kernal, was an array of JMP (jump) instructions leading to the actual subroutines. This feature ensured compatibility with user-written software in the event that code within the kernal ROM needed to be relocated in a later revision. # {{note|kernel-feature}}Many of the kernal subroutines (e.g., OPEN and CLOSE) were vectored through page three in RAM, allowing a programmer to intercept the associated kernal calls and add to or replace the original functions. [[Category:Operating system kernels]] [[Category:Commodore 64]] [[Category:Commodore 128]] [[de:Kernal]] [[it:KERNAL]] [[nl:Kernal]] [[fi:KERNAL]]</text> </page> <page> <id>20359</id> <title>KOAN</title> <text>'''KOAN''' may refer to: *[[KOAN (AM)]], a radio station (1020 AM) licensed to serve Eagle River, Alaska, United States *[[KOAN (company)]], an Italian company (also known as Koan Software) specializing in embedded software {{disambig|callsign}}</text> </page> <page> <id>20362</id> <title>KOMPILER</title> <text>In [[computing]], the '''KOMPILER''' was one of the first language [[compiler|compilation]] and runtime systems for [[International Business Machines]]' [[IBM 701]], the fastest commercial [[United States|U.S.]] [[computer]] available in 1955. Information on KOMPILER is listed on page 16 of Volume 2, Number 5 (May 1959) of the ''[[Communications of the ACM]]''. Known versions are KOMPILER 2 for IBM 701 and KOMPILER 3 for the [[IBM 704]]. KOMPILER was eventually replaced by a [[Fortran]] compiler on the IBM 704. ==See also== *[[PACT]] ==External links== * [http://hopl.murdoch.edu.au/showlanguage.prx?exp=86&language=KOMPILER HOPL: Kompiler]. {{FOLDOC}} {{compu-lang-stub}} [[Category:Programming languages]]</text> </page> <page> <id>20366</id> <title>KRYPTON (Programming Language)</title> <text>:''This article is about KRYPTON, the computer programming language. For other meanings, see [[Krypton (disambiguation)]].'' '''KRYPTON''' is a [[frame language|frame-based]] computer [[programming language]]. "An Essential Hybrid Reasoning System: Knowledge and Symbol Level Accounts of KRYPTON", R.J. Brachman et al., Proc IJCAI-85, 1985[http://dli.iiit.ac.in/ijcai/IJCAI-85-VOL1/PDF/102.pdf]. ==References== {{FOLDOC}} [[Category:Domain-specific programming languages]] {{Compu-lang-stub}}</text> </page> <page> <id>20368</id> <title>KSD-64</title> <text>[[Image:Ksd-64.jpg|thumb|KSD-64 "Crypto-ignition keys" on display at the [[National Cryptologic Museum]] in 2005.]] The '''KSD-64[A] Crypto Ignition Key (CIK)''' is an [[National Security Agency|NSA]]-developed [[EEPROM]] chip packed in a plastic case that looks like a toy [[key (lock)|key]]. The model number is due to its storage capacity &mdash; 64 kB (65,536 bits), enough to store multiple [[key (cryptography)|encryption keys]]. Most frequently it is used in [[key splitting|key-splitting]] applications: either the encryption device or the KSD-64 alone is worthless, but together they can be used to make encrypted connections. Less often, it is used alone as a [[fill device]] for transfer of key material, as for the initial seed key loading of an [[STU-III]] secure phone. Newer systems, such as the [[Secure Terminal Equipment]], use the [[Fortezza]] PC card as a [[security token]] instead of the KSD-64. ==External links== * [http://www.jproc.ca/crypto/stuiii.html Article on STU-III and CIK by Jerry Proc] {{crypto-stub}} [[Category:Encryption device accessories]] [[Category:Key management]] [[Category:National Security Agency encryption devices]] [[es:KSD-64]]</text> </page> <page> <id>20375</id> <title>KVM switch</title> <text>{{Refimprove|date=January 2010}} [[Image:Kvm-switch-diagram.svg|right|thumb|Symbolic representation of a KVM switch. The computer on the right is currently being controlled by the peripherals.]] [[Image:KVM-01.jpg|thumb|KVM switch]] [[Image:Chassis-Plans-KVM.jpg|right|thumb|Industrial rack mount KVM showing console and computer ports for DVI and USB (keyboard/mouse)]] A '''KVM switch''' (with KVM being an abbreviation for '''keyboard''', '''video''' or '''visual display unit''', '''mouse''') is a hardware device that allows a user to control multiple [[computer]]s from a single [[Computer keyboard|keyboard]], [[Computer display|video monitor]] and [[Computer mouse|mouse]]. Although multiple computers are connected to the KVM, typically a smaller number of computers can be controlled at any given time. Modern devices have also added the ability to share [[Universal Serial Bus|USB]] devices and speakers with multiple computers. Some KVM switches can also function in reverse - that is, a single PC can be connected to multiple monitors, keyboards, and mice. While not as common as the former, this configuration is useful when the operator 