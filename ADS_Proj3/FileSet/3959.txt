''exciting'' or ''dull''; ''quiet'' or ''loud''; ''healthy'' or ''sickly''; ''athletic'' or ''nonathletic''; ''lazy'' or ''active''; and ''geek'' or ''jock''. If a person has a schema for "[[geek]] or [[jock]]," for example, he might think of himself as a bit of a computer geek and would possess a lot of information about that trait. Because of this, he would probably interpret many situations based on relevance to his being a computer geek. Another person with the "[[health]]y or [[illness|sickly]]" schema might consider herself a very health conscious person. Her concern with being healthy would then affect everyday decisions such as what groceries she buys, what restaurants she frequents, or how often she exercises. Women who are schematic on appearance exhibited lower [[body image]], lower [[self-esteem]], and more [[mood (psychology)|negative mood]] than did those who are aschematic on appearance. == Multiple self-schema == Most people have multiple self-schemas, however this is not the same as [[dissociative identity disorder|multiple personalities]] in the pathological sense. Indeed, for the most part, multiple self-schemas are extremely useful to people in daily life. Subconsciously, they help people make rapid decisions and behave efficiently and appropriately in different situations and with different people. Multiple self-schemas guide what people attend to and how people interpret and use incoming information. They also activate specific cognitive, verbal, and behavioral action sequences – called ''[[behavioral script|scripts]]'' and ''action plans'' in [[cognitive psychology]] – that help people meet [[goal]]s efficiently. ==See also== * [[Identity (social science)]] * [[Outline of self]] * [[Self-image]] * [[Self-perception theory]] == References == * Wilderdom, (2003 Oct 21). Role of schemas in personality. Retrieved March 4, 2009, from Wilderdom - a project in natural living & transformation Web site: http://wilderdom.com/personality/L11-1RoleOfSchemasInPersonality.html * Kristin Valentino, Dante Cicchetti, Fred A Rogosch, Sheree L Toth. (2008). True and false recall and dissociation among maltreated children: The role of self-schema. Development and Psychopathology, 20(1), 213-32. Retrieved March 3, 2009, from Research Library database. (Document ID: 1601417001). * Jahee, J, & Lennon, S.J. (2003). Body Image, Appearance Self-Schema, and Media Images. Family and Consumer Sciences Research Journal, 32, Retrieved March 3, 2009, from http://fcs.sagepub.com/cgi/content/abstract/32/1/27. * Cervone, D., & Pervin, L. (2008) Personality Theory and Research. Hoboken: John Wiley & Sons, Inc. * Kassin, S., Fein, S., & Markus, H. (2008). Social Psychology Seventh Edition. Boston: Houghton Mifflin Company. * Bartoli, Angela (2008, Jan. 14). Self schema. Retrieved March 3, 2009, from Angela M. Bartolli, Psychology Web site: http://webspace.ship.edu/ambart/PSY_220/selfschemaol.htm * 3-S, (2003). What is a self-schema?. Retrieved March 3, 2009, from The Spiritual Self-Schema Development Program Web site: http://info.med.yale.edu/psych/3s/self_schema.html [[Category:Self]] [[Category:Identity]] [[Category:Conceptions of self]] {{Psych-stub}}</text> </page> <page> <id>33767</id> <title>Self (programming language)</title> <text>{{Refimprove|date=May 2007}} {{Inappropriate tone|date=December 2007}} {{Infobox programming language | name = Self | logo = [[File:Self lang logo.png]] | paradigm = [[Object-oriented programming|object-oriented]] ([[prototype-based programming|prototype-based]]) | year = 1987 | designer = [[David Ungar]], Randall Smith | developer = David Ungar, Randall Smith, [[Stanford University]], [[Sun Microsystems]] | latest release version = 4.4 | latest release date = July 2010 | typing = [[Type system|dynamic]], [[Strongly-typed programming language|strong]] | implementations = Self | dialects = | influenced_by = [[Smalltalk]] | influenced = [[NewtonScript]], [[JavaScript]], [[Io (programming language)|Io]], [[Cel (programming language)|Cel]], [[Agora (programming language)|Agora]], [[Squeak]], [[Lisaac]], [[Lua (programming language)|Lua]], [[Factor (programming language)|Factor]], [[REBOL]] | operating_system = | license = | website = http://selflanguage.org/ }} '''Self''' is an [[Object-oriented programming|object-oriented]] [[computer programming|programming]] [[programming language|language]] based on the concept of ''[[Prototype-based programming|prototypes]]''. It was used mainly as an experimental test system for language design in the 1980s and 1990s. In 2006, Self was still being developed as part of the Klein project, which was a Self virtual machine written fully in Self. The latest version is 4.4, released in July 2010. Several [[just-in-time compilation]] techniques were pioneered and improved in Self research as they were required to allow a very high level object oriented language to perform at up to half the speed of optimized C. These techniques were later deployed for [[Java (programming language)|Java]]'s [[HotSpot]] VM. == History == Self was designed mostly by [[David Ungar]] and Randall Smith in 1986 while working at [[PARC (company)|Xerox PARC]]. Their objective was to push forward the state of the art in object-oriented programming language research, once [[Smalltalk|Smalltalk-80]] was released by the labs and began to be taken seriously by the industry. They moved to [[Stanford University]] and continued work on the language, building the first working Self compiler in 1987. At that point, focus changed to attempting to bring up an entire system for Self, as opposed to just the language. The first public release was in 1990, and the next year the team moved to [[Sun Microsystems]] where they continued work on the language. Several new releases followed until falling largely dormant in 1995 with the 4.0 version. The 4.3 version was released in 2006 and ran on [[Mac OS X]] and [[Solaris (operating system)|Solaris]]. A new release, version 4.4, has been developed for MacOS X and Linux by a group comprising some of the original team and independent programmers and is available for Mac OS X and [[Linux]]. Self also inspired a number of languages based on its concepts. Most notable, perhaps, was the [[NewtonScript computer language|NewtonScript]] language for the [[Apple Newton]] and the [[JavaScript]] language used primarily for dynamic web pages in all modern browsers. Other examples include [[Io programming language|Io]], [[Cel programming language|Cel]], [[Lisaac]] and [[Agora programming language|Agora]]. The [[IBM Tivoli Framework]]'s distributed object system, developed in 1990, was, at the lowest level, a prototype based object system inspired by Self. == Prototype-based programming languages == {{main|Prototype-based programming}} Traditional class-based OO languages are based on a deep-rooted duality: #[[Class (object-oriented programming)|Classes]] define the basic qualities and behaviours of objects. #[[Object (computer science)|Object instances]] are particular manifestations of a class. For example, suppose objects of the <code>Vehicle</code> class have a ''name'' and the ability to perform various actions, such as ''drive to work'' and ''deliver construction materials''. <code>Bob's car</code> is a particular object (instance) of the class <code>Vehicle</code>, with the name "Bob's car". In theory 