module|kernel modules]] whose sources do not generally reside in the [[Linux kernel]] [[source tree]]. DKMS enables [[Linux kernel|kernel]] [[device driver]]s to be automatically rebuilt when a new kernel is installed. DKMS can be used in both directions: To automatically [[recompile]] all modules if a new kernel version is installed, or to install new module (driver) versions on an existing system without any need for manual compilation or precompiled packages. This for example makes it possible to use new [[graphics card]]s on an older Linux system. DKMS was written by the Linux Engineering Team at [[Dell]] in 2003. It is already included in many [[Linux distribution|distributions]] of the Linux [[operating system]], like [[Ubuntu (operating system)|Ubuntu]] 8.10<ref>https://wiki.ubuntu.com/IntrepidIbex/TechnicalOverview</ref> (and later versions) or [[Fedora (operating system)|Fedora]].<ref>https://admin.fedoraproject.org/pkgdb/packages/name/dkms</ref> It is [[free software]] released under the terms of the [[GNU General Public License]] (GPL) v2 or later. ==References== {{Reflist}} ==External links== *[http://linux.dell.com/dkms/ Dell DKMS site] *[http://www.linuxjournal.com/article/6896 LinuxJournal - Exploring DKMS] *[http://wiki.centos.org/HowTos/BuildingKernelModules#head-d313bd351f90d4f25a2143b7bbcff73f927731f0 Building a kernel module using DKMS] [[Category:Dell]] [[Category:Linux kernel]] {{Linux-stub}} [[de:Dynamic Kernel Module Support]] [[es:Dynamic Kernel Module Support]] [[fr:Dynamic Kernel Module Support]] [[pl:Dynamic Kernel Module Support]] [[ru:Dynamic Kernel Module Support]] [[zh:动态内核模块支持]]</text> </page> <page> <id>11225</id> <title>Dynamic Language Runtime</title> <text>{{Infobox Software | name = Dynamic Language Runtime | logo = | screenshot = | caption = | developer = [[Microsoft]] Dynamic Language Runtime Team | latest release version = 1.0 | latest release date = April 16, 2010 | latest preview version = | latest preview date = | operating system = Microsoft Windows, [[Debian]], [[Ubuntu (operating system)|Ubuntu]] | platform = [[Microsoft .NET|.NET]], [[Mono (software)|Mono]] | genre = [[Platform (computing)|System platform]] | license = [[Apache License|Apache License, v2.0]] | website = [http://dlr.codeplex.com dlr.codeplex.com] }} The '''Dynamic Language Runtime''' (DLR) from [[Microsoft]] is an ongoing effort to bring a set of services that run on top of the [[Common Language Runtime]] (CLR) and provides language services for several different [[dynamic language]]s. These services include: * A dynamic [[type system]], to be shared by all languages utilizing the DLR services * [[Dynamic dispatch|Dynamic method dispatch]] * [[Runtime code generation|Dynamic code generation]] * Hosting API The DLR is used to implement dynamic languages like [[Python (programming language)|Python]] and [[Ruby (programming language)|Ruby]] on the [[.NET Framework]]. By having several dynamic language implementations share a common underlying system, it should be easier to let these implementations interact with one another. For example, it should be possible to use libraries from any dynamic language in any other dynamic language. In addition, the hosting API allows interoperability with statically typed [[list of CLI languages|CLI languages]] like [[C sharp (programming language)|C#]]. ==History== Microsoft's Dynamic Language Runtime project was announced by Microsoft at [[MIX (Microsoft)|MIX]] 2007.<ref name="announce" /> Microsoft planned to ship a first usable 1.0 version of the DLR at the same time as IronPython 2.0, by the end of 2008.<ref>{{cite web | url = http://lists.ironpython.com/pipermail/users-ironpython.com/2008-January/006235.html | title = Roadmap for IronPython 2.0 | last=Viehland |first=Dino | quote=''We don't really have a document like this but the general goal is to ship IronPython 2.0 by the end of the year. For the DLR its self the plan is to ship a v1.0 around the same time as IronPython 2.0.'' | date = 2008-01-15 | accessdate = 2008-02-09}}</ref> Microsoft shipped .NET DLR 0.9 beta on the 26 November 2008,<ref>http://www.codeplex.com/dlr</ref> and final 0.9 on 10 December 2008. Version 1.0 shipped on April 16, 2010. On 16 July 2010, Microsoft changed the license of the DLR from the [[Shared source#Microsoft Public License (Ms-PL)|Microsoft Public License]] to the Apache License, v2.0.<ref>http://dlr.codeplex.com/license</ref> ==Supported languages== The DLR services are currently used in the development version of [[IronRuby]], a .NET implementation of the Ruby language, and for [[IronPython]].<ref name="announce">{{cite web | url = http://blogs.msdn.com/hugunin/archive/2007/04/30/a-dynamic-language-runtime-dlr.aspx |last=Hugunin|first=Jim | title = A Dynamic Language Runtime (DLR) |quote=''For the short term, our focus is on using a small number of languages to drive the first wave of DLR development where we can work closely and face-to-face with the developers in order to iron out the worst kinks in the DLR design. After this initial phase, we want to reach out to the broader language community.'' | accessdate = 2007-06-21 }}</ref> In 2007, Microsoft planned to use the DLR for the upcoming [[Visual Basic .NET#Visual Basic 2010 (VB 10.0)|Visual Basic 2010 (VB 10.0)]] and [[JScript|Managed JScript]] ([[ECMAScript]] 3.0).<ref name="Managed JScript announced">{{cite web | url = http://blogs.msdn.com/jscript/archive/2007/05/04/managed-jscript-announced.aspx | title = Managed JScript announced | accessdate = 2007-05-04}}</ref><ref name="Managed JScript announced"/><ref>{{cite web | url = http://www.panopticoncentral.net/archive/2007/05/01/20383.aspx | title = What the heck is "VBx"? | date=2007-05-01 | quote=''With the new DLR, we have support for IronPython, IronRuby, Javascript, and the new dynamic VBx compile'' | accessdate = 2009-08-12}}</ref><ref>{{cite web | url = http://www.hanselman.com/blog/PuttingMixSilverlightTheCoreCLRAndTheDLRIntoContext.aspx | title = Putting Mix, Silverlight, the CoreCLR and the DLR into context | date=2007-05-01 | accessdate = 2008-08-12}}</ref><ref>{{cite web | url = http://www.infoq.com/news/2007/05/VBx | title = Introducing Visual Basic 10 | publisher=infoq.com | date=2007-05-04 | quote=''VB 10 takes advantage of a Silverlight feature called the Dynamic Language Runtime or DLR'' | accessdate = 2009-08-12}}</ref> However, as of August 2009, Microsoft has no more plans to implement [[JScript|Managed JScript]] ([[ECMAScript]] 3.0) on the DLR,<ref>{{cite web | url = http://dlr.codeplex.com/Thread/View.aspx?ThreadId=58121 |last=Chiles|first=Bill | title = Future of Managed JScript (IronJScript)? |quote=''The DLR JScript was experimental for informing the design of the DLR (expression trees, interop, callsites, hosting, etc.). The JS we released with asp futures and the Silverlight dynamic sdk became very old and unserviceable as the DLR continued evolving for release in CLR 4.0. Unfortunately, there are no plans at this time to develop and release a DLR-hostable JScript.'' | date=2009-06-01 | accessdate = 2009-08-12}}</ref> and no further mention of [[Visual Basic .NET]] working on the DLR has been made by Microsoft on Visual Basic development updates. Similar to [[C Sharp (programming language)|C#]], Visual Basic will be able to access objects from dynamic languages built on the DLR such as [[IronPython]] and [[IronRuby]].<ref>{{cite web | url = http://msdn.microsoft.com/en-us/library/we86c8x2%28VS.100%29.aspx | title = What's New in Visual Basic 2010 | year=2009 | publisher=[[Microsoft]] | quote=''Visual Basic binds to objects from 