A quantum computer operates by manipulating those qubits with a fixed sequence of [[quantum gate|quantum logic gate]]s. The sequence of gates to be applied is called a [[quantum algorithm]]. An example of an implementation of qubits for a quantum computer could start with the use of particles with two [[spin (physics)|spin]] states: "down" and "up" (typically written <math>|{\downarrow}\rangle</math> and <math>|{\uparrow}\rangle</math>, or <math>|0{\rangle}</math> and <math>|1{\rangle}</math>). But in fact any system possessing an [[observable]] quantity ''A'' which is ''conserved'' under time evolution and such that ''A'' has at least two discrete and sufficiently spaced consecutive [[eigenvalue]]s, is a suitable candidate for implementing a qubit. This is true because any such system can be mapped onto an effective [[spin-1/2]] system. ==Bits vs. qubits== [[Image:Quantum computer.svg|thumb|200px|Qubits are made up of controlled particles and the means of control (e.g. devices that trap particles and switch them from one state to another).<ref>{{Cite book|last = Waldner |first = Jean-Baptiste|title = Nanocomputers and Swarm Intelligence |publisher = [[ISTE]] |place = London |year = 2007 |page = 157 |isbn = 2746215160}}</ref> ]] Consider first a classical computer that operates on a three-bit [[Processor register|register]]. The state of the computer at any time is a probability distribution over the <math>2^3=8</math> different three-bit strings <tt>000, 001, 010, 011, 100, 101, 110, 111</tt>. If it is a deterministic computer, then it is in exactly one of these states with probability 1. However, if it is a [[Probabilistic automaton|probabilistic computer]], then there is a possibility of it being in any ''one'' of a number of different states. We can describe this probabilistic state by eight nonnegative numbers ''a'',''b'',''c'',''d'',''e'',''f'',''g'',''h'' (where ''a'' = probability computer is in state <tt>000</tt>, ''b'' = probability computer is in state <tt>001</tt>, etc.). There is a restriction that these probabilities sum to 1. The state of a three-qubit quantum computer is similarly described by an eight-dimensional vector (''a'',''b'',''c'',''d'',''e'',''f'',''g'',''h''), called a [[Bra-ket notation|ket]]. However, instead of adding to one, the sum of the ''squares'' of the coefficient magnitudes, <math>|a|^2+|b|^2+...+|h|^2</math>, must equal one. Moreover, the coefficients are [[complex number]]s. Since states are represented by complex wavefunctions, two states being added together will undergo [[Interference (wave propagation)|interference]], which is a key difference between quantum computing and probabilistic classical computing.<ref name="DiVincenzo 1995">{{Cite journal| author=David P. DiVincenzo|title=Quantum Computation|journal=Science|year=1995|volume=270|issue=5234|pages=255–261|doi= 10.1126/science.270.5234.255}}</ref> If you measure the three qubits, you will observe a three-bit string. The probability of measuring a given string is the squared magnitude of that string's coefficient (i.e., the probability of measuring <tt>000</tt> = <math>|a|^2</math>, the probability of measuring <tt>001</tt> = <math>|b|^2</math>, etc..). Thus, measuring a quantum state described by complex coefficients (''a'',''b'',...,''h'') gives the classical probability distribution <math>(|a|^2, |b|^2, ..., |h|^2)</math> and we say that the quantum state "collapses" to a classical state as a result of making the measurement. Note that an eight-dimensional vector can be specified in many different ways depending on what [[Basis (linear algebra)|basis]] is chosen for the space. The basis of bit strings (e.g., 000, 001, ..., 111) is known as the computational basis. Other possible bases are [[unit vector|unit-length]], [[orthogonal]] vectors and the eigenvectors of the [[Pauli matrices|Pauli-x operator]]. [[Bra-ket notation|Ket notation]] is often used to make the choice of basis explicit. For example, the state (''a'',''b'',''c'',''d'',''e'',''f'',''g'',''h'') in the computational basis can be written as: :<math>a\,|000\rangle + b\,|001\rangle + c\,|010\rangle + d\,|011\rangle + e\,|100\rangle + f\,|101\rangle + g\,|110\rangle + h\,|111\rangle</math> :where, e.g., <math>|010\rangle = \left(0,0,1,0,0,0,0,0\right)</math> The computational basis for a single qubit (two dimensions) is <math>|0\rangle = \left(1,0\right)</math> and <math>|1\rangle = \left(0,1\right)</math>. Using the eigenvectors of the Pauli-x operator, a single qubit is <math>|+\rangle = \tfrac{1}{\sqrt{2}} \left(1,1\right)</math> and <math>|-\rangle = \tfrac{1}{\sqrt{2}} \left(1,-1\right)</math>. A quantum computer with a given number of qubits is exponentially more complex than a classical computer with the same number of bits because describing the state of ''n'' qubits requires 2<sup>''n''</sup> complex coefficients. Measuring the qubits would produce a classical state of only ''n'' bits, but such an action would also destroy the quantum state. We can think of the system as being exactly one of the ''n''-bit strings—we just don't know which one. For example, a 300-qubit quantum computer has a state described by 2<sup>300</sup> (approximately 10<sup>90</sup>) complex numbers, more than the number of atoms in the [[observable universe]]. ==Operation== While a classical three-bit state and a quantum three-qubit state are both eight-dimensional [[coordinate vector|vector]]s, they are manipulated quite differently for classical or quantum computation. For computing in either case, the system must be initialized, for example into the all-zeros string, <math>|000\rangle</math>, corresponding to the vector (1,0,0,0,0,0,0,0). In classical randomized computation, the system evolves according to the application of [[Stochastic matrix|stochastic matrices]], which preserve that the probabilities add up to one (i.e., preserve the [[Taxicab geometry|L1 norm]]). In quantum computation, on the other hand, allowed operations are [[unitary matrix|unitary matrices]], which are effectively rotations (they preserve that the sum of the squares add up to one, the [[Euclidean metric|Euclidean or L2 norm]]). (Exactly what unitaries can be applied depend on the physics of the quantum device.) Consequently, since rotations can be undone by rotating backward, quantum computations are [[Reversible computing|reversible]]. (Technically, quantum operations can be probabilistic combinations of unitaries, so quantum computation really does generalize classical computation. See [[quantum circuit]] for a more precise formulation.) Finally, upon termination of the algorithm, the result needs to be read off. In the case of a classical computer, we ''sample'' from the [[probability distribution]] on the three-bit register to obtain one definite three-bit string, say 000. Quantum mechanically, we ''[[quantum measurement|measure]]'' the three-qubit state, which is equivalent to collapsing the quantum state down to a classical distribution (with the coefficients in the classical state being the squared magnitudes of the coefficients for the quantum state, as described above) followed by sampling from that distribution. Note that this destroys the original quantum state. Many algorithms will only give the correct answer with a certain probability, however by repeatedly initializing, running and measuring the quantum computer, the probability of getting the correct answer can be increased. For more details on the sequences of operations used for various [[quantum algorithm]]s, see 