be seen in the structs used in the [[DirectX]] library). This solution works well until you run out of these dummies -- and you do not want to add too many because it takes up memory. ===Linkers=== Another solution requires a smarter linker. In [[Objective-C]], the library format allowed for multiple versions of one library and included some functionality for selecting the proper library when called. However this was not always needed because the offsets were only needed for fields, since methods offsets were collected at runtime and could not cause FBI. Since methods tend to change more often than fields, ObjC had few FBI problems in the first place, and those it did could be corrected with the versioning system. The [[TOM (object-oriented programming language)|TOM language]] has extended this even further, using runtime collected offsets for everything, making FBI impossible. Using static instead of dynamic libraries where possible is another solution, as the library then cannot be modified without also recompiling the application and updating the offsets it uses. However static libraries have serious problems of their own, such as a larger binary and the inability to use newer versions of the library "automatically" as they are introduced. The vast majority of programming languages in use today do nothing to protect the programmer from FBI. This is somewhat surprising, as the problem has been known about since the 1980s. ===Architecture=== In these languages the problem is lessened by enforcing [[single inheritance]] (as this reduces the complexity of the inheritance tree), and by the use of [[interface (computer science)|interfaces]] instead of base classes with [[virtual function]]s, as interfaces themselves do not contain code, only a guarantee that each method signature the interface declares will be supported by every object that implements the interface. ===Distribution method=== The whole problem collapses if the source code of the used libraries is available. Then a simple recompilation will do the trick. ==See also== * [[Fragile base class]] ==External links== *[[BeOS|BeOS's]] [http://2f.ru/holy-wars/fbc.html paper] on the problem and their solution [[Category:Programming bugs]] [[Category:Software anomalies]]</text> </page> <page> <id>14092</id> <title>Fragmented distribution attack</title> <text>'''Fragmented distribution attack''' in [[computer security]] is a [[malware]] or [[Computer virus|virus]] distribution technique aiming at bypassing [[Virus protection|protection systems]] by sending fragments of code over the network. This technique has been first described in a paper published on [[Virus Bulletin]] 2009 annual conference by Anoirel Issa, malware Analyst for the Symantec Hosted Services, formerly [[MessageLabs]]. ==External links== * [http://www.virusbtn.com/pdf/conference_slides/2009/Issa-VB2009.pdf Virus bulletin conference White paper] [[Category:Computer security]] {{comp-sci-stub}}</text> </page> <page> <id>14096</id> <title>Frame (artificial intelligence)</title> <text>'''Frames''' were proposed by [[Marvin Minsky]] in his 1974 article "A Framework for Representing Knowledge." A frame is an [[artificial intelligence]] [[data structure]] used to divide [[knowledge]] into substructures by representing "[[stereotype]]d situations." Frames are connected together to form a complete [[idea]]. == Frame structure == The frame contains information on how to use the frame, what to expect next, and what to do when these expectations are not met. Some information in the frame is generally unchanged while other information, stored in "terminals,"{{clarify|date=January 2010|reason=Which type of 'terminal' is meant?}} usually change. Different frames may share the same terminals. A frame's terminals are already filled with default values, which is based on how the human mind works. For example, when a person is told "a boy kicks a ball," most people will be able to visualize a particular ball (such as a familiar [[soccer ball]]) rather than imagining some abstract ball with no attributes. == See also == * [[Frame language]] == External links == * [http://web.media.mit.edu/~minsky/papers/Frames/frames.html Minsky's "A Framework for Representing Knowledge"] [[Category:Knowledge representation]] [[Category:History of artificial intelligence]] {{compu-AI-stub}} [[fr:Cadre (intelligence artificielle)]] [[ko:프레임 (인공지능)]] [[ru:Фрейм (инженерия знаний)]] [[uk:Фрейм (одиниця знання)]]</text> </page> <page> <id>14100</id> <title>Frame injection</title> <text>{{orphan|date=October 2008}} {{Otheruses}} A '''frame injection''' attack is an attack on [[Internet Explorer 5]], [[Internet Explorer 6]] and [[Internet Explorer 7]] to load arbitrary code in the browser.<ref>{{cite web|url=http://secunia.com/advisories/11966/ |title=Internet Explorer Frame Injection Vulnerability |work= Vulnerability Intelligence |publisher=Secunia Advisories |date= |accessdate=2008-09-13}}</ref> This attack is caused by [[Internet Explorer]] not checking the destination of the resulting frame,<ref>{{cite web|url=http://www.microsoft.com/technet/security/bulletin/ms98-020.mspx |title=Microsoft Security Bulletin (MS98-020) |publisher=Microsoft Corporation |date= |accessdate=2008-09-13}}</ref> therefore allowing arbitrary code such as [[Javascript]] or [[VBScript]]. This also happens when code gets injected through frames due to scripts not validating their input.<ref>{{cite web|url=http://www.owasp.org/index.php/Cross_Frame_Scripting |title=Cross Frame Scripting - OWASP |publisher=OWASP |date= |accessdate=2008-09-13}}</ref> This other type of frame injection affects all browsers and scripts that do not validate untrusted input.<ref>{{cite web|url=http://secunia.com/cve_reference/CVE-2004-0719/ |archiveurl=http://web.archive.org/web/20071219181848/http://secunia.com/cve_reference/CVE-2004-0719/ |archivedate=2007-12-19 |title=Secunia Advisory|publisher=Secunia |date= |accessdate=2008-09-13}}</ref> ==References== {{reflist}} ==External links== * [http://secunia.com/advisories/11966/ Secunia advisory] * [http://www.microsoft.com/technet/security/bulletin/ms98-020.mspx Microsoft security bulletin] [[Category:Injection exploits]] [[Category:Hacking (computer security)]] [[zh:框架注入]]</text> </page> <page> <id>14110</id> <title>Framework Class Library</title> <text>The '''Framework Class Library''' ('''FCL''') is a [[standard library]] and one of two core components of Microsoft [[.NET Framework]]. The FCL is a collection of thousands of reusable classes (within hundreds of namespaces), interfaces and value types. The [[Base Class Library]] is a part of FCL and provides the most fundamental functionality, which includes classes in namespaces System, System.CodeDom, System.Collections, System.Diagnostics, System.Globalization, System.IO, System.Resources and System.Text.<ref>[http://msdn.microsoft.com/en-us/netframework/aa569603.aspx MSDN BCL Community]</ref> == References == {{reflist|2}} == External links == * [http://msdn.microsoft.com/netframework/ .NET Framework Developer Center]. Microsoft Developer Network (MSDN). * [http://download.microsoft.com/download/4/a/3/4a3c7c55-84ab-4588-84a4-f96424a7d82d/NET35_Namespaces_Poster_LORES.pdf .NET Framework 3.5 namespaces] {{DotNET}} [[Category:.NET framework]] [[Category:Microsoft development tools]] [[Category:Microsoft application programming interfaces]] [[ru:Framework Class Library]]</text> </page> <page> <id>14119</id> <title>Francis Birch (cryptographer)</title> <text>'''Francis Lyall (Frank) Birch''' (5 December 1889 – 14 February 1956) was a British cryptographer. He was educated at [[eton college|Eton]] and [[King’s College, Cambridge]]. He was awarded an [[OBE]] in 1919 and [[Order of St Michael and St George|CMG]] in 1945. In World War I he was in the [[RNVR]], and served in the Atlantic, the Channel and the Dardanelles before joining the Naval Intelligence Division ([[Room 40]]) from 1916 to 1919. He wrote a satirical history of Room 40, ''Alice in ID25''. He was a Fellow of King’s College, Cambridge 1915-34 and a Lecturer in History at Cambridge University 1921-28. He left Cambridge for the stage in the 1930s. He joined the Naval section at [[Bletchley Park]] in September 1939, and later became Head 