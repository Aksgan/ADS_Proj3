idea of putting a fraction in lowest terms also uses the concept of divisibility: e.g., 15/42 is not in lowest terms because 15 and 42 are both divisible by 3. Look at the sequence of fractions :<math> \frac{1}{42}, \qquad \frac{2}{42}, \qquad \frac{3}{42}, \qquad \dots\dots, \qquad \frac{39}{42}, \qquad \frac{40}{42}, \qquad \frac{41}{42}. </math> Discard the ones that are not in lowest terms; keep only those that are in lowest terms: :<math> \frac{1}{42}, \qquad \frac{5}{42}, \qquad \frac{11}{42}, \qquad \dots, \qquad \frac{31}{42}, \qquad \frac{37}{42}, \qquad \frac{41}{42}. </math> Then bring in trigonometry: :<math> \cos\left(2\pi\cdot\frac{1}{42}\right)+ \cos\left(2\pi\cdot\frac{5}{42}\right)+ \cdots+ \cos\left(2\pi\cdot\frac{37}{42}\right)+ \cos\left(2\pi\cdot\frac{41}{42}\right) </math> The value of the sum is &minus;1. How do we know that? Because 42 has an ''odd'' number of prime factors and none of them is repeated: 42 = 2 &times; 3 &times; 7. (If there had been an ''even'' number of non-repeated factors then the sum would have been 1; if there had been any repeated prime factors (e.g., 60 = 2 &times; 2 &times; 3 &times; 5) then the sum would have been 0; the sum is the [[Möbius function]] evaluated at 42.) This hints at the possibility of applying [[Fourier analysis]] to number theory. [[Category:Trigonometry]] [[Category:Applied mathematics]] [[fr:Applications de la trigonométrie]] [[hi:त्रिकोणमिति के उपयोग]]</text> </page> <page> <id>39067</id> <title>Useware</title> <text>{{orphan|date=April 2009}} {{Wikify|date=April 2009}} The generic term '''Useware''' was introduced in 1998 and denotes all hard- and [[Software componentry|software components]] of a technical system which serve its interactive use. The main idea of the term Useware is the focus of technical design according to human abilities and needs. The only promising method (Zuehlke, 2007) to design future technical products and systems is # to understand human abilities and limitations and # to focus the technology on these abilities and limitations. Today Useware requires its own need for development which is partly higher than in the classical development fields (Zuehlke, 2004). Thus usability is increasingly recognized as a value-adding factor. Often the Useware of machines with similar or equal technical functions is the only characteristic that sets it apart (Zuehlke, 2002). [[Image:useware.jpg|400px|thumb|Figure 1: Useware development process]] == Useware-Engineering == Similar to [[Software engineering|Software Engineering]] Useware Engineering implies the standardized production of Useware by engineers and the associated processes (see figure 1). The aim of Useware engineering is to develop interfaces which are easy to understand and efficient to use. These interfaces are adapted to the human work task. Also the interfaces represent machine functionality without overemphasizing it. Thus the objective of systematic Useware Engineering guarantees high usability based on the actual tasks of the users. However, it requires an approach which comprises active and iterative participation of different groups of people. Therefore, the professional associations GfA (Gesellschaft für Arbeitswissenschaft), GI (Gesellschaft für Informatik), VDE-ITG (The [[Information technology|Information Technology]] Society in VDE) and VDI/VDE GMA (The Society for Measurement and [[Automatic control|Automatic Control]] in the VDI/VDE) agreed in 1998 on defining Useware as a new term. The term Useware was intentionally selected in linguistic analogy to hard- and software. Consequently, Useware Engineering developed in a similar way to the development of engineering processes (see figure 2). This reinforces the principal demand for structured development of user-centered [[user interface]]s expressed e.g. by [[Ben Shneiderman]] (Shneiderman, 1998). After many years of function-oriented development human abilities and needs are brought into focus. The only promising method to develop future technical products and systems is to understand the users’ abilities and limitations and to aim the technology in that direction (Zuehlke, 2007). [[Image:useware-engineering.jpg|400px|thumb|Figure 2: The development of the different engineering disciplines]] The Useware development process (see figure 1) distinguishes the following steps: analysis, structure design, design, realisation and evaluation. Each of these steps should not be regarded separately but rather overlapping. The continuity of the process as well as the use of suitable tools, e.g. on the basis of the [[Extensible Markup Language]] (XML) make it possible to avoid information losses and media breaks. ===Analysis=== Humans learn, think and work in completely different ways. Therefore the first step in the development of a user interface is to analyze the users, their tasks and their work environment in order to identify the requirements and needs of these users. This step forms the basis for a user- and task-oriented user interface. Both humans and machines are considered as interaction partners. The analysis of the users and their behavior employs different methods like e.g. structured interviews, observations, card sorting etc. They should give a preferably complete image of the working task, the various different groups of users and their working environment. To use these methods several professional experts, e.g. engineers, [[Computer science|computer scientists]] and psychologists should be involved. Especially in the analysis phase, task models are generated for documentation and user interface generation, which implicitly contains a function model of the process and/or of the machine (Meixner and Goerlich, 2008). ===Structure design=== The results of the analysis phase are adjusted within the structuring phase. An abstract use model (Zuehlke and Thiels, 2008) is developed on the basis of this information which is [[Cross-platform|platform independent]]. The result of the structuring phase is the [[basic structure]] of the future user interface. The use model is a formal model of use contexts, tasks and information demanding the functionality of the machine. The use model is modeled using the Useware [[Markup language|Markup Language]], useML (Reuther, 2003) within a model based [[Integrated development environment|development environment]]. ===Design=== Parallel to the structuring phase a hardware-platform for the Useware has to be selected. This selection is based on environmental requirements of the machine usage (pollution, noise, vibration, ...) on the one hand and the user’s requirements (display size, optimal interaction device, …) on the other. Furthermore economic factors have to be considered. If the model is intensively networked or is composed of a huge number of elements, sufficient display size for visualizing information structure should be provided. These factors partly depend on user groups and contexts of use (Goerlich et al., 2008). ===Realisation/Prototyping=== During the prototyping developers must select a [[Programming tool|development tool]]. If the selected development environment provides import possibilities, the 