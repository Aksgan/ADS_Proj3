Preemptive multi-tasking with cooperative groups of tasks | country-code = US | patent-number = 6052707 | postscript = <!--None-->}}</ref> == Causes == [[Personal computer hardware|Hardware]] can cause a computer to hang, either because it is intermittent or because it is mismatched with other hardware in the computer<ref>{{cite press release | title = How to Troubleshoot Computer Hangs During Hardware Detection | publisher = Microsoft Help and Support | date = 2007-01-27 | url = http://support.microsoft.com/kb/262381 | accessdate = 2008-07-31}}</ref> (this can occur when one makes an [[upgrade]]). Hardware can also become defective over time due to dirt or heat damage. A hang can also occur due to the fact that the programmer has incorrect termination conditions for a [[Control_flow#Loops|loop]], or, in a [[co-operative multitasking]] [[operating system]], forgetting to yield to other tasks. Said differently, many [[software]]-related hangs are caused by [[thread (computer science)|threads]] waiting for an event to occur which will never occur.<ref>{{cite newsgroup | title = Here's an infinite loop that will hang your machine | author = Calvin Hsia | date = 2006-11-16 | newsgroup = blogs.msdn.com | url = http://www.feedsfarm.com/article/8738c4141d9874d6e05f6a3e57369280014c7081.html | accessdate = 2008-07-31}}</ref> This is also known as an [[infinite loop]]. Another cause of hangs is a [[race hazard|race condition]] in communication between [[computer process|processes]]. One process may send a [[signal (computing)|signal]] to a second process then stop execution until it receives a response. If the second process is busy the signal will be forced to wait until the process can get to it. However, if the second process was busy sending a signal to the first process then both processes would wait forever for the other to respond to signals and never see the other’s signal (this event is known as a [[deadlock]]). If the processes are [[uninterruptible sleep|uninterruptible]] they will hang and have to be shut down. If at least one of the processes is a critical [[kernel (computer science)|kernel]] process the whole system may hang and have to be restarted. A computer may seem to hang when in fact it is simply processing very slowly. This can be caused by too many programs running at once, not enough memory ([[RAM]]), or [[memory fragmentation]], slow hardware access (especially to remote devices), slow system APIs, etc. It can also be caused by hidden programs which were installed surreptitiously, such as [[spyware]]. == Solutions == In many cases programs may appear to be hung, but are making slow progress, and waiting a few minutes will allow the task to complete. Usually, in systems with a modern [[operating system]], the user is able to terminate the programs running (for instance, with the [[kill (command)|kill]] command, or through the "end task" button on the task list in recent versions of [[Microsoft Windows]]), and, if they wish, restart it in the hope that the anomalous condition that caused the hang does not recur. Older systems, such as those using [[MS-DOS]] or [[Windows 3.1x]], often needed to be [[hard reboot|completely restarted]] in the event of a hang. A [[watchdog timer]] can [[Reboot (computer)|reboot]] the computer in the event of a hang (this is commonly used in embedded devices). == References == {{reflist}} == See also == * [[Abort (computing)]] * [[Anomaly in software]] * [[Blue Screen of Death|Blue screen of death]] * [[Crash (computing)]] * [[Deadlock]] * [[Deadlock#Livelock|Livelock]] * [[Infinite loop]] * [[Uninterruptible sleep]] {{DEFAULTSORT:Hang (Computing)}} [[Category:Computer errors]] [[Category:Software anomalies]] [[Category:Computing terminology]] [[ja:フリーズ]] [[ru:Зависание]] [[uk:Зависання]]</text> </page> <page> <id>16253</id> <title>Happy (software)</title> <text>'''Happy''' is a [[parser generator]] written in [[Haskell (programming language)|Haskell]]. It produces haskell-code and optionally optimized code for [[Glasgow Haskell Compiler]] and it's extensions. Happy is contained (along with [[Alex (software)|Alex]], a [[lexical analysis|lexer-generator]]) in the [[Haskell Platform]]. It is available for Unix-like systems, such as Mac OS X, Linux and BSDish systems and Windows. [[Category:Parser generators]] [[Category:Haskell software]] {{programming-software-stub}}</text> </page> <page> <id>16257</id> <title>Haptik Library</title> <text>{{Multiple issues | orphan=February 2009 | notability=September 2009 }} {{Infobox software| | name = Haptik Library | latest_release_version = 1.0 | latest_release_date = May 28, 2006 | developer = University of Siena | operating_system = [[Microsoft Windows|Windows]], [[Linux]] | genre = Hardware Abstraction Layer | license = [[GNU General Public License|GPL]] | website = [http://www.haptiklibrary.org/ www.haptiklibrary.org] }} The '''Haptik Library''' is a component-based [[open source software|open source]] library which provides a Hardware Abstraction Layer for access to haptic devices. Different hardware from different manufactures can be easily accessed in a uniform way, allowing to remove from applications all dependencies on particular configurations of [[Application programming interface|API]]s, hardware and drivers. '''Haptik''' is not tied to any particular graphics, physics or collision-detection [[Software development kit|SDK]]s, and has been designed to be user-friendly, even with complex existing applications or within third-party software frameworks. It can be effortless integrated with both procedure or class based code, allows for either polled or callback-based access, and supports both right-handed (OpenGL) and left-handed (DirectX) coordinate systems. Haptik consists of runtime-loaded plugins and therefore can be easily extended and customized. Moreover differently from many existing libraries its component-based architecture guarantees both backward and forward binary compatibility of compiled client applications with old and future versions of hardware devices, drivers, plugins and the library itself. This is obtained while still keeping the maximum performance achievable using devices native SDKs directly. Haptik is not only for [[C++]] users and can be used from many languages and environments such as [[MATLAB]] and [[Simulink]] as well as Java applets and applications. ==See also== {{Portal|Free software}} *[[Haptic (disambiguation)]] ==External links== *[http://www.haptiklibrary.org/ Haptik Library homepage] [[Category:Computer libraries]]</text> </page> <page> <id>16259</id> <title>Harald Tveit Alvestrand</title> <text>{{Infobox Person | name = Harald Tveit Alvestrand | image = Alvestrand-20071102.jpg | image_size = | caption = | birth_date = {{Birth date and age|1959|6|29|mf=y}} | birth_place = [[Namsos]], [[Norway]] | death_date = | death_place = | occupation = [[computer scientist]] | spouse = | parents = | children = 3 }} '''Harald Tveit Alvestrand''' (born 29 June 1959) is a [[Norway|Norwegian]] [[computer scientist]]. He was the chairman of the [[Internet Engineering Task Force]] from 2001 until 2005. He is an author of several important [[Request 