heap with a [[hash table]] can reduce this to constant time. ==Admissibility and optimality{{anchor|Admissibility and Optimality}}== A* is admissible and considers fewer nodes than any other admissible search algorithm with the same heuristic. This is because A* uses an "optimistic" estimate of the cost of a path through every node that it considers—optimistic in that the true cost of a path through that node to the goal will be at least as great as the estimate. But, critically, as far as A* "knows", that optimistic estimate might be achievable. Here is the main idea of the proof: When A* terminates its search, it has found a path whose actual cost is lower than the estimated cost of any path through any open node. But since those estimates are optimistic, A* can safely ignore those nodes. In other words, A* will never overlook the possibility of a lower-cost path and so is admissible. Suppose now that some other search algorithm B terminates its search with a path whose actual cost is ''not'' less than the estimated cost of a path through some open node. Based on the heuristic information it has, Algorithm B cannot rule out the possibility that a path through that node has a lower cost. So while B might consider fewer nodes than A*, it cannot be admissible. Accordingly, A* considers the fewest nodes of any admissible search algorithm. This is only true if both: * A* uses an [[admissible heuristic]]. Otherwise, A* is not guaranteed to expand fewer nodes than another search algorithm with the same heuristic. See (Generalized best-first search strategies and the optimality of A*, Rina Dechter and Judea Pearl, 1985<ref>{{cite journal | first = Rina | last = Dechter | coauthors = Judea Pearl | title = [http://portal.acm.org/citation.cfm?id=3830&coll=portal&dl=ACM Generalized best-first search strategies and the optimality of A*] | journal = [[Journal of the ACM]] | volume = 32 | issue = 3 | pages = 505–536 | year = 1985 | doi = 10.1145/3828.3830 }} </ref>) * A* solves only one search problem rather than a series of similar search problems. Otherwise, A* is not guaranteed to expand fewer nodes than [[incremental heuristic search]] algorithms. See (Incremental heuristic search in artificial intelligence, Sven Koenig, Maxim Likhachev, Yaxin Liu and David Furcy, 2004<ref>{{cite journal | first = Sven | last = Koenig | coauthors = Maxim Likhachev, Yaxin Liu, David Furcy | title = [http://portal.acm.org/citation.cfm?id=1017140 Incremental heuristic search in AI] | journal = [[AI Magazine]] | volume = 25 | issue = 2 | pages = 99–112 | year = 2004 }} </ref>) ==Complexity== The [[computational complexity theory|time complexity]] of A* depends on the heuristic. In the worst case, the number of nodes expanded is [[exponential time|exponential]] in the length of the solution (the shortest path), but it is [[polynomial time|polynomial]] when the search space is a tree, there is a single goal state, and the heuristic function ''h'' meets the following condition: :<math>|h(x) - h^*(x)| = O(\log h^*(x))</math> where <math>h^*</math> is the optimal heuristic, the exact cost to get from <math>x</math> to the goal. In other words, the error of ''h'' will not grow faster than the [[logarithm]] of the “perfect heuristic” <math>h^*</math> that returns the true distance from ''x'' to the goal (see Pearl 1984<ref>{{cite book | first = Judea | last = Pearl | title = Heuristics: Intelligent Search Strategies for Computer Problem Solving | publisher = Addison-Wesley | year = 1984 | isbn = 0-201-05594-5 }}</ref> and also Russell and Norvig 2003, p. 101<ref>{{cite book | first = S. J. | last = Russell | coauthors = Norvig, P. | title = [[Artificial Intelligence: A Modern Approach]] | year = 2003 | pages = 97–104 | isbn = 0-13-790395-2 | publisher = Prentice Hall | location = Upper Saddle River, N.J. }}</ref>) ==Variants of A*== *[[D*]] *[[Incremental heuristic search|D* Lite]] *[[Any-angle path planning|Field D*]] *[[IDA*]] *[[Incremental heuristic search|Fringe Saving A* (FSA*)]] *[[Incremental heuristic search|Generalized Adaptive A* (GAA*)]] *[[Incremental heuristic search|Lifelong Planning A* (LPA*)]] *[[Any-angle path planning|Theta*]] *[[SMA*]] ==References== * {{cite journal | first = P. E. | last = Hart | coauthors = Nilsson, N. J.; Raphael, B. | title = Correction to "A Formal Basis for the Heuristic Determination of Minimum Cost Paths" | journal = [[Association for Computing Machinery|SIGART]] Newsletter | volume = 37 | pages = 28–29 | year = 1972 }} * {{cite book | first = N. J. | last = Nilsson | title = Principles of Artificial Intelligence | publisher = Tioga Publishing Company | location = Palo Alto, California | year = 1980 | isbn = 0935382011 }} * {{cite book | first = Judea | last = Pearl | title = Heuristics: Intelligent Search Strategies for Computer Problem Solving | publisher = Addison-Wesley | year = 1984 | isbn = 0-201-05594-5 }} {{Reflist}} ==External links== * [http://theory.stanford.edu/~amitp/GameProgramming/ Clear visual A* explanation, with advice and thoughts on path-finding] * Variation on A* called [http://www.cs.ualberta.ca/~mmueller/ps/hpastar.pdf Hierarchical Path-Finding A* (HPA*)] * [http://code.google.com/p/jianwikis/wiki/AStarAlgorithmForPathPlanning A* Algorithm for Path Planning in Java] * [http://www.stackframe.com/software/PathFinder A Java library for path finding with A* and example applet] * [http://www.codeproject.com/KB/recipes/fast_astar_2D_algorithm.aspx A fast, generic C# implementation of A* on 2D-Grids] * [http://code.google.com/p/a-star-algorithm-implementation A fast, memory efficient C++ implementation of A*] * [https://code.google.com/p/straightedge/ StraightEdge] open source java 2D path finding and lighting project focused on performance. Includes applet demos. {{DEFAULTSORT:A Search Algorithm}} [[Category:Graph algorithms]] [[Category:Routing algorithms]] [[Category:Search algorithms]] [[Category:Combinatorial optimization]] [[Category:Game artificial intelligence]] [[Category:Articles with example pseudocode]] {{Link GA|de}} [[ar:خوارزمية البحث بأولوية الأفضل]] [[cs:A*]] [[de:A*-Algorithmus]] [[es:Algoritmo de búsqueda A*]] [[fr:Algorithme A*]] [[ko:A* 알고리즘]] [[it:A*]] [[nl:A*-algoritme]] [[ja:A*]] [[pl:Algorytm A*]] [[pt:Algoritmo A*]] [[ru:Алгоритм поиска A*]] [[fi:A*-algoritmi]] [[uk:Алгоритм пошуку A*]] [[vi:Giải thuật tìm kiếm A*]] [[zh:A*搜寻算法]]</text> </page> <page> <id>222</id> <title>A. Richard Newton</title> <text>{{Infobox_Scientist |name = A. Richard Newton |caption = Arthur Richard Newton (1951-2007) |birth_date = {{birth date|1951|7|1|df=y}} |birth_place = Gardenvale, [[Australia]] |residence = [[Image:Flag of Australia.svg|20px|]] [[Australia]], [[Image:Flag of the United States.svg|20px|]] [[USA]] |nationality = [[Image:Flag of Australia.svg|20px|]] [[Australia]]n, [[Image:Flag of the United States.svg|20px|]] [[United States|American]] |death_date = {{death date and age|2007|1|2|1951|7|1|df=y}} |death_place = [[San Francisco]], 