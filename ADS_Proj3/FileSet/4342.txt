DATA 0 R10 DATA 0 R11 DATA 0 R12 DATA 0 R13 DATA 0 R14 DATA 0 R15 * * Terminal SVC block * TRMSCB BYTE 0 SVC op code (0 = I/O) TRMERR BYTE 0 Error code TRMOPC BYTE 0 I/O OP CODE TRMLUN BYTE TMLUNO LUNO TRMFLG DATA 0 Flags TRMBUF DATA $-$ Buffer address TRMLRL DATA $-$ Logical record length TRMCHC DATA $-$ Character count * * Message * STRING TEXT 'Hello world!' BYTE >D,>A STRLEN EQU $-STRING EVEN PAGE * * Main program entry * ENTRY MOVB R3,@TRMOPC Set open opcode in SCB SVC @TRMSCB Open terminal MOVB @TRMERR,R0 Check for error JNE EXIT MOVB R4,@TRMOPC Set write opcode MOV R6,@TRMBUF Set buffer address MOV R7,@TRMLRL Set logical record length MOV R7,@TRMCHC and character count SVC @TRMSCB Write message MOVB @TRMERR,R0 Check for error JNE CLOSE CLOSE MOVB R5,@TRMOPC Set close opcode SVC @TRMSCB Close terminal EXIT SVC R2 Exit program * END You can try out the above for yourself on a TI-990 simulator. Dave Pitts's sim990 simulates the TI-990 and includes software kits for native operating systems (including DX10). The following program is a standalone version that prints on the serial terminal connected to CRU address 0. It illustrates the CRU I/O and workspace linkage for the PRINT subroutine. IDT 'HELLO' TITL 'HELLO - hello world program' * R0 EQU 0 R1 EQU 1 R2 EQU 2 R3 EQU 3 R4 EQU 4 R5 EQU 5 R6 EQU 6 R7 EQU 7 R8 EQU 8 R9 EQU 9 R10 EQU 10 R11 EQU 11 R12 EQU 12 R13 EQU 13 R14 EQU 14 R15 EQU 15 * * Terminal CRU bits * TRMCRU EQU >0 Terminal device address XMIT EQU 8 DTR EQU 9 RTS EQU 10 WRQ EQU 11 RRQ EQU 12 NSF EQU 13 * PAGE * * Main program entry * ENTRY LWPI WP Load our workspace pointer BLWP @PRINT Call our print routine DATA STRING DATA STRLEN IDLE * WP BSS 32 Main program workspace * * Message * STRING TEXT 'Hello world!' BYTE >D,>A STRLEN EQU $-STRING EVEN PAGE * * Print a message * PRINT DATA PRWS,PRENT PRENT EQU $ MOV *R14+,R2 Get buffer address MOV *R14+,R1 Get message length SBO DTR Enable terminal ready SBO RTS PRI010 LDCR *R2+,8 Send out a character TB WRQ Wait until done JNE $-2 SBZ WRQ DEC R1 JGT PRI010 RTWP * PRWS DATA 0,0,0,0,0,0,0,0 DATA 0,0,0,0,TRMCRU,0,0,0 * END ENTRY == TI-990 models == The TI-990 processors fell into several natural groups depending on the original design upon which they are based and which I/O bus they used. All models supported the Communications Register Unit (CRU) which is a serial bit addressable I/O bus. Also, supported on higher end models was the TILINE I/O bus which is similar to [[Digital Equipment Corporation|DEC]]'s popular [[UNIBUS]]. The TILINE also supported a master/slave relationship that allowed multiple CPU boards in a common chassis with arbitration control. ===TILINE/CRU models=== The following models used the TILINE as their principal mass storage bus: *TI-990/5 &mdash; [[Texas_Instruments_TMS9900|TMS-9900]] microprocessor with 64K bytes of memory *TI-990/10 &mdash; TTL processor with memory mapping support to 2M bytes of memory *TI-990/10A &mdash; TMS-99000 microprocessor with memory mapping support to 1M bytes of memory *TI-990/12 &mdash; Schottky TTL processor with memory mapping to 2M bytes, workspace caching, hardware floating point, extended mode instructions and writeable control store ===CRU only models=== The following models used the CRU as their principal bus: *TI-990/4 &mdash; [[Texas_Instruments_TMS9900|TMS-9900]] microprocessor with 56K bytes of memory *TI-990/9 &mdash; The original TTL implementation == Operating systems == Several [[operating system]]s were available for the TI-990 From TI: *TX990/TXDS *[[DX10_operating_system|DX10]] *DNOS From third parties: *UCSD Pascal == External links == * [http://www.bitsavers.org/pdf/ti/990/945250-9701_990SystemsHnbk_May76.pdf 990 Computer Family Systems Handbook] * [http://www.bitsavers.org/pdf/ti/990/assembler/2270509-9701A_AsmRef_Nov82.pdf 990 Assembler Reference Manual] * [http://www.cozx.com/~dpitts/ti990.html Dave Pitts' TI 990 page] &mdash; Includes a simulator, cross assember, cross linker, utilities and Operating System images. * [http://jcmigrations.com/ Translator of SCI 990 to COBOL] * [http://www.ti990.co.uk/ ti990.co.uk] Site detailing the preservation and restoration of TI 990 series minicomputers [[Category:TI hardware]] [[Category:Minicomputers]] {{mini-compu-stub}}</text> </page> <page> <id>36657</id> <title>TICOM</title> <text>{{Unreferenced|date=February 2008}} :''For the academic institution, see [[Tilburg Institute of Comparative and Transnational Law]]'' '''TICOM (Target Intelligence Committee)''' was a project formed in [[World War II]] by the United States to find and seize German [[Military espionage|intelligence]] assets, particularly [[cryptographic]] ones. The project was stimulated chiefly by the US military cryptography organizations, and had support from the highest levels. Several teams were sent into the field immediately behind the fighting front. In April 1945 a TICOM team found Russian code and cipher material in a German cryptanalytic center. Captured German cryptographic personnel revealed that, at least amongst the cryptographers, the [[Enigma (machine)|Enigma]] was clearly recognized as breakable. They had simply believed, it seems, that no one would go to the immense trouble required for the only attacks they could see. TICOM was one of several efforts made by the Western Allies to extract German scientific and technological information and personnel during and after the war. Others included [[Operation Paperclip]] (for rocketry), [[Operation Alsos]] (for nuclear information) and [[Operation Surgeon]] (for avionics). In [[Operation Stella Polaris]] the [[Finland|Finnish]] [[signals intelligence]] unit was evacuated to [[Sweden]] after the end of the [[Continuation War]]. The records, including cryptographic material ended up in the hands of Americans. ==See also== * [[Ralph Tester]], senior British codebreaker who worked on the TICOM project ==References== * ''[[Body of Secrets]]'', by [[James Bamford]] (includes material on the TICOM take) [[Category:History of cryptography]] [[Category:Espionage projects]] [[de:Target Intelligence Committee]] [[es:TICOM]] [[he:TICOM]] [[nl:TICOM]]</text> </page> <page> <id>36658</id> <title>TIFRAC</title> <text>'''TIFRAC''' ('''Tata Institute of Fundamental Research Automatic Calculator''') was the first computer developed in [[India]], at the [[Tata Institute of Fundamental Research]] in [[Mumbai]]. Initially a TIFR Pilot Machine was developed in the 1950s. It was started in 1955 and commissioned in November 1956. The full TIFRAC machine was in use in the early 1960s (until 1965). It was started in 1957 and commissioned in February 1960. It included 2,700 [[vacuum tube]]s, 1,700 