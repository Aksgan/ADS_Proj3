by its highly [[orthogonal]], general-register oriented [[instruction set]] and rich [[addressing mode]]s. The PDP-11 family was extremely long-lived, spanning 20 years and many different implementations and technologies. ;PDP-12: Descendant of the LINC-8. See [[LINC]] and [http://users.rcn.com/crfriend/museum/doco/PDP-12/index.shtml PDP-12 User Manual]. ;PDP-13: Designation was not used, apparently due to superstition. ;PDP-14: A 1-bit machine intended as an industrial controller ([[Programmable logic controller|PLC]]). Later versions (for example, the PDP-14/30) were based on PDP-8 physical packaging technology. I/O was line voltage. ;PDP-15: DEC's final 18-bit machine. It was their only 18-bit machine constructed from [[Transistor-transistor logic|TTL]] [[integrated circuit]]s rather than discrete transistors. Later versions of the system were referred to as the "XVM" family. ;PDP-16: A "roll-your-own" sort of computer using [[Register Transfer Modules]], mainly intended for industrial control systems with more capability than the PDP-14. The PDP-16/M was introduced as a standard version of the PDP-16. ==Related computers== *[[TX-0]] designed by [[Massachusetts Institute of Technology|MIT]]'s [[Lincoln Laboratory]], important as influence for DEC products including Ben Gurley's design for the PDP-1 *[[LINC]] (Laboratory Instrument Computer), originally designed by [[Massachusetts Institute of Technology|MIT]]'s [[Lincoln Laboratory]], some built by DEC. Not in the PDP family, but important as progenitor of the PDP-12. The LINC and the PDP-8 can be considered the first [[minicomputer]]s, and perhaps the first [[personal computer]]s as well. The PDP-8 and PDP-11 were the most popular of the PDP series of machines. Digital never made a PDP-20, although the term was sometimes used for a [[PDP-10]] running [[TOPS-20]] (officially known as a [[DECSYSTEM-20]]). *[[SM EVM]] series of computers in the [[USSR]] *[[DVK]] personal computers series are PDP clones developed in [[USSR]] in 70s. *[[Elektronika BK]] *[[UKNC]] ==References== {{Nofootnotes|date=February 2008}} <references/> *[[C. Gordon Bell]], [[J. Craig Mudge]], [[John E. McNamara]], [http://research.microsoft.com/%7EGBell/Computer%5FEngineering/ ''Computer Engineering: A DEC View of Hardware Systems Design''] (Digital, 1978) * [http://www.ed-thelen.org/comp-hist/TheCompMusRep/TCMR-V08.html The Computer Museum Report, Volume 8], TX-0 alumni reunion, Spring 1984, Ed Thelen Web site (accessed June 18, 2006) * [[C. Gordon Bell|Bell]], C.G., [[John Grason|Grason]], J., and [[Allen Newell|Newell]], A., [http://research.microsoft.com/~gbell/designing_computers_and_digital_systems/index.html Designing Computers and Digital Systems]. Digital Press, Maynard, Mass., 1972. ==External links== {{Commons|Category:PDP|Programmed Data Processor}} *[http://www.village.org/pdp11/faq.pages/Crispin.html Mark Crispin's 1986 list of PDP's] *[http://www.technikum29.de/en/computer/early-computers Several PDP and LAB's], still runnable in a German computer museum *[http://americanhistory.si.edu/csr/comphist/bell.htm#first%20commercial%20timesharing DEC's PDP-6 was the world's first commercial time-sharing system ] Gordon Bell interview at the Smithsonian *[http://www.decodesystems.com/dec-product-timeline.html DEC PRODUCT TIMELINE] * [http://research.microsoft.com/~gbell/CGB%20Files/Description%20and%20Use%20of%20RTM%20IEEE%207205%20c.pdf Description and Use of Register Transfer Modules] on Gordon Bell's site at Microsoft. * [http://pdp12.lofty.com/pdp12/index.html pdp12.lofty.com] shows a recently restored PDP-12 * http://www.soemtron.org/pdp7.html information about the PDP-7 and PDP7A including some manuals and a customer list covering 99 of the 120 systems shipped. *{{gutenberg|no=29461|name=Preliminary Specifications: Programmed Data Processor Model Three}} Various sites list documents by Charles Lasner, the creator of the alt.sys.pdp8 discussion group, and related documents by various members of the alt.sys.pdp8 readership with even more authoritative information about the various models, especially detailed focus upon the various members of the PDP-8 "family" of computers both made and not made by DEC. {{DEC hardware}} [[Category:Minicomputers]] [[Category:DEC hardware]] [[ca:Programmed Data Processor]] [[de:Programmed Data Processor]] [[es:Programmed Data Processor]] [[fr:Programmed Data Processor]] [[ko:프로그램 데이터 프로세서]] [[it:Programmed Data Processor]] [[hu:PDP]] [[ja:PDPシリーズ]] [[pl:Programmed Data Processor]] [[ru:Programmed Data Processor]] [[sv:Programmed Data Processor]] [[zh:PDP (迷你電腦)]] {{mini-compu-stub}}</text> </page> <page> <id>30211</id> <title>Programmer art</title> <text>{{Unreferenced|date=August 2010}} '''Programmer Art''' refers to temporary graphics added by the [[software]] developer to test functionality. When creating the artwork speed is a priority and aesthetics are secondary, if they are given any consideration at all. In fact, programmer art might be intentionally bad. This draws attention to the fact that the artwork is only a placeholder and should not go into the final product. This practice might also speed its replacement. Examples include [[stick figure]] [[Sprite (computer graphics)|sprites]] and [[Fuchsia (color)|fuchsia]] [[Texture mapping|textures]]. '''Programmer Art''' may also refer to the art created by an independent or hobbyist developer, where a single person is responsible for all aspects of software/game development. As the creator in this case is typically a developer rather than an artist, the resulting art is functional rather than aesthetic. {{DEFAULTSORT:Programmer Art}} [[Category:Computer art]] {{Computer-stub}}</text> </page> <page> <id>30212</id> <title>Programming Development Manager</title> <text>{{Orphan|date=February 2009}} {{Wikify|date=April 2010}} '''PDM''' ('''Programming Development Manager''') is installed on all [[AS/400]] systems, and is a part of the [[Applications Development ToolSet]]. PDM is an environment that lets programmers and/or operators navigate three levels of the PDM: 1) the library level, 2) the object level, and 3) the member level. To start PDM, choose option 5 from the Main menu (Program menu). Next, choose option 2 to get to the PDM menu. To go directly to the PDM menu, you can also type in the following command into a command line: STRPDM (stands for Start PDM). Other "work with" commands for the designated levels of PDM are as follows: WRKOBJPDM (Object level). == Sources == *Fottral, Jerry. (2000). Mastering the AS/400: a practical, hands-on guide. 3rd ed. ISBN 1-58304-070-6 [[Category:AS/400]] {{programming-software-stub}}</text> </page> <page> <id>30216</id> <title>Programming by demonstration</title> <text>In [[computer science]], '''programming by demonstration''' (PbD) is an [[End-user development]] technique for teaching a computer or a robot new behaviors by demonstrating the task to transfer directly instead of programming it through machine commands. The terms ''[[programming by example]]'' (PbE) and ''programming by demonstration'' (PbD) appeared in software development research as early as the mid 1980s<ref>{{cite paper | first = Dan | last = Halbert | author = Dan Halbert | authorlink = | coauthors = | title = Programming by Example | version = | publisher = U.C. Berkeley (PhD diss.) | date = November 1984 | url = http://www.halwitz.org/halbert/pbe.pdf | format = | accessdate = 2008-05-26 }} </ref> to define a way to define a sequence of operations without having to learn a programming language. The usual distinction in literature between these terms is that in PbE the user gives a prototypical product of the computer execution, such as [[Query by Example|a row in the desired results of a query]]; while in PbD the user performs a sequence of actions that the computer must repeat, generalizing it to be used in 