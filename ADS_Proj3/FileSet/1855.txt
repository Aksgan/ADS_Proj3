X and Y directions |----- | SP1; || select pen 1 |----- | PU0,0; | lift Pen Up and move to starting point for next action |----- | PD100,0,100,100,0,100,0,0; | put Pen Down and move to the following locations (draw a box around the page) |----- | PU50,50; || Pen Up and move to X,Y coordinates 50,50 (in this case mm, after the SC command) |----- | CI25; || draw a circle with radius 25 (mm) |----- | SS; || select the standard font |----- | DT*,1; | set the text delimiter to the asterisk, and do not print them (the 1, meaning "true") |----- | PU20,80; || lift the pen and move to 20,80 |----- | LBHello World*; || draw a label |----- | LTlinetype,length || set line type and its repetition length |----- | CSxx || set character set (e.g. 33 is German) |----- | DIx,y || set direction of text given as the catheti |----- | SIww,hh || set character width and height |} The coordinate system was based on the smallest units one of the HP plotters could support, and was set to 25 µm (i.e. 40 units per millimeter, 1016 per inch). The coordinate space was positive or negative [[floating point]] numbers, specifically ± 2<sup>30</sup>. == HP-GL/2 == The original HP/GL-Language did not support definition of line width, as this parameter was determined by the pens loaded into the plotter. With the advent of the first inkjet plotters, line width for the "pens" specified within the HP/GL-files had to be set at the printer so it would know what line width to print for each pen, a cumbersome and error-prone process. With HP/GL-2, definition of line width was introduced into the language and allowed for elimination of this step. Also, among other improvements a [[binary file]] format was defined that allowed for smaller files and shorter file transfer times, and the minimal resolution was reduced. ==External links== *[http://www.sxlist.com/techref/language/hpgl/commands.htm Hewlett Packard Graphics Language Commands] *[http://cstep.luberth.com/hpgl.htm HPGL Overview] *[http://chiplotle.org Chiplotle, a Python-based HPGL plotter control library for using vintage pen plotters with contemporary operating systems] [[Category:Hewlett-Packard]] [[Category:Vector graphics]] [[Category:Page description languages]] [[de:Hewlett Packard Graphic Language]] [[es:HPGL]] [[fr:Hewlett Packard Graphic Language]] [[it:HPGL]] [[nl:HP-GL/2]] [[ja:HP-GL]] [[pl:HPGL]] [[ru:HPGL]] [[tr:HPGL]]</text> </page> <page> <id>16065</id> <title>HP 3000</title> <text>{{No footnotes|date=February 2010}} The '''HP 3000''' series is a family of [[minicomputers]] released by [[Hewlett-Packard]] in [[1973]]. It was designed to be the first minicomputer delivered with a full featured operating system with time-sharing. The first models were withdrawn from the market until speed improvements could be made. It ultimately became known as a reliable and powerful business system. Early models had large cabinets with front panels, while later models were made that fit into desks using only terminal consoles for diagnostics, with bootstrap routines in ROM. Models ranged from a system sometimes used by a single user, to models that supported over two thousand users. It was one of the last proprietary minicomputer systems to be retired by its vendor, outlasting the [[PDP-11]]-descended [[Digital Equipment Corporation]] [[VAX]], which was acquired by Compaq and then ultimately by [[Hewlett-Packard]]. After almost 30 years, a five-year phase-out period for the now-named e3000 series servers was announced in November 2001. HP extended this period twice. No more new e3000s are being sold, although used systems continue to be sold for upgrades on a third-party reseller market. Support from the vendor to customers for the HP 3000 continues through Dec. 31, 2010. Many third party firms are supporting the system for customers through the year 2013 and beyond. Some customers continue to use the HP 3000 in companies worldwide, especially in manufacturing and e-commerce industries, while others have migrated to business server systems made by HP and others. == Classic memory segments and 64K barrier == Code (reentrant) and data reside in separate variable-length segments, which are 32,768 "halfwords" (16-bit words) (or, 65,536 bytes). The operating system, known as [[HP Multi-Programming Executive|MPE]] (for Multi-Programming Executive), loads code segments from program files and segmented [[Library (computing)#Shared|Library]] (SL) files as needed, up to 256 segments in one process. There could be as much as 64KB of memory in a code segment, but calling a routine was based on segment number and routine number within a segment, so a program could theoretically have about 32,385 routines. This was compared to most 16 bit computers that had 64KB of address space for everything. The bigger limitation was the data segment and stack segment, which were also 64KB. Shared library routines did not permit cross-process global data since each process had its own data segment. Some procedures worked around this by requiring the caller to pass in an array from their own stack or data segment to hold all state information, similar to modern object oriented languages where methods are applied to objects passed in allocated by the caller. A process could allocate and use multiple extra data segments (XDS) of up to 64KB each. While the Classic architecture imposed a limit of 65,535 extra data segments system-wide, other limitations would usually restrict that to a somewhat smaller limit. Systems programming was done in SPL (System Programming Language), an [[ALGOL]]-like language, but allowing inline assembler, and other direct access to the [[instruction set|ISA]]. The standard terminals for the HP 3000 were the [[HP 2640]] series, which supported block mode data entry from forms, as well as character mode. ==Classic and PA-RISC XL== The HP 3000 family was divided into the "Classic" ([[16-bit]]) and "XL" (later IX - [[32-bit]]) families following the introduction of systems based on HP's [[PA-RISC]] chips in early 1984. These were not binary compatible with the Classics, but would transparently run Classic code via an emulator integrated into the MPE XL operating system. (Classic code could optionally be translated to native PA-RISC code via OCTCOMP, the Object Code Translator/COMPiler ... such code ran at native speed, but was still subject to Classic stack and memory size limitations). The earlier "Classic" machines were based on a custom [[Complex instruction set computer|CISC]] processor. From 