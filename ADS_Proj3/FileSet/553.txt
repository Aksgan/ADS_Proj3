The “as-is” process model shows exactly where the pain is in this business. Five percent faulty repairs is a bad sign, but worse, the repetitive fixes that are needed to complete those repairs are cumbersome. [[Image:BPDWikiPic01.png|center|Business Process Discovery Example]] A deeper analysis of the “as-is” process data may reveal which are the faulty parts that are responsible for the overall behavior in this example. It may lead to the discovery of subgroups of repairs that actually need management focus for improvement. [[Image:BPDWikiPic02.png|center|Business Process Comprehend]] In this case, it would become obvious that the faulty parts are also responsible for the repetitive fixes. Similar applications have been documented, such as a Healthcare Insurance Provider case where in 4 months the ROI of Business Process Analysis was earned from precisely comprehending its claims handling process and discovering the faulty parts. ==History== *[[Business intelligence]] (BI) emerged more than 20 years ago and is critical for reporting what is happening within an organization’s systems. Yet current BI applications and data mining technologies are not always suited for evaluating the level of detail required to analyze unstructured data and the human dynamics of business processes. *Six-Sigma and other quantitative approaches to [[business process improvement]] have been employed for over a decade with varying degrees of success. A major limitation to the success of these approaches is the availability of accurate data to form the basis of the analysis. With BPD, many six-sigma organizations are finding the ability to extend their analysis into major business processes effectively. *[[Process mining]] (PM) emerged as a scientific discipline around 1990 when techniques like the alpha algorithm made it possible to extract process models (typically represented as [[Petri nets]]) from event logs. ==References== {{reflist}} == Further reading== * Cook J. E., Wolf A. L., “Automating Process Discovery through Event-Data Analysis”, Proceedings of the 17th International Conference on Software Engineering, Seattle, Washington, USA, 1995. * Irani Z., Hlupic V., Giaglis G., “Business-Process Reengineering: A Design Perspective”, The International Journal of Flexible Manufacturing Systems, 12, pp. 247 – 252 (2000) * Linton, J. D., “Facing the Challenges of Service Automation: An enabler for E-Commerce and Productivity Gain in Traditional Services”, IEE transactions on Engineering Management, 54, No. 4, November, 2003. * Linton, J., “Process Mapping and Design: A detailed process map can help reduce everything from cycle time to defects to process steps”, Circuits Assembly: The Journal for Surface Mount and Electronics Assembly, februari 2007 * Verner, L., “The Challenge of Process Discovery”, BPM Trends, May 2004. * [[W.M.P. van der Aalst]], B.F. van Dongen, J. Herbst, L. Maruster, G. Schimm, and A.J.M.M. Weijters. Workflow Mining: A Survey of Issues and Approaches. Data and Knowledge Engineering, 47(2):237-267, 2003. * [[W.M.P. van der Aalst]], A.J.M.M. Weijters, and L. Maruster. Workflow Mining: Discovering Process Models from Event Logs. IEEE Transactions on Knowledge and Data Engineering, 16(9):1128-1142, 2004. * [[W.M.P. van der Aalst]], H.A. Reijers, A.J.M.M. Weijters, B.F. van Dongen, A.K. Alves de Medeiros, M. Song, and H.M.W. Verbeek. Business Process Mining: An Industrial Application. Information Systems, 32(5):713-732, 2007. [[Category:Process management]] [[de:Business Process Discovery]]</text> </page> <page> <id>4815</id> <title>Business rule management system</title> <text>{{Unreferenced|date=October 2007}} A '''BRMS''' or '''Business Rule Management System''' is a [[software]] system used to define, deploy, execute, monitor and maintain the variety and complexity of decision logic that is used by operational systems within an organization or enterprise. This logic, also referred to as [[business rules]], includes policies, requirements, and conditional statements that are used to determine the tactical actions that take place in applications and systems. A BRMS includes, at minimum: * A repository, allowing decision logic to be externalized from core application code * Tools, allowing both technical developers and business experts to define and manage decision logic * A runtime environment, allowing applications to invoke decision logic managed within the BRMS and execute it using a [[business rules engine]] The top benefits of a BRMS include: * Reduced or removed reliance on IT departments for changes in live systems. Although, QA and Rules testing would still be needed in any enterprise system. * Increased control over implemented decision logic for compliance and better business management * The ability to express decision logic with increased precision, using a business vocabulary syntax and graphical rule representations (decision tables, trees, scorecards and flows) * Improved efficiency of processes through increased decision automation Most BRMS vendors have evolved from [[rule engine]] vendors to provide business-usable [[software development lifecycle]] solutions, based on declarative definitions of business rules executed in their own [[rule engine]]. However, some vendors come from a different approach (for example, they map decision trees or graphs to executable code). Rules in the repository are generally mapped to decision services that are naturally fully compliant with the latest [[Service Oriented Architecture|SOA]], [[Web Services]], or other software architecture trends. ==Related software approaches== In a BRMS, a business representation of rules maps to a software system for execution. A BRMS is therefore related to [[model-driven engineering]], such as [[Object Management Group|OMG]]'s [[Model Driven Architecture|MDA]]. It is no coincidence that many of the related standards are under the [[Object Management Group|OMG]] banner. ==Associated standards== There is no current implementation standard for business rules defined within a BRMS, although there is a standard for a Java Runtime [[application programming interface|API]] for rule engines [[JSR-94]]. Other standards (under development) include: * OMG [[Business Motivation Model]] (BMM): A model of how strategies, processes, rules, etc fit together for business modeling * OMG [[Semantics of Business Vocabulary and Rules|SBVR]]: Targets business constraints as opposed to automating business behavior * OMG [[Production Rule Representation]] (PRR): Represents rules for [[production system|production rule system]]s that make up most BRMS' execution targets * W3C [[Rule Interchange Format|RIF]]: A family of related rule languages for rule interchange Many standards, such as [[domain-specific language]]s, define their own representation of rules, requiring translations to generic rule engines or their own custom engines. Other domains, such as [[PMML]], also define rules. [[RuleML]] provides a (mostly academic) family of mark-up languages that could be used in a BRMS, but 