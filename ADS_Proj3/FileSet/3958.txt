the sporting world, self-handicapping behaviour has become of interest to sports psychologists who are interested in increasing sports performance. Recent research has examined the relationship between behavioural and claimed self-handicaps and athletic performance<ref>Coudevylle, G., Martin Ginis, K., & Famose, J-P. (in press). Determinants of self-handicapping strategies in sport and their effects on athletic performance. ''Social Behavior and Personality. International Journal (Toronto, Ont.)''</ref> as well as the effects self-handicapping has on anxiety and fear of failure before Athletic Performance.<ref name=Chen2008 /> ===Longitudinal studies=== Longitudinal studies of self-handicapping have shown that while self-handicapping may protect [[self-esteem]] in the short term, it could have long-term costs for the individual. Self-handicapping has been found to lead to lower intrinsic [[motivation]], worse health and wellbeing, more frequent negative moods and higher use of various substances.<ref name=Zuckerman2005>Zuckerman, M., & Tsai, F. F. (2005). Costs of self-handicapping. ''Journal of Personality, 73(2),'' 411–442.</ref> ==See also== *[[Attributional bias]] *[[Outline of self]] *[[Self-perception theory]] *[[Self-serving bias]] ==References== {{reflist|2}} ==External links== * [http://www.psychwiki.com/wiki/Self-handicapping PsychWiki: Self-Handicapping] * [http://www.nytimes.com/2009/01/06/health/06mind.html New York Times: Some Protect the Ego by Working on their Excuses Early] [[Category:Self]] [[Category:Psychological attitude]] [[Category:Conceptions of self]] [[fr:Auto-handicap]] [[ja:セルフ・ハンディキャッピング]]</text> </page> <page> <id>33743</id> <title>Self-hosting</title> <text>{{Refimprove|date=April 2010}} The term '''self-hosting''' was coined to refer to the use of a [[computer program]] as part of the [[toolchain]] or [[operating system]] that produces new versions of that same program—for example, a [[compiler]] that can compile its own [[source code]]. Self-hosting software is commonplace on [[personal computer]]s and larger systems. Other programs that are typically self-hosting include [[kernel (computer science)|kernel]]s, [[Assembly language#Assembler|assemblers]], [[shell (computing)|shell]]s and [[revision control|revision control software]]. If a system is so new that no software has been written for it, then software is developed on another self-hosting system and placed on a [[computer storage|storage]] device that the new system can read. Development continues this way until the new system can reliably host its own development. Development of the [[Linux]] operating system, for example, was initially hosted on a [[Minix]] system. Writing new software development tools "from the metal" (that is, without using another host system) is rare and in many cases impractical. == History == {{Main|History of compiler writing}} The first self-hosting compiler (excluding assemblers and [[living organisms]]) was written for [[Lisp programming language|Lisp]] by Hart and Levin at MIT in 1962. They wrote a Lisp compiler in Lisp, testing it inside an existing Lisp interpreter. Once they had improved the compiler to the point where it could compile its own source code, it was self-hosting.<ref name="LEVIN"/> :''The compiler as it exists on the standard compiler tape is a machine language program that was obtained by having the [[S-expression]] definition of the compiler work on itself through the interpreter.'' (AI Memo 39)<ref name="LEVIN">{{cite web | title=AI Memo 39-The new compiler| author=Tim Hart and Mike Levin | url=ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-039.pdf | accessdate=2008-05-23}}</ref> This technique is only possible when an interpreter already exists for the very same language that is to be compiled. It borrows directly from the notion of running a program on itself as input, which is also used in various proofs in [[theoretical computer science]], such as the proof that the [[halting problem]] is undecidable. == Examples == Several [[programming language]]s are self-hosting, in the sense that a compiler for the language can be written in that same language. Self-hosting is an attribute of a particular language implementation and not of the programming language in general. The first compiler for a new programming language can be written in another language (in rare cases, [[Machine code|machine language]]) or can be produced using [[Bootstrapping (compilers)|bootstrapping]]. Programming languages which have been self-hosted include [[Ada (programming language)|Ada]], [[BASIC]], [[C (programming language)|C]], [[CoffeeScript]], [[F Sharp (programming language)|F#]], [[FASM]], [[Forth (programming language)|Forth]], [[Haskell (programming language)|Haskell]], [[Java (programming language)|Java]], [[Lisp (programming language)|Lisp]], [[Modula-2]], [[OCaml]], [[Oberon (programming language)|Oberon]], [[Pascal (programming language)|Pascal]], [[PyPy|Python]], [[Scala (programming language)|Scala]] and [[Smalltalk]]. == Other meaning == {{Main|Home server}} Self-hosting is also a term used for any individual who hosts their own website themselves rather than use the services of an ISP (Internet Service Provider). Self-hosting is gaining popularity as broadband speeds increase and the necessity to retain privacy of information or intellectual property increases. There are several benefits to self-hosting including unlimited file storage space, ease of access to a home network, privacy of information and speed of access when on a local home network. == See also == * [[Cross compiler]] * [[Dogfooding]] * [[Futamura projection]] * [[Self-interpreter]] * [[Self reference]] == References == {{refs}} [[Category:Computer programming]] [[Category:Self-hosting software]] [[fr:Auto-hébergement (informatique)]] [[ja:セルフホスティング]] [[pt:Auto-hospedagem]]</text> </page> <page> <id>33758</id> <title>Self-schema</title> <text>The term '''self-schema''' refers to the beliefs and ideas people have about themselves. These beliefs are used to guide and organize information processing, especially when the information is significant to the self. Self-schemas are important to a person's overall [[self-concept]]. == General self-schema == The term '''schematic''' describes having a particular schema for a particular dimension. For instance, a person in a [[musical ensemble|rock band]] at night, when she would have a "rocker" schema. However, during the day, if she works as a [[sales]]person, she would have a "salesperson" schema during that period of time. Schemas vary according to [[culture|cultural background]] and other [[social environment|environmental factors]]. Once people have developed a schema about themselves, there is a strong tendency for that schema to be maintained by a [[cognitive bias|bias]] in what they attend to, in what they remember, and in what they are prepared to accept as true about themselves. In other words, the self-schema becomes self-perpetuating. The self-schema is then stored in [[long-term memory]], and both facilitates and biases the processing of personally relevant information. The term '''aschematic''' means not having a schema for a particular dimension. This usually occurs when people are not involved with or concerned about a certain attribute. For example, if a person plans on being a [[music]]ian, a self-schema in [[aeronautics]] will not attribute to her; she is aschematic on aeronautics. Self-schemas vary from person to person because each individual has very different social and cultural life experiences. A few examples of self-schemas are: 