to expand the census to other continents. This would cause records in the same bucket to correspond to households on a street beginning with the same letter, in the same city, in the same continent. The cells in the grid file would then consist of a city header, and six (one for each continent, not including [[Antarctica]]) groupings of 26 cells relating to the streets with the same starting letter, in the same city, on the same continent and could now be thought of as a three-dimensional array. ==Advantages== Since a single entry in the grid file contains pointers to all records indexed by the specified keys:<ref name="adv">http://www.cs.sfu.ca/CC/354/zaiane/material/notes/Chapter11/node24.html</ref> * No special computations are required * Only the right records are retrieved * Can also be used for single search key queries * Easy to extend to queries on ''n'' search keys * Significant improvement in processing time for multiple-key queries * Has a two-disk-access upper bound for accessing data. <ref name="tgf" /> ==Disadvantages== However, because of the nature of the grid file, which gives it its advantages, there are also some disadvantages:<ref name="adv" /> * Imposes space overhead * Performance overhead on insertion and deletion ==Related Data Structures== * [[multilayer grid file]] * [[twin grid files]] * [[BANG file]] ==See also== * [[Lattice graph]] * [[Grid (spatial index)]] * [[Index (database)]], [[Quadtree]], [[Kd-tree]], [[UB-tree]], [[R-tree]], [[range tree]] as alternatives. ==References== {{reflist}} * * [[Category:Files]] [[Category:Arrays]] [[de:Gridfile]]</text> </page> <page> <id>15844</id> <title>Grid network</title> <text>{{expert}} A '''grid network''' is a kind of [[computer network]] consisting of a number of (computer) systems connected in a grid topology. In a regular grid topology, each node in the network is connected with two neighbors along one or more [[dimension]]s. If the network is one-dimensional, and the chain of nodes is connected to form a circular loop, the resulting topology is known as a ring. Network systems such as [[Fiber distributed data interface|FDDI]] use two counter-rotating [[token-passing]] rings to achieve high reliability and performance. In general, when an ''n''-dimensional grid network is connected circularly in more than one dimension, the resulting network topology is a [[torus]], and the network is called "toroidal". When the number of nodes along each dimension of a toroidal network is 2, the resulting network is called a [[hypercube]]. A [[parallel computing]] cluster or [[multi-core]] processor is often connected in regular interconnection network such as a [[de Bruijn graph]] <ref> [http://www.era.lib.ed.ac.uk/bitstream/1842/860/1/Spadavecchia_thesis.pdf "A Network-based Asynchronous Architecture for Cryptographic Devices"] by Ljiljana Spadavecchia 2005. section "5.6.1.2 De Bruijn graphs", and section "5.6.2.2 Randomised routing in de Bruijn graphs". </ref>, a [[hypercube graph]], a [[hypertree network]], a [[fat tree]] network, a [[torus]], or [[cube-connected cycles]]. Note that a grid network is not the same as a grid computer (or [[computational grid]]) (even though the nodes in a grid network are usually computers, and [[grid computing]] obviously requires some kind of [[computer network]] to interconnect the computers). ==References== {{reflist}} == See also == * [[Grid plan]] - street network * [[Network topology]] [[Category:Network topology]] {{Compu-network-stub}} [[ru:Решётка (топология компьютерной сети)]]</text> </page> <page> <id>15848</id> <title>Griffon (framework)</title> <text>{{Cleanup|date=September 2008}} {{Infobox Software | name = Griffon | logo = | screenshot = | caption = | author = Danno Ferrin, Andres Almiray, James Williams | developer = | released = September 19, 2008 | latest release version = 0.9.2-beta-3 | latest release date = {{release date|2010|12|21}} | operating system = [[Cross-platform]] | platform = [[Cross-platform]] ([[Java Virtual Machine|JVM]]) | language = English | programming language = [[Groovy (programming language)|Groovy]] | genre = [[Rich Client Platform]] | license = [[Apache License]] 2.0 | website = http://griffon.codehaus.org/ }} '''Griffon''' is an open source [[Rich Client Platform]] framework which leverages the [[Groovy (programming language)|Groovy]] programming language (which is in turn based on the Java platform). Griffon is intended to be a high-productivity framework by rewarding use of the Model-View-Controller paradigm, providing a stand-alone development environment and hiding much of the configuration detail from the developer. A significant portion of the build environment is directly derived from the [[Grails (Framework)|Grails]] codebase and hence follows many of its conventions. The first release is the fruit of the effort by the Groovy Swing team and an attempt to take the best of rapid application development, as indicated by its [[Grails (framework)|Grails]]-like structure, the agility of the [[Groovy (programming language)|Groovy]], and the availability of components for Swing. == Overview == Griffon aims to reduce the typical confusion that occurs with traditional Swing development. Due to the MVC structure of Griffon, developers never have to go searching for files or be confused on how to start a new project. Everything begins with: griffon create-app <APP_NAME> The generated project follows this structure: <pre> %PROJECT_HOME% + griffon-app + conf ---> location of configuration artifacts like builder configuration + keys ---> keys for code signing + webstart ---> webstart and applet config + controllers ---> location of controller classes + i18n ---> location of message bundles for i18n + lifecycle ---> location of lifecycle scripts + models ---> location of model classes + resources ---> location of non code resources (images, etc) + views ---> location of view classes + lib + scripts ---> scripts + src + main ---> optional; location for Groovy and Java source files (of types other than those in griffon-app/*) </pre> The builder infrastructure enables seamless integration of different widget libraries such as Swing, JIDE, and SwingX. Griffon’s built-in scripts include targets for desktop, webstart, and applets. The baseline requirement is Java 5 or higher. In the first release, three sample applications are included : * Greet, a Groovy Twitter client featured in the JavaOne 2009 Script Bowl, * FontPicker, an application to view the available fonts on one's machine, * SwingPad, a lightweight designer application for Griffon user interfaces. == Plugins == Griffon can be extended with the use of plugins. Plugins provide run-time access to testing libraries such as [http://www.easyb.org/ Easyb] and [http://docs.codehaus.org/display/FEST/Home FEST], and all widget libraries besides core Swing are provided as plugins. The plugin system allows for a wide range of additions, 