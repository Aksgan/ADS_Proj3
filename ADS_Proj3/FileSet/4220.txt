this command to the system just like a client request. All non-faulty replicas add the joining node to the system upon processing this Input. A new replica must be up-to-date on the system's State before joining (see [[#State Transfer|State Transfer]]). ===State Transfer=== When a new replica is made available or an old replica is restarted, it must be brought up to the current State before processing Inputs (see [[#Joining|Joining]]). Logically, this requires applying every Input from the dawn of the system in the appropriate order. Typical deployments short-circuit the logical flow by performing a State Transfer of the most recent Checkpoint (see [[#Checkpoints|Checkpoints]]). This involves directly copying the State of one replica to another using an out-of-band protocol. A checkpoint may be large, requiring an extended transfer period. During this time, new Inputs may be added to the log. If this occurs, the new replica must also receive the new Inputs and apply them after the checkpoint is received. Typical deployments add the new replica as an observer to the ordering protocol before beginning the state transfer, allowing the new replica to collect Inputs during this period. :'''Optimizing State Transfer''' :Common deployments reduce state transfer times by sending only State components which differ. This requires knowledge of the State Machine internals. Since state transfer is usually an out-of-band protocol, this assumption is not difficult to achieve. :Compression is another feature commonly added to state transfer protocols, reducing the size of the total transfer. ===Leader Election (for Paxos)=== [[Paxos algorithm|'''Paxos''']]<ref name=paxos>{{cite journal|curly=yes|last=Lamport|first=Leslie|year=1998|month=May|title=The Part-Time Parliament|journal=ACM Transactions on Computer Systems|volume=16|issue=2|pages=133â€“169|url=http://research.microsoft.com/users/lamport/pubs/pubs.html#lamport-paxos|accessdate=2007-02-02|doi=10.1145/279227.279229}}</ref> is a protocol for solving consensus, and may be used as the protocol for implementing [[#Consensus Order|Consensus Order]]. Paxos requires a single leader to ensure liveness <ref name=paxos/>. That is, one of the replicas must remain leader long enough to achieve consensus on the next operation of the state machine. System behavior is unaffected if the leader changes after every instance, or if the leader changes multiple times per instance. The only requirement is that one replica remain leader long enough to move the system forward. :'''Conflict Resolution''' :In general, a leader is necessary only when there is disagreement about which operation to perform <ref name=fast/>, and if those operations conflict in some way (for instance, if they do not commute) <ref name=general/>. :When conflicting operations are proposed, the leader acts as the single authority to set the record straight, defining an order for the operations, allowing the system to make progress. With Paxos, multiple replicas may believe they are leaders at the same time. This property makes Leader Election for Paxos very simple, and any algorithm which guarantees an 'eventual leader' will work. == Historical background == [[Leslie Lamport]] was the first to propose the state machine approach, in his seminal 1984 paper on [http://portal.acm.org/citation.cfm?id=2994&dl=ACM&coll=GUIDE "Using Time Instead of Timeout In Distributed Systems"]. Fred Schneider later elaborated the approach in his paper [http://portal.acm.org/citation.cfm?id=98167 "Implementing Fault-Tolerant Services Using the State Machine Approach: A Tutorial"]. [[Ken Birman]] developed the [[virtual synchrony]] model in a series of papers published between 1985 and 1987. The primary reference to this work is [http://portal.acm.org/citation.cfm?id=37515&dl=ACM&coll=GUIDE "Exploiting Virtual Synchrony in Distributed Systems"], which describes the Isis Toolkit, a system that was used to build the New York and Swiss Stock Exchanges, French Air Traffic Control System, US Navy AEGIS Warship, and other applications. Recent work by Miguel Castro and [[Barbara Liskov]] used the state machine approach in what they call a [http://www.pmg.lcs.mit.edu/~castro/osdi99_html/osdi99.html "Practical Byzantine fault tolerance"] architecture that replicates especially sensitive services using a version of Lamport's original state machine approach, but with optimizations that substantially improve performance. A hard real-time variant of this approach has been developed by Prof. [[Hermann Kopetz]] at TU Vienna, Austria, in the [http://citeseer.ist.psu.edu/kopetz88timetriggered.html "Time-Triggered Architecture"] ([[TTA]]) based on the [[Time-Triggered Protocol]] ([[TTP]]) during the 1990s. It has been commercialized in the 2000s by [[TTTech|TTTech Computertechnik AG]] and deployed in various [[Products with TTP|aerospace projects]]. ==References== {{reflist}} {{DEFAULTSORT:State Machine Replication}} [[Category:Distributed computing problems]] [[Category:Data synchronization]] [[Category:Fault-tolerant computer systems]]</text> </page> <page> <id>35612</id> <title>State of the art</title> <text>{{other uses}} {| class="toccolours" style="float:right; margin: 0 0 1em 1em; width:246px; text-align:left; clear:right;" | style="background:#dddddd; text-align:center;"| Usage note |- |The phrase "''state of the art''" should be [[hyphen]]ated when it is used as an [[adjective]], e.g.: : "This machine is an example of state-of-the-art technology", but not when used as a [[noun]] as in the following sentence:<ref>Merriam Webster Dictionary, Entry for [http://www.merriam-webster.com/dictionary/state%20of%20the%20art 'state of the art']</ref> : "The state of the art in this field is mostly related to the X technology". *[[wiktionary:cutting edge|Cutting edge]] as a synonym of the term can be used as a noun. *[[Leading edge]] conveys exactly the same meaning |- |} The '''state of the art''' is the highest level of development, as of a device, technique, or scientific field, achieved at a particular time. It also applies to the level of development (as of a device, procedure, process, technique, or science) reached at any particular time usually as a result of modern methods. == Origin == The earliest usage of the term "state of the art" documented by the [[Oxford English Dictionary]] dates back to 1910 from an engineering manual by Henry Harrison Suplee (1856-post 1943), an engineering graduate (U. Of Pennsylvania, 1876), titled ''Gas Turbine: progress in the design and construction of turbines operated by gases of combustion''. It reads: "In the present state of the art this is all that can be done." == Patent law == {{main|Prior art}} In the context of the [[European Patent Convention|European]] and [[Australian]] [[patent]] [[law]], the term "state of the art" is a concept used in the process of assessing and asserting [[novelty (patent)|novelty]] and [[inventive step and non-obviousness|inventive step]],<ref>Under the European Patent Convention: {{EPC Article|54}} and {{EPC Article|56}}.</ref> and is a synonym of the expression "[[prior art]]". In the [[European Patent Convention]] (EPC), "[the] state of the art shall be held to comprise everything made available to the public by means of a written or oral description, by use, or in any other way, before 