software licence|permissive]] licenses such as the [[BSD license]]s and the [[MIT License]]. The GNU Library General Public License (as the LGPL was originally named) was published in 1991, and was the version number 2 for parity with GPL version 2. The LGPL was revised in minor ways in the 2.1 point release, published in 1999, when it was renamed the GNU Lesser General Public License to reflect the FSF's position that not all libraries should use it. Version 3 of the LGPL was published in 2007 as a list of additional permissions applied to GPL version 3. The LGPL places [[copyleft]] restrictions on the program itself but does not apply these restrictions to other software that merely links with the program. There are, however, certain other restrictions on this software. The LGPL is primarily used for [[Library (computer science)|software libraries]], although it is also used by some stand-alone applications, most notably [[Mozilla]] and [[OpenOffice.org]] and sometimes media as well. ==Differences from the GPL== The main difference between the GPL and the LGPL is that the latter can be linked to (in the case of a library, 'used by') a non-(L)GPLed program, regardless of whether it is [[free software]] or [[proprietary software]].<ref name="not_use_LGPL">Stallman, Richard. [http://www.fsf.org/licensing/licenses/why-not-lgpl.html Why you shouldn't use the Lesser GPL for your next library]. [[Free Software Foundation]] official website.</ref> This non-(L)GPLed program can then be distributed under any chosen terms if it is not a [[derivative work]]. If it is a derivative work, then the terms must allow '''"modification for the customer's own use and reverse engineering for debugging such modifications."''' <!-- commented-out - see talk: Another major difference is that derivative works (which are not GPLed) must be software libraries.--> Whether a work that uses an LGPL program is a derivative work or not is a legal issue. A standalone executable that dynamically links to a library is generally accepted as not being a derivative work (in LGPL). It would be considered a "work that uses the library" and paragraph 5 of the LGPL applies. :A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a "work that uses the Library". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. Essentially, if it is a "work that uses the library", then '''it must be possible for the software to be linked with a newer version of the LGPL-covered program'''. The most commonly used method for doing so is to use "a suitable [[Library_(computing)#Shared_libraries|shared library]] mechanism for linking". Alternatively, a [[statically linked library]] is allowed if either source code or linkable object files are provided. One feature of the LGPL is that one can convert any LGPLed piece of software into a GPLed piece of software (section 3 of the license). This feature is useful for direct reuse of LGPLed code in GPLed libraries and applications, or if one wants to create a version of the code that cannot be used in proprietary software products. ==Choosing to license a library under the GPL or the LGPL== The former name of "GNU Library General Public License" gave some people the impression that the FSF wanted all libraries to use the LGPL and all programs to use the GPL. In February 1999 Richard Stallman wrote the essay ''Why you shouldn't use the Lesser GPL for your next library'' explaining why this was not the case, and that one should not ''necessarily'' use the LGPL for libraries: :Which license is best for a given library is a matter of strategy, and it depends on the details of the situation. At present, most GNU libraries are covered by the Library GPL, and that means we are using only one of these two strategies <nowiki>[allowing/disallowing proprietary programs to use a library]</nowiki>, neglecting the other. So we are now seeking more libraries to release under the ordinary GPL.<ref name="not_use_LGPL" /> This does not mean that the FSF [[deprecation|deprecate]]s the LGPL, but merely says that it should not be used for ''all'' libraries, giving the GNU C library as an example of a library that should use the LGPL since several C libraries exist &mdash; the same essay goes on to say: :Using the ordinary GPL is not advantageous for every library. There are reasons that can make it better to use the Lesser GPL in certain cases.<ref name="not_use_LGPL" /> Indeed, Stallman and the FSF sometimes advocate licenses even less restrictive than the LGPL as a matter of strategy (to maximize the freedom of users). A prominent example was Stallman's endorsement of the use of a [[BSD license|BSD-style]] license by the [[Vorbis]] project for its libraries.<ref name="Vorbis_and_BSD">Stallman, Richard. [http://lwn.net/2001/0301/a/rms-ov-license.php3 <nowiki>Re: [open-source] [Fwd: [icecast-dev] Xiph.org announces Vorbis Beta 4 and the Xiph.org</nowiki>]</ref> ==Programming languages specificity== The license uses terminology which is mainly intended for applications written in the [[programming language]] [[C (programming language)|C]] or its family. Franz Inc. published its own preamble to the license to clarify terminology in the [[Lisp (programming language)|Lisp]] context. LGPL with this preamble is sometimes referred as LLGPL.<ref name="LGPL_preamble">[http://opensource.franz.com/preamble.html Preamble to the Gnu Lesser General Public License]</ref> In addition, [[Ada (programming language)|Ada]] has a special feature, [[wikibooks:Ada Programming/Generics|generics]], that may use the [[GNAT Modified General Public License|MGPL]] license.{{Clarify|date=August 2010}}<!--which feature uses the license, and how?--> ==LGPL regarding inheritance (in programming)== Some concern has arisen about the suitability of object-oriented classes in LGPL'd software being [[Inheritance (computer science)|inherited]] by non-(L)GPL code. Generally, these concerns are unfounded, and clarification is given on the official GNU website: :The LGPL contains no special provisions for inheritance, because none are needed. Inheritance creates derivative works in the same way as traditional linking, and the LGPL permits this type of derivative work in the same way as it permits ordinary function calls.<ref>Turner, David. [http://www.gnu.org/licenses/lgpl-java.html The LGPL and Java]. [[GNU]] official website.</ref> ==See also== {{Portal|Free software}} *[[Affero General Public License]] *[[Free software licence|Free Software licensing]] *[[GNU Free 