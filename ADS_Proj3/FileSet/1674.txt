+ 134^4</math> However, ''Taxicab''(5, 2, ''n'') is not known for any ''n'' &ge; 2; no positive [[integer]] is known which can be written as the sum of two fifth powers in more than one way.<ref>{{cite book | last = Guy | first = Richard K. | authorlink = Richard K. Guy | title = Unsolved problems in number theory (third edition) | publisher = Springer-Science+Business Media, Inc. | date = 2004 | location = New York, New York, USA | pages = 437 | url = http://books.google.com/books?id=1AP2CEGxTkgC&printsec=frontcover#v=onepage&q=&f=false | doi = | id = | isbn = 0-387-20860-7 }} </ref> ==References== <references /> ==External links== *[[Walter Schneider (mathematician)|Walter Schneider]]:[http://web.archive.org/web/20050425023736/http://www.wschnei.de/number-theory/taxicab-numbers.html Taxicab numbers] [[Category:Number theory]] [[ar:عدد تاكسيكاب المعمم]] [[de:Taxicab-Zahl#Verallgemeinerte Taxicab-Zahl]] [[fr:Nombre taxicab généralisé]] [[ja:一般化タクシー数]]</text> </page> <page> <id>14991</id> <title>Generating set</title> <text>In [[mathematics]], the expressions '''generator''', '''generate''', '''generated by''' and '''generating set''' can have several closely related technical meanings: * [[Generating set of an algebra]]: If ''A'' is a ring and ''B'' is an ''A''-[[algebra]], then ''S'' '''generates''' ''B'' if the only [[subalgebra|sub-''A''-algebra]] of ''B'' containing ''S'' is ''B'' itself. * [[Generating set of a group]]: A set of group elements which are not contained in any subgroup of the group other than the entire group itself. See also [[group presentation]]. * [[Subring#Subring generated by a set|Generating set of a ring]]: A subset ''S'' of a [[ring (mathematics)|ring]] ''A'' '''generates''' ''A'' if the only [[subring]] of ''A'' containing ''S'' is ''A'' itself. * [[Ideal (ring theory)#Ideal generated by a set|Generating set of an ideal]] in a [[ring (mathematics)|ring]]. * [[generator (category theory)|Generator]] is invoked in [[category theory]]. Usually the intended meaning will be clear from context. * In [[topology]], a collection of sets which generate the topology is called a [[subbase]]. * [[Generating set of a topological algebra]]: ''S'' is a generating set of a [[topological algebra]] ''A'' if the smallest closed [[subalgebra]] of ''A'' containing ''S'' is ''A'' itself * Elements of the [[Lie algebra]] to a [[Lie group]] are sometimes referred to as "generators of the group," especially by physicists. The Lie algebra can be thought of as generating the group at least locally by exponentiation, but the Lie algebra does not form a generating set in the strict sense. * The '''generator''' of any [[continuous symmetry]] implied by [[Noether's theorem]], with the generators of a Lie group being a special case. In this case, a generator is sometimes called a [[charge (physics)|charge]] or [[Noether charge]], in analogy to the [[electric charge]] being the generator of the [[U(1)]] symmetry group of [[electromagnetism]]. Thus, for example, the [[color charge]]s of [[quark]]s are the generators of the [[SU(3)]] [[color symmetry]] in [[quantum chromodynamics]]. More precisely, "charge" should apply only to the [[root system]] of a Lie group. * In [[stochastic processes|stochastic analysis]], an [[Itō diffusion]] or more general [[Itō process]] has an [[Infinitesimal generator (stochastic processes)|infinitesimal generator]]. {{mathdab}} [[Category:Abstract algebra]] [[Category:Universal algebra]] [[pl:Zbiór generatorów]]</text> </page> <page> <id>14996</id> <title>Generational list of programming languages</title> <text>{{multiple issues | unreferenced=June 2009 | cleanup=March 2008 }} <!-- list still looks inaccurate)!--> {{Programming language lists}} Here, a genealogy of [[programming language]]s is shown. Languages are categorized under the ancestor language with the strongest influence. Of course, any such categorization has a large arbitrary element, since programming languages often incorporate major ideas from multiple sources. ==ALGOL based== *[[ALGOL]] (also under Fortran) **[[Atlas Autocode]] ** [[ALGOL 58]] (IAL, International Algorithmic Language) *** [[MAD (programming language)|MAD and GOM]] (Michigan Algorithm Decoder and Good Old MAD) **[[ALGOL 60]] ***[[MAD (programming language)|MAD/I]] ***[[Simula]] (see also [[Generational_list_of_programming_languages#Simula_based|Simula based languages]]) **[[ALGOL 68]] **Burroughs [[Extended ALGOL]] **[[ALGOL W]] ***[[Pascal (programming language)|Pascal]] ****[[Ada (programming language)|Ada]] *****[[SPARK (programming language)|SPARK]] *****[[PL/SQL]] ****[[Turbo Pascal]] *****[[Object Pascal]] ([[Object Pascal|Delphi]]) ******[[Free Pascal]] (FPC) ******[[Kylix (software)|Kylix]] (same as Delphi, but for [[Linux]]) ****[[Euclid (programming language)|Euclid]] *****[[Concurrent Euclid]] *****[[Turing (programming language)|Turing]] ******[[Turing (programming language)|Turing Plus]] ******[[Turing (programming language)|Object Oriented Turing]] ****[[Modula-2]] *****[[Modula-3]] *****[[Oberon (programming language)|Oberon]] (Oberon-1) ******[[Go (programming language)|Go]] (also under C) ******[[Oberon-2 (programming language)|Oberon-2]] *******[[Component Pascal]] *******[[Active Oberon]] ********[[Zonnon]] ******[[Oberon_(programming_language)#Oberon-07|Oberon-07]] *****[[Lua (programming language)|Lua]] (also under Scheme and SNOBOL) ****SUE *****[[Plus (programming language)|Plus]] **[[Combined Programming Language|CPL]] ***[[BCPL]] ****[[B (programming language)|B]] ****[[C (programming language)|C]] *****[[Alef (programming language)|Alef]] *****[[C++]] <!-- NOTE TO EDITORS OF THIS PAGE: Java is properly derived from C++ and Smalltalk. Therefore, it does not belong in its own category. If you do not feel that way, then at least keep it under C, since Java uses C syntax. --> ******[[Java (programming language)|Java]] *******[[Groovy (programming language)|Groovy]] *******[[Scala (programming language)|Scala]] *******[[Join Java]] *******[[J Sharp|J#]] *******[[Processing (programming language)|Processing]] *******[[X10 (programming language)|X10]] ******[[C Sharp (programming language)|C#]] *******[[Cobra (programming language from Cobra Language LLC)|Cobra]] <small>(class/object model and other features)</small> *******[[Windows PowerShell]] (also under DCL, ksh and Perl) *****[[C--]] *****[[D (programming language)|D]] *****[[ColdFusion]] *****[[Coyote (programming language)|Coyote]] *****[[eC (Programming language)|eC (Ecere C)]] *****[[Go (programming language)|Go]] (also under Oberon) *****[[Harbour (software)|Harbour]] ******[[Limbo (programming language)|Limbo]] *****[[LPC (programming language)|LPC]] ******[[Pike (programming language)|Pike]] *****[[Objective-C]] (also under Smalltalk) *****[[PCASTL]] (also under Lisp) *****[[Perl]] ******[[Windows PowerShell]] (also under C#, DCL and ksh) ******[[S2 (programming language)|S2]] ******[[PHP]] ******[[Ruby (programming language)|Ruby]] (also under Smalltalk) ******[[Perl Data Language|PDL]] (also under APL) *****[[Python (programming language)|Python]] *****[[QuakeC]] *****[[tcsh]] (also under sh) ****[[MCPL]] ==APL based== *[[APL (programming language)|APL]] **[[A+ (programming language)|A+]] **[[Glee (programming language)|Glee]] **[[J (programming language)|J]] (also under FL) **[[K (programming language)|K]] (also under LISP) **[[NESL]] **[[Perl Data Language|PDL]] (also under Perl) ==BASIC based== *[[BASIC]] (also under Fortran II) **[[AmigaBASIC]] **[[AMOS (programming language)|AMOS BASIC]] **[[BASIC Stamp]] **[[BASIC09]] **[[Basic4GL]] **[[BBC Basic]] **[[Blitz BASIC]] ***[[Blitz BASIC|Blitz3D]] ***[[Blitz BASIC|BlitzMax]] ***[[BlitzPlus]] **[[Business Basic]] **[[Caché Basic]] **[[Chinese BASIC]] **[[COMAL]] **[[Commodore BASIC]] **[[DarkBASIC]] ***[[DarkBASIC Professional]] **[[Euphoria (programming language)|Euphoria]] **[[GW-BASIC]] **[[GLBasic]] **[[PlayBASIC]] **[[PowerBASIC]] **[[QuickBASIC]] ***[[QBasic]] ****[[FreeBASIC]] ****[[Liberty BASIC]] *****[[Just BASIC]] *****[[Run BASIC]] **[[REALbasic]] **[[thinBasic]] **[[TI-BASIC]] **[[True BASIC]] **[[Visual Basic]] ***[[VBScript]] ***[[Visual Basic for Applications]] (VBA) ***[[Visual Basic .NET]] ****[[Microsoft Small Basic|Small Basic]] **[[Yabasic|YaBasic]] ==Batch languages== *[[Batch file|MS-DOS Batch files]] **[[Winbatch]] *[[CLIST]] *[[Job Control Language|IBM Job Control Language (JCL)]] ==COBOL based== *[[COBOL]] **[[DIBOL]] **[http://csg.uwaterloo.ca/sdtp/watbol.html WATBOL] ==COMIT based== *[[COMIT]] **[[SNOBOL]] ***[[Icon (programming language)|Icon]] ****[[Unicon (programming language)|Unicon]] ***[[Lua (programming language)|Lua]] (also under Modula and Scheme) ==DCL based== *[[DIGITAL Command Language|DCL]] **[[Windows PowerShell]] (also under C#, ksh and Perl) ==ed based== *[[ed (UNIX)|ed (programming 