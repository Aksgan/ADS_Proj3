| publisher=Harvard University Press | year=1989 | isbn=0674750969}} *{{cite book | author=Hungerford; title=Algebra | publisher=Springer|year=1980|isbn=978-0387905181}}, first chapter on set theory. * [http://www.freenetpages.co.uk/hp/alan.gauld/tutrecur.htm Recursion] - tutorial by Alan Gauld * [http://amitksaha.files.wordpress.com/2009/05/recursion-primer.pdf A Primer on Recursion]- contains pointers to recursion in Formal Languages, Linguistics, Math and Computer Science * [http://research.swtch.com/2010/03/zip-files-all-way-down.html Zip Files All The Way Down] *[http://www.ucl.ac.uk/psychlangsci/staff/linguistics-staff/nevins-publications/npr09b Nevins, Andrew and David Pesetsky and Cilene Rodrigues. Evidence and Argumentation: A Reply to Everett (2009). Language 85.3: 671--681 (2009)] *[http://faculty.washington.edu/losterho/kaan_and_swaab.pdf Kaan, E. – Swaab, T. Y. (2002) “The brain circuitry of syntactic comprehension”, Trends in Cognitive Sciences, vol. 6, Issue 8, 350-356.] {{logic}} [[Category:Mathematical logic]] [[Category:Theory of computation]] [[Category:Programming idioms]] [[Category:Recursion]] [[Category:Self-reference]] [[ar:استدعاء ذاتي]] [[bg:Рекурсия]] [[ca:Recursivitat]] [[cs:Rekurze]] [[da:Rekursiv]] [[de:Rekursion]] [[el:Αναδρομή]] [[es:Recursión]] [[eo:Rikuro]] [[fr:Récursivité]] [[hi:पुनरावर्तन]] [[hr:Rekurzija]] [[io:Rekurso]] [[id:Rekursi]] [[is:Endurkvæmt fall]] [[it:Algoritmo ricorsivo]] [[he:רקורסיה]] [[lt:Rekursija]] [[hu:Rekurzió]] [[nl:Recursie]] [[ja:再帰]] [[no:Rekursjon]] [[pl:Rekurencja]] [[pt:Recursividade]] [[ro:Recursivitate]] [[ru:Рекурсия]] [[sa:पुनर्गमनवाद]] [[simple:Recursion]] [[sl:Rekurzija]] [[sr:Рекурзија]] [[fi:Rekursio]] [[sv:Rekursion]] [[ta:சுழல்]] [[th:การเรียกซ้ำ]] [[tg:Рекурсия]] [[tr:Özyineleme]] [[uk:Рекурсія]] [[ur:Recursion]] [[vi:Đệ quy]] [[zh:递归]]</text> </page> <page> <id>31528</id> <title>Recursion termination</title> <text>In computing, '''Recursion termination''' is when certain conditions are met and the recursive algorithm ceases calling itself and begins to return values.<ref>http://www.itl.nist.gov/div897/sqg/dads/HTML/recursiontrm.html</ref> This happens only if with every recursive call the recursive algorithm changes its state and moves towards the base case. Cases that satisfy the definition without being defined in terms of the definition itself are called base cases. They are small enough to solve directly.<ref> {{cite book | title = Recursion Lecture, Introduction to Computer Science pg. 3 | url=http://www.cdf.toronto.edu/~csc148h/winter/stg/lectures/w3/1/m/Recursion.pdf }} </ref> ==Examples== ===Fibonacci function=== The Fibonacci function(fibonacci(n)), which takes integer n(n >= 0) as input, has three conditions 1. if n is 0, returns 0.<br> 2. if n is 1, returns 1.<br> 3. otherwise, return [fibonacci(n-1) + fibonacci(n-2)] This recursive function terminates if either conditions 1 or 2 are satisfied. We see that the function's recursive call reduces the value of n(by passing n-1 or n-2 in the function) ensuring that n reaches either condition 1 or 2. ===C++=== C++ Example<ref> {{cite book | title = An Introduction to the Imperative Part of C++ | url=http://www.doc.ic.ac.uk/~wjk/C++Intro/RobMillerL8.html }} </ref>: <pre> int factorial(int number) { else if (number == 0) return 1; else return (number * factorial(number - 1)); } </pre> Here we see that in the recursive call, the number passed in the recursive step is reduced by 1. This again ensures that the number will at some point reduce to 0 which in turn terminates the recursive algorithm. ==References== {{reflist|2}} ==External links== * [http://www.cs.princeton.edu/courses/archive/spr05/cos126/lectures/07.pdf Princeton university: "An introduction to computer science in the context of scientific, engineering, and commercial applications"] * [http://www.cdf.toronto.edu/~csc148h/winter/stg/lectures/w3/1/m/Recursion.pdf University of Toronto: "Introduction to Computer Science"] [[Category:Computer programming]] {{compu-prog-stub}}</text> </page> <page> <id>31543</id> <title>Recursive set</title> <text>In [[computability theory]], a [[Set (mathematics)|set]] of [[natural number]]s is called '''recursive''', '''computable''' or '''decidable''' if there is an [[algorithm]] which terminates after a finite amount of time and correctly decides whether or not a given number belongs to the set. A more general class of sets consists of the [[recursively enumerable set]]s, also called '''semidecidable''' sets. For these sets, it is only required that there is an algorithm that correctly decides when a number ''is'' in the set; the algorithm may give no answer (but not the wrong answer) for numbers not in the set. A set which is not computable is called '''noncomputable''' or '''undecidable'''. ==Formal definition== A subset {{math|<var>S</var>}} of the [[natural number]]s is called '''recursive''' if there exists a [[total function|total]] [[computable function]] {{math|''f'' }} such that {{math|''f''(<var>x</var>) {{=}} 1 }} if {{math|<var>x</var> &isin; <var>S</var> }} and {{math|''f''(<var>x</var>) {{=}} 0 }} if {{math|<var>x</var> &notin; <var>S</var> }}. In other words, the set {{math|<var>S</var>}} is recursive [[if and only if]] the [[indicator function]] {{math|1<sub><var>S</var></sub>}} is [[computable function|computable]]. ==Examples== *Every finite or [[cofinite]] subset of the natural numbers is computable. This includes these special cases: **The [[empty set]] is computable. **The entire set of natural numbers is computable. **Each natural number ([[Set-theoretic_definition_of_natural_numbers#The_contemporary_standard|as defined in standard set theory]]) is computable; that is, the set of natural numbers less than a given natural number is computable. *The set of [[prime number]]s is computable. *A [[recursive language]] is a recursive subset of a [[formal language]]. *The set of Gödel numbers of arithmetic proofs described in Kurt Gödel's paper "On formally undecidable propositions of Principia Mathematica and related systems I"; see [[Gödel's incompleteness theorems]]. ==Properties== If ''A'' is a recursive set then the [[complement (set theory)|complement]] of ''A'' is a recursive set. If ''A'' and ''B'' are recursive sets then ''A'' ∩ ''B'', ''A'' ∪ ''B'' and the image of ''A'' &times; ''B'' under the [[Cantor pairing function]] are recursive sets. A set ''A'' is a recursive set [[if and only if]] ''A'' and the [[complement (set theory)|complement]] of ''A'' are both [[recursively enumerable set]]s. The [[preimage]] of a recursive set under a [[total function|total]] [[computable function]] is a recursive set. The image of a computable set under a total computable [[bijection]] is computable. A set is recursive if and only if it is at level {{math| &Delta;{{su|p=0|b=1}} }} of the [[arithmetical hierarchy]]. A set is recursive if and only if it is either the range of a nondecreasing total computable function or the empty set. The image of a computable set under a nondecreasing total computable function is computable. ==References== *Cutland, N. ''Computability.'' Cambridge University Press, Cambridge-New York, 1980. ISBN 0-521-22384-9; ISBN 0-521-29465-7 *Rogers, H. ''The Theory of Recursive Functions and Effective Computability'', MIT Press. ISBN 0-262-68052-1; ISBN 0-07-053522-1 *Soare, R. ''Recursively enumerable sets and degrees.'' Perspectives in Mathematical Logic. Springer-Verlag, Berlin, 1987. ISBN 3-540-15299-7 {{logic}} [[Category:Recursion theory]] [[Category:Theory of computation]] [[de:Entscheidbar]] [[el:Αναδρομικό σύνολο]] [[es:Conjunto recursivo]] [[eo:Komputebla aro]] [[fa:مجموعه بازگشتی]] [[fr:Ensemble récursif]] [[hr:Neodlučivost]] [[it:Insieme ricorsivo]] [[he:קבוצה רקורסיבית]] [[ja:帰納的集合]] [[pl:Zbiór rekurencyjny]] [[simple:Decidability theory]] [[sr:Рекурзиван скуп]] [[zh:递归集合]]</text> </page> <page> <id>31555</id> <title>RedShift (planetarium software)</title> <text>'''''Redshift''''' is [[planetarium]] [[software]] created by [[Maris Multimedia]]. It runs on PC with [[Microsoft Windows]] and [[iPad]]. == Description == <!-- This needs to be further refined and copyedited, perhaps with references. --> Redshift is a group of educational planetarium and astronomy software packages that allow the user to observe the sky from a 