SSP: SSP Packages provided by Microsoft]</ref> * Credential (CredSSP) (Introduced in [[Windows Vista]] and available on Windows XP SP3) (credssp.dll) - Provides SSO and [[Network Level Authentication]] for [[Remote Desktop Services]].<ref>[http://technet.microsoft.com/en-us/library/cc749211(WS.10).aspx Credential Security Service Provider and SSO for Terminal Services Logon]</ref> * Distributed Password Authentication (DPA) - (Introduced in Windows 2000) (Msapsspc.dll) - Provides internet authentication using [[public key certificate|digital certificates]].<ref>[http://msdn.microsoft.com/en-us/library/ms809340.aspx#dcomtec_sec DCOM Technical Overview: Security on the Internet]</ref> * Public Key Cryptography User-to-User (PKU2U) (Introduced in [[Windows 7]]) (Pku2u.dll) - Provides peer-to-peer authentication using digital certificates between systems that are not part of a domain. ==Comparison== SSPI is a proprietary variant of [[Generic Security Services Application Program Interface|GSSAPI]] with extensions and very Windows-specific data types. It shipped with [[Windows NT 3.51]] and [[Windows 95]] with the [[NTLM|NT LAN Manager]] [[NTLMSSP|Security Support Provider]] ([[NTLMSSP]]). For Windows 2000, an implementation of Kerberos 5 was added, using token formats conforming to the official protocol standard RFC 1964 (The Kerberos 5 GSSAPI mechanism) and providing wire-level interoperability with Kerberos 5 implementations from other vendors. The tokens generated and accepted by the SSPI are mostly compatible with the GSS-API so an SSPI client on Windows may be able to authenticate with a GSS-API server on UNIX depending on the specific circumstances. One significant shortcoming of SSPI is its lack of {{explain|channel bindings|Channel binding is a way to cryptographically bind end-to-end authentication at the application layer to a secure channel at a lower layer. This cryptographic binding is a way to eliminate man-in-the-middle attacks in that secure channel. It is particularly useful to applications that intend to rely on TLS or IPsec for session/transport security. Channel bindings also stimulate the development of APIs for IPsec and an unauthenticated mode of IPsec.}}, which makes some GSSAPI interoperability impossible. Another fundamental difference between the [[IETF]]-defined GSSAPI and Microsoft's SSPI is the concept of "[[Access token#Types of tokens|impersonation]]". In this model, a server can switch to and operate with the FULL privileges of the authenticated client, so that the operating system performs all [[access control]] checks, e.g. when opening new files. Whether these are less privileges or more privileges than that of the original service account depends entirely on which client connects/authenticates. In the traditional (GSSAPI) model, a server runs under a service account, cannot elevate its privileges, and has to perform access control in a client-specific and application-specific fashion. The obvious negative security implications of the impersonation concept are mitigated in Windows Vista by restricting impersonation to selected service accounts.<ref> [http://blogs.technet.com/askperf/archive/2008/02/03/ws2008-windows-service-hardening.aspx Windows Service Hardening: AskPerf blog]</ref> == References == {{reflist}} == External links == * [http://msdn2.microsoft.com/en-us/library/aa380493.aspx SSPI Reference on MSDN] * [http://win32.mvps.org/security/sspi.html SSPI Information and Win32 samples] {{Microsoft APIs}} [[Category:Microsoft application programming interfaces]] [[Category:Microsoft Windows security technology]]</text> </page> <page> <id>33649</id> <title>Security architecture</title> <text>{{Lead rewrite|date=September 2009}} {{Primary sources|date=July 2008}} Security provided by IT Systems can be defined as the IT system’s ability to be able to protect confidentiality and integrity of processed [[data]], as well as to be able to provide availability of the system and data. “IT Architecture” may be defined as a set of design artifacts, that are relevant for describing an object such that it can be produced to requirements (quality) as well as maintained over the period of its useful life (change). The design artifact describe the structure of components, their inter-relationships, and the principles and guidelines governing their design and evolution over time. Consequently the definition of “IT Security Architecture” may be considered as: The design artifacts that describe how the security controls (= security countermeasures) are positioned and how they relate to the overall IT Architecture. These controls serve the purpose to maintain the system’s quality attributes, among them confidentiality, integrity and availability. Security qualities are often considered as [[Non-functional requirement]]s when systems are designed. In other words they are not required for the system to meet it's functional goals such as processing financial transactions, but are needed for a given level of assurance that the system will perform to meet the functional requirements that have been defined. In recent years there has been a trend towards a hierarchy of control objectives, controls and specific technical implementations of controls, which are implemented within a given security architecture in order to meet the security requirements. ==See also== * [[FDIC Enterprise Architecture Framework]] ==References== http://www.opensecurityarchitecture.org/cms/definitions/it-security-architecture ==External links== * [http://www.opensecurityarchitecture.org Open Security Architecture ] * [http://www.opengroup.org/security/index.htm The Open Group Security Forum] * [http://arctecgroup.net/pdf/ArctecSecurityArchitectureBlueprint.pdf Security Architecture Blueprint, Arctec Group] {{DEFAULTSORT:Security Architecture}} [[Category:Network architecture]] [[Category:Computer security]] [[Category:Security]]</text> </page> <page> <id>33656</id> <title>Security descriptor</title> <text>{{Refimprove|date=July 2008}} '''Security descriptors''' are data [[C++ classes|structures]] of security information for ''securable'' [[Windows NT|Windows]] [[Object Manager (Windows)|objects]], that is objects that can be identified by a unique name. Security descriptors can be associated with any named objects, including [[Computer file|files]], [[Directory (file systems)|folders]], shares, [[Windows Registry|registry]] keys, processes, threads, named pipes, services, job objects and other resources.<ref>{{cite web|url=http://msdn.microsoft.com/en-us/library/aa379557(VS.85).aspx|title=Securable Objects|publisher=[[Microsoft]]|date=2008-04-24|accessdate=2008-07-16}}</ref> Security descriptors contain discretionary [[access control list]]s (DACL's) that contain access control entries (ACEs) that grant and deny access to trustees such as users or groups. They also contain a system access control list (SACLs) that control auditing of object access.<ref>{{cite web|url=http://technet2.microsoft.com/windowsserver/en/library/d4f08d96-f360-451f-bed3-61a60bc2acde1033.mspx?mfr=true|title=What Are Security Descriptors and Access Control Lists?|publisher=[[Microsoft]]|accessdate=2008-07-16}}</ref><ref>{{cite web|url=http://msdn.microsoft.com/en-us/library/aa446597(VS.85).aspx|title=DACLs and ACEs|publisher=[[Microsoft]]|date=2008-04-24|accessdate=2008-07-16}}</ref> ACEs may be explicitly applied to an object or inherited from a parent object. The order of ACEs in an ACL is important, with access denied ACEs appearing higher in the order than ACEs that grant access. Security descriptors also contain the object owner. Files and folder permissions can be edited by various tools including [[Windows Explorer]], [[Windows Management Instrumentation|WMI]], command line tools like [[Cacls]], XCacls, [[Cacls#ICACLS|ICacls]], SubInACL<ref>[http://www.microsoft.com/downloadS/details.aspx?FamilyID=e8ba3e56-d8fe-4a91-93cf-ed6985e3927b&displaylang=en SubInACL home page]</ref>, the [[freeware]] [[win32 console]] FILEACL<ref>[http://www.gbordier.com/gbtools/fileacl.asp FILEACL home page]</ref><ref>{{cite web|url=http://www.microsoft.com/DOWNLOADS/details.aspx?FamilyID=723f64ea-34f0-4e6d-9a72-004d35de4e64&displaylang=en|title=FILEACL v3.0.1.6|publisher=[[Microsoft]]|date=2004-03-23|accessdate=2008-07-25}} {{Dead link|date=October 2010|bot=H3llBot}}</ref>, the [[free software]] [[Utility software|utility]] [[SetACL]], and other [[freeware]] and [[shareware]] utilities. To edit a security descriptor, a user needs WRITE_DAC permissions to the object,<ref>{{cite web|url=http://msdn.microsoft.com/en-us/library/aa374892(VS.85).aspx|title=ACCESS_MASK Data Type|publisher=[[Microsoft]]|date=2008-04-24|accessdate=2008-07-23}}</ref> a permission that is usually delegated by default to [[System administrator|administrators]] and the object's owner. ==See also== *[[Access control#Computer_security|Access control as it relates to computer security]] *[[Information technology security audit|Audit]] *[[Authorization]] *[[Computer 